  I0314 06:28:45.010209      21 e2e.go:117] Starting e2e run "60797c59-5be7-4123-9733-33275cebff3d" on Ginkgo node 1
  Mar 14 06:28:45.032: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1710397724 - will randomize all specs

Will run 378 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Mar 14 06:28:45.137: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 06:28:45.139: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Mar 14 06:28:45.158: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Mar 14 06:28:45.160: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Mar 14 06:28:45.160: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Mar 14 06:28:45.160: INFO: e2e test version: v1.28.0
  Mar 14 06:28:45.161: INFO: kube-apiserver version: v1.28.0
  Mar 14 06:28:45.161: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 06:28:45.162: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 03/14/24 06:28:45.346
  Mar 14 06:28:45.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename cronjob @ 03/14/24 06:28:45.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:28:45.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:28:45.353
  STEP: Creating a cronjob @ 03/14/24 06:28:45.354
  STEP: Ensuring more than one job is running at a time @ 03/14/24 06:28:45.356
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 03/14/24 06:30:01.359
  STEP: Removing cronjob @ 03/14/24 06:30:01.361
  Mar 14 06:30:01.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1399" for this suite. @ 03/14/24 06:30:01.365
• [76.022 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 03/14/24 06:30:01.368
  Mar 14 06:30:01.368: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename runtimeclass @ 03/14/24 06:30:01.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:01.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:01.379
  Mar 14 06:30:01.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6980" for this suite. @ 03/14/24 06:30:01.385
• [0.020 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 03/14/24 06:30:01.392
  Mar 14 06:30:01.392: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 06:30:01.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:01.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:01.4
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 03/14/24 06:30:01.401
  STEP: Saw pod success @ 03/14/24 06:30:03.408
  Mar 14 06:30:03.410: INFO: Trying to get logs from node k8s-worker01 pod pod-48d90169-6686-4477-96f7-6aff2985fc94 container test-container: <nil>
  STEP: delete the pod @ 03/14/24 06:30:03.412
  Mar 14 06:30:03.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5799" for this suite. @ 03/14/24 06:30:03.418
• [2.029 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 03/14/24 06:30:03.422
  Mar 14 06:30:03.422: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 06:30:03.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:03.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:03.431
  STEP: Creating configMap with name configmap-test-volume-953322a9-a960-4988-8d22-6c58333309b1 @ 03/14/24 06:30:03.432
  STEP: Creating a pod to test consume configMaps @ 03/14/24 06:30:03.433
  STEP: Saw pod success @ 03/14/24 06:30:05.44
  Mar 14 06:30:05.441: INFO: Trying to get logs from node k8s-worker01 pod pod-configmaps-4f898109-e5f5-422b-9738-2431f5a78501 container configmap-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 06:30:05.443
  Mar 14 06:30:05.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2866" for this suite. @ 03/14/24 06:30:05.452
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 03/14/24 06:30:05.455
  Mar 14 06:30:05.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 06:30:05.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:05.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:05.461
  STEP: Creating a pod to test emptydir volume type on node default medium @ 03/14/24 06:30:05.463
  STEP: Saw pod success @ 03/14/24 06:30:07.468
  Mar 14 06:30:07.470: INFO: Trying to get logs from node k8s-worker01 pod pod-e021051e-32ac-4ad6-866c-332cb8be288a container test-container: <nil>
  STEP: delete the pod @ 03/14/24 06:30:07.472
  Mar 14 06:30:07.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6063" for this suite. @ 03/14/24 06:30:07.477
• [2.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 03/14/24 06:30:07.479
  Mar 14 06:30:07.479: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename conformance-tests @ 03/14/24 06:30:07.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:07.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:07.485
  STEP: Getting node addresses @ 03/14/24 06:30:07.487
  Mar 14 06:30:07.487: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Mar 14 06:30:07.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2554" for this suite. @ 03/14/24 06:30:07.491
• [0.013 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 03/14/24 06:30:07.494
  Mar 14 06:30:07.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 06:30:07.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:07.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:07.502
  STEP: Create a pod @ 03/14/24 06:30:07.503
  STEP: patching /status @ 03/14/24 06:30:09.509
  Mar 14 06:30:09.513: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Mar 14 06:30:09.513: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9913" for this suite. @ 03/14/24 06:30:09.515
• [2.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 03/14/24 06:30:09.521
  Mar 14 06:30:09.521: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 06:30:09.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:09.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:09.528
  STEP: Counting existing ResourceQuota @ 03/14/24 06:30:09.529
  STEP: Creating a ResourceQuota @ 03/14/24 06:30:14.53
  STEP: Ensuring resource quota status is calculated @ 03/14/24 06:30:14.533
  Mar 14 06:30:16.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3504" for this suite. @ 03/14/24 06:30:16.536
• [7.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 03/14/24 06:30:16.54
  Mar 14 06:30:16.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 06:30:16.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:16.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:16.547
  STEP: Creating configMap with name configmap-projected-all-test-volume-c4ed7362-5130-4ed9-87a5-429c78288c5e @ 03/14/24 06:30:16.548
  STEP: Creating secret with name secret-projected-all-test-volume-1d133be1-7efa-4dd4-b39f-ce562e4c91d4 @ 03/14/24 06:30:16.549
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 03/14/24 06:30:16.551
  STEP: Saw pod success @ 03/14/24 06:30:18.558
  Mar 14 06:30:18.559: INFO: Trying to get logs from node k8s-worker01 pod projected-volume-384515d7-7959-4754-b440-394f891aa706 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 06:30:18.561
  Mar 14 06:30:18.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9539" for this suite. @ 03/14/24 06:30:18.569
• [2.031 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 03/14/24 06:30:18.571
  Mar 14 06:30:18.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 06:30:18.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:18.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:18.578
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 03/14/24 06:30:18.579
  STEP: Saw pod success @ 03/14/24 06:30:20.584
  Mar 14 06:30:20.586: INFO: Trying to get logs from node k8s-worker01 pod pod-780635de-ef75-4855-894b-11311c9cd9b6 container test-container: <nil>
  STEP: delete the pod @ 03/14/24 06:30:20.588
  Mar 14 06:30:20.593: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9198" for this suite. @ 03/14/24 06:30:20.595
• [2.026 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 03/14/24 06:30:20.598
  Mar 14 06:30:20.598: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename var-expansion @ 03/14/24 06:30:20.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:30:20.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:30:20.606
  STEP: creating the pod with failed condition @ 03/14/24 06:30:20.607
  STEP: updating the pod @ 03/14/24 06:32:20.61
  Mar 14 06:32:21.117: INFO: Successfully updated pod "var-expansion-27252a37-fdd5-44bf-8a92-f8b12c977053"
  STEP: waiting for pod running @ 03/14/24 06:32:21.117
  STEP: deleting the pod gracefully @ 03/14/24 06:32:23.121
  Mar 14 06:32:23.121: INFO: Deleting pod "var-expansion-27252a37-fdd5-44bf-8a92-f8b12c977053" in namespace "var-expansion-1532"
  Mar 14 06:32:23.124: INFO: Wait up to 5m0s for pod "var-expansion-27252a37-fdd5-44bf-8a92-f8b12c977053" to be fully deleted
  Mar 14 06:32:55.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1532" for this suite. @ 03/14/24 06:32:55.163
• [154.567 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 03/14/24 06:32:55.166
  Mar 14 06:32:55.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 06:32:55.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:32:55.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:32:55.172
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 06:32:55.174
  STEP: Saw pod success @ 03/14/24 06:32:59.182
  Mar 14 06:32:59.183: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-c45769ca-0683-44ec-abed-9edc9376b3ad container client-container: <nil>
  STEP: delete the pod @ 03/14/24 06:32:59.185
  Mar 14 06:32:59.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6255" for this suite. @ 03/14/24 06:32:59.193
• [4.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 03/14/24 06:32:59.195
  Mar 14 06:32:59.195: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replication-controller @ 03/14/24 06:32:59.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:32:59.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:32:59.204
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 03/14/24 06:32:59.206
  STEP: When a replication controller with a matching selector is created @ 03/14/24 06:33:01.214
  STEP: Then the orphan pod is adopted @ 03/14/24 06:33:01.216
  Mar 14 06:33:02.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-39" for this suite. @ 03/14/24 06:33:02.221
• [3.028 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 03/14/24 06:33:02.224
  Mar 14 06:33:02.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 06:33:02.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:02.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:02.232
  STEP: Setting up server cert @ 03/14/24 06:33:02.242
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 06:33:02.507
  STEP: Deploying the webhook pod @ 03/14/24 06:33:02.511
  STEP: Wait for the deployment to be ready @ 03/14/24 06:33:02.516
  Mar 14 06:33:02.518: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 03/14/24 06:33:04.523
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 06:33:04.528
  Mar 14 06:33:05.528: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 03/14/24 06:33:05.531
  STEP: create a namespace for the webhook @ 03/14/24 06:33:05.54
  STEP: create a configmap should be unconditionally rejected by the webhook @ 03/14/24 06:33:05.549
  Mar 14 06:33:05.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5042" for this suite. @ 03/14/24 06:33:05.578
  STEP: Destroying namespace "webhook-markers-9909" for this suite. @ 03/14/24 06:33:05.581
  STEP: Destroying namespace "fail-closed-namespace-352" for this suite. @ 03/14/24 06:33:05.584
• [3.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 03/14/24 06:33:05.588
  Mar 14 06:33:05.588: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 06:33:05.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:05.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:05.595
  STEP: Creating pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943 @ 03/14/24 06:33:05.596
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/14/24 06:33:07.603
  Mar 14 06:33:07.604: INFO: Initial restart count of pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c is 0
  Mar 14 06:33:07.606: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:09.609: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:11.611: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:13.614: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:15.616: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:17.619: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:19.621: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:21.623: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:23.625: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:25.627: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:27.630: INFO: Get pod liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c in namespace container-probe-4943
  Mar 14 06:33:27.630: INFO: Restart count of pod container-probe-4943/liveness-b5a059aa-8dbe-445e-8bf4-3c770dcb8a1c is now 1 (20.025755649s elapsed)
  Mar 14 06:33:27.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 06:33:27.632
  STEP: Destroying namespace "container-probe-4943" for this suite. @ 03/14/24 06:33:27.637
• [22.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 03/14/24 06:33:27.641
  Mar 14 06:33:27.641: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/14/24 06:33:27.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:27.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:27.651
  STEP: fetching the /apis discovery document @ 03/14/24 06:33:27.652
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 03/14/24 06:33:27.653
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 03/14/24 06:33:27.653
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 03/14/24 06:33:27.653
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 03/14/24 06:33:27.653
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 03/14/24 06:33:27.654
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 03/14/24 06:33:27.654
  Mar 14 06:33:27.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2736" for this suite. @ 03/14/24 06:33:27.656
• [0.016 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 03/14/24 06:33:27.659
  Mar 14 06:33:27.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename svcaccounts @ 03/14/24 06:33:27.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:27.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:27.666
  STEP: Creating a pod to test service account token:  @ 03/14/24 06:33:27.668
  STEP: Saw pod success @ 03/14/24 06:33:31.677
  Mar 14 06:33:31.678: INFO: Trying to get logs from node k8s-worker02 pod test-pod-6a17a3f1-4707-4ded-9b87-ca7df0a06d9d container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 06:33:31.68
  Mar 14 06:33:31.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1485" for this suite. @ 03/14/24 06:33:31.687
• [4.030 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 03/14/24 06:33:31.69
  Mar 14 06:33:31.690: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-runtime @ 03/14/24 06:33:31.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:31.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:31.7
  STEP: create the container @ 03/14/24 06:33:31.702
  W0314 06:33:31.705130      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/14/24 06:33:31.705
  STEP: get the container status @ 03/14/24 06:33:34.711
  STEP: the container should be terminated @ 03/14/24 06:33:34.712
  STEP: the termination message should be set @ 03/14/24 06:33:34.712
  Mar 14 06:33:34.712: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 03/14/24 06:33:34.713
  Mar 14 06:33:34.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6144" for this suite. @ 03/14/24 06:33:34.719
• [3.031 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 03/14/24 06:33:34.723
  Mar 14 06:33:34.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 06:33:34.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:34.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:34.73
  STEP: Creating secret with name secret-test-map-65019222-402d-4413-9e4c-7e7e94dbd86d @ 03/14/24 06:33:34.731
  STEP: Creating a pod to test consume secrets @ 03/14/24 06:33:34.733
  STEP: Saw pod success @ 03/14/24 06:33:36.739
  Mar 14 06:33:36.741: INFO: Trying to get logs from node k8s-worker02 pod pod-secrets-c5d56334-b5e6-478d-b6ff-72be1dd59edc container secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 06:33:36.743
  Mar 14 06:33:36.750: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4022" for this suite. @ 03/14/24 06:33:36.751
• [2.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 03/14/24 06:33:36.754
  Mar 14 06:33:36.754: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename endpointslice @ 03/14/24 06:33:36.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:36.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:36.762
  Mar 14 06:33:38.782: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2491" for this suite. @ 03/14/24 06:33:38.786
• [2.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 03/14/24 06:33:38.79
  Mar 14 06:33:38.790: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 06:33:38.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:38.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:38.798
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 06:33:38.8
  STEP: Saw pod success @ 03/14/24 06:33:40.808
  Mar 14 06:33:40.810: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-d85aec2f-2502-46f4-9c01-e0772c98bdad container client-container: <nil>
  STEP: delete the pod @ 03/14/24 06:33:40.812
  Mar 14 06:33:40.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6071" for this suite. @ 03/14/24 06:33:40.819
• [2.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 03/14/24 06:33:40.827
  Mar 14 06:33:40.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename certificates @ 03/14/24 06:33:40.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:40.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:40.835
  STEP: getting /apis @ 03/14/24 06:33:41.463
  STEP: getting /apis/certificates.k8s.io @ 03/14/24 06:33:41.466
  STEP: getting /apis/certificates.k8s.io/v1 @ 03/14/24 06:33:41.467
  STEP: creating @ 03/14/24 06:33:41.467
  STEP: getting @ 03/14/24 06:33:41.474
  STEP: listing @ 03/14/24 06:33:41.475
  STEP: watching @ 03/14/24 06:33:41.476
  Mar 14 06:33:41.476: INFO: starting watch
  STEP: patching @ 03/14/24 06:33:41.477
  STEP: updating @ 03/14/24 06:33:41.48
  Mar 14 06:33:41.481: INFO: waiting for watch events with expected annotations
  Mar 14 06:33:41.482: INFO: saw patched and updated annotations
  STEP: getting /approval @ 03/14/24 06:33:41.482
  STEP: patching /approval @ 03/14/24 06:33:41.483
  STEP: updating /approval @ 03/14/24 06:33:41.485
  STEP: getting /status @ 03/14/24 06:33:41.488
  STEP: patching /status @ 03/14/24 06:33:41.489
  STEP: updating /status @ 03/14/24 06:33:41.492
  STEP: deleting @ 03/14/24 06:33:41.495
  STEP: deleting a collection @ 03/14/24 06:33:41.499
  Mar 14 06:33:41.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9962" for this suite. @ 03/14/24 06:33:41.504
• [0.679 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 03/14/24 06:33:41.507
  Mar 14 06:33:41.507: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 06:33:41.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:41.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:41.515
  STEP: creating Agnhost RC @ 03/14/24 06:33:41.517
  Mar 14 06:33:41.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5355 create -f -'
  Mar 14 06:33:42.033: INFO: stderr: ""
  Mar 14 06:33:42.033: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/14/24 06:33:42.033
  Mar 14 06:33:43.036: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 14 06:33:43.036: INFO: Found 1 / 1
  Mar 14 06:33:43.036: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 03/14/24 06:33:43.036
  Mar 14 06:33:43.037: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 14 06:33:43.037: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Mar 14 06:33:43.037: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5355 patch pod agnhost-primary-pkbpt -p {"metadata":{"annotations":{"x":"y"}}}'
  Mar 14 06:33:43.087: INFO: stderr: ""
  Mar 14 06:33:43.087: INFO: stdout: "pod/agnhost-primary-pkbpt patched\n"
  STEP: checking annotations @ 03/14/24 06:33:43.087
  Mar 14 06:33:43.089: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 14 06:33:43.089: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Mar 14 06:33:43.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5355" for this suite. @ 03/14/24 06:33:43.091
• [1.586 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 03/14/24 06:33:43.094
  Mar 14 06:33:43.094: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename var-expansion @ 03/14/24 06:33:43.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:43.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:43.102
  STEP: Creating a pod to test substitution in container's command @ 03/14/24 06:33:43.103
  STEP: Saw pod success @ 03/14/24 06:33:47.111
  Mar 14 06:33:47.112: INFO: Trying to get logs from node k8s-worker01 pod var-expansion-faa60628-fea3-4845-a03c-369fa30a0a29 container dapi-container: <nil>
  STEP: delete the pod @ 03/14/24 06:33:47.115
  Mar 14 06:33:47.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8517" for this suite. @ 03/14/24 06:33:47.121
• [4.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 03/14/24 06:33:47.123
  Mar 14 06:33:47.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 06:33:47.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:33:47.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:33:47.129
  STEP: Creating pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588 @ 03/14/24 06:33:47.13
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/14/24 06:33:49.136
  Mar 14 06:33:49.137: INFO: Initial restart count of pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 is 0
  Mar 14 06:33:49.138: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:33:51.140: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:33:53.143: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:33:55.144: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:33:57.146: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:33:59.149: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:01.151: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:03.154: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:05.155: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:07.159: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:09.162: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:11.164: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:13.167: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:15.168: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:17.171: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:19.173: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:21.176: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:23.178: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:25.181: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:27.183: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:29.186: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:31.188: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:33.189: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:35.192: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:37.195: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:39.197: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:41.198: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:43.199: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:45.201: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:47.204: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:49.207: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:51.209: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:53.211: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:55.213: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:57.218: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:34:59.220: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:01.222: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:03.223: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:05.226: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:07.229: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:09.232: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:11.235: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:13.237: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:15.242: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:17.245: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:19.247: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:21.250: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:23.251: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:25.254: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:27.256: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:29.258: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:31.260: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:33.262: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:35.264: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:37.267: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:39.269: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:41.271: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:43.274: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:45.278: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:47.280: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:49.282: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:51.284: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:53.287: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:55.289: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:57.291: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:35:59.294: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:01.296: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:03.298: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:05.300: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:07.303: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:09.306: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:11.308: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:13.310: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:15.312: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:17.315: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:19.317: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:21.319: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:23.321: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:25.323: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:27.326: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:29.329: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:31.332: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:33.334: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:35.336: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:37.338: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:39.341: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:41.343: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:43.346: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:45.348: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:47.352: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:49.354: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:51.355: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:53.357: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:55.359: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:57.361: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:36:59.364: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:01.366: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:03.369: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:05.371: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:07.373: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:09.375: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:11.378: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:13.380: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:15.381: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:17.384: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:19.386: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:21.389: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:23.390: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:25.392: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:27.398: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:29.400: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:31.403: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:33.405: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:35.407: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:37.409: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:39.411: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:41.412: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:43.414: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:45.416: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:47.419: INFO: Get pod liveness-86305d82-b6ca-4db4-9171-aeb38e78d0d8 in namespace container-probe-6588
  Mar 14 06:37:49.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 06:37:49.422
  STEP: Destroying namespace "container-probe-6588" for this suite. @ 03/14/24 06:37:49.427
• [242.307 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 03/14/24 06:37:49.433
  Mar 14 06:37:49.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 06:37:49.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:37:49.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:37:49.443
  STEP: creating all guestbook components @ 03/14/24 06:37:49.444
  Mar 14 06:37:49.444: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Mar 14 06:37:49.444: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 create -f -'
  Mar 14 06:37:49.573: INFO: stderr: ""
  Mar 14 06:37:49.573: INFO: stdout: "service/agnhost-replica created\n"
  Mar 14 06:37:49.573: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Mar 14 06:37:49.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 create -f -'
  Mar 14 06:37:49.698: INFO: stderr: ""
  Mar 14 06:37:49.698: INFO: stdout: "service/agnhost-primary created\n"
  Mar 14 06:37:49.698: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Mar 14 06:37:49.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 create -f -'
  Mar 14 06:37:49.823: INFO: stderr: ""
  Mar 14 06:37:49.823: INFO: stdout: "service/frontend created\n"
  Mar 14 06:37:49.823: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Mar 14 06:37:49.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 create -f -'
  Mar 14 06:37:49.927: INFO: stderr: ""
  Mar 14 06:37:49.927: INFO: stdout: "deployment.apps/frontend created\n"
  Mar 14 06:37:49.927: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Mar 14 06:37:49.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 create -f -'
  Mar 14 06:37:50.036: INFO: stderr: ""
  Mar 14 06:37:50.036: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Mar 14 06:37:50.036: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Mar 14 06:37:50.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 create -f -'
  Mar 14 06:37:50.141: INFO: stderr: ""
  Mar 14 06:37:50.141: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 03/14/24 06:37:50.141
  Mar 14 06:37:50.141: INFO: Waiting for all frontend pods to be Running.
  Mar 14 06:37:55.191: INFO: Waiting for frontend to serve content.
  Mar 14 06:37:55.195: INFO: Trying to add a new entry to the guestbook.
  Mar 14 06:37:55.201: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 03/14/24 06:37:55.204
  Mar 14 06:37:55.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 delete --grace-period=0 --force -f -'
  Mar 14 06:37:55.265: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 14 06:37:55.265: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 03/14/24 06:37:55.265
  Mar 14 06:37:55.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 delete --grace-period=0 --force -f -'
  Mar 14 06:37:55.309: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 14 06:37:55.309: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 03/14/24 06:37:55.309
  Mar 14 06:37:55.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 delete --grace-period=0 --force -f -'
  Mar 14 06:37:55.352: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 14 06:37:55.352: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 03/14/24 06:37:55.352
  Mar 14 06:37:55.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 delete --grace-period=0 --force -f -'
  Mar 14 06:37:55.399: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 14 06:37:55.399: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 03/14/24 06:37:55.399
  Mar 14 06:37:55.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 delete --grace-period=0 --force -f -'
  Mar 14 06:37:55.445: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 14 06:37:55.445: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 03/14/24 06:37:55.445
  Mar 14 06:37:55.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5037 delete --grace-period=0 --force -f -'
  Mar 14 06:37:55.487: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 14 06:37:55.487: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Mar 14 06:37:55.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5037" for this suite. @ 03/14/24 06:37:55.49
• [6.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 03/14/24 06:37:55.493
  Mar 14 06:37:55.493: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename svcaccounts @ 03/14/24 06:37:55.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:37:55.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:37:55.5
  Mar 14 06:37:55.505: INFO: Got root ca configmap in namespace "svcaccounts-8877"
  Mar 14 06:37:55.506: INFO: Deleted root ca configmap in namespace "svcaccounts-8877"
  STEP: waiting for a new root ca configmap created @ 03/14/24 06:37:56.007
  Mar 14 06:37:56.008: INFO: Recreated root ca configmap in namespace "svcaccounts-8877"
  Mar 14 06:37:56.010: INFO: Updated root ca configmap in namespace "svcaccounts-8877"
  STEP: waiting for the root ca configmap reconciled @ 03/14/24 06:37:56.511
  Mar 14 06:37:56.512: INFO: Reconciled root ca configmap in namespace "svcaccounts-8877"
  Mar 14 06:37:56.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8877" for this suite. @ 03/14/24 06:37:56.514
• [1.023 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 03/14/24 06:37:56.516
  Mar 14 06:37:56.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 06:37:56.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:37:56.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:37:56.522
  STEP: Setting up server cert @ 03/14/24 06:37:56.529
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 06:37:56.653
  STEP: Deploying the webhook pod @ 03/14/24 06:37:56.656
  STEP: Wait for the deployment to be ready @ 03/14/24 06:37:56.659
  Mar 14 06:37:56.661: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/14/24 06:37:58.667
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 06:37:58.67
  Mar 14 06:37:59.670: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 03/14/24 06:37:59.673
  STEP: create a pod that should be denied by the webhook @ 03/14/24 06:37:59.681
  STEP: create a pod that causes the webhook to hang @ 03/14/24 06:37:59.689
  STEP: create a configmap that should be denied by the webhook @ 03/14/24 06:38:09.692
  STEP: create a configmap that should be admitted by the webhook @ 03/14/24 06:38:09.697
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 03/14/24 06:38:09.702
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 03/14/24 06:38:09.705
  STEP: create a namespace that bypass the webhook @ 03/14/24 06:38:09.707
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 03/14/24 06:38:09.712
  Mar 14 06:38:09.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6042" for this suite. @ 03/14/24 06:38:09.733
  STEP: Destroying namespace "webhook-markers-5866" for this suite. @ 03/14/24 06:38:09.736
  STEP: Destroying namespace "exempted-namespace-5235" for this suite. @ 03/14/24 06:38:09.74
• [13.225 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 03/14/24 06:38:09.742
  Mar 14 06:38:09.742: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubelet-test @ 03/14/24 06:38:09.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:38:09.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:38:09.751
  Mar 14 06:38:11.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8288" for this suite. @ 03/14/24 06:38:11.766
• [2.026 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 03/14/24 06:38:11.769
  Mar 14 06:38:11.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 06:38:11.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:38:11.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:38:11.777
  STEP: Creating configMap with name cm-test-opt-del-2d12833b-f64f-43d6-a86e-85a77edf3b25 @ 03/14/24 06:38:11.78
  STEP: Creating configMap with name cm-test-opt-upd-e0d1d0ed-502d-453b-ba8a-384aa3e12fe8 @ 03/14/24 06:38:11.782
  STEP: Creating the pod @ 03/14/24 06:38:11.784
  STEP: Deleting configmap cm-test-opt-del-2d12833b-f64f-43d6-a86e-85a77edf3b25 @ 03/14/24 06:38:13.798
  STEP: Updating configmap cm-test-opt-upd-e0d1d0ed-502d-453b-ba8a-384aa3e12fe8 @ 03/14/24 06:38:13.8
  STEP: Creating configMap with name cm-test-opt-create-2f00f9f0-0810-442f-8a0e-81121c03626c @ 03/14/24 06:38:13.802
  STEP: waiting to observe update in volume @ 03/14/24 06:38:13.804
  Mar 14 06:38:15.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8766" for this suite. @ 03/14/24 06:38:15.815
• [4.049 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 03/14/24 06:38:15.818
  Mar 14 06:38:15.818: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 06:38:15.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:38:15.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:38:15.825
  STEP: Creating pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001 @ 03/14/24 06:38:15.826
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/14/24 06:38:17.833
  Mar 14 06:38:17.834: INFO: Initial restart count of pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c is 0
  Mar 14 06:38:17.836: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:19.839: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:21.842: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:23.845: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:25.847: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:27.850: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:29.853: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:31.856: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:33.859: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:35.861: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:37.864: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:39.867: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:41.869: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:43.872: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:45.874: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:47.876: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:49.879: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:51.881: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:53.884: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:55.886: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:57.888: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:38:59.890: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:39:01.892: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:39:03.895: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:39:05.897: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:39:07.899: INFO: Get pod busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c in namespace container-probe-6001
  Mar 14 06:39:07.899: INFO: Restart count of pod container-probe-6001/busybox-c2eb2d08-cd5d-4f32-8b0e-ea8c7ddc2b4c is now 1 (50.064223804s elapsed)
  Mar 14 06:39:07.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 06:39:07.901
  STEP: Destroying namespace "container-probe-6001" for this suite. @ 03/14/24 06:39:07.906
• [52.092 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 03/14/24 06:39:07.91
  Mar 14 06:39:07.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename var-expansion @ 03/14/24 06:39:07.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:07.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:07.921
  STEP: Creating a pod to test env composition @ 03/14/24 06:39:07.923
  STEP: Saw pod success @ 03/14/24 06:39:11.934
  Mar 14 06:39:11.935: INFO: Trying to get logs from node k8s-worker02 pod var-expansion-8b371874-a241-485d-86d5-f2a87f0ce14f container dapi-container: <nil>
  STEP: delete the pod @ 03/14/24 06:39:11.938
  Mar 14 06:39:11.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7620" for this suite. @ 03/14/24 06:39:11.945
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 03/14/24 06:39:11.95
  Mar 14 06:39:11.950: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename gc @ 03/14/24 06:39:11.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:11.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:11.959
  STEP: create the deployment @ 03/14/24 06:39:11.96
  W0314 06:39:11.963412      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 03/14/24 06:39:11.963
  STEP: delete the deployment @ 03/14/24 06:39:12.07
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 03/14/24 06:39:12.072
  STEP: Gathering metrics @ 03/14/24 06:39:12.581
  Mar 14 06:39:12.631: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 14 06:39:12.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8862" for this suite. @ 03/14/24 06:39:12.633
• [0.686 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 03/14/24 06:39:12.636
  Mar 14 06:39:12.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 06:39:12.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:12.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:12.644
  STEP: Creating configMap with name configmap-test-upd-d51afb27-cfd3-46b0-a137-2705c9308a8a @ 03/14/24 06:39:12.647
  STEP: Creating the pod @ 03/14/24 06:39:12.649
  STEP: Updating configmap configmap-test-upd-d51afb27-cfd3-46b0-a137-2705c9308a8a @ 03/14/24 06:39:14.659
  STEP: waiting to observe update in volume @ 03/14/24 06:39:14.661
  Mar 14 06:39:18.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6323" for this suite. @ 03/14/24 06:39:18.672
• [6.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 03/14/24 06:39:18.677
  Mar 14 06:39:18.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename watch @ 03/14/24 06:39:18.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:18.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:18.685
  STEP: creating a new configmap @ 03/14/24 06:39:18.686
  STEP: modifying the configmap once @ 03/14/24 06:39:18.688
  STEP: modifying the configmap a second time @ 03/14/24 06:39:18.69
  STEP: deleting the configmap @ 03/14/24 06:39:18.693
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 03/14/24 06:39:18.694
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 03/14/24 06:39:18.695
  Mar 14 06:39:18.695: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3154  2f5b6a72-5c74-4552-8a35-4efbad0f268e 8608 0 2024-03-14 06:39:18 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-03-14 06:39:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 06:39:18.695: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3154  2f5b6a72-5c74-4552-8a35-4efbad0f268e 8609 0 2024-03-14 06:39:18 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-03-14 06:39:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 06:39:18.695: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3154" for this suite. @ 03/14/24 06:39:18.697
• [0.022 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 03/14/24 06:39:18.7
  Mar 14 06:39:18.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 06:39:18.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:18.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:18.711
  STEP: creating service endpoint-test2 in namespace services-7971 @ 03/14/24 06:39:18.714
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7971 to expose endpoints map[] @ 03/14/24 06:39:18.719
  Mar 14 06:39:18.720: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Mar 14 06:39:19.723: INFO: successfully validated that service endpoint-test2 in namespace services-7971 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7971 @ 03/14/24 06:39:19.724
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7971 to expose endpoints map[pod1:[80]] @ 03/14/24 06:39:21.731
  Mar 14 06:39:21.734: INFO: successfully validated that service endpoint-test2 in namespace services-7971 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 03/14/24 06:39:21.734
  Mar 14 06:39:21.734: INFO: Creating new exec pod
  Mar 14 06:39:24.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7971 exec execpodnbfvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Mar 14 06:39:24.827: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Mar 14 06:39:24.827: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 06:39:24.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7971 exec execpodnbfvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.175.251 80'
  Mar 14 06:39:24.902: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.175.251 80\nConnection to 10.96.175.251 80 port [tcp/http] succeeded!\n"
  Mar 14 06:39:24.902: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-7971 @ 03/14/24 06:39:24.902
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7971 to expose endpoints map[pod1:[80] pod2:[80]] @ 03/14/24 06:39:26.909
  Mar 14 06:39:26.913: INFO: successfully validated that service endpoint-test2 in namespace services-7971 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 03/14/24 06:39:26.913
  Mar 14 06:39:27.914: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7971 exec execpodnbfvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Mar 14 06:39:27.996: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Mar 14 06:39:27.996: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 06:39:27.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7971 exec execpodnbfvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.175.251 80'
  Mar 14 06:39:28.077: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.175.251 80\nConnection to 10.96.175.251 80 port [tcp/http] succeeded!\n"
  Mar 14 06:39:28.077: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7971 @ 03/14/24 06:39:28.077
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7971 to expose endpoints map[pod2:[80]] @ 03/14/24 06:39:28.084
  Mar 14 06:39:28.092: INFO: successfully validated that service endpoint-test2 in namespace services-7971 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 03/14/24 06:39:28.092
  Mar 14 06:39:29.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7971 exec execpodnbfvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Mar 14 06:39:29.176: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Mar 14 06:39:29.176: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 06:39:29.176: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7971 exec execpodnbfvn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.175.251 80'
  Mar 14 06:39:29.253: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.175.251 80\nConnection to 10.96.175.251 80 port [tcp/http] succeeded!\n"
  Mar 14 06:39:29.253: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-7971 @ 03/14/24 06:39:29.253
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7971 to expose endpoints map[] @ 03/14/24 06:39:29.258
  Mar 14 06:39:30.263: INFO: successfully validated that service endpoint-test2 in namespace services-7971 exposes endpoints map[]
  Mar 14 06:39:30.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7971" for this suite. @ 03/14/24 06:39:30.271
• [11.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 03/14/24 06:39:30.276
  Mar 14 06:39:30.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename deployment @ 03/14/24 06:39:30.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:30.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:30.283
  STEP: creating a Deployment @ 03/14/24 06:39:30.286
  STEP: waiting for Deployment to be created @ 03/14/24 06:39:30.287
  STEP: waiting for all Replicas to be Ready @ 03/14/24 06:39:30.288
  Mar 14 06:39:30.288: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 14 06:39:30.289: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 14 06:39:30.293: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 14 06:39:30.293: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 14 06:39:30.298: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 14 06:39:30.298: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 14 06:39:30.305: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 14 06:39:30.305: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Mar 14 06:39:31.131: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Mar 14 06:39:31.131: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Mar 14 06:39:31.733: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 03/14/24 06:39:31.733
  Mar 14 06:39:31.739: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 03/14/24 06:39:31.739
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 0
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:31.740: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:31.745: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:31.745: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:31.751: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:31.751: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:31.755: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:31.755: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:31.762: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:31.762: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:33.133: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:33.133: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:33.148: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  STEP: listing Deployments @ 03/14/24 06:39:33.148
  Mar 14 06:39:33.149: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 03/14/24 06:39:33.149
  Mar 14 06:39:33.155: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 03/14/24 06:39:33.155
  Mar 14 06:39:33.158: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 14 06:39:33.161: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 14 06:39:33.171: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 14 06:39:33.177: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 14 06:39:33.184: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 14 06:39:33.738: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 14 06:39:33.752: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 14 06:39:33.773: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Mar 14 06:39:35.137: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 03/14/24 06:39:35.146
  STEP: fetching the DeploymentStatus @ 03/14/24 06:39:35.15
  Mar 14 06:39:35.153: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:35.153: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:35.153: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:35.153: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:35.153: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 1
  Mar 14 06:39:35.153: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:35.153: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 3
  Mar 14 06:39:35.153: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 2
  Mar 14 06:39:35.153: INFO: observed Deployment test-deployment in namespace deployment-5798 with ReadyReplicas 3
  STEP: deleting the Deployment @ 03/14/24 06:39:35.153
  Mar 14 06:39:35.157: INFO: observed event type MODIFIED
  Mar 14 06:39:35.157: INFO: observed event type MODIFIED
  Mar 14 06:39:35.157: INFO: observed event type MODIFIED
  Mar 14 06:39:35.157: INFO: observed event type MODIFIED
  Mar 14 06:39:35.158: INFO: observed event type MODIFIED
  Mar 14 06:39:35.158: INFO: observed event type MODIFIED
  Mar 14 06:39:35.158: INFO: observed event type MODIFIED
  Mar 14 06:39:35.158: INFO: observed event type MODIFIED
  Mar 14 06:39:35.158: INFO: observed event type MODIFIED
  Mar 14 06:39:35.158: INFO: observed event type MODIFIED
  Mar 14 06:39:35.158: INFO: observed event type MODIFIED
  Mar 14 06:39:35.158: INFO: observed event type MODIFIED
  Mar 14 06:39:35.159: INFO: Log out all the ReplicaSets if there is no deployment created
  Mar 14 06:39:35.165: INFO: ReplicaSet "test-deployment-66574fbd5":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-66574fbd5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5798",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39b88631-af6c-4000-b384-bcf8670ea82d",
      ResourceVersion: (string) (len=4) "8878",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995173,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "66574fbd5",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "ec618bb1-5b94-48b2-ac9e-20225a90ca0d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 63 36 31  38 62 62 31 2d 35 62 39  |":\"ec618bb1-5b9|
              00000130  34 2d 34 38 62 32 2d 61  63 39 65 2d 32 30 32 32  |4-48b2-ac9e-2022|
              00000140  35 61 39 30 63 61 30 64  5c 22 7d 22 3a 7b 7d 7d  |5a90ca0d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "66574fbd5",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "66574fbd5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Mar 14 06:39:35.172: INFO: pod: "test-deployment-66574fbd5-2zklv":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-66574fbd5-2zklv",
      GenerateName: (string) (len=26) "test-deployment-66574fbd5-",
      Namespace: (string) (len=15) "deployment-5798",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25a285ba-0f83-45dc-ac54-1c8c7c6ea3ea",
      ResourceVersion: (string) (len=4) "8877",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995173,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "66574fbd5",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.239/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.239/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ed9f77385093f09ff55d1bba86ebc025daf0485b40ad1de9665d37b7859e0ed8"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-66574fbd5",
          UID: (types.UID) (len=36) "39b88631-af6c-4000-b384-bcf8670ea82d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 39 62 38 38 36 33 31  |uid\":\"39b88631|
              000000a0  2d 61 66 36 63 2d 34 30  30 30 2d 62 33 38 34 2d  |-af6c-4000-b384-|
              000000b0  62 63 66 38 36 37 30 65  61 38 32 64 5c 22 7d 22  |bcf8670ea82d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995174,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 33 39 5c 22 7d  |10.244.69.239\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s8l7s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s8l7s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.239",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.239"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995173,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845995174,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://1b4d54dc4633a28ecd25c195aa719ac3c29f8d2cf1599b3c4e3689299a912331",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Mar 14 06:39:35.179: INFO: pod: "test-deployment-66574fbd5-bgsjd":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-66574fbd5-bgsjd",
      GenerateName: (string) (len=26) "test-deployment-66574fbd5-",
      Namespace: (string) (len=15) "deployment-5798",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb47a2f1-7607-42ca-84a5-d45d45d57e61",
      ResourceVersion: (string) (len=4) "8838",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995173,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "66574fbd5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8533c5cb4c0a86ab6c2661473b06a9829bce0a4452047f3d9d37f68deeb553ba",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.79.94/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.79.94/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-66574fbd5",
          UID: (types.UID) (len=36) "39b88631-af6c-4000-b384-bcf8670ea82d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  33 39 62 38 38 36 33 31  |uid\":\"39b88631|
              000000a0  2d 61 66 36 63 2d 34 30  30 30 2d 62 33 38 34 2d  |-af6c-4000-b384-|
              000000b0  62 63 66 38 36 37 30 65  61 38 32 64 5c 22 7d 22  |bcf8670ea82d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 39 34 5c 22 7d 22  |10.244.79.94\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lh77p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lh77p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.79.94",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.79.94"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995173,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845995173,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://bdd5dca76889dd70f4131698cc4eb44b9fd158f95384dd6bedb1bc98bea97176",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Mar 14 06:39:35.181: INFO: ReplicaSet "test-deployment-7678fcd584":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7678fcd584",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5798",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45b7e343-3b4d-4c74-ac4c-28c0110b1cff",
      ResourceVersion: (string) (len=4) "8792",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995170,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7678fcd584",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "ec618bb1-5b94-48b2-ac9e-20225a90ca0d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 63 36 31  38 62 62 31 2d 35 62 39  |":\"ec618bb1-5b9|
              00000130  34 2d 34 38 62 32 2d 61  63 39 65 2d 32 30 32 32  |4-48b2-ac9e-2022|
              00000140  35 61 39 30 63 61 30 64  5c 22 7d 22 3a 7b 7d 7d  |5a90ca0d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7678fcd584"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7678fcd584",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Mar 14 06:39:35.190: INFO: ReplicaSet "test-deployment-7ff8d686dd":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7ff8d686dd",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5798",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e98384eb-9b42-42d5-8e24-7cf7c683e89a",
      ResourceVersion: (string) (len=4) "8886",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995171,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ff8d686dd",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "ec618bb1-5b94-48b2-ac9e-20225a90ca0d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 63 36 31  38 62 62 31 2d 35 62 39  |":\"ec618bb1-5b9|
              00000130  34 2d 34 38 62 32 2d 61  63 39 65 2d 32 30 32 32  |4-48b2-ac9e-2022|
              00000140  35 61 39 30 63 61 30 64  5c 22 7d 22 3a 7b 7d 7d  |5a90ca0d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995175,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ff8d686dd",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ff8d686dd",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=52) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Mar 14 06:39:35.196: INFO: pod: "test-deployment-7ff8d686dd-l9zbq":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-7ff8d686dd-l9zbq",
      GenerateName: (string) (len=27) "test-deployment-7ff8d686dd-",
      Namespace: (string) (len=15) "deployment-5798",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c5b2ff5-27b0-40b9-9e9b-a60159b58d9c",
      ResourceVersion: (string) (len=4) "8881",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995171,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995177,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ff8d686dd",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "44664b4516c662c09775706814c6d4c3c8d1e788a443674ea558318322082ac5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.238/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.238/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-7ff8d686dd",
          UID: (types.UID) (len=36) "e98384eb-9b42-42d5-8e24-7cf7c683e89a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 39 38 33 38 34 65 62  |uid\":\"e98384eb|
              000000a0  2d 39 62 34 32 2d 34 32  64 35 2d 38 65 32 34 2d  |-9b42-42d5-8e24-|
              000000b0  37 63 66 37 63 36 38 33  65 38 39 61 5c 22 7d 22  |7cf7c683e89a\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995172,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 33 38 5c 22 7d  |10.244.69.238\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fcm7f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=52) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fcm7f",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995171,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995171,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845995172,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=52) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause@sha256:0fc1f3b764be56f7c881a69cbd553ae25a2b5523c6901fbacb8270307c29d0c4",
          ContainerID: (string) (len=72) "cri-o://770c5d43f43a5cfba36f0018ca29edc9209584eaf5ab7fd1f25d447330cf5b3e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Mar 14 06:39:35.202: INFO: pod: "test-deployment-7ff8d686dd-sblff":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-7ff8d686dd-sblff",
      GenerateName: (string) (len=27) "test-deployment-7ff8d686dd-",
      Namespace: (string) (len=15) "deployment-5798",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73fa2699-d081-4ff7-a5fe-ad4f12891fd5",
      ResourceVersion: (string) (len=4) "8843",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995173,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995175,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ff8d686dd",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8807ef194002e6eb750784ef55bd0aebbf78c67c5e5c218cc538e8e9a0cba8ca",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.79.93/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.79.93/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-7ff8d686dd",
          UID: (types.UID) (len=36) "e98384eb-9b42-42d5-8e24-7cf7c683e89a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 39 38 33 38 34 65 62  |uid\":\"e98384eb|
              000000a0  2d 39 62 34 32 2d 34 32  64 35 2d 38 65 32 34 2d  |-9b42-42d5-8e24-|
              000000b0  37 63 66 37 63 36 38 33  65 38 39 61 5c 22 7d 22  |7cf7c683e89a\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 39 33 5c 22 7d 22  |10.244.79.93\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pq2lk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=52) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pq2lk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995173,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.79.93",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.79.93"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995173,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845995173,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=52) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause@sha256:0fc1f3b764be56f7c881a69cbd553ae25a2b5523c6901fbacb8270307c29d0c4",
          ContainerID: (string) (len=72) "cri-o://7c3d0cd094f42fbe01a5550d7adc7b7f543570c0b6afd258ad613e308328c9f9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Mar 14 06:39:35.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5798" for this suite. @ 03/14/24 06:39:35.213
• [4.946 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 03/14/24 06:39:35.223
  Mar 14 06:39:35.223: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 06:39:35.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:35.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:35.232
  STEP: Creating configMap with name configmap-test-volume-map-37d46d04-6f6c-4aff-bada-0e522b949618 @ 03/14/24 06:39:35.234
  STEP: Creating a pod to test consume configMaps @ 03/14/24 06:39:35.235
  STEP: Saw pod success @ 03/14/24 06:39:37.242
  Mar 14 06:39:37.243: INFO: Trying to get logs from node k8s-worker02 pod pod-configmaps-aa666fa0-e7f7-4c49-856a-ae8a04e3b76a container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 06:39:37.246
  Mar 14 06:39:37.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7558" for this suite. @ 03/14/24 06:39:37.251
• [2.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 03/14/24 06:39:37.254
  Mar 14 06:39:37.254: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename svcaccounts @ 03/14/24 06:39:37.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:37.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:37.26
  STEP: reading a file in the container @ 03/14/24 06:39:39.268
  Mar 14 06:39:39.268: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8787 pod-service-account-117733f0-cace-48b0-825f-7377de5840a1 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 03/14/24 06:39:39.35
  Mar 14 06:39:39.350: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8787 pod-service-account-117733f0-cace-48b0-825f-7377de5840a1 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 03/14/24 06:39:39.428
  Mar 14 06:39:39.428: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8787 pod-service-account-117733f0-cace-48b0-825f-7377de5840a1 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Mar 14 06:39:39.501: INFO: Got root ca configmap in namespace "svcaccounts-8787"
  Mar 14 06:39:39.502: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8787" for this suite. @ 03/14/24 06:39:39.504
• [2.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 03/14/24 06:39:39.507
  Mar 14 06:39:39.507: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 06:39:39.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:39.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:39.513
  STEP: Starting the proxy @ 03/14/24 06:39:39.514
  Mar 14 06:39:39.514: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-6354 proxy --unix-socket=/tmp/kubectl-proxy-unix1606268074/test'
  STEP: retrieving proxy /api/ output @ 03/14/24 06:39:39.546
  Mar 14 06:39:39.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6354" for this suite. @ 03/14/24 06:39:39.547
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 03/14/24 06:39:39.551
  Mar 14 06:39:39.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename discovery @ 03/14/24 06:39:39.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:39.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:39.557
  STEP: Setting up server cert @ 03/14/24 06:39:39.559
  STEP: Requesting APIResourceList from "/api/v1" @ 03/14/24 06:39:39.859
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 03/14/24 06:39:39.86
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 03/14/24 06:39:39.86
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 03/14/24 06:39:39.861
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 03/14/24 06:39:39.861
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 03/14/24 06:39:39.862
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 03/14/24 06:39:39.863
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 03/14/24 06:39:39.863
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 03/14/24 06:39:39.864
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 03/14/24 06:39:39.864
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 03/14/24 06:39:39.865
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 03/14/24 06:39:39.865
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 03/14/24 06:39:39.866
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 03/14/24 06:39:39.866
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 03/14/24 06:39:39.867
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 03/14/24 06:39:39.867
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 03/14/24 06:39:39.868
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 03/14/24 06:39:39.868
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 03/14/24 06:39:39.869
  Mar 14 06:39:39.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2842" for this suite. @ 03/14/24 06:39:39.872
• [0.323 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 03/14/24 06:39:39.875
  Mar 14 06:39:39.875: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replicaset @ 03/14/24 06:39:39.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:39.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:39.881
  STEP: Create a ReplicaSet @ 03/14/24 06:39:39.882
  STEP: Verify that the required pods have come up @ 03/14/24 06:39:39.884
  Mar 14 06:39:39.885: INFO: Pod name sample-pod: Found 0 pods out of 3
  Mar 14 06:39:44.888: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 03/14/24 06:39:44.888
  Mar 14 06:39:44.889: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 03/14/24 06:39:44.889
  STEP: DeleteCollection of the ReplicaSets @ 03/14/24 06:39:44.89
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 03/14/24 06:39:44.893
  Mar 14 06:39:44.894: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2246" for this suite. @ 03/14/24 06:39:44.896
• [5.031 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 03/14/24 06:39:44.906
  Mar 14 06:39:44.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename disruption @ 03/14/24 06:39:44.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:44.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:44.919
  STEP: Waiting for the pdb to be processed @ 03/14/24 06:39:44.924
  STEP: Updating PodDisruptionBudget status @ 03/14/24 06:39:46.927
  STEP: Waiting for all pods to be running @ 03/14/24 06:39:46.93
  Mar 14 06:39:46.932: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 03/14/24 06:39:48.934
  STEP: Waiting for the pdb to be processed @ 03/14/24 06:39:48.938
  STEP: Patching PodDisruptionBudget status @ 03/14/24 06:39:48.941
  STEP: Waiting for the pdb to be processed @ 03/14/24 06:39:48.944
  Mar 14 06:39:48.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7" for this suite. @ 03/14/24 06:39:48.947
• [4.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 03/14/24 06:39:48.949
  Mar 14 06:39:48.949: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename statefulset @ 03/14/24 06:39:48.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:39:48.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:39:48.956
  STEP: Creating service test in namespace statefulset-5286 @ 03/14/24 06:39:48.958
  STEP: Creating stateful set ss in namespace statefulset-5286 @ 03/14/24 06:39:48.959
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5286 @ 03/14/24 06:39:48.962
  Mar 14 06:39:48.964: INFO: Found 0 stateful pods, waiting for 1
  Mar 14 06:39:58.967: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 03/14/24 06:39:58.967
  Mar 14 06:39:58.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-5286 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 06:39:59.055: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 06:39:59.055: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 06:39:59.055: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 14 06:39:59.056: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Mar 14 06:40:09.059: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Mar 14 06:40:09.059: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Mar 14 06:40:09.064: INFO: POD   NODE          PHASE    GRACE  CONDITIONS
  Mar 14 06:40:09.064: INFO: ss-0  k8s-worker01  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:39:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:39:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:39:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:39:48 +0000 UTC  }]
  Mar 14 06:40:09.064: INFO: 
  Mar 14 06:40:09.064: INFO: StatefulSet ss has not reached scale 3, at 1
  Mar 14 06:40:10.066: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.998254081s
  Mar 14 06:40:11.069: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.996752275s
  Mar 14 06:40:12.070: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.994425479s
  Mar 14 06:40:13.072: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.992363651s
  Mar 14 06:40:14.074: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.990675933s
  Mar 14 06:40:15.076: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.988736929s
  Mar 14 06:40:16.077: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.987283978s
  Mar 14 06:40:17.080: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.984784663s
  Mar 14 06:40:18.082: INFO: Verifying statefulset ss doesn't scale past 3 for another 983.064714ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5286 @ 03/14/24 06:40:19.082
  Mar 14 06:40:19.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-5286 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 14 06:40:19.163: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 14 06:40:19.163: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 14 06:40:19.163: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 14 06:40:19.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-5286 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 14 06:40:19.248: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Mar 14 06:40:19.248: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 14 06:40:19.248: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 14 06:40:19.248: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-5286 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 14 06:40:19.341: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Mar 14 06:40:19.341: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 14 06:40:19.341: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 14 06:40:19.342: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 06:40:19.342: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 06:40:19.342: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 03/14/24 06:40:19.342
  Mar 14 06:40:19.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-5286 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 06:40:19.425: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 06:40:19.425: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 06:40:19.425: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 14 06:40:19.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-5286 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 06:40:19.503: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 06:40:19.503: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 06:40:19.503: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 14 06:40:19.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-5286 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 06:40:19.587: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 06:40:19.587: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 06:40:19.587: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 14 06:40:19.587: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Mar 14 06:40:19.589: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Mar 14 06:40:29.593: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Mar 14 06:40:29.593: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Mar 14 06:40:29.593: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Mar 14 06:40:29.601: INFO: POD   NODE          PHASE    GRACE  CONDITIONS
  Mar 14 06:40:29.601: INFO: ss-0  k8s-worker01  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:39:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:39:48 +0000 UTC  }]
  Mar 14 06:40:29.601: INFO: ss-1  k8s-master01  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:09 +0000 UTC  }]
  Mar 14 06:40:29.601: INFO: ss-2  k8s-worker02  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:09 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:09 +0000 UTC  }]
  Mar 14 06:40:29.601: INFO: 
  Mar 14 06:40:29.601: INFO: StatefulSet ss has not reached scale 0, at 3
  Mar 14 06:40:30.603: INFO: POD   NODE          PHASE      GRACE  CONDITIONS
  Mar 14 06:40:30.603: INFO: ss-0  k8s-worker01  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:39:48 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:20 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:40:20 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:39:48 +0000 UTC  }]
  Mar 14 06:40:30.603: INFO: 
  Mar 14 06:40:30.603: INFO: StatefulSet ss has not reached scale 0, at 1
  Mar 14 06:40:31.605: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.993063822s
  Mar 14 06:40:32.607: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.991103519s
  Mar 14 06:40:33.609: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.989642658s
  Mar 14 06:40:34.610: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.988089811s
  Mar 14 06:40:35.612: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.986579663s
  Mar 14 06:40:36.613: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.98541168s
  Mar 14 06:40:37.615: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.983384615s
  Mar 14 06:40:38.616: INFO: Verifying statefulset ss doesn't scale past 0 for another 982.185248ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5286 @ 03/14/24 06:40:39.617
  Mar 14 06:40:39.619: INFO: Scaling statefulset ss to 0
  Mar 14 06:40:39.622: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 14 06:40:39.623: INFO: Deleting all statefulset in ns statefulset-5286
  Mar 14 06:40:39.624: INFO: Scaling statefulset ss to 0
  Mar 14 06:40:39.627: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 14 06:40:39.628: INFO: Deleting statefulset ss
  Mar 14 06:40:39.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5286" for this suite. @ 03/14/24 06:40:39.634
• [50.687 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 03/14/24 06:40:39.636
  Mar 14 06:40:39.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 06:40:39.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:40:39.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:40:39.643
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 03/14/24 06:40:39.644
  STEP: Saw pod success @ 03/14/24 06:40:41.65
  Mar 14 06:40:41.651: INFO: Trying to get logs from node k8s-worker02 pod pod-a298d803-5dda-497e-bcc7-72a63db9b3ca container test-container: <nil>
  STEP: delete the pod @ 03/14/24 06:40:41.653
  Mar 14 06:40:41.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8899" for this suite. @ 03/14/24 06:40:41.66
• [2.026 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 03/14/24 06:40:41.662
  Mar 14 06:40:41.662: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename disruption @ 03/14/24 06:40:41.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:40:41.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:40:41.669
  STEP: Waiting for the pdb to be processed @ 03/14/24 06:40:41.672
  STEP: Waiting for all pods to be running @ 03/14/24 06:40:41.686
  Mar 14 06:40:41.690: INFO: running pods: 0 < 3
  Mar 14 06:40:43.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2439" for this suite. @ 03/14/24 06:40:43.695
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 03/14/24 06:40:43.698
  Mar 14 06:40:43.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 06:40:43.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:40:43.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:40:43.709
  STEP: Creating projection with secret that has name projected-secret-test-fcfd9bb0-8773-4ee3-ace0-65b7b5124320 @ 03/14/24 06:40:43.71
  STEP: Creating a pod to test consume secrets @ 03/14/24 06:40:43.714
  STEP: Saw pod success @ 03/14/24 06:40:47.723
  Mar 14 06:40:47.725: INFO: Trying to get logs from node k8s-worker01 pod pod-projected-secrets-d4fc65d6-0685-409a-ab3d-b223019cd043 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 06:40:47.728
  Mar 14 06:40:47.733: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1316" for this suite. @ 03/14/24 06:40:47.735
• [4.039 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 03/14/24 06:40:47.737
  Mar 14 06:40:47.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 06:40:47.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:40:47.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:40:47.744
  STEP: creating a secret @ 03/14/24 06:40:47.745
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 03/14/24 06:40:47.746
  STEP: patching the secret @ 03/14/24 06:40:47.747
  STEP: deleting the secret using a LabelSelector @ 03/14/24 06:40:47.751
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 03/14/24 06:40:47.753
  Mar 14 06:40:47.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5646" for this suite. @ 03/14/24 06:40:47.755
• [0.020 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 03/14/24 06:40:47.757
  Mar 14 06:40:47.757: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 06:40:47.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:40:47.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:40:47.765
  STEP: creating service multi-endpoint-test in namespace services-2996 @ 03/14/24 06:40:47.766
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2996 to expose endpoints map[] @ 03/14/24 06:40:47.769
  Mar 14 06:40:47.772: INFO: successfully validated that service multi-endpoint-test in namespace services-2996 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2996 @ 03/14/24 06:40:47.773
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2996 to expose endpoints map[pod1:[100]] @ 03/14/24 06:40:49.781
  Mar 14 06:40:49.787: INFO: successfully validated that service multi-endpoint-test in namespace services-2996 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2996 @ 03/14/24 06:40:49.787
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2996 to expose endpoints map[pod1:[100] pod2:[101]] @ 03/14/24 06:40:51.795
  Mar 14 06:40:51.798: INFO: successfully validated that service multi-endpoint-test in namespace services-2996 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 03/14/24 06:40:51.799
  Mar 14 06:40:51.799: INFO: Creating new exec pod
  Mar 14 06:40:54.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-2996 exec execpod8s5tp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Mar 14 06:40:54.889: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Mar 14 06:40:54.889: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 06:40:54.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-2996 exec execpod8s5tp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.152.252 80'
  Mar 14 06:40:54.968: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.152.252 80\nConnection to 10.96.152.252 80 port [tcp/http] succeeded!\n"
  Mar 14 06:40:54.968: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 06:40:54.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-2996 exec execpod8s5tp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Mar 14 06:40:55.052: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Mar 14 06:40:55.052: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 06:40:55.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-2996 exec execpod8s5tp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.152.252 81'
  Mar 14 06:40:55.131: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.152.252 81\nConnection to 10.96.152.252 81 port [tcp/*] succeeded!\n"
  Mar 14 06:40:55.131: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2996 @ 03/14/24 06:40:55.131
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2996 to expose endpoints map[pod2:[101]] @ 03/14/24 06:40:55.139
  Mar 14 06:40:55.149: INFO: successfully validated that service multi-endpoint-test in namespace services-2996 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2996 @ 03/14/24 06:40:55.149
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2996 to expose endpoints map[] @ 03/14/24 06:40:55.154
  Mar 14 06:40:56.161: INFO: successfully validated that service multi-endpoint-test in namespace services-2996 exposes endpoints map[]
  Mar 14 06:40:56.161: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2996" for this suite. @ 03/14/24 06:40:56.167
• [8.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 03/14/24 06:40:56.17
  Mar 14 06:40:56.170: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename runtimeclass @ 03/14/24 06:40:56.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:40:56.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:40:56.177
  STEP: Deleting RuntimeClass runtimeclass-2223-delete-me @ 03/14/24 06:40:56.18
  STEP: Waiting for the RuntimeClass to disappear @ 03/14/24 06:40:56.182
  Mar 14 06:40:56.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2223" for this suite. @ 03/14/24 06:40:56.186
• [0.018 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 03/14/24 06:40:56.188
  Mar 14 06:40:56.188: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/14/24 06:40:56.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:40:56.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:40:56.196
  STEP: create the container to handle the HTTPGet hook request. @ 03/14/24 06:40:56.198
  STEP: create the pod with lifecycle hook @ 03/14/24 06:40:58.207
  STEP: delete the pod with lifecycle hook @ 03/14/24 06:41:00.213
  STEP: check prestop hook @ 03/14/24 06:41:02.22
  Mar 14 06:41:02.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-902" for this suite. @ 03/14/24 06:41:02.225
• [6.039 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 03/14/24 06:41:02.227
  Mar 14 06:41:02.227: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename security-context-test @ 03/14/24 06:41:02.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:41:02.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:41:02.235
  Mar 14 06:41:06.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8462" for this suite. @ 03/14/24 06:41:06.249
• [4.024 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 03/14/24 06:41:06.251
  Mar 14 06:41:06.251: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename aggregator @ 03/14/24 06:41:06.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:41:06.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:41:06.26
  Mar 14 06:41:06.262: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Registering the sample API server. @ 03/14/24 06:41:06.262
  Mar 14 06:41:06.746: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Mar 14 06:41:06.755: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Mar 14 06:41:08.769: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:10.772: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:12.772: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:14.773: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:16.773: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:18.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:20.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:22.773: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:24.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:26.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:28.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:30.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:32.772: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:34.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:36.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:38.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:40.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:42.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:44.771: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-56f5bd7745\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Mar 14 06:41:46.878: INFO: Waited 104.869122ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 03/14/24 06:41:46.895
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 03/14/24 06:41:46.896
  STEP: List APIServices @ 03/14/24 06:41:46.899
  Mar 14 06:41:46.901: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 03/14/24 06:41:46.901
  Mar 14 06:41:46.907: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 03/14/24 06:41:46.907
  Mar 14 06:41:46.910: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.March, 14, 6, 41, 46, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 03/14/24 06:41:46.91
  Mar 14 06:41:46.912: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-03-14 06:41:46 +0000 UTC Passed all checks passed}
  Mar 14 06:41:46.912: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 14 06:41:46.912: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 03/14/24 06:41:46.912
  Mar 14 06:41:46.915: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1627952387" @ 03/14/24 06:41:46.915
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 03/14/24 06:41:46.92
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 03/14/24 06:41:46.923
  STEP: Patch APIService Status @ 03/14/24 06:41:46.924
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 03/14/24 06:41:46.927
  Mar 14 06:41:46.929: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-03-14 06:41:46 +0000 UTC Passed all checks passed}
  Mar 14 06:41:46.929: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 14 06:41:46.929: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Mar 14 06:41:46.929: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 03/14/24 06:41:46.929
  STEP: Confirm that the generated APIService has been deleted @ 03/14/24 06:41:46.931
  Mar 14 06:41:46.931: INFO: Requesting list of APIServices to confirm quantity
  Mar 14 06:41:46.933: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Mar 14 06:41:46.933: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Mar 14 06:41:46.961: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4229" for this suite. @ 03/14/24 06:41:46.979
• [40.730 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 03/14/24 06:41:46.982
  Mar 14 06:41:46.982: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 06:41:46.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:41:46.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:41:46.989
  STEP: Setting up server cert @ 03/14/24 06:41:46.996
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 06:41:47.383
  STEP: Deploying the webhook pod @ 03/14/24 06:41:47.386
  STEP: Wait for the deployment to be ready @ 03/14/24 06:41:47.391
  Mar 14 06:41:47.395: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 03/14/24 06:41:49.399
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 06:41:49.402
  Mar 14 06:41:50.402: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 03/14/24 06:41:50.405
  STEP: create a pod @ 03/14/24 06:41:50.414
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 03/14/24 06:41:52.422
  Mar 14 06:41:52.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=webhook-6637 attach --namespace=webhook-6637 to-be-attached-pod -i -c=container1'
  Mar 14 06:41:52.471: INFO: rc: 1
  Mar 14 06:41:52.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6637" for this suite. @ 03/14/24 06:41:52.49
  STEP: Destroying namespace "webhook-markers-8636" for this suite. @ 03/14/24 06:41:52.493
• [5.514 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 03/14/24 06:41:52.496
  Mar 14 06:41:52.496: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 06:41:52.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:41:52.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:41:52.503
  STEP: Creating configMap with name configmap-test-volume-77b3d8d0-3c83-475e-bf7a-243551f20178 @ 03/14/24 06:41:52.504
  STEP: Creating a pod to test consume configMaps @ 03/14/24 06:41:52.505
  STEP: Saw pod success @ 03/14/24 06:41:54.511
  Mar 14 06:41:54.512: INFO: Trying to get logs from node k8s-worker02 pod pod-configmaps-8e7d26bc-8d47-4bc6-8657-326b225f06e4 container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 06:41:54.517
  Mar 14 06:41:54.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4831" for this suite. @ 03/14/24 06:41:54.523
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 03/14/24 06:41:54.526
  Mar 14 06:41:54.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename limitrange @ 03/14/24 06:41:54.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:41:54.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:41:54.533
  STEP: Creating a LimitRange @ 03/14/24 06:41:54.534
  STEP: Setting up watch @ 03/14/24 06:41:54.534
  STEP: Submitting a LimitRange @ 03/14/24 06:41:54.635
  STEP: Verifying LimitRange creation was observed @ 03/14/24 06:41:54.638
  STEP: Fetching the LimitRange to ensure it has proper values @ 03/14/24 06:41:54.638
  Mar 14 06:41:54.639: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Mar 14 06:41:54.639: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 03/14/24 06:41:54.639
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 03/14/24 06:41:54.641
  Mar 14 06:41:54.643: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Mar 14 06:41:54.643: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 03/14/24 06:41:54.643
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 03/14/24 06:41:54.645
  Mar 14 06:41:54.646: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Mar 14 06:41:54.646: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 03/14/24 06:41:54.646
  STEP: Failing to create a Pod with more than max resources @ 03/14/24 06:41:54.647
  STEP: Updating a LimitRange @ 03/14/24 06:41:54.648
  STEP: Verifying LimitRange updating is effective @ 03/14/24 06:41:54.65
  STEP: Creating a Pod with less than former min resources @ 03/14/24 06:41:56.653
  STEP: Failing to create a Pod with more than max resources @ 03/14/24 06:41:56.655
  STEP: Deleting a LimitRange @ 03/14/24 06:41:56.656
  STEP: Verifying the LimitRange was deleted @ 03/14/24 06:41:56.659
  Mar 14 06:42:01.660: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 03/14/24 06:42:01.66
  Mar 14 06:42:01.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8730" for this suite. @ 03/14/24 06:42:01.667
• [7.142 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 03/14/24 06:42:01.669
  Mar 14 06:42:01.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replication-controller @ 03/14/24 06:42:01.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:42:01.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:42:01.675
  STEP: creating a ReplicationController @ 03/14/24 06:42:01.678
  STEP: waiting for RC to be added @ 03/14/24 06:42:01.679
  STEP: waiting for available Replicas @ 03/14/24 06:42:01.68
  STEP: patching ReplicationController @ 03/14/24 06:42:02.36
  STEP: waiting for RC to be modified @ 03/14/24 06:42:02.364
  STEP: patching ReplicationController status @ 03/14/24 06:42:02.364
  STEP: waiting for RC to be modified @ 03/14/24 06:42:02.366
  STEP: waiting for available Replicas @ 03/14/24 06:42:02.367
  STEP: fetching ReplicationController status @ 03/14/24 06:42:02.369
  STEP: patching ReplicationController scale @ 03/14/24 06:42:02.37
  STEP: waiting for RC to be modified @ 03/14/24 06:42:02.374
  STEP: waiting for ReplicationController's scale to be the max amount @ 03/14/24 06:42:02.374
  STEP: fetching ReplicationController; ensuring that it's patched @ 03/14/24 06:42:02.92
  STEP: updating ReplicationController status @ 03/14/24 06:42:02.921
  STEP: waiting for RC to be modified @ 03/14/24 06:42:02.924
  STEP: listing all ReplicationControllers @ 03/14/24 06:42:02.924
  STEP: checking that ReplicationController has expected values @ 03/14/24 06:42:02.924
  STEP: deleting ReplicationControllers by collection @ 03/14/24 06:42:02.925
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 03/14/24 06:42:02.927
  Mar 14 06:42:02.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0314 06:42:02.954815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9642" for this suite. @ 03/14/24 06:42:02.956
• [1.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 03/14/24 06:42:02.958
  Mar 14 06:42:02.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 06:42:02.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:42:02.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:42:02.964
  STEP: Creating secret with name secret-test-39ff5732-25b6-43c2-885f-379c727b06dd @ 03/14/24 06:42:02.965
  STEP: Creating a pod to test consume secrets @ 03/14/24 06:42:02.967
  E0314 06:42:03.955225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:04.955331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:05.956086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:06.956274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:42:06.975
  Mar 14 06:42:06.976: INFO: Trying to get logs from node k8s-worker02 pod pod-secrets-43b6d194-08c6-4663-beb8-74c7e7e660d4 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 06:42:06.978
  Mar 14 06:42:06.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2526" for this suite. @ 03/14/24 06:42:06.988
• [4.032 seconds]
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 03/14/24 06:42:06.99
  Mar 14 06:42:06.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 06:42:06.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:42:06.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:42:06.995
  STEP: creating service nodeport-test with type=NodePort in namespace services-3911 @ 03/14/24 06:42:06.996
  STEP: creating replication controller nodeport-test in namespace services-3911 @ 03/14/24 06:42:07
  I0314 06:42:07.007886      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-3911, replica count: 2
  E0314 06:42:07.957113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:08.957249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:09.957332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 06:42:10.058615      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 14 06:42:10.058: INFO: Creating new exec pod
  E0314 06:42:10.957416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:11.957831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:12.958431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:42:13.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-3911 exec execpod6hlf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Mar 14 06:42:13.147: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Mar 14 06:42:13.147: INFO: stdout: "nodeport-test-zp5xh"
  Mar 14 06:42:13.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-3911 exec execpod6hlf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.220.227 80'
  Mar 14 06:42:13.232: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.220.227 80\nConnection to 10.96.220.227 80 port [tcp/http] succeeded!\n"
  Mar 14 06:42:13.232: INFO: stdout: "nodeport-test-zp5xh"
  Mar 14 06:42:13.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-3911 exec execpod6hlf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.132.14 32218'
  Mar 14 06:42:13.313: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.132.14 32218\nConnection to 192.168.132.14 32218 port [tcp/*] succeeded!\n"
  Mar 14 06:42:13.313: INFO: stdout: "nodeport-test-g8xpr"
  Mar 14 06:42:13.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-3911 exec execpod6hlf6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.132.11 32218'
  Mar 14 06:42:13.394: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.132.11 32218\nConnection to 192.168.132.11 32218 port [tcp/*] succeeded!\n"
  Mar 14 06:42:13.394: INFO: stdout: "nodeport-test-g8xpr"
  Mar 14 06:42:13.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3911" for this suite. @ 03/14/24 06:42:13.396
• [6.408 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 03/14/24 06:42:13.398
  Mar 14 06:42:13.398: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 06:42:13.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:42:13.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:42:13.405
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 06:42:13.406
  E0314 06:42:13.959422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:14.959543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:15.959623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:16.959758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:42:17.415
  Mar 14 06:42:17.416: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-8de6a913-ca1a-41e4-959f-781a322d5b1f container client-container: <nil>
  STEP: delete the pod @ 03/14/24 06:42:17.419
  Mar 14 06:42:17.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8557" for this suite. @ 03/14/24 06:42:17.427
• [4.031 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 03/14/24 06:42:17.429
  Mar 14 06:42:17.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename dns @ 03/14/24 06:42:17.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:42:17.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:42:17.435
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4746.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4746.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 03/14/24 06:42:17.437
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4746.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4746.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 03/14/24 06:42:17.437
  STEP: creating a pod to probe /etc/hosts @ 03/14/24 06:42:17.437
  STEP: submitting the pod to kubernetes @ 03/14/24 06:42:17.437
  E0314 06:42:17.960748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:18.961471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/14/24 06:42:19.443
  STEP: looking for the results for each expected name from probers @ 03/14/24 06:42:19.444
  Mar 14 06:42:19.450: INFO: DNS probes using dns-4746/dns-test-e5f4f585-f4c3-495e-912d-cd80c9e8bb64 succeeded

  Mar 14 06:42:19.450: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 06:42:19.451
  STEP: Destroying namespace "dns-4746" for this suite. @ 03/14/24 06:42:19.456
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 03/14/24 06:42:19.458
  Mar 14 06:42:19.458: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 06:42:19.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:42:19.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:42:19.47
  STEP: Setting up server cert @ 03/14/24 06:42:19.477
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 06:42:19.69
  STEP: Deploying the webhook pod @ 03/14/24 06:42:19.693
  STEP: Wait for the deployment to be ready @ 03/14/24 06:42:19.697
  Mar 14 06:42:19.700: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0314 06:42:19.962157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:20.962509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 06:42:21.704
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 06:42:21.708
  E0314 06:42:21.962612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:42:22.708: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 03/14/24 06:42:22.71
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/14/24 06:42:22.71
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 03/14/24 06:42:22.718
  E0314 06:42:22.962987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 03/14/24 06:42:23.723
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/14/24 06:42:23.723
  E0314 06:42:23.963098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 03/14/24 06:42:24.733
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/14/24 06:42:24.733
  E0314 06:42:24.963612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:25.963736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:26.963847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:27.963932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:28.964013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 03/14/24 06:42:29.746
  STEP: Registering slow webhook via the AdmissionRegistration API @ 03/14/24 06:42:29.746
  E0314 06:42:29.964521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:30.964643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:31.964739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:32.964938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:33.965044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:42:34.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-941" for this suite. @ 03/14/24 06:42:34.78
  STEP: Destroying namespace "webhook-markers-9353" for this suite. @ 03/14/24 06:42:34.781
• [15.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 03/14/24 06:42:34.787
  Mar 14 06:42:34.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename statefulset @ 03/14/24 06:42:34.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:42:34.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:42:34.794
  STEP: Creating service test in namespace statefulset-9752 @ 03/14/24 06:42:34.795
  STEP: Creating a new StatefulSet @ 03/14/24 06:42:34.797
  Mar 14 06:42:34.801: INFO: Found 0 stateful pods, waiting for 3
  E0314 06:42:34.965142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:35.965468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:36.965664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:37.965749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:38.965842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:39.965937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:40.965995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:41.966089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:42.966181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:43.966264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:42:44.803: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 06:42:44.803: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 06:42:44.803: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 06:42:44.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-9752 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 06:42:44.882: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 06:42:44.882: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 06:42:44.882: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0314 06:42:44.966261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:45.966637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:46.966774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:47.966891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:48.966980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:49.967117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:50.967206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:51.967300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:52.967395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:53.967541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4 to hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.39-4 @ 03/14/24 06:42:54.887
  Mar 14 06:42:54.900: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 03/14/24 06:42:54.9
  E0314 06:42:54.968035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:55.968153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:56.968246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:57.968402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:58.968536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:42:59.968852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:00.969036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:01.969156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:02.969280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:03.969403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 03/14/24 06:43:04.906
  Mar 14 06:43:04.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-9752 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0314 06:43:04.970343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:43:04.983: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 14 06:43:04.983: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 14 06:43:04.983: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0314 06:43:05.970670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:06.970803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:07.970890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:08.970982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:09.971066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:10.971149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:11.971687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:12.971768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:13.971851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:14.972727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 03/14/24 06:43:14.989
  Mar 14 06:43:14.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-9752 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 06:43:15.067: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 06:43:15.067: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 06:43:15.067: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0314 06:43:15.973730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:16.973811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:17.973897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:18.973984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:19.974125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:20.974231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:21.974340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:22.974416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:23.974641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:24.974763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:43:25.087: INFO: Updating stateful set ss2
  E0314 06:43:25.974829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:26.974971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:27.975060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:28.975153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:29.975297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:30.975404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:31.975510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:32.975649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:33.975785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:34.975887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 03/14/24 06:43:35.092
  Mar 14 06:43:35.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-9752 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 14 06:43:35.176: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 14 06:43:35.177: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 14 06:43:35.177: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0314 06:43:35.975967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:36.976048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:37.976151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:38.976230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:39.976328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:40.976411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:41.976577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:42.976713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:43.976804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:44.976941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:43:45.184: INFO: Deleting all statefulset in ns statefulset-9752
  Mar 14 06:43:45.184: INFO: Scaling statefulset ss2 to 0
  E0314 06:43:45.977475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:46.977591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:47.977770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:48.977904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:49.978045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:50.978137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:51.978224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:52.978591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:53.978679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:54.979576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:43:55.191: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 14 06:43:55.192: INFO: Deleting statefulset ss2
  Mar 14 06:43:55.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9752" for this suite. @ 03/14/24 06:43:55.197
• [80.412 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 03/14/24 06:43:55.199
  Mar 14 06:43:55.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename field-validation @ 03/14/24 06:43:55.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:43:55.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:43:55.208
  Mar 14 06:43:55.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 06:43:55.980605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:56.981004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:57.981069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:43:58.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8784" for this suite. @ 03/14/24 06:43:58.257
• [3.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 03/14/24 06:43:58.259
  Mar 14 06:43:58.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 06:43:58.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:43:58.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:43:58.265
  STEP: Creating configMap with name projected-configmap-test-volume-map-cc88c3f5-952c-4e3c-8eb6-f11d233c9ae9 @ 03/14/24 06:43:58.267
  STEP: Creating a pod to test consume configMaps @ 03/14/24 06:43:58.268
  E0314 06:43:58.981164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:43:59.981407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:00.981720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:01.981794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:44:02.275
  Mar 14 06:44:02.276: INFO: Trying to get logs from node k8s-worker02 pod pod-projected-configmaps-e4bd4a72-dc66-4caf-87b7-dd302c0d46fc container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 06:44:02.285
  Mar 14 06:44:02.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8959" for this suite. @ 03/14/24 06:44:02.292
• [4.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 03/14/24 06:44:02.295
  Mar 14 06:44:02.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename daemonsets @ 03/14/24 06:44:02.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:44:02.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:44:02.303
  STEP: Creating simple DaemonSet "daemon-set" @ 03/14/24 06:44:02.311
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/14/24 06:44:02.313
  Mar 14 06:44:02.317: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 06:44:02.317: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 06:44:02.982330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:44:03.321: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Mar 14 06:44:03.321: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 06:44:03.982420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:44:04.321: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 14 06:44:04.322: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 03/14/24 06:44:04.323
  Mar 14 06:44:04.324: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 03/14/24 06:44:04.324
  Mar 14 06:44:04.328: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 03/14/24 06:44:04.328
  Mar 14 06:44:04.329: INFO: Observed &DaemonSet event: ADDED
  Mar 14 06:44:04.329: INFO: Observed &DaemonSet event: MODIFIED
  Mar 14 06:44:04.329: INFO: Observed &DaemonSet event: MODIFIED
  Mar 14 06:44:04.329: INFO: Observed &DaemonSet event: MODIFIED
  Mar 14 06:44:04.329: INFO: Observed &DaemonSet event: MODIFIED
  Mar 14 06:44:04.329: INFO: Found daemon set daemon-set in namespace daemonsets-7529 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Mar 14 06:44:04.329: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 03/14/24 06:44:04.329
  STEP: watching for the daemon set status to be patched @ 03/14/24 06:44:04.332
  Mar 14 06:44:04.333: INFO: Observed &DaemonSet event: ADDED
  Mar 14 06:44:04.333: INFO: Observed &DaemonSet event: MODIFIED
  Mar 14 06:44:04.333: INFO: Observed &DaemonSet event: MODIFIED
  Mar 14 06:44:04.333: INFO: Observed &DaemonSet event: MODIFIED
  Mar 14 06:44:04.333: INFO: Observed &DaemonSet event: MODIFIED
  Mar 14 06:44:04.333: INFO: Observed daemon set daemon-set in namespace daemonsets-7529 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Mar 14 06:44:04.333: INFO: Observed &DaemonSet event: MODIFIED
  Mar 14 06:44:04.333: INFO: Found daemon set daemon-set in namespace daemonsets-7529 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Mar 14 06:44:04.333: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 03/14/24 06:44:04.334
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7529, will wait for the garbage collector to delete the pods @ 03/14/24 06:44:04.334
  Mar 14 06:44:04.388: INFO: Deleting DaemonSet.extensions daemon-set took: 1.876705ms
  Mar 14 06:44:04.488: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.066821ms
  E0314 06:44:04.983388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:05.984063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:44:06.591: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 06:44:06.591: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 14 06:44:06.592: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11411"},"items":null}

  Mar 14 06:44:06.593: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11411"},"items":null}

  Mar 14 06:44:06.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7529" for this suite. @ 03/14/24 06:44:06.599
• [4.305 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 03/14/24 06:44:06.6
  Mar 14 06:44:06.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename security-context-test @ 03/14/24 06:44:06.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:44:06.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:44:06.607
  E0314 06:44:06.984607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:07.985082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:08.985641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:09.985778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:44:10.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1642" for this suite. @ 03/14/24 06:44:10.622
• [4.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 03/14/24 06:44:10.625
  Mar 14 06:44:10.625: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 06:44:10.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:44:10.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:44:10.631
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 03/14/24 06:44:10.633
  E0314 06:44:10.986511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:11.986639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:44:12.638
  Mar 14 06:44:12.639: INFO: Trying to get logs from node k8s-worker02 pod pod-dd1f9203-ee07-4478-a187-e6ed698b0d4e container test-container: <nil>
  STEP: delete the pod @ 03/14/24 06:44:12.641
  Mar 14 06:44:12.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3426" for this suite. @ 03/14/24 06:44:12.647
• [2.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 03/14/24 06:44:12.649
  Mar 14 06:44:12.649: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename subpath @ 03/14/24 06:44:12.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:44:12.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:44:12.655
  STEP: Setting up data @ 03/14/24 06:44:12.705
  STEP: Creating pod pod-subpath-test-secret-2jbn @ 03/14/24 06:44:12.708
  STEP: Creating a pod to test atomic-volume-subpath @ 03/14/24 06:44:12.708
  E0314 06:44:12.987463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:13.987685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:14.987749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:15.988135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:16.989091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:17.989221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:18.989738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:19.990518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:20.991241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:21.991614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:22.991695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:23.992050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:24.992341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:25.992735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:26.993164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:27.993299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:28.993342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:29.993433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:30.993976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:31.994064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:32.994911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:33.995043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:44:34.732
  Mar 14 06:44:34.733: INFO: Trying to get logs from node k8s-worker02 pod pod-subpath-test-secret-2jbn container test-container-subpath-secret-2jbn: <nil>
  STEP: delete the pod @ 03/14/24 06:44:34.736
  STEP: Deleting pod pod-subpath-test-secret-2jbn @ 03/14/24 06:44:34.743
  Mar 14 06:44:34.743: INFO: Deleting pod "pod-subpath-test-secret-2jbn" in namespace "subpath-61"
  Mar 14 06:44:34.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-61" for this suite. @ 03/14/24 06:44:34.745
• [22.098 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 03/14/24 06:44:34.747
  Mar 14 06:44:34.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 06:44:34.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:44:34.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:44:34.756
  STEP: creating service in namespace services-5527 @ 03/14/24 06:44:34.757
  STEP: creating service affinity-clusterip-transition in namespace services-5527 @ 03/14/24 06:44:34.757
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5527 @ 03/14/24 06:44:34.762
  I0314 06:44:34.764631      21 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-5527, replica count: 3
  E0314 06:44:34.995543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:35.995644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:36.995747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 06:44:37.815828      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 14 06:44:37.818: INFO: Creating new exec pod
  E0314 06:44:37.996493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:38.996718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:39.997517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:44:40.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5527 exec execpod-affinity9dqsj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Mar 14 06:44:40.906: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Mar 14 06:44:40.906: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 06:44:40.906: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5527 exec execpod-affinity9dqsj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.202.173 80'
  Mar 14 06:44:40.985: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.202.173 80\nConnection to 10.96.202.173 80 port [tcp/http] succeeded!\n"
  Mar 14 06:44:40.985: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 06:44:40.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5527 exec execpod-affinity9dqsj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.202.173:80/ ; done'
  E0314 06:44:40.998124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:44:41.109: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n"
  Mar 14 06:44:41.109: INFO: stdout: "\naffinity-clusterip-transition-5zmw4\naffinity-clusterip-transition-h6mrz\naffinity-clusterip-transition-5zmw4\naffinity-clusterip-transition-5zmw4\naffinity-clusterip-transition-h6mrz\naffinity-clusterip-transition-h6mrz\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-5zmw4\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-5zmw4\naffinity-clusterip-transition-h6mrz\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-5zmw4\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-h6mrz"
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-5zmw4
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-h6mrz
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-5zmw4
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-5zmw4
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-h6mrz
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-h6mrz
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-5zmw4
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-5zmw4
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-h6mrz
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-5zmw4
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.109: INFO: Received response from host: affinity-clusterip-transition-h6mrz
  Mar 14 06:44:41.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5527 exec execpod-affinity9dqsj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.202.173:80/ ; done'
  Mar 14 06:44:41.230: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.202.173:80/\n"
  Mar 14 06:44:41.230: INFO: stdout: "\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg\naffinity-clusterip-transition-6ncmg"
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Received response from host: affinity-clusterip-transition-6ncmg
  Mar 14 06:44:41.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 06:44:41.232: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5527, will wait for the garbage collector to delete the pods @ 03/14/24 06:44:41.237
  Mar 14 06:44:41.291: INFO: Deleting ReplicationController affinity-clusterip-transition took: 1.655361ms
  Mar 14 06:44:41.391: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.251546ms
  E0314 06:44:41.998836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:42.999017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:43.999537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-5527" for this suite. @ 03/14/24 06:44:44.498
• [9.753 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 03/14/24 06:44:44.5
  Mar 14 06:44:44.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename svcaccounts @ 03/14/24 06:44:44.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:44:44.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:44:44.506
  Mar 14 06:44:44.512: INFO: created pod pod-service-account-defaultsa
  Mar 14 06:44:44.512: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Mar 14 06:44:44.514: INFO: created pod pod-service-account-mountsa
  Mar 14 06:44:44.514: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Mar 14 06:44:44.517: INFO: created pod pod-service-account-nomountsa
  Mar 14 06:44:44.517: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Mar 14 06:44:44.521: INFO: created pod pod-service-account-defaultsa-mountspec
  Mar 14 06:44:44.521: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Mar 14 06:44:44.524: INFO: created pod pod-service-account-mountsa-mountspec
  Mar 14 06:44:44.524: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Mar 14 06:44:44.529: INFO: created pod pod-service-account-nomountsa-mountspec
  Mar 14 06:44:44.529: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Mar 14 06:44:44.532: INFO: created pod pod-service-account-defaultsa-nomountspec
  Mar 14 06:44:44.532: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Mar 14 06:44:44.535: INFO: created pod pod-service-account-mountsa-nomountspec
  Mar 14 06:44:44.536: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Mar 14 06:44:44.540: INFO: created pod pod-service-account-nomountsa-nomountspec
  Mar 14 06:44:44.540: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Mar 14 06:44:44.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5650" for this suite. @ 03/14/24 06:44:44.544
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 03/14/24 06:44:44.547
  Mar 14 06:44:44.547: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 06:44:44.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:44:44.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:44:44.561
  Mar 14 06:44:44.563: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5396" for this suite. @ 03/14/24 06:44:44.565
• [0.022 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 03/14/24 06:44:44.569
  Mar 14 06:44:44.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-pred @ 03/14/24 06:44:44.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:44:44.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:44:44.578
  Mar 14 06:44:44.580: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Mar 14 06:44:44.583: INFO: Waiting for terminating namespaces to be deleted...
  Mar 14 06:44:44.584: INFO: 
  Logging pods the apiserver thinks is on node k8s-master01 before test
  Mar 14 06:44:44.586: INFO: calico-kube-controllers-658d97c59c-wdvtv from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container calico-kube-controllers ready: true, restart count 2
  Mar 14 06:44:44.586: INFO: calico-node-tq6x7 from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 06:44:44.586: INFO: coredns-6554b8b87f-hkp8t from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container coredns ready: true, restart count 2
  Mar 14 06:44:44.586: INFO: coredns-6554b8b87f-j45dr from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container coredns ready: true, restart count 2
  Mar 14 06:44:44.586: INFO: etcd-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container etcd ready: true, restart count 2
  Mar 14 06:44:44.586: INFO: kube-apiserver-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container kube-apiserver ready: true, restart count 2
  Mar 14 06:44:44.586: INFO: kube-controller-manager-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container kube-controller-manager ready: true, restart count 2
  Mar 14 06:44:44.586: INFO: kube-proxy-8p9f8 from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container kube-proxy ready: true, restart count 2
  Mar 14 06:44:44.586: INFO: kube-scheduler-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container kube-scheduler ready: true, restart count 2
  Mar 14 06:44:44.586: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-whzhf from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 06:44:44.586: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 06:44:44.586: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 14 06:44:44.586: INFO: 
  Logging pods the apiserver thinks is on node k8s-worker01 before test
  Mar 14 06:44:44.591: INFO: calico-node-6dkfv from kube-system started at 2024-03-14 05:49:28 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.591: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 06:44:44.591: INFO: kube-proxy-nn4d4 from kube-system started at 2024-03-14 05:49:28 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.591: INFO: 	Container kube-proxy ready: true, restart count 1
  Mar 14 06:44:44.591: INFO: sonobuoy-e2e-job-ba74beec76fb403d from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 06:44:44.591: INFO: 	Container e2e ready: true, restart count 0
  Mar 14 06:44:44.591: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 06:44:44.591: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-vnvzm from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 06:44:44.591: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 06:44:44.591: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 14 06:44:44.591: INFO: pod-service-account-defaultsa-mountspec from svcaccounts-5650 started at 2024-03-14 06:44:44 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.591: INFO: 	Container token-test ready: false, restart count 0
  Mar 14 06:44:44.591: INFO: pod-service-account-defaultsa-nomountspec from svcaccounts-5650 started at 2024-03-14 06:44:44 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.591: INFO: 	Container token-test ready: false, restart count 0
  Mar 14 06:44:44.591: INFO: pod-service-account-mountsa from svcaccounts-5650 started at 2024-03-14 06:44:44 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.591: INFO: 	Container token-test ready: false, restart count 0
  Mar 14 06:44:44.591: INFO: pod-service-account-mountsa-nomountspec from svcaccounts-5650 started at 2024-03-14 06:44:44 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.591: INFO: 	Container token-test ready: false, restart count 0
  Mar 14 06:44:44.591: INFO: 
  Logging pods the apiserver thinks is on node k8s-worker02 before test
  Mar 14 06:44:44.596: INFO: calico-node-dm8mw from kube-system started at 2024-03-14 05:49:27 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.596: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 06:44:44.596: INFO: kube-proxy-bw5s2 from kube-system started at 2024-03-14 05:49:27 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.596: INFO: 	Container kube-proxy ready: true, restart count 1
  Mar 14 06:44:44.596: INFO: sonobuoy from sonobuoy started at 2024-03-14 06:28:43 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.596: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Mar 14 06:44:44.596: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-hlfxv from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 06:44:44.596: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 06:44:44.596: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 14 06:44:44.596: INFO: pod-service-account-defaultsa from svcaccounts-5650 started at 2024-03-14 06:44:44 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.596: INFO: 	Container token-test ready: false, restart count 0
  Mar 14 06:44:44.596: INFO: pod-service-account-mountsa-mountspec from svcaccounts-5650 started at 2024-03-14 06:44:44 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.596: INFO: 	Container token-test ready: false, restart count 0
  Mar 14 06:44:44.596: INFO: pod-service-account-nomountsa from svcaccounts-5650 started at 2024-03-14 06:44:44 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.596: INFO: 	Container token-test ready: false, restart count 0
  Mar 14 06:44:44.596: INFO: pod-service-account-nomountsa-mountspec from svcaccounts-5650 started at 2024-03-14 06:44:44 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.596: INFO: 	Container token-test ready: false, restart count 0
  Mar 14 06:44:44.596: INFO: pod-service-account-nomountsa-nomountspec from svcaccounts-5650 started at 2024-03-14 06:44:44 +0000 UTC (1 container statuses recorded)
  Mar 14 06:44:44.596: INFO: 	Container token-test ready: false, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/14/24 06:44:44.596
  E0314 06:44:45.000306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:46.001057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/14/24 06:44:46.609
  STEP: Trying to apply a random label on the found node. @ 03/14/24 06:44:46.619
  STEP: verifying the node has the label kubernetes.io/e2e-dd35edd7-7d63-4c20-8682-ce5b6cdb08ec 95 @ 03/14/24 06:44:46.624
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 03/14/24 06:44:46.627
  E0314 06:44:47.001174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:48.001298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.132.14 on the node which pod4 resides and expect not scheduled @ 03/14/24 06:44:48.633
  E0314 06:44:49.001816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:50.001931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:51.002030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:52.002111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:53.002803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:54.002915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:55.002919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:56.003004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:57.003703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:58.003797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:44:59.004748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:00.004861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:01.005456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:02.005556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:03.006370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:04.006515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:05.007421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:06.007512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:07.008558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:08.008792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:09.009698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:10.009846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:11.010757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:12.010853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:13.011382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:14.011471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:15.011849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:16.011991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:17.012648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:18.012884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:19.013354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:20.013639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:21.014274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:22.014448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:23.015274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:24.015390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:25.015523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:26.015664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:27.016372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:28.016491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:29.016516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:30.016814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:31.017515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:32.017610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:33.018118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:34.018270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:35.019005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:36.019329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:37.019914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:38.020032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:39.020856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:40.021226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:41.021343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:42.021476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:43.021907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:44.022073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:45.022450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:46.022588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:47.023180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:48.023347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:49.023403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:50.023919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:51.024805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:52.024957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:53.025469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:54.026578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:55.026810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:56.026929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:57.027103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:58.027234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:45:59.027954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:00.028243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:01.028398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:02.029045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:03.029602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:04.029745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:05.030313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:06.030426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:07.031055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:08.031185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:09.032186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:10.032447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:11.032985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:12.033106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:13.033653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:14.033932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:15.034702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:16.034848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:17.035311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:18.035605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:19.036571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:20.036453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:21.037365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:22.037498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:23.038136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:24.038589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:25.039352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:26.039430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:27.040191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:28.040331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:29.041113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:30.041346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:31.041864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:32.041961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:33.042632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:34.042776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:35.043734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:36.044785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:37.044656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:38.045396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:39.046463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:40.046974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:41.047730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:42.047851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:43.048600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:44.048716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:45.049648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:46.049760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:47.050222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:48.050366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:49.051381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:50.051504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:51.052384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:52.053374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:53.053921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:54.054049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:55.054719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:56.055841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:57.055883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:58.055978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:46:59.056536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:00.056758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:01.057339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:02.057421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:03.058440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:04.058581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:05.058900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:06.059013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:07.059681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:08.059865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:09.060172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:10.060447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:11.061349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:12.061455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:13.062167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:14.062355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:15.062484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:16.062890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:17.063556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:18.063698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:19.063712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:20.064144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:21.065279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:22.065366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:23.065420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:24.065523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:25.066209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:26.066332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:27.067086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:28.067188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:29.067238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:30.067494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:31.068210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:32.068358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:33.068801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:34.069479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:35.070054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:36.070147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:37.071012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:38.071126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:39.072336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:40.072610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:41.072676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:42.072773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:43.073690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:44.073589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:45.074217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:46.074303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:47.075027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:48.075215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:49.075237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:50.075519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:51.076199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:52.076295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:53.077046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:54.077243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:55.077654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:56.077767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:57.078162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:58.078361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:47:59.079360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:00.079575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:01.079752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:02.080099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:03.080789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:04.080907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:05.081627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:06.081724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:07.082552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:08.082674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:09.083069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:10.083271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:11.083984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:12.084099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:13.084559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:14.084673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:15.085532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:16.085642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:17.086141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:18.086258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:19.086375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:20.086599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:21.086936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:22.087104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:23.087863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:24.087992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:25.088892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:26.089455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:27.090304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:28.090406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:29.091293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:30.091514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:31.091572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:32.091663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:33.092255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:34.092369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:35.092803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:36.092935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:37.092987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:38.093078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:39.094060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:40.094511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:41.094824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:42.094915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:43.095281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:44.095413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:45.096200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:46.096389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:47.097138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:48.097315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:49.097714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:50.097946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:51.098664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:52.099398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:53.100132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:54.100332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:55.101218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:56.101411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:57.102172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:58.102382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:48:59.102976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:00.103254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:01.104074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:02.104250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:03.104931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:04.105096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:05.105850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:06.106032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:07.107064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:08.107474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:09.107793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:10.107989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:11.108786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:12.109690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:13.110348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:14.110469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:15.111123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:16.111301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:17.111969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:18.112083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:19.112272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:20.112554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:21.113041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:22.113166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:23.113673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:24.113834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:25.114713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:26.114835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:27.115354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:28.115515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:29.115621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:30.115832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:31.116542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:32.116651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:33.117219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:34.118264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:35.119077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:36.119192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:37.119564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:38.119788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:39.119816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:40.120558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:41.121366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:42.121425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:43.121808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:44.121931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:45.122608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:46.122719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:47.123176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:48.123291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-dd35edd7-7d63-4c20-8682-ce5b6cdb08ec off the node k8s-worker01 @ 03/14/24 06:49:48.639
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-dd35edd7-7d63-4c20-8682-ce5b6cdb08ec @ 03/14/24 06:49:48.644
  Mar 14 06:49:48.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7505" for this suite. @ 03/14/24 06:49:48.649
• [304.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 03/14/24 06:49:48.652
  Mar 14 06:49:48.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 06:49:48.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:49:48.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:49:48.659
  STEP: creating a replication controller @ 03/14/24 06:49:48.66
  Mar 14 06:49:48.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 create -f -'
  Mar 14 06:49:48.807: INFO: stderr: ""
  Mar 14 06:49:48.807: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/14/24 06:49:48.807
  Mar 14 06:49:48.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 14 06:49:48.854: INFO: stderr: ""
  Mar 14 06:49:48.854: INFO: stdout: "update-demo-nautilus-7kpfv update-demo-nautilus-kzd8w "
  Mar 14 06:49:48.854: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 get pods update-demo-nautilus-7kpfv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 06:49:48.892: INFO: stderr: ""
  Mar 14 06:49:48.892: INFO: stdout: ""
  Mar 14 06:49:48.892: INFO: update-demo-nautilus-7kpfv is created but not running
  E0314 06:49:49.124340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:50.124564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:51.124657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:52.124741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:53.124828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:49:53.893: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 14 06:49:53.941: INFO: stderr: ""
  Mar 14 06:49:53.941: INFO: stdout: "update-demo-nautilus-7kpfv update-demo-nautilus-kzd8w "
  Mar 14 06:49:53.941: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 get pods update-demo-nautilus-7kpfv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 06:49:53.987: INFO: stderr: ""
  Mar 14 06:49:53.987: INFO: stdout: "true"
  Mar 14 06:49:53.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 get pods update-demo-nautilus-7kpfv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 14 06:49:54.026: INFO: stderr: ""
  Mar 14 06:49:54.026: INFO: stdout: "hub.oepkgs.net/nestos/nestos-test/sonobuoy/nautilus:1.7"
  Mar 14 06:49:54.026: INFO: validating pod update-demo-nautilus-7kpfv
  Mar 14 06:49:54.029: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 14 06:49:54.029: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 14 06:49:54.029: INFO: update-demo-nautilus-7kpfv is verified up and running
  Mar 14 06:49:54.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 get pods update-demo-nautilus-kzd8w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 06:49:54.065: INFO: stderr: ""
  Mar 14 06:49:54.065: INFO: stdout: "true"
  Mar 14 06:49:54.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 get pods update-demo-nautilus-kzd8w -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 14 06:49:54.107: INFO: stderr: ""
  Mar 14 06:49:54.107: INFO: stdout: "hub.oepkgs.net/nestos/nestos-test/sonobuoy/nautilus:1.7"
  Mar 14 06:49:54.107: INFO: validating pod update-demo-nautilus-kzd8w
  Mar 14 06:49:54.109: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 14 06:49:54.109: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 14 06:49:54.109: INFO: update-demo-nautilus-kzd8w is verified up and running
  STEP: using delete to clean up resources @ 03/14/24 06:49:54.109
  Mar 14 06:49:54.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 delete --grace-period=0 --force -f -'
  E0314 06:49:54.125122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:49:54.150: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 14 06:49:54.150: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Mar 14 06:49:54.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 get rc,svc -l name=update-demo --no-headers'
  Mar 14 06:49:54.198: INFO: stderr: "No resources found in kubectl-4797 namespace.\n"
  Mar 14 06:49:54.198: INFO: stdout: ""
  Mar 14 06:49:54.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4797 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Mar 14 06:49:54.237: INFO: stderr: ""
  Mar 14 06:49:54.237: INFO: stdout: ""
  Mar 14 06:49:54.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4797" for this suite. @ 03/14/24 06:49:54.239
• [5.589 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 03/14/24 06:49:54.241
  Mar 14 06:49:54.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename dns @ 03/14/24 06:49:54.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:49:54.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:49:54.248
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 03/14/24 06:49:54.249
  Mar 14 06:49:54.252: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-1747  391edb62-0c35-4878-9f86-16e2eb34177d 12444 0 2024-03-14 06:49:54 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-03-14 06:49:54 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-p6x26,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-p6x26,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0314 06:49:55.125867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:56.126018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 03/14/24 06:49:56.256
  Mar 14 06:49:56.256: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-1747 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 06:49:56.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 06:49:56.257: INFO: ExecWithOptions: Clientset creation
  Mar 14 06:49:56.257: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-1747/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 03/14/24 06:49:56.306
  Mar 14 06:49:56.306: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-1747 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 06:49:56.306: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 06:49:56.307: INFO: ExecWithOptions: Clientset creation
  Mar 14 06:49:56.307: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-1747/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Mar 14 06:49:56.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 06:49:56.359: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-1747" for this suite. @ 03/14/24 06:49:56.363
• [2.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 03/14/24 06:49:56.365
  Mar 14 06:49:56.365: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-preemption @ 03/14/24 06:49:56.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:49:56.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:49:56.372
  Mar 14 06:49:56.377: INFO: Waiting up to 1m0s for all nodes to be ready
  E0314 06:49:57.126414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:58.126699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:49:59.126799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:00.127556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:01.128358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:02.128421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:03.128965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:04.129062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:05.129417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:06.129508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:07.129530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:08.129612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:09.130200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:10.130505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:11.131080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:12.131213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:13.132063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:14.132167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:15.133094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:16.133216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:17.134198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:18.134311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:19.135382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:20.135677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:21.136118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:22.136208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:23.137246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:24.137363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:25.137388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:26.137589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:27.138074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:28.138187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:29.138403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:30.138703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:31.139461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:32.139537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:33.140081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:34.140192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:35.140282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:36.140407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:37.141130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:38.141252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:39.141473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:40.141691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:41.142207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:42.142402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:43.142489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:44.142582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:45.143398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:46.143536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:47.143601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:48.143811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:49.144098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:50.144457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:51.144828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:52.144919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:53.145402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:54.145532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:55.146437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:56.146577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:50:56.387: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 03/14/24 06:50:56.388
  Mar 14 06:50:56.388: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-preemption-path @ 03/14/24 06:50:56.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:50:56.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:50:56.396
  Mar 14 06:50:56.402: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Mar 14 06:50:56.403: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Mar 14 06:50:56.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 06:50:56.412: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5548" for this suite. @ 03/14/24 06:50:56.426
  STEP: Destroying namespace "sched-preemption-4853" for this suite. @ 03/14/24 06:50:56.428
• [60.064 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 03/14/24 06:50:56.43
  Mar 14 06:50:56.430: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/14/24 06:50:56.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:50:56.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:50:56.436
  Mar 14 06:50:56.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 06:50:57.147081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/14/24 06:50:57.662
  Mar 14 06:50:57.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-5677 --namespace=crd-publish-openapi-5677 create -f -'
  E0314 06:50:58.147609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:50:59.147738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:50:59.960: INFO: stderr: ""
  Mar 14 06:50:59.960: INFO: stdout: "e2e-test-crd-publish-openapi-1834-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Mar 14 06:50:59.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-5677 --namespace=crd-publish-openapi-5677 delete e2e-test-crd-publish-openapi-1834-crds test-cr'
  Mar 14 06:51:00.001: INFO: stderr: ""
  Mar 14 06:51:00.001: INFO: stdout: "e2e-test-crd-publish-openapi-1834-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Mar 14 06:51:00.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-5677 --namespace=crd-publish-openapi-5677 apply -f -'
  Mar 14 06:51:00.093: INFO: stderr: ""
  Mar 14 06:51:00.093: INFO: stdout: "e2e-test-crd-publish-openapi-1834-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Mar 14 06:51:00.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-5677 --namespace=crd-publish-openapi-5677 delete e2e-test-crd-publish-openapi-1834-crds test-cr'
  Mar 14 06:51:00.138: INFO: stderr: ""
  Mar 14 06:51:00.138: INFO: stdout: "e2e-test-crd-publish-openapi-1834-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 03/14/24 06:51:00.138
  Mar 14 06:51:00.138: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-5677 explain e2e-test-crd-publish-openapi-1834-crds'
  E0314 06:51:00.148402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:00.220: INFO: stderr: ""
  Mar 14 06:51:00.220: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1834-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0314 06:51:01.149185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:01.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5677" for this suite. @ 03/14/24 06:51:01.44
• [5.013 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 03/14/24 06:51:01.442
  Mar 14 06:51:01.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 06:51:01.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:01.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:01.449
  STEP: creating the pod @ 03/14/24 06:51:01.45
  STEP: submitting the pod to kubernetes @ 03/14/24 06:51:01.451
  W0314 06:51:01.454441      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0314 06:51:02.149300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:03.149405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 03/14/24 06:51:03.459
  STEP: updating the pod @ 03/14/24 06:51:03.46
  Mar 14 06:51:03.965: INFO: Successfully updated pod "pod-update-activedeadlineseconds-66cd642e-b8d8-4f3d-9fbf-7d3ec388ff7f"
  E0314 06:51:04.150073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:05.150639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:06.151017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:07.151364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:07.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5066" for this suite. @ 03/14/24 06:51:07.973
• [6.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 03/14/24 06:51:07.975
  Mar 14 06:51:07.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 06:51:07.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:07.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:07.983
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 06:51:07.983
  E0314 06:51:08.151784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:09.151999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:10.152472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:11.152605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:51:11.992
  Mar 14 06:51:11.993: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-a2d9e9e3-f66a-48ab-ac9a-ad57437aec2c container client-container: <nil>
  STEP: delete the pod @ 03/14/24 06:51:12.003
  Mar 14 06:51:12.007: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7303" for this suite. @ 03/14/24 06:51:12.009
• [4.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 03/14/24 06:51:12.013
  Mar 14 06:51:12.013: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 06:51:12.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:12.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:12.019
  STEP: creating a Pod with a static label @ 03/14/24 06:51:12.022
  STEP: watching for Pod to be ready @ 03/14/24 06:51:12.025
  Mar 14 06:51:12.026: INFO: observed Pod pod-test in namespace pods-8817 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Mar 14 06:51:12.027: INFO: observed Pod pod-test in namespace pods-8817 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC  }]
  Mar 14 06:51:12.032: INFO: observed Pod pod-test in namespace pods-8817 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC  }]
  E0314 06:51:12.152944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:12.428: INFO: observed Pod pod-test in namespace pods-8817 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC  }]
  Mar 14 06:51:13.106: INFO: Found Pod pod-test in namespace pods-8817 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:13 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:13 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-03-14 06:51:12 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 03/14/24 06:51:13.109
  STEP: getting the Pod and ensuring that it's patched @ 03/14/24 06:51:13.113
  STEP: replacing the Pod's status Ready condition to False @ 03/14/24 06:51:13.114
  STEP: check the Pod again to ensure its Ready conditions are False @ 03/14/24 06:51:13.12
  STEP: deleting the Pod via a Collection with a LabelSelector @ 03/14/24 06:51:13.12
  STEP: watching for the Pod to be deleted @ 03/14/24 06:51:13.123
  Mar 14 06:51:13.124: INFO: observed event type MODIFIED
  E0314 06:51:13.153687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:14.154109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:15.108: INFO: observed event type MODIFIED
  E0314 06:51:15.154175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:15.268: INFO: observed event type MODIFIED
  Mar 14 06:51:15.325: INFO: observed event type MODIFIED
  Mar 14 06:51:16.109: INFO: observed event type MODIFIED
  Mar 14 06:51:16.111: INFO: observed event type MODIFIED
  Mar 14 06:51:16.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8817" for this suite. @ 03/14/24 06:51:16.115
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 03/14/24 06:51:16.118
  Mar 14 06:51:16.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename namespaces @ 03/14/24 06:51:16.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:16.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:16.124
  STEP: Creating namespace "e2e-ns-c27sp" @ 03/14/24 06:51:16.125
  Mar 14 06:51:16.129: INFO: Namespace "e2e-ns-c27sp-5829" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-c27sp-5829" @ 03/14/24 06:51:16.129
  Mar 14 06:51:16.132: INFO: Namespace "e2e-ns-c27sp-5829" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-c27sp-5829" @ 03/14/24 06:51:16.132
  Mar 14 06:51:16.135: INFO: Namespace "e2e-ns-c27sp-5829" has []v1.FinalizerName{"kubernetes"}
  Mar 14 06:51:16.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7159" for this suite. @ 03/14/24 06:51:16.136
  STEP: Destroying namespace "e2e-ns-c27sp-5829" for this suite. @ 03/14/24 06:51:16.138
• [0.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 03/14/24 06:51:16.141
  Mar 14 06:51:16.141: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename var-expansion @ 03/14/24 06:51:16.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:16.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:16.146
  STEP: Creating a pod to test substitution in container's args @ 03/14/24 06:51:16.147
  E0314 06:51:16.154606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:17.155491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:18.155974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:19.156098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:51:20.154
  Mar 14 06:51:20.155: INFO: Trying to get logs from node k8s-worker02 pod var-expansion-d1606efd-56e3-413f-85d6-f7fd2b306c1a container dapi-container: <nil>
  E0314 06:51:20.156622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 03/14/24 06:51:20.157
  Mar 14 06:51:20.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7447" for this suite. @ 03/14/24 06:51:20.163
• [4.025 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 03/14/24 06:51:20.166
  Mar 14 06:51:20.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 06:51:20.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:20.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:20.172
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 06:51:20.173
  E0314 06:51:21.157485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:22.158429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:23.158642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:24.158749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:51:24.182
  Mar 14 06:51:24.183: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-fcb9b79a-22e2-4a73-8451-be49634d0167 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 06:51:24.185
  Mar 14 06:51:24.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7812" for this suite. @ 03/14/24 06:51:24.192
• [4.028 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 03/14/24 06:51:24.194
  Mar 14 06:51:24.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename events @ 03/14/24 06:51:24.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:24.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:24.201
  STEP: creating a test event @ 03/14/24 06:51:24.202
  STEP: listing all events in all namespaces @ 03/14/24 06:51:24.203
  STEP: patching the test event @ 03/14/24 06:51:24.206
  STEP: fetching the test event @ 03/14/24 06:51:24.208
  STEP: updating the test event @ 03/14/24 06:51:24.209
  STEP: getting the test event @ 03/14/24 06:51:24.211
  STEP: deleting the test event @ 03/14/24 06:51:24.212
  STEP: listing all events in all namespaces @ 03/14/24 06:51:24.214
  Mar 14 06:51:24.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4485" for this suite. @ 03/14/24 06:51:24.218
• [0.026 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 03/14/24 06:51:24.22
  Mar 14 06:51:24.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 06:51:24.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:24.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:24.231
  STEP: Creating configMap configmap-1381/configmap-test-ccf3248d-3644-4f81-a43a-dfcc1084282b @ 03/14/24 06:51:24.232
  STEP: Creating a pod to test consume configMaps @ 03/14/24 06:51:24.233
  E0314 06:51:25.159460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:26.159646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:51:26.239
  Mar 14 06:51:26.240: INFO: Trying to get logs from node k8s-worker02 pod pod-configmaps-68a79d14-1b4b-4aa0-ac73-69ba11416864 container env-test: <nil>
  STEP: delete the pod @ 03/14/24 06:51:26.243
  Mar 14 06:51:26.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1381" for this suite. @ 03/14/24 06:51:26.248
• [2.029 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 03/14/24 06:51:26.252
  Mar 14 06:51:26.252: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename deployment @ 03/14/24 06:51:26.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:26.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:26.258
  Mar 14 06:51:26.259: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Mar 14 06:51:26.262: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0314 06:51:27.160507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:28.160626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:29.160735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:30.160969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:31.161090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:31.264: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/14/24 06:51:31.264
  Mar 14 06:51:31.264: INFO: Creating deployment "test-rolling-update-deployment"
  Mar 14 06:51:31.266: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Mar 14 06:51:31.268: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0314 06:51:32.161148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:33.161268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:33.270: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Mar 14 06:51:33.271: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Mar 14 06:51:33.274: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2223",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6cbeb240-2cd7-4d82-8544-e47b61e8bf3e",
      ResourceVersion: (string) (len=5) "12981",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-84b6cfb759\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 14 06:51:33.275: INFO: New ReplicaSet "test-rolling-update-deployment-84b6cfb759" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-84b6cfb759",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2223",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c8c04ac-54f7-4010-be6a-1b5361c8ca22",
      ResourceVersion: (string) (len=5) "12971",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "84b6cfb759",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6cbeb240-2cd7-4d82-8544-e47b61e8bf3e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 63 62 65 62 32  34 30 2d 32 63 64 37 2d  |\"6cbeb240-2cd7-|
              00000120  34 64 38 32 2d 38 35 34  34 2d 65 34 37 62 36 31  |4d82-8544-e47b61|
              00000130  65 38 62 66 33 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e8bf3e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "84b6cfb759"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "84b6cfb759"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 06:51:33.285: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Mar 14 06:51:33.285: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2223",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57a66a8f-4a47-4caa-9ce3-24c4ce6e517a",
      ResourceVersion: (string) (len=5) "12980",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995886,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "6cbeb240-2cd7-4d82-8544-e47b61e8bf3e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995886,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 36 63 62 65 62 32 34  |"uid\":\"6cbeb24|
              000000b0  30 2d 32 63 64 37 2d 34  64 38 32 2d 38 35 34 34  |0-2cd7-4d82-8544|
              000000c0  2d 65 34 37 62 36 31 65  38 62 66 33 65 5c 22 7d  |-e47b61e8bf3e\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 06:51:33.287: INFO: Pod "test-rolling-update-deployment-84b6cfb759-gcgpn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-84b6cfb759-gcgpn",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-84b6cfb759-",
      Namespace: (string) (len=15) "deployment-2223",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3a0fdeb-9e83-4974-892d-27dc2b4f6645",
      ResourceVersion: (string) (len=5) "12970",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "84b6cfb759",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4a4a7498f016b5904a0eba41091f21c71fa836b41b63be66f37cb3573822c77f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.219/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.219/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-84b6cfb759",
          UID: (types.UID) (len=36) "2c8c04ac-54f7-4010-be6a-1b5361c8ca22",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 63  38 63 30 34 61 63 2d 35  |d\":\"2c8c04ac-5|
              00000090  34 66 37 2d 34 30 31 30  2d 62 65 36 61 2d 31 62  |4f7-4010-be6a-1b|
              000000a0  35 33 36 31 63 38 63 61  32 32 5c 22 7d 22 3a 7b  |5361c8ca22\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 31 39 5c 22 7d  |10.244.69.219\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kv7db",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kv7db",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845995891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.219",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.219"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845995891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845995891,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
          ImageID: (string) (len=122) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost@sha256:8f07c07228b54f5d644c14241ad3e483b999c5d3a78f7580a6252c8ab42f2b66",
          ContainerID: (string) (len=72) "cri-o://f020a2364db9113620b969b97d4676da5c3a6cb3dd263316e4067b24031e9d57",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 06:51:33.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2223" for this suite. @ 03/14/24 06:51:33.289
• [7.039 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 03/14/24 06:51:33.291
  Mar 14 06:51:33.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/14/24 06:51:33.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:33.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:33.298
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 03/14/24 06:51:33.299
  Mar 14 06:51:33.299: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 06:51:34.161361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:34.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 06:51:35.161402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:36.162096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:37.162384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:38.162833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:39.163603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:51:39.363: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2992" for this suite. @ 03/14/24 06:51:39.368
• [6.079 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 03/14/24 06:51:39.37
  Mar 14 06:51:39.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename var-expansion @ 03/14/24 06:51:39.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:51:39.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:51:39.377
  STEP: creating the pod @ 03/14/24 06:51:39.379
  STEP: waiting for pod running @ 03/14/24 06:51:39.382
  E0314 06:51:40.163999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:41.164085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 03/14/24 06:51:41.386
  Mar 14 06:51:41.387: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7900 PodName:var-expansion-635c6e4e-05d7-4f24-a7e5-597a3af4e1ac ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 06:51:41.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 06:51:41.387: INFO: ExecWithOptions: Clientset creation
  Mar 14 06:51:41.387: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-7900/pods/var-expansion-635c6e4e-05d7-4f24-a7e5-597a3af4e1ac/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 03/14/24 06:51:41.431
  Mar 14 06:51:41.433: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7900 PodName:var-expansion-635c6e4e-05d7-4f24-a7e5-597a3af4e1ac ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 06:51:41.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 06:51:41.433: INFO: ExecWithOptions: Clientset creation
  Mar 14 06:51:41.433: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-7900/pods/var-expansion-635c6e4e-05d7-4f24-a7e5-597a3af4e1ac/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 03/14/24 06:51:41.482
  Mar 14 06:51:41.989: INFO: Successfully updated pod "var-expansion-635c6e4e-05d7-4f24-a7e5-597a3af4e1ac"
  STEP: waiting for annotated pod running @ 03/14/24 06:51:41.989
  STEP: deleting the pod gracefully @ 03/14/24 06:51:41.991
  Mar 14 06:51:41.991: INFO: Deleting pod "var-expansion-635c6e4e-05d7-4f24-a7e5-597a3af4e1ac" in namespace "var-expansion-7900"
  Mar 14 06:51:41.995: INFO: Wait up to 5m0s for pod "var-expansion-635c6e4e-05d7-4f24-a7e5-597a3af4e1ac" to be fully deleted
  E0314 06:51:42.164842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:43.165081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:44.165404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:45.165789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:46.166445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:47.166573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:48.167534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:49.167675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:50.168069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:51.168205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:52.168246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:53.168366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:54.169132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:55.169471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:56.169982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:57.170095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:58.170131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:51:59.170276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:00.171027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:01.171136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:02.171486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:03.171601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:04.171998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:05.172992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:06.173568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:07.173678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:08.173765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:09.173934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:10.174457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:11.174600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:12.175003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:13.175140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:14.175749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:15.176129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:16.027: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7900" for this suite. @ 03/14/24 06:52:16.028
• [36.660 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 03/14/24 06:52:16.031
  Mar 14 06:52:16.031: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename security-context @ 03/14/24 06:52:16.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:16.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:16.038
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 03/14/24 06:52:16.039
  E0314 06:52:16.176171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:17.176466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:18.177055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:19.177206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:52:20.047
  Mar 14 06:52:20.048: INFO: Trying to get logs from node k8s-worker02 pod security-context-71bef6db-2948-4fc9-8fad-719fcafdf174 container test-container: <nil>
  STEP: delete the pod @ 03/14/24 06:52:20.05
  Mar 14 06:52:20.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-889" for this suite. @ 03/14/24 06:52:20.056
• [4.027 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 03/14/24 06:52:20.058
  Mar 14 06:52:20.058: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sysctl @ 03/14/24 06:52:20.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:20.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:20.064
  STEP: Creating a pod with one valid and two invalid sysctls @ 03/14/24 06:52:20.065
  Mar 14 06:52:20.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1421" for this suite. @ 03/14/24 06:52:20.068
• [0.012 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 03/14/24 06:52:20.07
  Mar 14 06:52:20.070: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename gc @ 03/14/24 06:52:20.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:20.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:20.077
  Mar 14 06:52:20.089: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ee062d6c-c462-4e9d-9d2a-6f184b3a8802", Controller:(*bool)(0xc00125c376), BlockOwnerDeletion:(*bool)(0xc00125c377)}}
  Mar 14 06:52:20.092: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"415f2c02-1815-416f-914a-c42fc8c47460", Controller:(*bool)(0xc00125c61e), BlockOwnerDeletion:(*bool)(0xc00125c61f)}}
  Mar 14 06:52:20.097: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"04f0f9ac-0365-4a81-863a-d1dfa6aaeecf", Controller:(*bool)(0xc00125c886), BlockOwnerDeletion:(*bool)(0xc00125c887)}}
  E0314 06:52:20.178029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:21.178151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:22.178242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:23.178460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:24.178561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:25.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3378" for this suite. @ 03/14/24 06:52:25.104
• [5.036 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 03/14/24 06:52:25.106
  Mar 14 06:52:25.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 06:52:25.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:25.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:25.113
  STEP: Creating a pod to test downward api env vars @ 03/14/24 06:52:25.115
  E0314 06:52:25.178760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:26.179653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:27.180274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:28.180426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:52:29.124
  Mar 14 06:52:29.125: INFO: Trying to get logs from node k8s-worker02 pod downward-api-df2e1bb7-4422-4b7f-a3ed-cc1a9a1a6e3c container dapi-container: <nil>
  STEP: delete the pod @ 03/14/24 06:52:29.128
  Mar 14 06:52:29.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1109" for this suite. @ 03/14/24 06:52:29.134
• [4.030 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 03/14/24 06:52:29.136
  Mar 14 06:52:29.136: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replication-controller @ 03/14/24 06:52:29.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:29.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:29.143
  Mar 14 06:52:29.144: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0314 06:52:29.181072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 03/14/24 06:52:30.149
  STEP: Checking rc "condition-test" has the desired failure condition set @ 03/14/24 06:52:30.153
  E0314 06:52:30.181676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 03/14/24 06:52:31.157
  Mar 14 06:52:31.160: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 03/14/24 06:52:31.16
  E0314 06:52:31.181903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:32.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4" for this suite. @ 03/14/24 06:52:32.166
• [3.033 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 03/14/24 06:52:32.17
  Mar 14 06:52:32.170: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 06:52:32.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:32.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:32.178
  Mar 14 06:52:32.179: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: creating the pod @ 03/14/24 06:52:32.179
  STEP: submitting the pod to kubernetes @ 03/14/24 06:52:32.18
  E0314 06:52:32.182745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:33.183080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:34.183269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:34.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4233" for this suite. @ 03/14/24 06:52:34.195
• [2.027 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 03/14/24 06:52:34.197
  Mar 14 06:52:34.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 06:52:34.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:34.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:34.206
  STEP: creating Agnhost RC @ 03/14/24 06:52:34.207
  Mar 14 06:52:34.207: INFO: namespace kubectl-6537
  Mar 14 06:52:34.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-6537 create -f -'
  Mar 14 06:52:34.529: INFO: stderr: ""
  Mar 14 06:52:34.529: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/14/24 06:52:34.529
  E0314 06:52:35.183586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:35.531: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 14 06:52:35.531: INFO: Found 1 / 1
  Mar 14 06:52:35.531: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Mar 14 06:52:35.532: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 14 06:52:35.532: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Mar 14 06:52:35.532: INFO: wait on agnhost-primary startup in kubectl-6537 
  Mar 14 06:52:35.532: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-6537 logs agnhost-primary-j4wgx agnhost-primary'
  Mar 14 06:52:35.576: INFO: stderr: ""
  Mar 14 06:52:35.576: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 03/14/24 06:52:35.576
  Mar 14 06:52:35.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-6537 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Mar 14 06:52:35.620: INFO: stderr: ""
  Mar 14 06:52:35.620: INFO: stdout: "service/rm2 exposed\n"
  Mar 14 06:52:35.622: INFO: Service rm2 in namespace kubectl-6537 found.
  E0314 06:52:36.183682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:37.185498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 03/14/24 06:52:37.625
  Mar 14 06:52:37.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-6537 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Mar 14 06:52:37.671: INFO: stderr: ""
  Mar 14 06:52:37.671: INFO: stdout: "service/rm3 exposed\n"
  Mar 14 06:52:37.672: INFO: Service rm3 in namespace kubectl-6537 found.
  E0314 06:52:38.186014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:39.186179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:39.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6537" for this suite. @ 03/14/24 06:52:39.677
• [5.481 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 03/14/24 06:52:39.679
  Mar 14 06:52:39.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename svc-latency @ 03/14/24 06:52:39.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:39.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:39.686
  Mar 14 06:52:39.687: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9877 @ 03/14/24 06:52:39.688
  I0314 06:52:39.690144      21 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9877, replica count: 1
  E0314 06:52:40.186490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 06:52:40.741499      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 14 06:52:40.845: INFO: Created: latency-svc-sv6l7
  Mar 14 06:52:40.847: INFO: Got endpoints: latency-svc-sv6l7 [5.5037ms]
  Mar 14 06:52:40.852: INFO: Created: latency-svc-dcv8d
  Mar 14 06:52:40.854: INFO: Got endpoints: latency-svc-dcv8d [6.714147ms]
  Mar 14 06:52:40.856: INFO: Created: latency-svc-552rp
  Mar 14 06:52:40.857: INFO: Got endpoints: latency-svc-552rp [9.618032ms]
  Mar 14 06:52:40.858: INFO: Created: latency-svc-tdxxk
  Mar 14 06:52:40.861: INFO: Created: latency-svc-487p7
  Mar 14 06:52:40.862: INFO: Got endpoints: latency-svc-tdxxk [14.764396ms]
  Mar 14 06:52:40.865: INFO: Got endpoints: latency-svc-487p7 [17.205625ms]
  Mar 14 06:52:40.868: INFO: Created: latency-svc-djjrf
  Mar 14 06:52:40.869: INFO: Got endpoints: latency-svc-djjrf [21.537666ms]
  Mar 14 06:52:40.870: INFO: Created: latency-svc-94w7v
  Mar 14 06:52:40.874: INFO: Got endpoints: latency-svc-94w7v [26.217797ms]
  Mar 14 06:52:40.875: INFO: Created: latency-svc-j8f6m
  Mar 14 06:52:40.877: INFO: Got endpoints: latency-svc-j8f6m [29.084844ms]
  Mar 14 06:52:40.878: INFO: Created: latency-svc-qvwjx
  Mar 14 06:52:40.881: INFO: Got endpoints: latency-svc-qvwjx [32.878355ms]
  Mar 14 06:52:40.882: INFO: Created: latency-svc-7bmcf
  Mar 14 06:52:40.884: INFO: Got endpoints: latency-svc-7bmcf [35.831553ms]
  Mar 14 06:52:40.885: INFO: Created: latency-svc-8h9b7
  Mar 14 06:52:40.887: INFO: Got endpoints: latency-svc-8h9b7 [39.105963ms]
  Mar 14 06:52:40.888: INFO: Created: latency-svc-62vxw
  Mar 14 06:52:40.889: INFO: Got endpoints: latency-svc-62vxw [41.248455ms]
  Mar 14 06:52:40.891: INFO: Created: latency-svc-r89gx
  Mar 14 06:52:40.895: INFO: Created: latency-svc-2bg4b
  Mar 14 06:52:40.895: INFO: Got endpoints: latency-svc-r89gx [47.694758ms]
  Mar 14 06:52:40.897: INFO: Got endpoints: latency-svc-2bg4b [48.81564ms]
  Mar 14 06:52:40.899: INFO: Created: latency-svc-hl2tm
  Mar 14 06:52:40.902: INFO: Got endpoints: latency-svc-hl2tm [53.889705ms]
  Mar 14 06:52:40.902: INFO: Created: latency-svc-rvf4t
  Mar 14 06:52:40.905: INFO: Got endpoints: latency-svc-rvf4t [56.674361ms]
  Mar 14 06:52:40.906: INFO: Created: latency-svc-x5l82
  Mar 14 06:52:40.907: INFO: Created: latency-svc-drvcw
  Mar 14 06:52:40.910: INFO: Got endpoints: latency-svc-drvcw [52.491814ms]
  Mar 14 06:52:40.910: INFO: Got endpoints: latency-svc-x5l82 [55.621776ms]
  Mar 14 06:52:40.911: INFO: Created: latency-svc-bmm2m
  Mar 14 06:52:40.913: INFO: Got endpoints: latency-svc-bmm2m [50.61842ms]
  Mar 14 06:52:40.914: INFO: Created: latency-svc-546dr
  Mar 14 06:52:40.916: INFO: Got endpoints: latency-svc-546dr [50.988534ms]
  Mar 14 06:52:40.917: INFO: Created: latency-svc-nc6kx
  Mar 14 06:52:40.919: INFO: Got endpoints: latency-svc-nc6kx [50.018041ms]
  Mar 14 06:52:40.921: INFO: Created: latency-svc-xqdnk
  Mar 14 06:52:40.924: INFO: Got endpoints: latency-svc-xqdnk [49.644428ms]
  Mar 14 06:52:40.925: INFO: Created: latency-svc-nj9ln
  Mar 14 06:52:40.926: INFO: Got endpoints: latency-svc-nj9ln [48.699544ms]
  Mar 14 06:52:40.927: INFO: Created: latency-svc-c4mpp
  Mar 14 06:52:40.930: INFO: Got endpoints: latency-svc-c4mpp [48.803791ms]
  Mar 14 06:52:40.931: INFO: Created: latency-svc-ww7sk
  Mar 14 06:52:40.933: INFO: Got endpoints: latency-svc-ww7sk [48.849527ms]
  Mar 14 06:52:40.933: INFO: Created: latency-svc-fg6nq
  Mar 14 06:52:40.935: INFO: Got endpoints: latency-svc-fg6nq [48.221324ms]
  Mar 14 06:52:40.936: INFO: Created: latency-svc-z6bk8
  Mar 14 06:52:40.938: INFO: Got endpoints: latency-svc-z6bk8 [48.495995ms]
  Mar 14 06:52:40.939: INFO: Created: latency-svc-t6wv6
  Mar 14 06:52:40.941: INFO: Created: latency-svc-8z64n
  Mar 14 06:52:40.941: INFO: Got endpoints: latency-svc-t6wv6 [45.523719ms]
  Mar 14 06:52:40.944: INFO: Got endpoints: latency-svc-8z64n [47.036119ms]
  Mar 14 06:52:40.945: INFO: Created: latency-svc-xlr2k
  Mar 14 06:52:40.947: INFO: Got endpoints: latency-svc-xlr2k [45.114765ms]
  Mar 14 06:52:40.948: INFO: Created: latency-svc-mdrft
  Mar 14 06:52:40.953: INFO: Created: latency-svc-sdm2g
  Mar 14 06:52:40.953: INFO: Got endpoints: latency-svc-mdrft [48.196026ms]
  Mar 14 06:52:40.956: INFO: Got endpoints: latency-svc-sdm2g [45.838092ms]
  Mar 14 06:52:40.956: INFO: Created: latency-svc-9p7nf
  Mar 14 06:52:40.958: INFO: Created: latency-svc-r7hhr
  Mar 14 06:52:40.960: INFO: Created: latency-svc-rpbk6
  Mar 14 06:52:40.963: INFO: Created: latency-svc-rxnn6
  Mar 14 06:52:40.964: INFO: Created: latency-svc-btjps
  Mar 14 06:52:40.966: INFO: Created: latency-svc-g2qmd
  Mar 14 06:52:40.968: INFO: Created: latency-svc-5p287
  Mar 14 06:52:40.969: INFO: Created: latency-svc-vhdbm
  Mar 14 06:52:40.971: INFO: Created: latency-svc-g8l7s
  Mar 14 06:52:40.972: INFO: Created: latency-svc-f8fnd
  Mar 14 06:52:40.974: INFO: Created: latency-svc-hmdnq
  Mar 14 06:52:40.976: INFO: Created: latency-svc-7hkxj
  Mar 14 06:52:40.978: INFO: Created: latency-svc-fgtvs
  Mar 14 06:52:40.980: INFO: Created: latency-svc-b74lc
  Mar 14 06:52:40.982: INFO: Created: latency-svc-rhzr7
  Mar 14 06:52:40.998: INFO: Got endpoints: latency-svc-9p7nf [87.691717ms]
  Mar 14 06:52:41.007: INFO: Created: latency-svc-n5jrv
  Mar 14 06:52:41.048: INFO: Got endpoints: latency-svc-r7hhr [135.239821ms]
  Mar 14 06:52:41.052: INFO: Created: latency-svc-6c2bb
  Mar 14 06:52:41.097: INFO: Got endpoints: latency-svc-rpbk6 [181.275123ms]
  Mar 14 06:52:41.101: INFO: Created: latency-svc-fb6k2
  Mar 14 06:52:41.147: INFO: Got endpoints: latency-svc-rxnn6 [227.619758ms]
  Mar 14 06:52:41.150: INFO: Created: latency-svc-t79mp
  E0314 06:52:41.186925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:41.197: INFO: Got endpoints: latency-svc-btjps [273.228318ms]
  Mar 14 06:52:41.200: INFO: Created: latency-svc-8drj6
  Mar 14 06:52:41.248: INFO: Got endpoints: latency-svc-g2qmd [322.6801ms]
  Mar 14 06:52:41.251: INFO: Created: latency-svc-hsk78
  Mar 14 06:52:41.298: INFO: Got endpoints: latency-svc-5p287 [368.195846ms]
  Mar 14 06:52:41.301: INFO: Created: latency-svc-vkdtr
  Mar 14 06:52:41.348: INFO: Got endpoints: latency-svc-vhdbm [415.451633ms]
  Mar 14 06:52:41.352: INFO: Created: latency-svc-b27p5
  Mar 14 06:52:41.398: INFO: Got endpoints: latency-svc-g8l7s [462.308214ms]
  Mar 14 06:52:41.401: INFO: Created: latency-svc-kpw6n
  Mar 14 06:52:41.447: INFO: Got endpoints: latency-svc-f8fnd [509.021472ms]
  Mar 14 06:52:41.450: INFO: Created: latency-svc-qtmbb
  Mar 14 06:52:41.497: INFO: Got endpoints: latency-svc-hmdnq [556.0529ms]
  Mar 14 06:52:41.501: INFO: Created: latency-svc-dnng4
  Mar 14 06:52:41.547: INFO: Got endpoints: latency-svc-7hkxj [603.419746ms]
  Mar 14 06:52:41.550: INFO: Created: latency-svc-kmcrf
  Mar 14 06:52:41.598: INFO: Got endpoints: latency-svc-fgtvs [650.584281ms]
  Mar 14 06:52:41.601: INFO: Created: latency-svc-v4dk8
  Mar 14 06:52:41.648: INFO: Got endpoints: latency-svc-b74lc [695.175854ms]
  Mar 14 06:52:41.651: INFO: Created: latency-svc-8lfl9
  Mar 14 06:52:41.698: INFO: Got endpoints: latency-svc-rhzr7 [742.15416ms]
  Mar 14 06:52:41.701: INFO: Created: latency-svc-qxhtr
  Mar 14 06:52:41.749: INFO: Got endpoints: latency-svc-n5jrv [751.235871ms]
  Mar 14 06:52:41.753: INFO: Created: latency-svc-wg6jh
  Mar 14 06:52:41.798: INFO: Got endpoints: latency-svc-6c2bb [749.810611ms]
  Mar 14 06:52:41.801: INFO: Created: latency-svc-jg4th
  Mar 14 06:52:41.848: INFO: Got endpoints: latency-svc-fb6k2 [750.982565ms]
  Mar 14 06:52:41.852: INFO: Created: latency-svc-rvmnc
  Mar 14 06:52:41.897: INFO: Got endpoints: latency-svc-t79mp [749.871946ms]
  Mar 14 06:52:41.901: INFO: Created: latency-svc-mdjkv
  Mar 14 06:52:41.950: INFO: Got endpoints: latency-svc-8drj6 [752.811314ms]
  Mar 14 06:52:41.954: INFO: Created: latency-svc-88dz2
  Mar 14 06:52:41.998: INFO: Got endpoints: latency-svc-hsk78 [750.157443ms]
  Mar 14 06:52:42.002: INFO: Created: latency-svc-4k76d
  Mar 14 06:52:42.047: INFO: Got endpoints: latency-svc-vkdtr [749.543719ms]
  Mar 14 06:52:42.051: INFO: Created: latency-svc-b9bpz
  Mar 14 06:52:42.097: INFO: Got endpoints: latency-svc-b27p5 [749.07009ms]
  Mar 14 06:52:42.100: INFO: Created: latency-svc-2wd6s
  Mar 14 06:52:42.148: INFO: Got endpoints: latency-svc-kpw6n [750.016569ms]
  Mar 14 06:52:42.151: INFO: Created: latency-svc-p9xkq
  E0314 06:52:42.187621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:42.198: INFO: Got endpoints: latency-svc-qtmbb [751.098208ms]
  Mar 14 06:52:42.201: INFO: Created: latency-svc-2l4rm
  Mar 14 06:52:42.249: INFO: Got endpoints: latency-svc-dnng4 [751.744845ms]
  Mar 14 06:52:42.253: INFO: Created: latency-svc-bzvsp
  Mar 14 06:52:42.297: INFO: Got endpoints: latency-svc-kmcrf [750.10744ms]
  Mar 14 06:52:42.301: INFO: Created: latency-svc-8g5lr
  Mar 14 06:52:42.348: INFO: Got endpoints: latency-svc-v4dk8 [750.234325ms]
  Mar 14 06:52:42.351: INFO: Created: latency-svc-qgbz7
  Mar 14 06:52:42.398: INFO: Got endpoints: latency-svc-8lfl9 [749.929163ms]
  Mar 14 06:52:42.401: INFO: Created: latency-svc-6wbvc
  Mar 14 06:52:42.448: INFO: Got endpoints: latency-svc-qxhtr [749.766156ms]
  Mar 14 06:52:42.451: INFO: Created: latency-svc-vrbvt
  Mar 14 06:52:42.498: INFO: Got endpoints: latency-svc-wg6jh [749.164765ms]
  Mar 14 06:52:42.501: INFO: Created: latency-svc-6vm8r
  Mar 14 06:52:42.548: INFO: Got endpoints: latency-svc-jg4th [750.07248ms]
  Mar 14 06:52:42.552: INFO: Created: latency-svc-b54v4
  Mar 14 06:52:42.598: INFO: Got endpoints: latency-svc-rvmnc [749.374515ms]
  Mar 14 06:52:42.601: INFO: Created: latency-svc-shz55
  Mar 14 06:52:42.647: INFO: Got endpoints: latency-svc-mdjkv [750.543943ms]
  Mar 14 06:52:42.651: INFO: Created: latency-svc-kbkdn
  Mar 14 06:52:42.697: INFO: Got endpoints: latency-svc-88dz2 [747.638093ms]
  Mar 14 06:52:42.701: INFO: Created: latency-svc-qg7jq
  Mar 14 06:52:42.749: INFO: Got endpoints: latency-svc-4k76d [750.015356ms]
  Mar 14 06:52:42.752: INFO: Created: latency-svc-8q7h9
  Mar 14 06:52:42.798: INFO: Got endpoints: latency-svc-b9bpz [750.953519ms]
  Mar 14 06:52:42.802: INFO: Created: latency-svc-km8kp
  Mar 14 06:52:42.848: INFO: Got endpoints: latency-svc-2wd6s [751.228698ms]
  Mar 14 06:52:42.856: INFO: Created: latency-svc-q9hnb
  Mar 14 06:52:42.901: INFO: Got endpoints: latency-svc-p9xkq [753.198592ms]
  Mar 14 06:52:42.905: INFO: Created: latency-svc-5ksth
  Mar 14 06:52:42.948: INFO: Got endpoints: latency-svc-2l4rm [750.101531ms]
  Mar 14 06:52:42.952: INFO: Created: latency-svc-kw9nx
  Mar 14 06:52:42.998: INFO: Got endpoints: latency-svc-bzvsp [749.290829ms]
  Mar 14 06:52:43.002: INFO: Created: latency-svc-pdpr4
  Mar 14 06:52:43.047: INFO: Got endpoints: latency-svc-8g5lr [749.95871ms]
  Mar 14 06:52:43.050: INFO: Created: latency-svc-2z8pq
  Mar 14 06:52:43.097: INFO: Got endpoints: latency-svc-qgbz7 [749.601343ms]
  Mar 14 06:52:43.101: INFO: Created: latency-svc-lzqch
  Mar 14 06:52:43.148: INFO: Got endpoints: latency-svc-6wbvc [749.995835ms]
  Mar 14 06:52:43.152: INFO: Created: latency-svc-5x6x8
  E0314 06:52:43.188124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:43.198: INFO: Got endpoints: latency-svc-vrbvt [750.474738ms]
  Mar 14 06:52:43.202: INFO: Created: latency-svc-z5kgl
  Mar 14 06:52:43.248: INFO: Got endpoints: latency-svc-6vm8r [749.583163ms]
  Mar 14 06:52:43.251: INFO: Created: latency-svc-zqwl8
  Mar 14 06:52:43.299: INFO: Got endpoints: latency-svc-b54v4 [750.471759ms]
  Mar 14 06:52:43.302: INFO: Created: latency-svc-xt5st
  Mar 14 06:52:43.347: INFO: Got endpoints: latency-svc-shz55 [749.362918ms]
  Mar 14 06:52:43.351: INFO: Created: latency-svc-28zcv
  Mar 14 06:52:43.397: INFO: Got endpoints: latency-svc-kbkdn [749.572671ms]
  Mar 14 06:52:43.401: INFO: Created: latency-svc-b42pp
  Mar 14 06:52:43.448: INFO: Got endpoints: latency-svc-qg7jq [750.415857ms]
  Mar 14 06:52:43.453: INFO: Created: latency-svc-cd45q
  Mar 14 06:52:43.499: INFO: Got endpoints: latency-svc-8q7h9 [750.871721ms]
  Mar 14 06:52:43.503: INFO: Created: latency-svc-ffxzx
  Mar 14 06:52:43.548: INFO: Got endpoints: latency-svc-km8kp [749.437338ms]
  Mar 14 06:52:43.551: INFO: Created: latency-svc-jpl2q
  Mar 14 06:52:43.597: INFO: Got endpoints: latency-svc-q9hnb [748.146105ms]
  Mar 14 06:52:43.600: INFO: Created: latency-svc-kqmmd
  Mar 14 06:52:43.648: INFO: Got endpoints: latency-svc-5ksth [747.268558ms]
  Mar 14 06:52:43.652: INFO: Created: latency-svc-t4xcb
  Mar 14 06:52:43.698: INFO: Got endpoints: latency-svc-kw9nx [750.437979ms]
  Mar 14 06:52:43.703: INFO: Created: latency-svc-tfd4b
  Mar 14 06:52:43.749: INFO: Got endpoints: latency-svc-pdpr4 [750.412145ms]
  Mar 14 06:52:43.753: INFO: Created: latency-svc-6bnfd
  Mar 14 06:52:43.798: INFO: Got endpoints: latency-svc-2z8pq [750.395523ms]
  Mar 14 06:52:43.802: INFO: Created: latency-svc-z5h2d
  Mar 14 06:52:43.847: INFO: Got endpoints: latency-svc-lzqch [749.67589ms]
  Mar 14 06:52:43.852: INFO: Created: latency-svc-9ztnp
  Mar 14 06:52:43.898: INFO: Got endpoints: latency-svc-5x6x8 [749.545097ms]
  Mar 14 06:52:43.901: INFO: Created: latency-svc-7ck82
  Mar 14 06:52:43.947: INFO: Got endpoints: latency-svc-z5kgl [748.877051ms]
  Mar 14 06:52:43.953: INFO: Created: latency-svc-dr667
  Mar 14 06:52:43.998: INFO: Got endpoints: latency-svc-zqwl8 [750.128812ms]
  Mar 14 06:52:44.002: INFO: Created: latency-svc-lbtbf
  Mar 14 06:52:44.047: INFO: Got endpoints: latency-svc-xt5st [748.344481ms]
  Mar 14 06:52:44.051: INFO: Created: latency-svc-kx5bg
  Mar 14 06:52:44.097: INFO: Got endpoints: latency-svc-28zcv [749.950054ms]
  Mar 14 06:52:44.101: INFO: Created: latency-svc-5cvkn
  Mar 14 06:52:44.148: INFO: Got endpoints: latency-svc-b42pp [751.003667ms]
  Mar 14 06:52:44.151: INFO: Created: latency-svc-wknmv
  E0314 06:52:44.188875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:44.197: INFO: Got endpoints: latency-svc-cd45q [749.19864ms]
  Mar 14 06:52:44.201: INFO: Created: latency-svc-qns4s
  Mar 14 06:52:44.248: INFO: Got endpoints: latency-svc-ffxzx [748.034887ms]
  Mar 14 06:52:44.254: INFO: Created: latency-svc-jts7r
  Mar 14 06:52:44.298: INFO: Got endpoints: latency-svc-jpl2q [750.261092ms]
  Mar 14 06:52:44.302: INFO: Created: latency-svc-2ktl8
  Mar 14 06:52:44.347: INFO: Got endpoints: latency-svc-kqmmd [750.420637ms]
  Mar 14 06:52:44.350: INFO: Created: latency-svc-7wg98
  Mar 14 06:52:44.398: INFO: Got endpoints: latency-svc-t4xcb [749.352984ms]
  Mar 14 06:52:44.401: INFO: Created: latency-svc-8vn8l
  Mar 14 06:52:44.449: INFO: Got endpoints: latency-svc-tfd4b [750.203729ms]
  Mar 14 06:52:44.452: INFO: Created: latency-svc-xfhdl
  Mar 14 06:52:44.498: INFO: Got endpoints: latency-svc-6bnfd [749.673601ms]
  Mar 14 06:52:44.502: INFO: Created: latency-svc-xspnz
  Mar 14 06:52:44.548: INFO: Got endpoints: latency-svc-z5h2d [750.073784ms]
  Mar 14 06:52:44.551: INFO: Created: latency-svc-68zqh
  Mar 14 06:52:44.598: INFO: Got endpoints: latency-svc-9ztnp [750.759588ms]
  Mar 14 06:52:44.601: INFO: Created: latency-svc-z2x5l
  Mar 14 06:52:44.647: INFO: Got endpoints: latency-svc-7ck82 [749.730592ms]
  Mar 14 06:52:44.651: INFO: Created: latency-svc-8p6ws
  Mar 14 06:52:44.699: INFO: Got endpoints: latency-svc-dr667 [751.68306ms]
  Mar 14 06:52:44.703: INFO: Created: latency-svc-nh8g6
  Mar 14 06:52:44.747: INFO: Got endpoints: latency-svc-lbtbf [749.259411ms]
  Mar 14 06:52:44.751: INFO: Created: latency-svc-q4s57
  Mar 14 06:52:44.797: INFO: Got endpoints: latency-svc-kx5bg [749.923021ms]
  Mar 14 06:52:44.800: INFO: Created: latency-svc-jzxhl
  Mar 14 06:52:44.849: INFO: Got endpoints: latency-svc-5cvkn [751.719389ms]
  Mar 14 06:52:44.853: INFO: Created: latency-svc-bsfjz
  Mar 14 06:52:44.897: INFO: Got endpoints: latency-svc-wknmv [748.994437ms]
  Mar 14 06:52:44.902: INFO: Created: latency-svc-r6mdd
  Mar 14 06:52:44.947: INFO: Got endpoints: latency-svc-qns4s [749.904748ms]
  Mar 14 06:52:44.951: INFO: Created: latency-svc-wgft4
  Mar 14 06:52:44.999: INFO: Got endpoints: latency-svc-jts7r [751.276829ms]
  Mar 14 06:52:45.002: INFO: Created: latency-svc-2fwr2
  Mar 14 06:52:45.049: INFO: Got endpoints: latency-svc-2ktl8 [750.712356ms]
  Mar 14 06:52:45.052: INFO: Created: latency-svc-mk9nt
  Mar 14 06:52:45.097: INFO: Got endpoints: latency-svc-7wg98 [749.959459ms]
  Mar 14 06:52:45.100: INFO: Created: latency-svc-d5hfz
  Mar 14 06:52:45.148: INFO: Got endpoints: latency-svc-8vn8l [750.516397ms]
  Mar 14 06:52:45.151: INFO: Created: latency-svc-z94jd
  E0314 06:52:45.189769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:45.197: INFO: Got endpoints: latency-svc-xfhdl [747.998131ms]
  Mar 14 06:52:45.201: INFO: Created: latency-svc-7p527
  Mar 14 06:52:45.248: INFO: Got endpoints: latency-svc-xspnz [750.017118ms]
  Mar 14 06:52:45.252: INFO: Created: latency-svc-h7fxl
  Mar 14 06:52:45.298: INFO: Got endpoints: latency-svc-68zqh [749.75283ms]
  Mar 14 06:52:45.301: INFO: Created: latency-svc-b9xv7
  Mar 14 06:52:45.348: INFO: Got endpoints: latency-svc-z2x5l [749.913526ms]
  Mar 14 06:52:45.351: INFO: Created: latency-svc-kf9z8
  Mar 14 06:52:45.398: INFO: Got endpoints: latency-svc-8p6ws [750.52308ms]
  Mar 14 06:52:45.401: INFO: Created: latency-svc-8d9db
  Mar 14 06:52:45.548: INFO: Got endpoints: latency-svc-nh8g6 [849.38787ms]
  Mar 14 06:52:45.551: INFO: Created: latency-svc-brnjq
  Mar 14 06:52:45.597: INFO: Got endpoints: latency-svc-q4s57 [849.987069ms]
  Mar 14 06:52:45.600: INFO: Created: latency-svc-bhfwn
  Mar 14 06:52:45.648: INFO: Got endpoints: latency-svc-jzxhl [850.574142ms]
  Mar 14 06:52:45.651: INFO: Created: latency-svc-2jpts
  Mar 14 06:52:45.697: INFO: Got endpoints: latency-svc-bsfjz [847.925013ms]
  Mar 14 06:52:45.700: INFO: Created: latency-svc-jjkqz
  Mar 14 06:52:45.748: INFO: Got endpoints: latency-svc-r6mdd [851.267111ms]
  Mar 14 06:52:45.752: INFO: Created: latency-svc-b9r7n
  Mar 14 06:52:45.797: INFO: Got endpoints: latency-svc-wgft4 [850.29068ms]
  Mar 14 06:52:45.801: INFO: Created: latency-svc-gm98w
  Mar 14 06:52:45.848: INFO: Got endpoints: latency-svc-2fwr2 [849.36615ms]
  Mar 14 06:52:45.853: INFO: Created: latency-svc-phkjk
  Mar 14 06:52:45.898: INFO: Got endpoints: latency-svc-mk9nt [848.924622ms]
  Mar 14 06:52:45.902: INFO: Created: latency-svc-bv4q5
  Mar 14 06:52:45.951: INFO: Got endpoints: latency-svc-d5hfz [853.487762ms]
  Mar 14 06:52:45.954: INFO: Created: latency-svc-rjfq4
  Mar 14 06:52:45.997: INFO: Got endpoints: latency-svc-z94jd [849.220423ms]
  Mar 14 06:52:46.001: INFO: Created: latency-svc-m548v
  Mar 14 06:52:46.048: INFO: Got endpoints: latency-svc-7p527 [850.838207ms]
  Mar 14 06:52:46.052: INFO: Created: latency-svc-7b8nb
  Mar 14 06:52:46.097: INFO: Got endpoints: latency-svc-h7fxl [848.637721ms]
  Mar 14 06:52:46.101: INFO: Created: latency-svc-dm7j6
  Mar 14 06:52:46.147: INFO: Got endpoints: latency-svc-b9xv7 [849.170651ms]
  Mar 14 06:52:46.150: INFO: Created: latency-svc-ktprq
  E0314 06:52:46.190023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:46.199: INFO: Got endpoints: latency-svc-kf9z8 [851.216271ms]
  Mar 14 06:52:46.202: INFO: Created: latency-svc-kvmp8
  Mar 14 06:52:46.248: INFO: Got endpoints: latency-svc-8d9db [849.529965ms]
  Mar 14 06:52:46.251: INFO: Created: latency-svc-t8b5s
  Mar 14 06:52:46.297: INFO: Got endpoints: latency-svc-brnjq [748.464771ms]
  Mar 14 06:52:46.301: INFO: Created: latency-svc-67vvz
  Mar 14 06:52:46.348: INFO: Got endpoints: latency-svc-bhfwn [750.364415ms]
  Mar 14 06:52:46.351: INFO: Created: latency-svc-4f4pd
  Mar 14 06:52:46.399: INFO: Got endpoints: latency-svc-2jpts [750.982253ms]
  Mar 14 06:52:46.403: INFO: Created: latency-svc-rdh5c
  Mar 14 06:52:46.448: INFO: Got endpoints: latency-svc-jjkqz [751.105553ms]
  Mar 14 06:52:46.451: INFO: Created: latency-svc-25bz9
  Mar 14 06:52:46.498: INFO: Got endpoints: latency-svc-b9r7n [749.605649ms]
  Mar 14 06:52:46.502: INFO: Created: latency-svc-vz46w
  Mar 14 06:52:46.548: INFO: Got endpoints: latency-svc-gm98w [750.684412ms]
  Mar 14 06:52:46.552: INFO: Created: latency-svc-tfkw2
  Mar 14 06:52:46.598: INFO: Got endpoints: latency-svc-phkjk [749.31552ms]
  Mar 14 06:52:46.601: INFO: Created: latency-svc-hgwc8
  Mar 14 06:52:46.647: INFO: Got endpoints: latency-svc-bv4q5 [748.873136ms]
  Mar 14 06:52:46.650: INFO: Created: latency-svc-w9qfz
  Mar 14 06:52:46.697: INFO: Got endpoints: latency-svc-rjfq4 [746.521853ms]
  Mar 14 06:52:46.701: INFO: Created: latency-svc-jgwp4
  Mar 14 06:52:46.760: INFO: Got endpoints: latency-svc-m548v [762.691705ms]
  Mar 14 06:52:46.774: INFO: Created: latency-svc-4p49q
  Mar 14 06:52:46.798: INFO: Got endpoints: latency-svc-7b8nb [750.82919ms]
  Mar 14 06:52:46.802: INFO: Created: latency-svc-scrjl
  Mar 14 06:52:46.847: INFO: Got endpoints: latency-svc-dm7j6 [749.951458ms]
  Mar 14 06:52:46.852: INFO: Created: latency-svc-vnrl8
  Mar 14 06:52:46.898: INFO: Got endpoints: latency-svc-ktprq [750.781604ms]
  Mar 14 06:52:46.902: INFO: Created: latency-svc-hvl6n
  Mar 14 06:52:46.950: INFO: Got endpoints: latency-svc-kvmp8 [750.824761ms]
  Mar 14 06:52:46.954: INFO: Created: latency-svc-b8jmv
  Mar 14 06:52:46.997: INFO: Got endpoints: latency-svc-t8b5s [749.381315ms]
  Mar 14 06:52:47.001: INFO: Created: latency-svc-9wnj6
  Mar 14 06:52:47.047: INFO: Got endpoints: latency-svc-67vvz [750.303397ms]
  Mar 14 06:52:47.053: INFO: Created: latency-svc-n7xkp
  Mar 14 06:52:47.098: INFO: Got endpoints: latency-svc-4f4pd [750.283903ms]
  Mar 14 06:52:47.101: INFO: Created: latency-svc-cj982
  Mar 14 06:52:47.148: INFO: Got endpoints: latency-svc-rdh5c [748.841839ms]
  Mar 14 06:52:47.151: INFO: Created: latency-svc-xzkb7
  E0314 06:52:47.190489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:47.199: INFO: Got endpoints: latency-svc-25bz9 [750.934019ms]
  Mar 14 06:52:47.202: INFO: Created: latency-svc-5xmxh
  Mar 14 06:52:47.248: INFO: Got endpoints: latency-svc-vz46w [749.600309ms]
  Mar 14 06:52:47.251: INFO: Created: latency-svc-bgcx9
  Mar 14 06:52:47.297: INFO: Got endpoints: latency-svc-tfkw2 [749.32403ms]
  Mar 14 06:52:47.301: INFO: Created: latency-svc-s68lq
  Mar 14 06:52:47.349: INFO: Got endpoints: latency-svc-hgwc8 [751.161724ms]
  Mar 14 06:52:47.353: INFO: Created: latency-svc-b5nn9
  Mar 14 06:52:47.398: INFO: Got endpoints: latency-svc-w9qfz [751.384256ms]
  Mar 14 06:52:47.403: INFO: Created: latency-svc-x5wqt
  Mar 14 06:52:47.448: INFO: Got endpoints: latency-svc-jgwp4 [750.815172ms]
  Mar 14 06:52:47.452: INFO: Created: latency-svc-nl289
  Mar 14 06:52:47.498: INFO: Got endpoints: latency-svc-4p49q [737.528885ms]
  Mar 14 06:52:47.501: INFO: Created: latency-svc-p4xcw
  Mar 14 06:52:47.547: INFO: Got endpoints: latency-svc-scrjl [748.908839ms]
  Mar 14 06:52:47.552: INFO: Created: latency-svc-lt74s
  Mar 14 06:52:47.597: INFO: Got endpoints: latency-svc-vnrl8 [750.0134ms]
  Mar 14 06:52:47.600: INFO: Created: latency-svc-lz6dh
  Mar 14 06:52:47.648: INFO: Got endpoints: latency-svc-hvl6n [750.293217ms]
  Mar 14 06:52:47.652: INFO: Created: latency-svc-6m44x
  Mar 14 06:52:47.698: INFO: Got endpoints: latency-svc-b8jmv [747.87454ms]
  Mar 14 06:52:47.701: INFO: Created: latency-svc-b4j7t
  Mar 14 06:52:47.748: INFO: Got endpoints: latency-svc-9wnj6 [751.191253ms]
  Mar 14 06:52:47.751: INFO: Created: latency-svc-l2hvk
  Mar 14 06:52:47.797: INFO: Got endpoints: latency-svc-n7xkp [749.942727ms]
  Mar 14 06:52:47.801: INFO: Created: latency-svc-xx84l
  Mar 14 06:52:47.849: INFO: Got endpoints: latency-svc-cj982 [750.751074ms]
  Mar 14 06:52:47.853: INFO: Created: latency-svc-xbxgk
  Mar 14 06:52:47.897: INFO: Got endpoints: latency-svc-xzkb7 [749.900678ms]
  Mar 14 06:52:47.902: INFO: Created: latency-svc-c8dc8
  Mar 14 06:52:47.949: INFO: Got endpoints: latency-svc-5xmxh [750.21371ms]
  Mar 14 06:52:47.954: INFO: Created: latency-svc-jxfr9
  Mar 14 06:52:47.997: INFO: Got endpoints: latency-svc-bgcx9 [749.887976ms]
  Mar 14 06:52:48.002: INFO: Created: latency-svc-4v9nq
  Mar 14 06:52:48.048: INFO: Got endpoints: latency-svc-s68lq [750.178461ms]
  Mar 14 06:52:48.051: INFO: Created: latency-svc-lvr7n
  Mar 14 06:52:48.097: INFO: Got endpoints: latency-svc-b5nn9 [748.714331ms]
  Mar 14 06:52:48.101: INFO: Created: latency-svc-r6pdx
  Mar 14 06:52:48.147: INFO: Got endpoints: latency-svc-x5wqt [749.338325ms]
  Mar 14 06:52:48.151: INFO: Created: latency-svc-dt4pq
  E0314 06:52:48.190659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:48.198: INFO: Got endpoints: latency-svc-nl289 [749.55912ms]
  Mar 14 06:52:48.201: INFO: Created: latency-svc-jzxdh
  Mar 14 06:52:48.249: INFO: Got endpoints: latency-svc-p4xcw [750.795802ms]
  Mar 14 06:52:48.252: INFO: Created: latency-svc-78w98
  Mar 14 06:52:48.298: INFO: Got endpoints: latency-svc-lt74s [750.711048ms]
  Mar 14 06:52:48.302: INFO: Created: latency-svc-n25wx
  Mar 14 06:52:48.348: INFO: Got endpoints: latency-svc-lz6dh [751.165702ms]
  Mar 14 06:52:48.352: INFO: Created: latency-svc-z8hbj
  Mar 14 06:52:48.398: INFO: Got endpoints: latency-svc-6m44x [749.599512ms]
  Mar 14 06:52:48.401: INFO: Created: latency-svc-crx9c
  Mar 14 06:52:48.448: INFO: Got endpoints: latency-svc-b4j7t [750.125792ms]
  Mar 14 06:52:48.452: INFO: Created: latency-svc-j944w
  Mar 14 06:52:48.497: INFO: Got endpoints: latency-svc-l2hvk [748.870206ms]
  Mar 14 06:52:48.500: INFO: Created: latency-svc-h6lvm
  Mar 14 06:52:48.548: INFO: Got endpoints: latency-svc-xx84l [750.773491ms]
  Mar 14 06:52:48.552: INFO: Created: latency-svc-4r5rf
  Mar 14 06:52:48.597: INFO: Got endpoints: latency-svc-xbxgk [748.706937ms]
  Mar 14 06:52:48.603: INFO: Created: latency-svc-7rvt4
  Mar 14 06:52:48.648: INFO: Got endpoints: latency-svc-c8dc8 [750.248361ms]
  Mar 14 06:52:48.652: INFO: Created: latency-svc-lg7qw
  Mar 14 06:52:48.698: INFO: Got endpoints: latency-svc-jxfr9 [749.130959ms]
  Mar 14 06:52:48.702: INFO: Created: latency-svc-5pp47
  Mar 14 06:52:48.748: INFO: Got endpoints: latency-svc-4v9nq [750.419015ms]
  Mar 14 06:52:48.751: INFO: Created: latency-svc-blbpl
  Mar 14 06:52:48.799: INFO: Got endpoints: latency-svc-lvr7n [750.838882ms]
  Mar 14 06:52:48.848: INFO: Got endpoints: latency-svc-r6pdx [750.947192ms]
  Mar 14 06:52:48.898: INFO: Got endpoints: latency-svc-dt4pq [750.537905ms]
  Mar 14 06:52:48.947: INFO: Got endpoints: latency-svc-jzxdh [749.655641ms]
  Mar 14 06:52:48.998: INFO: Got endpoints: latency-svc-78w98 [749.715971ms]
  Mar 14 06:52:49.048: INFO: Got endpoints: latency-svc-n25wx [749.956115ms]
  Mar 14 06:52:49.099: INFO: Got endpoints: latency-svc-z8hbj [750.544188ms]
  Mar 14 06:52:49.147: INFO: Got endpoints: latency-svc-crx9c [749.474584ms]
  E0314 06:52:49.190818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:49.198: INFO: Got endpoints: latency-svc-j944w [749.927089ms]
  Mar 14 06:52:49.247: INFO: Got endpoints: latency-svc-h6lvm [749.919641ms]
  Mar 14 06:52:49.298: INFO: Got endpoints: latency-svc-4r5rf [749.869115ms]
  Mar 14 06:52:49.348: INFO: Got endpoints: latency-svc-7rvt4 [750.933851ms]
  Mar 14 06:52:49.398: INFO: Got endpoints: latency-svc-lg7qw [749.863162ms]
  Mar 14 06:52:49.448: INFO: Got endpoints: latency-svc-5pp47 [749.844807ms]
  Mar 14 06:52:49.497: INFO: Got endpoints: latency-svc-blbpl [749.259631ms]
  Mar 14 06:52:49.497: INFO: Latencies: [6.714147ms 9.618032ms 14.764396ms 17.205625ms 21.537666ms 26.217797ms 29.084844ms 32.878355ms 35.831553ms 39.105963ms 41.248455ms 45.114765ms 45.523719ms 45.838092ms 47.036119ms 47.694758ms 48.196026ms 48.221324ms 48.495995ms 48.699544ms 48.803791ms 48.81564ms 48.849527ms 49.644428ms 50.018041ms 50.61842ms 50.988534ms 52.491814ms 53.889705ms 55.621776ms 56.674361ms 87.691717ms 135.239821ms 181.275123ms 227.619758ms 273.228318ms 322.6801ms 368.195846ms 415.451633ms 462.308214ms 509.021472ms 556.0529ms 603.419746ms 650.584281ms 695.175854ms 737.528885ms 742.15416ms 746.521853ms 747.268558ms 747.638093ms 747.87454ms 747.998131ms 748.034887ms 748.146105ms 748.344481ms 748.464771ms 748.706937ms 748.714331ms 748.841839ms 748.870206ms 748.873136ms 748.877051ms 748.908839ms 748.994437ms 749.07009ms 749.130959ms 749.164765ms 749.19864ms 749.259411ms 749.259631ms 749.290829ms 749.31552ms 749.32403ms 749.338325ms 749.352984ms 749.362918ms 749.374515ms 749.381315ms 749.437338ms 749.474584ms 749.543719ms 749.545097ms 749.55912ms 749.572671ms 749.583163ms 749.599512ms 749.600309ms 749.601343ms 749.605649ms 749.655641ms 749.673601ms 749.67589ms 749.715971ms 749.730592ms 749.75283ms 749.766156ms 749.810611ms 749.844807ms 749.863162ms 749.869115ms 749.871946ms 749.887976ms 749.900678ms 749.904748ms 749.913526ms 749.919641ms 749.923021ms 749.927089ms 749.929163ms 749.942727ms 749.950054ms 749.951458ms 749.956115ms 749.95871ms 749.959459ms 749.995835ms 750.0134ms 750.015356ms 750.016569ms 750.017118ms 750.07248ms 750.073784ms 750.101531ms 750.10744ms 750.125792ms 750.128812ms 750.157443ms 750.178461ms 750.203729ms 750.21371ms 750.234325ms 750.248361ms 750.261092ms 750.283903ms 750.293217ms 750.303397ms 750.364415ms 750.395523ms 750.412145ms 750.415857ms 750.419015ms 750.420637ms 750.437979ms 750.471759ms 750.474738ms 750.516397ms 750.52308ms 750.537905ms 750.543943ms 750.544188ms 750.684412ms 750.711048ms 750.712356ms 750.751074ms 750.759588ms 750.773491ms 750.781604ms 750.795802ms 750.815172ms 750.824761ms 750.82919ms 750.838882ms 750.871721ms 750.933851ms 750.934019ms 750.947192ms 750.953519ms 750.982253ms 750.982565ms 751.003667ms 751.098208ms 751.105553ms 751.161724ms 751.165702ms 751.191253ms 751.228698ms 751.235871ms 751.276829ms 751.384256ms 751.68306ms 751.719389ms 751.744845ms 752.811314ms 753.198592ms 762.691705ms 847.925013ms 848.637721ms 848.924622ms 849.170651ms 849.220423ms 849.36615ms 849.38787ms 849.529965ms 849.987069ms 850.29068ms 850.574142ms 850.838207ms 851.216271ms 851.267111ms 853.487762ms]
  Mar 14 06:52:49.497: INFO: 50 %ile: 749.871946ms
  Mar 14 06:52:49.497: INFO: 90 %ile: 751.719389ms
  Mar 14 06:52:49.497: INFO: 99 %ile: 851.267111ms
  Mar 14 06:52:49.497: INFO: Total sample count: 200
  Mar 14 06:52:49.497: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9877" for this suite. @ 03/14/24 06:52:49.5
• [9.823 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 03/14/24 06:52:49.502
  Mar 14 06:52:49.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 06:52:49.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:49.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:49.511
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 06:52:49.512
  E0314 06:52:50.191392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:51.191435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:52:51.519
  Mar 14 06:52:51.520: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-a508fc98-138a-4eb0-98d2-fd936b2b37b1 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 06:52:51.523
  Mar 14 06:52:51.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9061" for this suite. @ 03/14/24 06:52:51.53
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 03/14/24 06:52:51.533
  Mar 14 06:52:51.533: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename field-validation @ 03/14/24 06:52:51.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:51.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:51.539
  Mar 14 06:52:51.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  W0314 06:52:51.541496      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0037dcde0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0314 06:52:52.192358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:53.192504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0314 06:52:54.064440      21 warnings.go:70] unknown field "alpha"
  W0314 06:52:54.064455      21 warnings.go:70] unknown field "beta"
  W0314 06:52:54.064458      21 warnings.go:70] unknown field "delta"
  W0314 06:52:54.064460      21 warnings.go:70] unknown field "epsilon"
  W0314 06:52:54.064463      21 warnings.go:70] unknown field "gamma"
  E0314 06:52:54.193523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:52:54.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8922" for this suite. @ 03/14/24 06:52:54.581
• [3.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 03/14/24 06:52:54.584
  Mar 14 06:52:54.584: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 06:52:54.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:54.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:54.59
  STEP: creating the pod @ 03/14/24 06:52:54.591
  STEP: submitting the pod to kubernetes @ 03/14/24 06:52:54.591
  E0314 06:52:55.193925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:56.194059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 03/14/24 06:52:56.598
  STEP: updating the pod @ 03/14/24 06:52:56.599
  Mar 14 06:52:57.104: INFO: Successfully updated pod "pod-update-203c94e2-f748-4f4f-9d5b-440415782f77"
  STEP: verifying the updated pod is in kubernetes @ 03/14/24 06:52:57.107
  Mar 14 06:52:57.108: INFO: Pod update OK
  Mar 14 06:52:57.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5673" for this suite. @ 03/14/24 06:52:57.11
• [2.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 03/14/24 06:52:57.112
  Mar 14 06:52:57.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir-wrapper @ 03/14/24 06:52:57.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:52:57.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:52:57.119
  STEP: Creating 50 configmaps @ 03/14/24 06:52:57.12
  E0314 06:52:57.194324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 03/14/24 06:52:57.365
  Mar 14 06:52:57.469: INFO: Pod name wrapped-volume-race-b5042d5e-bfd4-418f-bf5a-b473a3afe877: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/14/24 06:52:57.469
  E0314 06:52:58.194600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:52:59.195369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 03/14/24 06:52:59.523
  Mar 14 06:52:59.532: INFO: Pod name wrapped-volume-race-b25edb8e-21cf-4634-93ad-faea77220009: Found 0 pods out of 5
  E0314 06:53:00.195923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:01.196136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:02.196900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:03.197102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:04.197411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:53:04.536: INFO: Pod name wrapped-volume-race-b25edb8e-21cf-4634-93ad-faea77220009: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/14/24 06:53:04.536
  STEP: Creating RC which spawns configmap-volume pods @ 03/14/24 06:53:04.543
  Mar 14 06:53:04.550: INFO: Pod name wrapped-volume-race-dee8edca-85cc-41a2-a70e-952390b10f8e: Found 0 pods out of 5
  E0314 06:53:05.200354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:06.197667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:07.197911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:08.198000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:09.198850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:53:09.555: INFO: Pod name wrapped-volume-race-dee8edca-85cc-41a2-a70e-952390b10f8e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 03/14/24 06:53:09.555
  Mar 14 06:53:09.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-dee8edca-85cc-41a2-a70e-952390b10f8e in namespace emptydir-wrapper-6980, will wait for the garbage collector to delete the pods @ 03/14/24 06:53:09.563
  Mar 14 06:53:09.617: INFO: Deleting ReplicationController wrapped-volume-race-dee8edca-85cc-41a2-a70e-952390b10f8e took: 2.153893ms
  Mar 14 06:53:09.718: INFO: Terminating ReplicationController wrapped-volume-race-dee8edca-85cc-41a2-a70e-952390b10f8e pods took: 101.032234ms
  E0314 06:53:10.199584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-b25edb8e-21cf-4634-93ad-faea77220009 in namespace emptydir-wrapper-6980, will wait for the garbage collector to delete the pods @ 03/14/24 06:53:10.919
  Mar 14 06:53:10.973: INFO: Deleting ReplicationController wrapped-volume-race-b25edb8e-21cf-4634-93ad-faea77220009 took: 2.016264ms
  Mar 14 06:53:11.074: INFO: Terminating ReplicationController wrapped-volume-race-b25edb8e-21cf-4634-93ad-faea77220009 pods took: 101.001439ms
  E0314 06:53:11.200416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:12.201098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-b5042d5e-bfd4-418f-bf5a-b473a3afe877 in namespace emptydir-wrapper-6980, will wait for the garbage collector to delete the pods @ 03/14/24 06:53:12.375
  Mar 14 06:53:12.429: INFO: Deleting ReplicationController wrapped-volume-race-b5042d5e-bfd4-418f-bf5a-b473a3afe877 took: 2.370095ms
  Mar 14 06:53:12.530: INFO: Terminating ReplicationController wrapped-volume-race-b5042d5e-bfd4-418f-bf5a-b473a3afe877 pods took: 100.673595ms
  STEP: Cleaning up the configMaps @ 03/14/24 06:53:13.131
  E0314 06:53:13.201747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "emptydir-wrapper-6980" for this suite. @ 03/14/24 06:53:13.21
• [16.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 03/14/24 06:53:13.212
  Mar 14 06:53:13.212: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 06:53:13.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:53:13.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:53:13.22
  STEP: Creating a ResourceQuota @ 03/14/24 06:53:13.222
  STEP: Getting a ResourceQuota @ 03/14/24 06:53:13.223
  STEP: Updating a ResourceQuota @ 03/14/24 06:53:13.225
  STEP: Verifying a ResourceQuota was modified @ 03/14/24 06:53:13.227
  STEP: Deleting a ResourceQuota @ 03/14/24 06:53:13.228
  STEP: Verifying the deleted ResourceQuota @ 03/14/24 06:53:13.231
  Mar 14 06:53:13.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6964" for this suite. @ 03/14/24 06:53:13.233
• [0.023 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 03/14/24 06:53:13.235
  Mar 14 06:53:13.235: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pod-network-test @ 03/14/24 06:53:13.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:53:13.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:53:13.242
  STEP: Performing setup for networking test in namespace pod-network-test-2073 @ 03/14/24 06:53:13.244
  STEP: creating a selector @ 03/14/24 06:53:13.244
  STEP: Creating the service pods in kubernetes @ 03/14/24 06:53:13.244
  Mar 14 06:53:13.244: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0314 06:53:14.202833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:15.203200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:16.204027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:17.204124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:18.205190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:19.205310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:20.205653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:21.205801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:22.205905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:23.205990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:24.206091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:25.207098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/14/24 06:53:25.294
  E0314 06:53:26.207230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:27.207333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:53:27.301: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Mar 14 06:53:27.301: INFO: Breadth first check of 10.244.32.147 on host 192.168.132.11...
  Mar 14 06:53:27.301: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.69.234:9080/dial?request=hostname&protocol=http&host=10.244.32.147&port=8083&tries=1'] Namespace:pod-network-test-2073 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 06:53:27.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 06:53:27.302: INFO: ExecWithOptions: Clientset creation
  Mar 14 06:53:27.302: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2073/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.69.234%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.32.147%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 14 06:53:27.348: INFO: Waiting for responses: map[]
  Mar 14 06:53:27.348: INFO: reached 10.244.32.147 after 0/1 tries
  Mar 14 06:53:27.348: INFO: Breadth first check of 10.244.79.126 on host 192.168.132.14...
  Mar 14 06:53:27.349: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.69.234:9080/dial?request=hostname&protocol=http&host=10.244.79.126&port=8083&tries=1'] Namespace:pod-network-test-2073 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 06:53:27.349: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 06:53:27.350: INFO: ExecWithOptions: Clientset creation
  Mar 14 06:53:27.350: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2073/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.69.234%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.79.126%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 14 06:53:27.391: INFO: Waiting for responses: map[]
  Mar 14 06:53:27.391: INFO: reached 10.244.79.126 after 0/1 tries
  Mar 14 06:53:27.391: INFO: Breadth first check of 10.244.69.233 on host 192.168.132.15...
  Mar 14 06:53:27.392: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.69.234:9080/dial?request=hostname&protocol=http&host=10.244.69.233&port=8083&tries=1'] Namespace:pod-network-test-2073 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 06:53:27.392: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 06:53:27.393: INFO: ExecWithOptions: Clientset creation
  Mar 14 06:53:27.393: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2073/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.69.234%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.69.233%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 14 06:53:27.434: INFO: Waiting for responses: map[]
  Mar 14 06:53:27.434: INFO: reached 10.244.69.233 after 0/1 tries
  Mar 14 06:53:27.434: INFO: Going to retry 0 out of 3 pods....
  Mar 14 06:53:27.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2073" for this suite. @ 03/14/24 06:53:27.435
• [14.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 03/14/24 06:53:27.439
  Mar 14 06:53:27.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-preemption @ 03/14/24 06:53:27.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:53:27.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:53:27.445
  Mar 14 06:53:27.450: INFO: Waiting up to 1m0s for all nodes to be ready
  E0314 06:53:28.207855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:29.208056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:30.208853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:31.209398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:32.209908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:33.210058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:34.210312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:35.210444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:36.211434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:37.211577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:38.211676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:39.211813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:40.212595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:41.212730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:42.213385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:43.213515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:44.213873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:45.214257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:46.214324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:47.214408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:48.215200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:49.215345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:50.215629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:51.215823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:52.215910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:53.216099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:54.217048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:55.217380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:56.217766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:57.217951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:58.218031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:53:59.218341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:00.218737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:01.218838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:02.219866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:03.219988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:04.220716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:05.222615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:06.222741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:07.222854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:08.222956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:09.223145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:10.223592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:11.223730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:12.224299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:13.224496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:14.225230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:15.225302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:16.226283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:17.226474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:18.226602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:19.226697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:20.227700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:21.227796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:22.227872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:23.227964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:24.228760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:25.231617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:26.232375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:27.232469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:54:27.465: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 03/14/24 06:54:27.466
  Mar 14 06:54:27.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-preemption-path @ 03/14/24 06:54:27.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:54:27.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:54:27.473
  STEP: Finding an available node @ 03/14/24 06:54:27.475
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/14/24 06:54:27.475
  E0314 06:54:28.232803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:29.233018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/14/24 06:54:29.481
  Mar 14 06:54:29.486: INFO: found a healthy node: k8s-worker02
  E0314 06:54:30.233163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:31.233259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:32.233878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:33.234257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:34.235288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:35.235982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:54:35.516: INFO: pods created so far: [1 1 1]
  Mar 14 06:54:35.516: INFO: length of pods created so far: 3
  E0314 06:54:36.236262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:37.237257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:54:37.521: INFO: pods created so far: [2 2 1]
  E0314 06:54:38.238158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:39.238227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:40.238622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:41.238759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:42.238850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:43.239340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:44.239434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:54:44.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 06:54:44.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3140" for this suite. @ 03/14/24 06:54:44.549
  STEP: Destroying namespace "sched-preemption-3857" for this suite. @ 03/14/24 06:54:44.551
• [77.115 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 03/14/24 06:54:44.554
  Mar 14 06:54:44.554: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename var-expansion @ 03/14/24 06:54:44.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:54:44.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:54:44.562
  STEP: Creating a pod to test substitution in volume subpath @ 03/14/24 06:54:44.563
  E0314 06:54:45.239896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:46.240159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:47.240952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:48.241076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:54:48.573
  Mar 14 06:54:48.574: INFO: Trying to get logs from node k8s-worker01 pod var-expansion-f9663bb6-3ff2-45b5-bbca-44d163a03896 container dapi-container: <nil>
  STEP: delete the pod @ 03/14/24 06:54:48.577
  Mar 14 06:54:48.583: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8429" for this suite. @ 03/14/24 06:54:48.584
• [4.033 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 03/14/24 06:54:48.587
  Mar 14 06:54:48.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 06:54:48.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:54:48.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:54:48.593
  STEP: Setting up server cert @ 03/14/24 06:54:48.601
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 06:54:48.798
  STEP: Deploying the webhook pod @ 03/14/24 06:54:48.801
  STEP: Wait for the deployment to be ready @ 03/14/24 06:54:48.805
  Mar 14 06:54:48.811: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0314 06:54:49.241928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:50.242387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 06:54:50.815
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 06:54:50.818
  E0314 06:54:51.242444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:54:51.819: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Mar 14 06:54:51.822: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 06:54:52.243497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4163-crds.webhook.example.com via the AdmissionRegistration API @ 03/14/24 06:54:52.328
  STEP: Creating a custom resource while v1 is storage version @ 03/14/24 06:54:52.336
  E0314 06:54:53.244429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:54.244743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 03/14/24 06:54:54.36
  STEP: Patching the custom resource while v2 is storage version @ 03/14/24 06:54:54.371
  Mar 14 06:54:54.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5148" for this suite. @ 03/14/24 06:54:54.916
  STEP: Destroying namespace "webhook-markers-1473" for this suite. @ 03/14/24 06:54:54.918
• [6.334 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 03/14/24 06:54:54.921
  Mar 14 06:54:54.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename init-container @ 03/14/24 06:54:54.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:54:54.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:54:54.93
  STEP: creating the pod @ 03/14/24 06:54:54.931
  Mar 14 06:54:54.931: INFO: PodSpec: initContainers in spec.initContainers
  E0314 06:54:55.245537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:56.245617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:57.246589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:54:57.469: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8403" for this suite. @ 03/14/24 06:54:57.471
• [2.552 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 03/14/24 06:54:57.475
  Mar 14 06:54:57.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename watch @ 03/14/24 06:54:57.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:54:57.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:54:57.483
  STEP: creating a watch on configmaps @ 03/14/24 06:54:57.484
  STEP: creating a new configmap @ 03/14/24 06:54:57.485
  STEP: modifying the configmap once @ 03/14/24 06:54:57.486
  STEP: closing the watch once it receives two notifications @ 03/14/24 06:54:57.489
  Mar 14 06:54:57.489: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1083  439be5e3-d101-4549-a202-854d01a5908e 16502 0 2024-03-14 06:54:57 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-03-14 06:54:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 06:54:57.489: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1083  439be5e3-d101-4549-a202-854d01a5908e 16503 0 2024-03-14 06:54:57 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-03-14 06:54:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 03/14/24 06:54:57.489
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 03/14/24 06:54:57.491
  STEP: deleting the configmap @ 03/14/24 06:54:57.492
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 03/14/24 06:54:57.493
  Mar 14 06:54:57.493: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1083  439be5e3-d101-4549-a202-854d01a5908e 16504 0 2024-03-14 06:54:57 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-03-14 06:54:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 06:54:57.493: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1083  439be5e3-d101-4549-a202-854d01a5908e 16505 0 2024-03-14 06:54:57 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-03-14 06:54:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 06:54:57.493: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1083" for this suite. @ 03/14/24 06:54:57.495
• [0.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 03/14/24 06:54:57.497
  Mar 14 06:54:57.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 06:54:57.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:54:57.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:54:57.503
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 06:54:57.504
  E0314 06:54:58.246623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:54:59.246827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:00.246893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:01.247050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:55:01.516
  Mar 14 06:55:01.517: INFO: Trying to get logs from node k8s-worker01 pod downwardapi-volume-b402dbeb-ad57-42d9-b27c-2cf6e6697f85 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 06:55:01.52
  Mar 14 06:55:01.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2243" for this suite. @ 03/14/24 06:55:01.527
• [4.032 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 03/14/24 06:55:01.529
  Mar 14 06:55:01.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 06:55:01.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:01.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:01.537
  STEP: Creating configMap with name projected-configmap-test-volume-170696c1-0277-4c04-9fc2-ac2a6faa5f3e @ 03/14/24 06:55:01.539
  STEP: Creating a pod to test consume configMaps @ 03/14/24 06:55:01.54
  E0314 06:55:02.247472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:03.248095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:04.248996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:05.249025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 06:55:05.549
  Mar 14 06:55:05.550: INFO: Trying to get logs from node k8s-worker01 pod pod-projected-configmaps-c5810bfd-735b-4397-95b6-ba329d064b0b container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 06:55:05.552
  Mar 14 06:55:05.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7420" for this suite. @ 03/14/24 06:55:05.56
• [4.033 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 03/14/24 06:55:05.562
  Mar 14 06:55:05.562: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 06:55:05.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:05.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:05.569
  STEP: Create set of pods @ 03/14/24 06:55:05.57
  Mar 14 06:55:05.573: INFO: created test-pod-1
  Mar 14 06:55:05.575: INFO: created test-pod-2
  Mar 14 06:55:05.579: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 03/14/24 06:55:05.579
  E0314 06:55:06.249411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:07.249564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 03/14/24 06:55:07.598
  Mar 14 06:55:07.599: INFO: Pod quantity 3 is different from expected quantity 0
  E0314 06:55:08.250100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:55:08.602: INFO: Pod quantity 3 is different from expected quantity 0
  E0314 06:55:09.250198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:55:09.602: INFO: Pod quantity 1 is different from expected quantity 0
  E0314 06:55:10.250411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:55:10.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1066" for this suite. @ 03/14/24 06:55:10.602
• [5.042 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 03/14/24 06:55:10.605
  Mar 14 06:55:10.605: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/14/24 06:55:10.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:10.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:10.617
  STEP: set up a multi version CRD @ 03/14/24 06:55:10.619
  Mar 14 06:55:10.619: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 06:55:11.251218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:12.251577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:13.251650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 03/14/24 06:55:13.732
  STEP: check the unserved version gets removed @ 03/14/24 06:55:13.744
  E0314 06:55:14.252442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 03/14/24 06:55:14.461
  E0314 06:55:15.252858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:16.253346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:55:16.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8491" for this suite. @ 03/14/24 06:55:16.918
• [6.316 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 03/14/24 06:55:16.92
  Mar 14 06:55:16.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 06:55:16.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:16.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:16.927
  STEP: Creating configMap with name cm-test-opt-del-3b0ccf89-c213-4106-a62f-0d33c1a95a09 @ 03/14/24 06:55:16.929
  STEP: Creating configMap with name cm-test-opt-upd-c885f73f-10fa-4777-a83a-1834f59baf25 @ 03/14/24 06:55:16.931
  STEP: Creating the pod @ 03/14/24 06:55:16.932
  E0314 06:55:17.254310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:18.254680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-3b0ccf89-c213-4106-a62f-0d33c1a95a09 @ 03/14/24 06:55:18.954
  STEP: Updating configmap cm-test-opt-upd-c885f73f-10fa-4777-a83a-1834f59baf25 @ 03/14/24 06:55:18.956
  STEP: Creating configMap with name cm-test-opt-create-c1b72ec2-04b7-4ca3-8597-24777e07d047 @ 03/14/24 06:55:18.957
  STEP: waiting to observe update in volume @ 03/14/24 06:55:18.958
  E0314 06:55:19.255392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:20.255736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:21.256653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:22.256802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:55:22.970: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2496" for this suite. @ 03/14/24 06:55:22.972
• [6.053 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 03/14/24 06:55:22.974
  Mar 14 06:55:22.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename disruption @ 03/14/24 06:55:22.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:22.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:22.98
  STEP: Creating a kubernetes client @ 03/14/24 06:55:22.982
  Mar 14 06:55:22.982: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename disruption-2 @ 03/14/24 06:55:22.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:22.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:22.986
  STEP: Waiting for the pdb to be processed @ 03/14/24 06:55:22.989
  E0314 06:55:23.257594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:24.257771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 03/14/24 06:55:24.994
  E0314 06:55:25.258475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:26.258685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 03/14/24 06:55:26.998
  E0314 06:55:27.259567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:28.259745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 03/14/24 06:55:29.001
  STEP: listing a collection of PDBs in namespace disruption-6337 @ 03/14/24 06:55:29.002
  STEP: deleting a collection of PDBs @ 03/14/24 06:55:29.003
  STEP: Waiting for the PDB collection to be deleted @ 03/14/24 06:55:29.007
  Mar 14 06:55:29.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 06:55:29.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-8246" for this suite. @ 03/14/24 06:55:29.011
  STEP: Destroying namespace "disruption-6337" for this suite. @ 03/14/24 06:55:29.012
• [6.040 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 03/14/24 06:55:29.015
  Mar 14 06:55:29.015: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replication-controller @ 03/14/24 06:55:29.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:29.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:29.022
  STEP: Creating replication controller my-hostname-basic-08d5b32f-dd69-4bac-b48b-6f959e876b3b @ 03/14/24 06:55:29.023
  Mar 14 06:55:29.026: INFO: Pod name my-hostname-basic-08d5b32f-dd69-4bac-b48b-6f959e876b3b: Found 0 pods out of 1
  E0314 06:55:29.260257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:30.260386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:31.260586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:32.260709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:33.260795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:55:34.029: INFO: Pod name my-hostname-basic-08d5b32f-dd69-4bac-b48b-6f959e876b3b: Found 1 pods out of 1
  Mar 14 06:55:34.029: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-08d5b32f-dd69-4bac-b48b-6f959e876b3b" are running
  Mar 14 06:55:34.030: INFO: Pod "my-hostname-basic-08d5b32f-dd69-4bac-b48b-6f959e876b3b-6s2lm" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-14 06:55:29 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-14 06:55:29 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-14 06:55:29 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-14 06:55:29 +0000 UTC Reason: Message:}])
  Mar 14 06:55:34.030: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 03/14/24 06:55:34.03
  Mar 14 06:55:34.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7229" for this suite. @ 03/14/24 06:55:34.035
• [5.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 03/14/24 06:55:34.039
  Mar 14 06:55:34.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 06:55:34.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:34.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:34.046
  Mar 14 06:55:34.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-64 version'
  Mar 14 06:55:34.096: INFO: stderr: ""
  Mar 14 06:55:34.096: INFO: stdout: "Client Version: v1.28.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.0\n"
  Mar 14 06:55:34.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-64" for this suite. @ 03/14/24 06:55:34.098
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 03/14/24 06:55:34.101
  Mar 14 06:55:34.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replicaset @ 03/14/24 06:55:34.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:34.105
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:34.106
  Mar 14 06:55:34.107: INFO: Creating ReplicaSet my-hostname-basic-e7189331-7fd7-466f-940e-6b9039e5c874
  Mar 14 06:55:34.110: INFO: Pod name my-hostname-basic-e7189331-7fd7-466f-940e-6b9039e5c874: Found 0 pods out of 1
  E0314 06:55:34.261450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:35.261879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:36.262020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:37.262119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:38.262308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:55:39.112: INFO: Pod name my-hostname-basic-e7189331-7fd7-466f-940e-6b9039e5c874: Found 1 pods out of 1
  Mar 14 06:55:39.112: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-e7189331-7fd7-466f-940e-6b9039e5c874" is running
  Mar 14 06:55:39.113: INFO: Pod "my-hostname-basic-e7189331-7fd7-466f-940e-6b9039e5c874-hbr7n" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-14 06:55:34 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-14 06:55:34 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-14 06:55:34 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-03-14 06:55:34 +0000 UTC Reason: Message:}])
  Mar 14 06:55:39.113: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 03/14/24 06:55:39.113
  Mar 14 06:55:39.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4455" for this suite. @ 03/14/24 06:55:39.119
• [5.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 03/14/24 06:55:39.123
  Mar 14 06:55:39.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename field-validation @ 03/14/24 06:55:39.123
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:39.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:39.13
  Mar 14 06:55:39.131: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 06:55:39.262343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:40.263184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:41.263310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0314 06:55:41.655897      21 warnings.go:70] unknown field "alpha"
  W0314 06:55:41.655912      21 warnings.go:70] unknown field "beta"
  W0314 06:55:41.655915      21 warnings.go:70] unknown field "delta"
  W0314 06:55:41.655918      21 warnings.go:70] unknown field "epsilon"
  W0314 06:55:41.655921      21 warnings.go:70] unknown field "gamma"
  Mar 14 06:55:42.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2181" for this suite. @ 03/14/24 06:55:42.171
• [3.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 03/14/24 06:55:42.173
  Mar 14 06:55:42.173: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename endpointslicemirroring @ 03/14/24 06:55:42.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:42.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:42.18
  STEP: mirroring a new custom Endpoint @ 03/14/24 06:55:42.184
  Mar 14 06:55:42.186: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  E0314 06:55:42.264099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:43.264217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 03/14/24 06:55:44.188
  Mar 14 06:55:44.192: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E0314 06:55:44.264239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:45.264414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 03/14/24 06:55:46.193
  Mar 14 06:55:46.197: INFO: Waiting for 0 EndpointSlices to exist, got 1
  E0314 06:55:46.265231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:47.266243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:55:48.198: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6462" for this suite. @ 03/14/24 06:55:48.2
• [6.028 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 03/14/24 06:55:48.202
  Mar 14 06:55:48.202: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-watch @ 03/14/24 06:55:48.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:55:48.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:55:48.207
  Mar 14 06:55:48.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 06:55:48.266649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:49.266763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:50.266949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 03/14/24 06:55:50.727
  Mar 14 06:55:50.728: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-14T06:55:50Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-14T06:55:50Z]] name:name1 resourceVersion:17006 uid:99d53671-5b8c-4e99-b785-aa2db943cf1e] num:map[num1:9223372036854775807 num2:1000000]]}
  E0314 06:55:51.267012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:52.267256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:53.267362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:54.267551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:55.267994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:56.268325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:57.268550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:58.268685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:55:59.268792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:00.268958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 03/14/24 06:56:00.729
  Mar 14 06:56:00.731: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-14T06:56:00Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-14T06:56:00Z]] name:name2 resourceVersion:17028 uid:77b5dd29-4668-4b45-9487-c31f034b590d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0314 06:56:01.269026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:02.269103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:03.269230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:04.269313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:05.270135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:06.270221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:07.270332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:08.271242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:09.271488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:10.271582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 03/14/24 06:56:10.732
  Mar 14 06:56:10.735: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-14T06:55:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-14T06:56:10Z]] name:name1 resourceVersion:17044 uid:99d53671-5b8c-4e99-b785-aa2db943cf1e] num:map[num1:9223372036854775807 num2:1000000]]}
  E0314 06:56:11.271636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:12.271709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:13.271924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:14.272030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:15.272120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:16.272425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:17.272642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:18.272755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:19.272856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:20.273743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 03/14/24 06:56:20.735
  Mar 14 06:56:20.738: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-14T06:56:00Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-14T06:56:20Z]] name:name2 resourceVersion:17060 uid:77b5dd29-4668-4b45-9487-c31f034b590d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0314 06:56:21.273898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:22.273975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:23.274208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:24.274529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:25.275066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:26.275138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:27.275231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:28.275573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:29.275678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:30.276026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 03/14/24 06:56:30.738
  Mar 14 06:56:30.741: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-14T06:55:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-14T06:56:10Z]] name:name1 resourceVersion:17076 uid:99d53671-5b8c-4e99-b785-aa2db943cf1e] num:map[num1:9223372036854775807 num2:1000000]]}
  E0314 06:56:31.277108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:32.277203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:33.277451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:34.277557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:35.278071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:36.278183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:37.278294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:38.278405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:39.278517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:40.278660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 03/14/24 06:56:40.742
  Mar 14 06:56:40.745: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-03-14T06:56:00Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-03-14T06:56:20Z]] name:name2 resourceVersion:17092 uid:77b5dd29-4668-4b45-9487-c31f034b590d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0314 06:56:41.279073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:42.279302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:43.279436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:44.279565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:45.279999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:46.280118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:47.280237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:48.280360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:49.280494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:50.281410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:56:51.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3803" for this suite. @ 03/14/24 06:56:51.252
• [63.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 03/14/24 06:56:51.255
  Mar 14 06:56:51.255: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replicaset @ 03/14/24 06:56:51.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:56:51.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:56:51.262
  Mar 14 06:56:51.268: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0314 06:56:51.281806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:52.281925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:53.282022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:54.282109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:55.283140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:56:56.270: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/14/24 06:56:56.27
  STEP: Scaling up "test-rs" replicaset  @ 03/14/24 06:56:56.27
  Mar 14 06:56:56.273: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 03/14/24 06:56:56.274
  Mar 14 06:56:56.278: INFO: observed ReplicaSet test-rs in namespace replicaset-8450 with ReadyReplicas 1, AvailableReplicas 1
  E0314 06:56:56.283162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:56:56.284: INFO: observed ReplicaSet test-rs in namespace replicaset-8450 with ReadyReplicas 1, AvailableReplicas 1
  Mar 14 06:56:56.292: INFO: observed ReplicaSet test-rs in namespace replicaset-8450 with ReadyReplicas 1, AvailableReplicas 1
  Mar 14 06:56:56.295: INFO: observed ReplicaSet test-rs in namespace replicaset-8450 with ReadyReplicas 1, AvailableReplicas 1
  Mar 14 06:56:57.036: INFO: observed ReplicaSet test-rs in namespace replicaset-8450 with ReadyReplicas 2, AvailableReplicas 2
  E0314 06:56:57.283951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:56:57.480: INFO: observed Replicaset test-rs in namespace replicaset-8450 with ReadyReplicas 3 found true
  Mar 14 06:56:57.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8450" for this suite. @ 03/14/24 06:56:57.481
• [6.228 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 03/14/24 06:56:57.484
  Mar 14 06:56:57.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename endpointslice @ 03/14/24 06:56:57.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:56:57.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:56:57.492
  E0314 06:56:58.284961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:56:59.285086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:00.285279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:01.285498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:02.285622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 03/14/24 06:57:02.523
  E0314 06:57:03.285968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:04.286169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:05.286459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:06.287500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:07.287665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 03/14/24 06:57:07.527
  E0314 06:57:08.287699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:09.287831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:10.288456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:11.288602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:12.288700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 03/14/24 06:57:12.53
  E0314 06:57:13.289551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:14.289684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:15.290138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:16.290308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:17.290572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 03/14/24 06:57:17.533
  Mar 14 06:57:17.538: INFO: EndpointSlice for Service endpointslice-5891/example-named-port not found
  E0314 06:57:18.290552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:19.290618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:20.290667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:21.290756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:22.290835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:23.291000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:24.291116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:25.291548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:26.291661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:27.291776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:27.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5891" for this suite. @ 03/14/24 06:57:27.544
• [30.063 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 03/14/24 06:57:27.547
  Mar 14 06:57:27.547: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 06:57:27.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 06:57:27.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 06:57:27.556
  STEP: Creating pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622 @ 03/14/24 06:57:27.557
  E0314 06:57:28.292277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:29.292633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/14/24 06:57:29.563
  Mar 14 06:57:29.564: INFO: Initial restart count of pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a is 0
  Mar 14 06:57:29.565: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:30.292690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:31.292920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:31.567: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:32.293241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:33.293513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:33.570: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:34.293584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:35.293992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:35.572: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:36.294866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:37.295001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:37.574: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:38.295091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:39.295449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:39.577: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:40.296197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:41.296313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:41.578: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:42.296444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:43.297469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:43.581: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:44.298557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:45.298958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:45.583: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:46.299022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:47.299256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:47.585: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:48.299644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:49.299744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:49.587: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:50.300527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:51.300767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:51.589: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:52.301220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:53.301362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:53.591: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:54.301628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:55.302099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:55.594: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:56.302200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:57.302479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:57.596: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:57:58.303405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:57:59.303542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:57:59.599: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:00.303821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:01.303966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:01.601: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:02.304782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:03.304917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:03.603: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:04.305158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:05.305922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:05.605: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:06.306254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:07.306392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:07.607: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:08.306899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:09.307028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:09.609: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:10.307098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:11.307188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:11.611: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:12.307407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:13.308325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:13.613: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:14.309368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:15.310170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:15.616: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:16.310944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:17.311047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:17.617: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:18.311127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:19.311330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:19.619: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:20.311723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:21.311858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:21.621: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:22.311947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:23.312028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:23.624: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:24.312119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:25.312520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:25.626: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:26.312598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:27.312685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:27.628: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:28.312771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:29.312860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:29.630: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:30.313699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:31.313913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:31.632: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:32.314823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:33.315047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:33.635: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:34.315143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:35.315601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:35.638: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:36.316413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:37.316542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:37.640: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:38.317379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:39.317466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:39.642: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:40.318156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:41.318310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:41.644: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:42.319258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:43.319363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:43.646: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:44.319619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:45.320062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:45.649: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:46.320857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:47.320950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:47.650: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:48.321449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:49.321573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:49.652: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:50.322040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:51.322133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:51.653: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:52.322720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:53.322911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:53.656: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:54.323002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:55.323099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:55.658: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:56.323593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:57.323696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:57.660: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:58:58.324488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:58:59.324616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:58:59.662: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:00.324927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:01.325015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:01.664: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:02.325914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:03.326045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:03.666: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:04.326926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:05.327402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:05.668: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:06.328244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:07.328458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:07.670: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:08.329255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:09.329375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:09.672: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:10.330157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:11.330245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:11.673: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:12.330349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:13.330554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:13.676: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:14.330672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:15.331243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:15.678: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:16.332167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:17.332421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:17.679: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:18.332418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:19.333017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:19.682: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:20.333780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:21.333904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:21.683: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:22.334377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:23.334662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:23.685: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:24.334693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:25.335184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:25.688: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:26.335264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:27.335484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:27.690: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:28.336078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:29.336214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:29.691: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:30.336712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:31.336848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:31.693: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:32.337607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:33.337707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:33.696: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:34.337799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:35.338226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:35.697: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:36.338589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:37.339387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:37.700: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:38.339853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:39.340018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:39.701: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:40.340790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:41.340948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:41.703: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:42.341048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:43.341228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:43.706: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:44.342191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:45.342669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:45.708: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:46.342706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:47.342823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:47.710: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:48.343248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:49.343379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:49.711: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:50.343452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:51.343542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:51.713: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:52.343629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:53.343711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:53.714: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:54.344755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:55.344846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:55.716: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:56.344936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:57.345028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:57.719: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 06:59:58.345876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 06:59:59.346005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 06:59:59.720: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:00.346646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:01.347566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:01.722: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:02.348448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:03.348533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:03.725: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:04.348787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:05.349100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:05.726: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:06.349595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:07.350731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:07.728: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:08.350823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:09.350905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:09.729: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:10.351513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:11.351849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:11.731: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:12.352125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:13.353281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:13.733: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:14.353255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:15.353533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:15.735: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:16.353926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:17.354082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:17.736: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:18.354487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:19.355466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:19.738: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:20.355841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:21.356786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:21.739: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:22.357123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:23.357254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:23.741: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:24.357327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:25.357415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:25.743: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:26.357816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:27.358833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:27.744: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:28.358894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:29.359022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:29.746: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:30.359566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:31.359696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:31.748: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:32.360121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:33.361148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:33.750: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:34.361542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:35.362049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:35.752: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:36.362554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:37.362641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:37.754: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:38.363170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:39.363212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:39.756: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:40.363761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:41.363891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:41.757: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:42.364270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:43.364396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:43.759: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:44.365119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:45.365573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:45.761: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:46.365913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:47.366030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:47.762: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:48.366569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:49.366701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:49.764: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:50.367205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:51.367314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:51.766: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:52.367724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:53.367842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:53.768: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:54.367916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:55.368017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:55.769: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:56.368248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:57.368325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:57.772: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:00:58.368831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:00:59.368920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:00:59.773: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:00.369382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:01.369518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:01.775: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:02.370277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:03.370403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:03.778: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:04.370667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:05.371205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:05.780: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:06.372173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:07.372306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:07.782: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:08.373057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:09.373187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:09.784: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:10.373887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:11.374020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:11.785: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:12.374513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:13.374644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:13.788: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:14.375443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:15.376551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:15.790: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:16.377115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:17.377405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:17.792: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:18.377412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:19.377548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:19.793: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:20.378540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:21.379393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:21.795: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:22.379744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:23.379838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:23.797: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:24.379936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:25.380210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:25.799: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:26.380918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:27.381037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:27.801: INFO: Get pod busybox-1475d157-6845-4748-bd2d-8d1452d15c6a in namespace container-probe-1622
  E0314 07:01:28.381830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:29.381950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:29.801: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:01:29.803
  STEP: Destroying namespace "container-probe-1622" for this suite. @ 03/14/24 07:01:29.809
• [242.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 03/14/24 07:01:29.811
  Mar 14 07:01:29.811: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename gc @ 03/14/24 07:01:29.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:01:29.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:01:29.821
  STEP: create the rc1 @ 03/14/24 07:01:29.824
  STEP: create the rc2 @ 03/14/24 07:01:29.825
  E0314 07:01:30.382466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:31.383515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:32.384704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:33.385393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:34.384981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:35.385288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 03/14/24 07:01:35.83
  STEP: delete the rc simpletest-rc-to-be-deleted @ 03/14/24 07:01:36.019
  STEP: wait for the rc to be deleted @ 03/14/24 07:01:36.022
  E0314 07:01:36.385449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:37.385478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:38.385638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:39.385703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:40.385779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:41.030: INFO: 70 pods remaining
  Mar 14 07:01:41.031: INFO: 70 pods has nil DeletionTimestamp
  Mar 14 07:01:41.031: INFO: 
  E0314 07:01:41.385869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:42.386416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:43.386512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:44.386610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:45.386674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/14/24 07:01:46.028
  Mar 14 07:01:46.077: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 14 07:01:46.077: INFO: Deleting pod "simpletest-rc-to-be-deleted-26hs5" in namespace "gc-7834"
  Mar 14 07:01:46.082: INFO: Deleting pod "simpletest-rc-to-be-deleted-2b8ph" in namespace "gc-7834"
  Mar 14 07:01:46.086: INFO: Deleting pod "simpletest-rc-to-be-deleted-2twr9" in namespace "gc-7834"
  Mar 14 07:01:46.094: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hs44" in namespace "gc-7834"
  Mar 14 07:01:46.101: INFO: Deleting pod "simpletest-rc-to-be-deleted-5kzhd" in namespace "gc-7834"
  Mar 14 07:01:46.106: INFO: Deleting pod "simpletest-rc-to-be-deleted-5ngcx" in namespace "gc-7834"
  Mar 14 07:01:46.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nlgj" in namespace "gc-7834"
  Mar 14 07:01:46.127: INFO: Deleting pod "simpletest-rc-to-be-deleted-6wm7b" in namespace "gc-7834"
  Mar 14 07:01:46.133: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zpmn" in namespace "gc-7834"
  Mar 14 07:01:46.143: INFO: Deleting pod "simpletest-rc-to-be-deleted-7h28t" in namespace "gc-7834"
  Mar 14 07:01:46.156: INFO: Deleting pod "simpletest-rc-to-be-deleted-7jwfc" in namespace "gc-7834"
  Mar 14 07:01:46.165: INFO: Deleting pod "simpletest-rc-to-be-deleted-7kwz9" in namespace "gc-7834"
  Mar 14 07:01:46.178: INFO: Deleting pod "simpletest-rc-to-be-deleted-7pw6w" in namespace "gc-7834"
  Mar 14 07:01:46.186: INFO: Deleting pod "simpletest-rc-to-be-deleted-7s52t" in namespace "gc-7834"
  Mar 14 07:01:46.193: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vvl4" in namespace "gc-7834"
  Mar 14 07:01:46.206: INFO: Deleting pod "simpletest-rc-to-be-deleted-7xbv7" in namespace "gc-7834"
  Mar 14 07:01:46.220: INFO: Deleting pod "simpletest-rc-to-be-deleted-8cn9t" in namespace "gc-7834"
  Mar 14 07:01:46.241: INFO: Deleting pod "simpletest-rc-to-be-deleted-8fvn9" in namespace "gc-7834"
  Mar 14 07:01:46.281: INFO: Deleting pod "simpletest-rc-to-be-deleted-8qk62" in namespace "gc-7834"
  Mar 14 07:01:46.302: INFO: Deleting pod "simpletest-rc-to-be-deleted-8rwth" in namespace "gc-7834"
  Mar 14 07:01:46.337: INFO: Deleting pod "simpletest-rc-to-be-deleted-96f8q" in namespace "gc-7834"
  Mar 14 07:01:46.361: INFO: Deleting pod "simpletest-rc-to-be-deleted-9czng" in namespace "gc-7834"
  E0314 07:01:46.387880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:46.397: INFO: Deleting pod "simpletest-rc-to-be-deleted-9h455" in namespace "gc-7834"
  Mar 14 07:01:46.464: INFO: Deleting pod "simpletest-rc-to-be-deleted-9n752" in namespace "gc-7834"
  Mar 14 07:01:46.509: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qzv4" in namespace "gc-7834"
  Mar 14 07:01:46.541: INFO: Deleting pod "simpletest-rc-to-be-deleted-9rztf" in namespace "gc-7834"
  Mar 14 07:01:46.572: INFO: Deleting pod "simpletest-rc-to-be-deleted-9stfk" in namespace "gc-7834"
  Mar 14 07:01:46.616: INFO: Deleting pod "simpletest-rc-to-be-deleted-9tjwd" in namespace "gc-7834"
  Mar 14 07:01:46.635: INFO: Deleting pod "simpletest-rc-to-be-deleted-b4vl4" in namespace "gc-7834"
  Mar 14 07:01:46.668: INFO: Deleting pod "simpletest-rc-to-be-deleted-b5mqw" in namespace "gc-7834"
  Mar 14 07:01:46.711: INFO: Deleting pod "simpletest-rc-to-be-deleted-b7sk9" in namespace "gc-7834"
  Mar 14 07:01:46.744: INFO: Deleting pod "simpletest-rc-to-be-deleted-bfbv7" in namespace "gc-7834"
  Mar 14 07:01:46.777: INFO: Deleting pod "simpletest-rc-to-be-deleted-bkm74" in namespace "gc-7834"
  Mar 14 07:01:46.798: INFO: Deleting pod "simpletest-rc-to-be-deleted-blhlr" in namespace "gc-7834"
  Mar 14 07:01:46.824: INFO: Deleting pod "simpletest-rc-to-be-deleted-bp99x" in namespace "gc-7834"
  Mar 14 07:01:46.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-bxccb" in namespace "gc-7834"
  Mar 14 07:01:46.874: INFO: Deleting pod "simpletest-rc-to-be-deleted-cjfb5" in namespace "gc-7834"
  Mar 14 07:01:46.886: INFO: Deleting pod "simpletest-rc-to-be-deleted-clmvs" in namespace "gc-7834"
  Mar 14 07:01:46.898: INFO: Deleting pod "simpletest-rc-to-be-deleted-cz9mp" in namespace "gc-7834"
  Mar 14 07:01:46.917: INFO: Deleting pod "simpletest-rc-to-be-deleted-ddb4r" in namespace "gc-7834"
  Mar 14 07:01:46.940: INFO: Deleting pod "simpletest-rc-to-be-deleted-dljsq" in namespace "gc-7834"
  Mar 14 07:01:46.957: INFO: Deleting pod "simpletest-rc-to-be-deleted-dq5fl" in namespace "gc-7834"
  Mar 14 07:01:46.997: INFO: Deleting pod "simpletest-rc-to-be-deleted-dvx5n" in namespace "gc-7834"
  Mar 14 07:01:47.017: INFO: Deleting pod "simpletest-rc-to-be-deleted-f2rzt" in namespace "gc-7834"
  Mar 14 07:01:47.095: INFO: Deleting pod "simpletest-rc-to-be-deleted-fpqb9" in namespace "gc-7834"
  Mar 14 07:01:47.171: INFO: Deleting pod "simpletest-rc-to-be-deleted-g6pdn" in namespace "gc-7834"
  Mar 14 07:01:47.197: INFO: Deleting pod "simpletest-rc-to-be-deleted-hrflj" in namespace "gc-7834"
  Mar 14 07:01:47.220: INFO: Deleting pod "simpletest-rc-to-be-deleted-htjtc" in namespace "gc-7834"
  Mar 14 07:01:47.235: INFO: Deleting pod "simpletest-rc-to-be-deleted-hwd26" in namespace "gc-7834"
  Mar 14 07:01:47.248: INFO: Deleting pod "simpletest-rc-to-be-deleted-hzsg7" in namespace "gc-7834"
  Mar 14 07:01:47.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7834" for this suite. @ 03/14/24 07:01:47.272
• [17.464 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 03/14/24 07:01:47.276
  Mar 14 07:01:47.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename security-context-test @ 03/14/24 07:01:47.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:01:47.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:01:47.303
  E0314 07:01:47.388655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:48.388892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:01:49.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3679" for this suite. @ 03/14/24 07:01:49.321
• [2.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 03/14/24 07:01:49.323
  Mar 14 07:01:49.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename disruption @ 03/14/24 07:01:49.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:01:49.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:01:49.331
  STEP: creating the pdb @ 03/14/24 07:01:49.333
  STEP: Waiting for the pdb to be processed @ 03/14/24 07:01:49.334
  STEP: updating the pdb @ 03/14/24 07:01:49.337
  STEP: Waiting for the pdb to be processed @ 03/14/24 07:01:49.34
  E0314 07:01:49.389616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:50.390180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 03/14/24 07:01:51.343
  STEP: Waiting for the pdb to be processed @ 03/14/24 07:01:51.346
  E0314 07:01:51.390782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:52.390907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 03/14/24 07:01:53.351
  Mar 14 07:01:53.352: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5461" for this suite. @ 03/14/24 07:01:53.353
• [4.031 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 03/14/24 07:01:53.355
  Mar 14 07:01:53.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:01:53.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:01:53.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:01:53.362
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 03/14/24 07:01:53.364
  E0314 07:01:53.391593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:54.392234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:01:55.37
  Mar 14 07:01:55.372: INFO: Trying to get logs from node k8s-worker02 pod pod-7c249adb-9043-4625-846d-fd6d6372f3c3 container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:01:55.374
  Mar 14 07:01:55.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7955" for this suite. @ 03/14/24 07:01:55.381
• [2.028 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 03/14/24 07:01:55.383
  Mar 14 07:01:55.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/14/24 07:01:55.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:01:55.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:01:55.391
  E0314 07:01:55.392211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the container to handle the HTTPGet hook request. @ 03/14/24 07:01:55.394
  E0314 07:01:56.392720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:57.392874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/14/24 07:01:57.402
  E0314 07:01:58.393906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:01:59.394112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 03/14/24 07:01:59.408
  E0314 07:02:00.395125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:01.395812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 03/14/24 07:02:01.413
  Mar 14 07:02:01.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2625" for this suite. @ 03/14/24 07:02:01.416
• [6.035 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 03/14/24 07:02:01.418
  Mar 14 07:02:01.418: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename job @ 03/14/24 07:02:01.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:01.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:01.425
  STEP: Creating a suspended job @ 03/14/24 07:02:01.427
  STEP: Patching the Job @ 03/14/24 07:02:01.429
  STEP: Watching for Job to be patched @ 03/14/24 07:02:01.438
  Mar 14 07:02:01.439: INFO: Event ADDED observed for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx] and annotations: map[]
  Mar 14 07:02:01.439: INFO: Event MODIFIED observed for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx] and annotations: map[]
  Mar 14 07:02:01.439: INFO: Event MODIFIED found for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx e2e-q4zsx:patched] and annotations: map[]
  STEP: Updating the job @ 03/14/24 07:02:01.439
  STEP: Watching for Job to be updated @ 03/14/24 07:02:01.442
  Mar 14 07:02:01.443: INFO: Event MODIFIED found for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx e2e-q4zsx:patched] and annotations: map[updated:true]
  Mar 14 07:02:01.444: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 03/14/24 07:02:01.444
  Mar 14 07:02:01.448: INFO: Job: e2e-q4zsx as labels: map[e2e-job-label:e2e-q4zsx e2e-q4zsx:patched]
  STEP: Waiting for job to complete @ 03/14/24 07:02:01.448
  E0314 07:02:02.396611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:03.396852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:04.397722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:05.398296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:06.398335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:07.398414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 03/14/24 07:02:07.45
  STEP: Watching for Job to be deleted @ 03/14/24 07:02:07.453
  Mar 14 07:02:07.454: INFO: Event MODIFIED observed for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx e2e-q4zsx:patched] and annotations: map[updated:true]
  Mar 14 07:02:07.454: INFO: Event MODIFIED observed for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx e2e-q4zsx:patched] and annotations: map[updated:true]
  Mar 14 07:02:07.454: INFO: Event MODIFIED observed for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx e2e-q4zsx:patched] and annotations: map[updated:true]
  Mar 14 07:02:07.454: INFO: Event MODIFIED observed for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx e2e-q4zsx:patched] and annotations: map[updated:true]
  Mar 14 07:02:07.454: INFO: Event MODIFIED observed for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx e2e-q4zsx:patched] and annotations: map[updated:true]
  Mar 14 07:02:07.454: INFO: Event DELETED found for Job e2e-q4zsx in namespace job-4196 with labels: map[e2e-job-label:e2e-q4zsx e2e-q4zsx:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 03/14/24 07:02:07.454
  Mar 14 07:02:07.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4196" for this suite. @ 03/14/24 07:02:07.458
• [6.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 03/14/24 07:02:07.46
  Mar 14 07:02:07.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename podtemplate @ 03/14/24 07:02:07.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:07.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:07.469
  STEP: Create set of pod templates @ 03/14/24 07:02:07.472
  Mar 14 07:02:07.474: INFO: created test-podtemplate-1
  Mar 14 07:02:07.475: INFO: created test-podtemplate-2
  Mar 14 07:02:07.477: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 03/14/24 07:02:07.477
  STEP: delete collection of pod templates @ 03/14/24 07:02:07.478
  Mar 14 07:02:07.478: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 03/14/24 07:02:07.482
  Mar 14 07:02:07.482: INFO: requesting list of pod templates to confirm quantity
  Mar 14 07:02:07.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3354" for this suite. @ 03/14/24 07:02:07.484
• [0.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 03/14/24 07:02:07.487
  Mar 14 07:02:07.487: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubelet-test @ 03/14/24 07:02:07.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:07.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:07.493
  STEP: Waiting for pod completion @ 03/14/24 07:02:07.502
  E0314 07:02:08.398522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:09.399563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:02:09.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4743" for this suite. @ 03/14/24 07:02:09.511
• [2.026 seconds]
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 03/14/24 07:02:09.513
  Mar 14 07:02:09.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:02:09.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:09.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:09.52
  STEP: Creating Pod @ 03/14/24 07:02:09.521
  E0314 07:02:10.400328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:11.401151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 03/14/24 07:02:11.527
  Mar 14 07:02:11.527: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-9039 PodName:pod-sharedvolume-813d9044-d759-47f0-8650-c4852cf656f5 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:02:11.527: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:02:11.528: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:02:11.528: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-9039/pods/pod-sharedvolume-813d9044-d759-47f0-8650-c4852cf656f5/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Mar 14 07:02:11.575: INFO: Exec stderr: ""
  Mar 14 07:02:11.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9039" for this suite. @ 03/14/24 07:02:11.577
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 03/14/24 07:02:11.585
  Mar 14 07:02:11.585: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename proxy @ 03/14/24 07:02:11.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:11.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:11.593
  STEP: starting an echo server on multiple ports @ 03/14/24 07:02:11.598
  STEP: creating replication controller proxy-service-5gbrq in namespace proxy-6026 @ 03/14/24 07:02:11.598
  I0314 07:02:11.601498      21 runners.go:197] Created replication controller with name: proxy-service-5gbrq, namespace: proxy-6026, replica count: 1
  E0314 07:02:12.401366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 07:02:12.652741      21 runners.go:197] proxy-service-5gbrq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0314 07:02:13.401590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 07:02:13.652870      21 runners.go:197] proxy-service-5gbrq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 14 07:02:13.654: INFO: setup took 2.059459654s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 03/14/24 07:02:13.654
  Mar 14 07:02:13.656: INFO: (0) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.30003ms)
  Mar 14 07:02:13.656: INFO: (0) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 2.317403ms)
  Mar 14 07:02:13.658: INFO: (0) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 3.75392ms)
  Mar 14 07:02:13.658: INFO: (0) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.73801ms)
  Mar 14 07:02:13.658: INFO: (0) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 3.699067ms)
  Mar 14 07:02:13.658: INFO: (0) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 3.061829ms)
  Mar 14 07:02:13.660: INFO: (0) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 5.711398ms)
  Mar 14 07:02:13.660: INFO: (0) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 5.488858ms)
  Mar 14 07:02:13.660: INFO: (0) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 5.260726ms)
  Mar 14 07:02:13.660: INFO: (0) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 5.478081ms)
  Mar 14 07:02:13.662: INFO: (0) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 7.512924ms)
  Mar 14 07:02:13.663: INFO: (0) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 8.671813ms)
  Mar 14 07:02:13.663: INFO: (0) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 7.909519ms)
  Mar 14 07:02:13.663: INFO: (0) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 8.010724ms)
  Mar 14 07:02:13.663: INFO: (0) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 8.082529ms)
  Mar 14 07:02:13.663: INFO: (0) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 8.06842ms)
  Mar 14 07:02:13.664: INFO: (1) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 1.863086ms)
  Mar 14 07:02:13.665: INFO: (1) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 2.02988ms)
  Mar 14 07:02:13.665: INFO: (1) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 2.15407ms)
  Mar 14 07:02:13.665: INFO: (1) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.626891ms)
  Mar 14 07:02:13.666: INFO: (1) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.341008ms)
  Mar 14 07:02:13.666: INFO: (1) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 3.544271ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 3.76147ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 3.898209ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 4.009808ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 4.123922ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 4.262105ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 4.108832ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 4.11998ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 4.188289ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 4.329727ms)
  Mar 14 07:02:13.667: INFO: (1) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 4.310149ms)
  Mar 14 07:02:13.669: INFO: (2) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 1.547051ms)
  Mar 14 07:02:13.669: INFO: (2) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 1.987793ms)
  Mar 14 07:02:13.669: INFO: (2) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 2.095625ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 3.936845ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 3.93565ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 3.911119ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 3.863246ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 3.863738ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 3.857039ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.847428ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 3.859019ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 4.007354ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 3.86562ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 3.872009ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 3.863122ms)
  Mar 14 07:02:13.671: INFO: (2) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 3.835099ms)
  Mar 14 07:02:13.673: INFO: (3) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 1.673912ms)
  Mar 14 07:02:13.673: INFO: (3) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 1.488917ms)
  Mar 14 07:02:13.673: INFO: (3) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 1.380981ms)
  Mar 14 07:02:13.674: INFO: (3) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 2.680763ms)
  Mar 14 07:02:13.674: INFO: (3) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 2.669851ms)
  Mar 14 07:02:13.674: INFO: (3) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.567554ms)
  Mar 14 07:02:13.674: INFO: (3) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 2.500076ms)
  Mar 14 07:02:13.674: INFO: (3) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 2.474311ms)
  Mar 14 07:02:13.674: INFO: (3) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.397952ms)
  Mar 14 07:02:13.674: INFO: (3) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 2.822304ms)
  Mar 14 07:02:13.674: INFO: (3) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 2.451626ms)
  Mar 14 07:02:13.675: INFO: (3) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 3.377697ms)
  Mar 14 07:02:13.675: INFO: (3) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 3.041914ms)
  Mar 14 07:02:13.675: INFO: (3) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 3.436832ms)
  Mar 14 07:02:13.675: INFO: (3) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 3.141941ms)
  Mar 14 07:02:13.675: INFO: (3) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 3.743588ms)
  Mar 14 07:02:13.677: INFO: (4) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 2.045336ms)
  Mar 14 07:02:13.677: INFO: (4) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 1.958359ms)
  Mar 14 07:02:13.678: INFO: (4) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 2.469444ms)
  Mar 14 07:02:13.678: INFO: (4) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.817624ms)
  Mar 14 07:02:13.678: INFO: (4) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 2.776491ms)
  Mar 14 07:02:13.678: INFO: (4) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 2.710864ms)
  Mar 14 07:02:13.678: INFO: (4) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.90392ms)
  Mar 14 07:02:13.678: INFO: (4) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.857865ms)
  Mar 14 07:02:13.678: INFO: (4) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 2.980816ms)
  Mar 14 07:02:13.678: INFO: (4) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 2.911993ms)
  Mar 14 07:02:13.679: INFO: (4) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 3.591545ms)
  Mar 14 07:02:13.679: INFO: (4) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 3.854828ms)
  Mar 14 07:02:13.679: INFO: (4) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 3.988609ms)
  Mar 14 07:02:13.679: INFO: (4) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 3.911706ms)
  Mar 14 07:02:13.679: INFO: (4) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 4.190396ms)
  Mar 14 07:02:13.680: INFO: (4) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 4.271156ms)
  Mar 14 07:02:13.681: INFO: (5) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 1.109966ms)
  Mar 14 07:02:13.681: INFO: (5) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 1.205701ms)
  Mar 14 07:02:13.681: INFO: (5) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 1.492586ms)
  Mar 14 07:02:13.682: INFO: (5) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 1.953745ms)
  Mar 14 07:02:13.682: INFO: (5) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 1.914268ms)
  Mar 14 07:02:13.682: INFO: (5) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 1.845257ms)
  Mar 14 07:02:13.682: INFO: (5) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 2.144216ms)
  Mar 14 07:02:13.683: INFO: (5) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.729627ms)
  Mar 14 07:02:13.683: INFO: (5) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 2.752675ms)
  Mar 14 07:02:13.683: INFO: (5) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 2.731251ms)
  Mar 14 07:02:13.684: INFO: (5) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 3.364081ms)
  Mar 14 07:02:13.684: INFO: (5) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 3.430983ms)
  Mar 14 07:02:13.684: INFO: (5) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 3.425774ms)
  Mar 14 07:02:13.684: INFO: (5) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 3.699196ms)
  Mar 14 07:02:13.684: INFO: (5) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 3.921742ms)
  Mar 14 07:02:13.684: INFO: (5) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 3.518326ms)
  Mar 14 07:02:13.685: INFO: (6) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 1.449315ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 3.016234ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.618442ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.597941ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 2.402928ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 2.693504ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 2.671713ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 2.935692ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 2.494776ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.472897ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.762532ms)
  Mar 14 07:02:13.687: INFO: (6) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 3.102321ms)
  Mar 14 07:02:13.688: INFO: (6) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 3.55778ms)
  Mar 14 07:02:13.688: INFO: (6) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 3.550454ms)
  Mar 14 07:02:13.688: INFO: (6) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 3.534292ms)
  Mar 14 07:02:13.688: INFO: (6) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 3.803413ms)
  Mar 14 07:02:13.689: INFO: (7) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 1.35333ms)
  Mar 14 07:02:13.690: INFO: (7) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 1.548165ms)
  Mar 14 07:02:13.690: INFO: (7) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 1.594983ms)
  Mar 14 07:02:13.691: INFO: (7) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 2.711559ms)
  Mar 14 07:02:13.691: INFO: (7) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.594759ms)
  Mar 14 07:02:13.691: INFO: (7) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.486963ms)
  Mar 14 07:02:13.691: INFO: (7) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 2.308929ms)
  Mar 14 07:02:13.691: INFO: (7) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 2.537748ms)
  Mar 14 07:02:13.691: INFO: (7) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.463169ms)
  Mar 14 07:02:13.691: INFO: (7) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 2.626703ms)
  Mar 14 07:02:13.692: INFO: (7) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 3.204917ms)
  Mar 14 07:02:13.692: INFO: (7) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 3.382188ms)
  Mar 14 07:02:13.692: INFO: (7) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 3.475573ms)
  Mar 14 07:02:13.692: INFO: (7) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 3.611202ms)
  Mar 14 07:02:13.692: INFO: (7) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 3.453464ms)
  Mar 14 07:02:13.692: INFO: (7) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 3.410376ms)
  Mar 14 07:02:13.695: INFO: (8) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 3.084123ms)
  Mar 14 07:02:13.695: INFO: (8) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.851798ms)
  Mar 14 07:02:13.695: INFO: (8) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.782399ms)
  Mar 14 07:02:13.695: INFO: (8) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 3.135266ms)
  Mar 14 07:02:13.695: INFO: (8) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 3.153658ms)
  Mar 14 07:02:13.695: INFO: (8) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 2.971048ms)
  Mar 14 07:02:13.695: INFO: (8) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 2.901537ms)
  Mar 14 07:02:13.695: INFO: (8) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 3.169012ms)
  Mar 14 07:02:13.695: INFO: (8) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 3.054969ms)
  Mar 14 07:02:13.696: INFO: (8) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.822248ms)
  Mar 14 07:02:13.696: INFO: (8) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 4.305436ms)
  Mar 14 07:02:13.697: INFO: (8) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 4.448954ms)
  Mar 14 07:02:13.697: INFO: (8) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 4.287509ms)
  Mar 14 07:02:13.697: INFO: (8) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 4.76221ms)
  Mar 14 07:02:13.697: INFO: (8) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 4.398269ms)
  Mar 14 07:02:13.697: INFO: (8) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 4.783028ms)
  Mar 14 07:02:13.700: INFO: (9) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.867805ms)
  Mar 14 07:02:13.700: INFO: (9) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 2.796424ms)
  Mar 14 07:02:13.700: INFO: (9) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.800954ms)
  Mar 14 07:02:13.700: INFO: (9) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 2.765706ms)
  Mar 14 07:02:13.700: INFO: (9) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.778626ms)
  Mar 14 07:02:13.700: INFO: (9) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 2.930695ms)
  Mar 14 07:02:13.700: INFO: (9) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 2.982031ms)
  Mar 14 07:02:13.700: INFO: (9) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 2.879798ms)
  Mar 14 07:02:13.701: INFO: (9) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 3.848086ms)
  Mar 14 07:02:13.701: INFO: (9) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.857867ms)
  Mar 14 07:02:13.702: INFO: (9) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 4.347356ms)
  Mar 14 07:02:13.702: INFO: (9) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 4.518176ms)
  Mar 14 07:02:13.702: INFO: (9) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 4.663952ms)
  Mar 14 07:02:13.702: INFO: (9) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 4.372511ms)
  Mar 14 07:02:13.702: INFO: (9) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 4.641913ms)
  Mar 14 07:02:13.702: INFO: (9) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 4.556249ms)
  Mar 14 07:02:13.706: INFO: (10) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 3.546708ms)
  Mar 14 07:02:13.706: INFO: (10) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 3.90312ms)
  Mar 14 07:02:13.706: INFO: (10) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.805651ms)
  Mar 14 07:02:13.706: INFO: (10) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 3.911908ms)
  Mar 14 07:02:13.706: INFO: (10) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 4.140226ms)
  Mar 14 07:02:13.706: INFO: (10) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 3.953134ms)
  Mar 14 07:02:13.706: INFO: (10) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 4.045122ms)
  Mar 14 07:02:13.706: INFO: (10) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 4.011878ms)
  Mar 14 07:02:13.706: INFO: (10) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 4.014751ms)
  Mar 14 07:02:13.707: INFO: (10) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 4.495098ms)
  Mar 14 07:02:13.708: INFO: (10) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 5.064905ms)
  Mar 14 07:02:13.708: INFO: (10) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 5.232245ms)
  Mar 14 07:02:13.708: INFO: (10) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 5.610072ms)
  Mar 14 07:02:13.708: INFO: (10) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 5.541804ms)
  Mar 14 07:02:13.708: INFO: (10) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 5.639099ms)
  Mar 14 07:02:13.708: INFO: (10) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 5.509827ms)
  Mar 14 07:02:13.712: INFO: (11) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.08418ms)
  Mar 14 07:02:13.712: INFO: (11) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 3.135776ms)
  Mar 14 07:02:13.712: INFO: (11) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 3.34756ms)
  Mar 14 07:02:13.712: INFO: (11) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 3.309289ms)
  Mar 14 07:02:13.712: INFO: (11) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.294606ms)
  Mar 14 07:02:13.712: INFO: (11) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 3.368752ms)
  Mar 14 07:02:13.712: INFO: (11) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 3.440506ms)
  Mar 14 07:02:13.712: INFO: (11) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 3.393227ms)
  Mar 14 07:02:13.712: INFO: (11) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 3.327504ms)
  Mar 14 07:02:13.713: INFO: (11) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 4.343309ms)
  Mar 14 07:02:13.713: INFO: (11) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 4.259045ms)
  Mar 14 07:02:13.713: INFO: (11) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 4.840702ms)
  Mar 14 07:02:13.713: INFO: (11) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 4.812756ms)
  Mar 14 07:02:13.713: INFO: (11) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 4.640275ms)
  Mar 14 07:02:13.714: INFO: (11) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 5.026576ms)
  Mar 14 07:02:13.714: INFO: (11) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 4.940593ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 4.390887ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 4.347918ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 4.404582ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 4.550506ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 4.527862ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 4.435516ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 4.430461ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 4.454692ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 4.69517ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 4.944591ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 5.111443ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 5.093561ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 5.10692ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 5.224666ms)
  Mar 14 07:02:13.719: INFO: (12) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 5.454882ms)
  Mar 14 07:02:13.720: INFO: (12) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 5.77913ms)
  Mar 14 07:02:13.722: INFO: (13) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 1.732059ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 4.276694ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 4.372413ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 4.674786ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 4.668505ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 4.557196ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 4.635216ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 4.680048ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 4.594571ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 4.66785ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 4.596763ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 4.776901ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 4.467323ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 4.890436ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 4.706488ms)
  Mar 14 07:02:13.725: INFO: (13) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 5.042929ms)
  Mar 14 07:02:13.728: INFO: (14) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.401456ms)
  Mar 14 07:02:13.728: INFO: (14) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 2.578627ms)
  Mar 14 07:02:13.728: INFO: (14) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.822157ms)
  Mar 14 07:02:13.728: INFO: (14) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 2.753683ms)
  Mar 14 07:02:13.728: INFO: (14) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.585092ms)
  Mar 14 07:02:13.729: INFO: (14) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 2.769096ms)
  Mar 14 07:02:13.729: INFO: (14) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 2.757578ms)
  Mar 14 07:02:13.729: INFO: (14) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.848483ms)
  Mar 14 07:02:13.729: INFO: (14) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 2.88787ms)
  Mar 14 07:02:13.729: INFO: (14) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 2.87088ms)
  Mar 14 07:02:13.731: INFO: (14) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 4.863385ms)
  Mar 14 07:02:13.731: INFO: (14) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 5.247064ms)
  Mar 14 07:02:13.731: INFO: (14) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 4.952456ms)
  Mar 14 07:02:13.731: INFO: (14) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 5.113833ms)
  Mar 14 07:02:13.731: INFO: (14) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 5.044037ms)
  Mar 14 07:02:13.732: INFO: (14) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 6.04183ms)
  Mar 14 07:02:13.737: INFO: (15) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 5.083024ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 5.80109ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 6.087685ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 6.418578ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 6.229924ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 6.47023ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 6.286481ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 6.434557ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 6.301418ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 6.360326ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 6.319469ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 6.382194ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 6.473573ms)
  Mar 14 07:02:13.738: INFO: (15) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 6.477885ms)
  Mar 14 07:02:13.739: INFO: (15) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 7.021753ms)
  Mar 14 07:02:13.739: INFO: (15) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 6.997862ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 5.24942ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 5.344826ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 5.316754ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 5.303114ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 5.35025ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 5.857798ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 5.350463ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 5.232415ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 5.842488ms)
  Mar 14 07:02:13.748: INFO: (16) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 5.641376ms)
  Mar 14 07:02:13.750: INFO: (16) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 7.43126ms)
  Mar 14 07:02:13.750: INFO: (16) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 7.193833ms)
  Mar 14 07:02:13.750: INFO: (16) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 7.186622ms)
  Mar 14 07:02:13.750: INFO: (16) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 7.149167ms)
  Mar 14 07:02:13.750: INFO: (16) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 7.450833ms)
  Mar 14 07:02:13.750: INFO: (16) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 7.699482ms)
  Mar 14 07:02:13.753: INFO: (17) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 3.015826ms)
  Mar 14 07:02:13.754: INFO: (17) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.363491ms)
  Mar 14 07:02:13.754: INFO: (17) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 3.373888ms)
  Mar 14 07:02:13.754: INFO: (17) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 3.367797ms)
  Mar 14 07:02:13.754: INFO: (17) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 3.409865ms)
  Mar 14 07:02:13.754: INFO: (17) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 3.435249ms)
  Mar 14 07:02:13.754: INFO: (17) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 3.418686ms)
  Mar 14 07:02:13.754: INFO: (17) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 3.365896ms)
  Mar 14 07:02:13.754: INFO: (17) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 3.458568ms)
  Mar 14 07:02:13.754: INFO: (17) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 3.430673ms)
  Mar 14 07:02:13.755: INFO: (17) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 4.274459ms)
  Mar 14 07:02:13.755: INFO: (17) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 4.607559ms)
  Mar 14 07:02:13.755: INFO: (17) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 4.69763ms)
  Mar 14 07:02:13.755: INFO: (17) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 5.115402ms)
  Mar 14 07:02:13.756: INFO: (17) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 5.35594ms)
  Mar 14 07:02:13.756: INFO: (17) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 5.298827ms)
  Mar 14 07:02:13.760: INFO: (18) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 3.557405ms)
  Mar 14 07:02:13.760: INFO: (18) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 3.837614ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 4.40583ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 4.396981ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 4.318234ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 4.380938ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 4.217227ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 4.608086ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 4.28669ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 4.327152ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 4.390849ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 4.679295ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 4.231654ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 4.580712ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 4.648431ms)
  Mar 14 07:02:13.761: INFO: (18) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 4.312606ms)
  Mar 14 07:02:13.764: INFO: (19) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.024304ms)
  Mar 14 07:02:13.764: INFO: (19) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz/proxy/rewriteme">test</a> (200; 2.116728ms)
  Mar 14 07:02:13.764: INFO: (19) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.147314ms)
  Mar 14 07:02:13.764: INFO: (19) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:162/proxy/: bar (200; 2.101584ms)
  Mar 14 07:02:13.764: INFO: (19) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:462/proxy/: tls qux (200; 2.228172ms)
  Mar 14 07:02:13.764: INFO: (19) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:443/proxy/tlsrewritem... (200; 2.062155ms)
  Mar 14 07:02:13.765: INFO: (19) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname2/proxy/: bar (200; 2.94401ms)
  Mar 14 07:02:13.765: INFO: (19) /api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">test<... (200; 2.887558ms)
  Mar 14 07:02:13.765: INFO: (19) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:160/proxy/: foo (200; 2.914632ms)
  Mar 14 07:02:13.765: INFO: (19) /api/v1/namespaces/proxy-6026/services/http:proxy-service-5gbrq:portname1/proxy/: foo (200; 3.164047ms)
  Mar 14 07:02:13.765: INFO: (19) /api/v1/namespaces/proxy-6026/pods/https:proxy-service-5gbrq-s46nz:460/proxy/: tls baz (200; 3.027549ms)
  Mar 14 07:02:13.765: INFO: (19) /api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/: <a href="/api/v1/namespaces/proxy-6026/pods/http:proxy-service-5gbrq-s46nz:1080/proxy/rewriteme">... (200; 2.904622ms)
  Mar 14 07:02:13.766: INFO: (19) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname1/proxy/: tls baz (200; 3.788318ms)
  Mar 14 07:02:13.766: INFO: (19) /api/v1/namespaces/proxy-6026/services/https:proxy-service-5gbrq:tlsportname2/proxy/: tls qux (200; 3.929404ms)
  Mar 14 07:02:13.766: INFO: (19) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname1/proxy/: foo (200; 3.898832ms)
  Mar 14 07:02:13.766: INFO: (19) /api/v1/namespaces/proxy-6026/services/proxy-service-5gbrq:portname2/proxy/: bar (200; 4.039122ms)
  Mar 14 07:02:13.766: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-5gbrq in namespace proxy-6026, will wait for the garbage collector to delete the pods @ 03/14/24 07:02:13.768
  Mar 14 07:02:13.821: INFO: Deleting ReplicationController proxy-service-5gbrq took: 2.007331ms
  Mar 14 07:02:13.922: INFO: Terminating ReplicationController proxy-service-5gbrq pods took: 100.545589ms
  E0314 07:02:14.402401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:15.403255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:16.403329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-6026" for this suite. @ 03/14/24 07:02:16.523
• [4.940 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 03/14/24 07:02:16.526
  Mar 14 07:02:16.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:02:16.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:16.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:16.532
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 03/14/24 07:02:16.533
  E0314 07:02:17.403705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:18.404884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:19.405655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:20.405920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:02:20.542
  Mar 14 07:02:20.544: INFO: Trying to get logs from node k8s-worker01 pod pod-92cd4d3b-6af1-4d73-9d73-11992bbf3476 container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:02:20.546
  Mar 14 07:02:20.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9183" for this suite. @ 03/14/24 07:02:20.554
• [4.030 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 03/14/24 07:02:20.556
  Mar 14 07:02:20.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-runtime @ 03/14/24 07:02:20.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:20.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:20.563
  STEP: create the container @ 03/14/24 07:02:20.564
  W0314 07:02:20.566975      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/14/24 07:02:20.567
  E0314 07:02:21.406002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:22.406595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/14/24 07:02:22.573
  STEP: the container should be terminated @ 03/14/24 07:02:22.574
  STEP: the termination message should be set @ 03/14/24 07:02:22.574
  Mar 14 07:02:22.574: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 03/14/24 07:02:22.574
  Mar 14 07:02:22.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1148" for this suite. @ 03/14/24 07:02:22.58
• [2.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 03/14/24 07:02:22.583
  Mar 14 07:02:22.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename ingressclass @ 03/14/24 07:02:22.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:22.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:22.59
  STEP: getting /apis @ 03/14/24 07:02:22.591
  STEP: getting /apis/networking.k8s.io @ 03/14/24 07:02:22.592
  STEP: getting /apis/networking.k8s.iov1 @ 03/14/24 07:02:22.593
  STEP: creating @ 03/14/24 07:02:22.593
  STEP: getting @ 03/14/24 07:02:22.598
  STEP: listing @ 03/14/24 07:02:22.599
  STEP: watching @ 03/14/24 07:02:22.6
  Mar 14 07:02:22.600: INFO: starting watch
  STEP: patching @ 03/14/24 07:02:22.6
  STEP: updating @ 03/14/24 07:02:22.602
  Mar 14 07:02:22.604: INFO: waiting for watch events with expected annotations
  Mar 14 07:02:22.604: INFO: saw patched and updated annotations
  STEP: deleting @ 03/14/24 07:02:22.604
  STEP: deleting a collection @ 03/14/24 07:02:22.607
  Mar 14 07:02:22.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-7240" for this suite. @ 03/14/24 07:02:22.612
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 03/14/24 07:02:22.614
  Mar 14 07:02:22.614: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:02:22.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:22.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:22.619
  STEP: Creating projection with secret that has name projected-secret-test-map-f52abfaf-20e1-496c-8a3a-9d697d5e8ba1 @ 03/14/24 07:02:22.62
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:02:22.622
  E0314 07:02:23.406651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:24.406877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:02:24.627
  Mar 14 07:02:24.628: INFO: Trying to get logs from node k8s-worker02 pod pod-projected-secrets-63527fcf-2953-417f-9a76-f22c11129397 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:02:24.631
  Mar 14 07:02:24.635: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3301" for this suite. @ 03/14/24 07:02:24.636
• [2.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 03/14/24 07:02:24.639
  Mar 14 07:02:24.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename ingress @ 03/14/24 07:02:24.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:24.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:24.646
  STEP: getting /apis @ 03/14/24 07:02:24.647
  STEP: getting /apis/networking.k8s.io @ 03/14/24 07:02:24.649
  STEP: getting /apis/networking.k8s.iov1 @ 03/14/24 07:02:24.65
  STEP: creating @ 03/14/24 07:02:24.65
  STEP: getting @ 03/14/24 07:02:24.655
  STEP: listing @ 03/14/24 07:02:24.656
  STEP: watching @ 03/14/24 07:02:24.657
  Mar 14 07:02:24.657: INFO: starting watch
  STEP: cluster-wide listing @ 03/14/24 07:02:24.658
  STEP: cluster-wide watching @ 03/14/24 07:02:24.659
  Mar 14 07:02:24.659: INFO: starting watch
  STEP: patching @ 03/14/24 07:02:24.659
  STEP: updating @ 03/14/24 07:02:24.661
  Mar 14 07:02:24.663: INFO: waiting for watch events with expected annotations
  Mar 14 07:02:24.663: INFO: saw patched and updated annotations
  STEP: patching /status @ 03/14/24 07:02:24.663
  STEP: updating /status @ 03/14/24 07:02:24.666
  STEP: get /status @ 03/14/24 07:02:24.668
  STEP: deleting @ 03/14/24 07:02:24.669
  STEP: deleting a collection @ 03/14/24 07:02:24.672
  Mar 14 07:02:24.675: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-1488" for this suite. @ 03/14/24 07:02:24.677
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 03/14/24 07:02:24.679
  Mar 14 07:02:24.680: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename discovery @ 03/14/24 07:02:24.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:24.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:24.686
  STEP: Setting up server cert @ 03/14/24 07:02:24.688
  Mar 14 07:02:25.095: INFO: Checking APIGroup: apiregistration.k8s.io
  Mar 14 07:02:25.096: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Mar 14 07:02:25.096: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Mar 14 07:02:25.096: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Mar 14 07:02:25.096: INFO: Checking APIGroup: apps
  Mar 14 07:02:25.096: INFO: PreferredVersion.GroupVersion: apps/v1
  Mar 14 07:02:25.096: INFO: Versions found [{apps/v1 v1}]
  Mar 14 07:02:25.096: INFO: apps/v1 matches apps/v1
  Mar 14 07:02:25.096: INFO: Checking APIGroup: events.k8s.io
  Mar 14 07:02:25.097: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Mar 14 07:02:25.097: INFO: Versions found [{events.k8s.io/v1 v1}]
  Mar 14 07:02:25.097: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Mar 14 07:02:25.097: INFO: Checking APIGroup: authentication.k8s.io
  Mar 14 07:02:25.097: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Mar 14 07:02:25.097: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Mar 14 07:02:25.097: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Mar 14 07:02:25.097: INFO: Checking APIGroup: authorization.k8s.io
  Mar 14 07:02:25.097: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Mar 14 07:02:25.097: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Mar 14 07:02:25.097: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Mar 14 07:02:25.097: INFO: Checking APIGroup: autoscaling
  Mar 14 07:02:25.098: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Mar 14 07:02:25.098: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Mar 14 07:02:25.098: INFO: autoscaling/v2 matches autoscaling/v2
  Mar 14 07:02:25.098: INFO: Checking APIGroup: batch
  Mar 14 07:02:25.098: INFO: PreferredVersion.GroupVersion: batch/v1
  Mar 14 07:02:25.098: INFO: Versions found [{batch/v1 v1}]
  Mar 14 07:02:25.098: INFO: batch/v1 matches batch/v1
  Mar 14 07:02:25.098: INFO: Checking APIGroup: certificates.k8s.io
  Mar 14 07:02:25.099: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Mar 14 07:02:25.099: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Mar 14 07:02:25.099: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Mar 14 07:02:25.099: INFO: Checking APIGroup: networking.k8s.io
  Mar 14 07:02:25.099: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Mar 14 07:02:25.099: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Mar 14 07:02:25.099: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Mar 14 07:02:25.099: INFO: Checking APIGroup: policy
  Mar 14 07:02:25.099: INFO: PreferredVersion.GroupVersion: policy/v1
  Mar 14 07:02:25.099: INFO: Versions found [{policy/v1 v1}]
  Mar 14 07:02:25.100: INFO: policy/v1 matches policy/v1
  Mar 14 07:02:25.100: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Mar 14 07:02:25.100: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Mar 14 07:02:25.100: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Mar 14 07:02:25.100: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Mar 14 07:02:25.100: INFO: Checking APIGroup: storage.k8s.io
  Mar 14 07:02:25.100: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Mar 14 07:02:25.100: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Mar 14 07:02:25.100: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Mar 14 07:02:25.100: INFO: Checking APIGroup: admissionregistration.k8s.io
  Mar 14 07:02:25.101: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Mar 14 07:02:25.101: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Mar 14 07:02:25.101: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Mar 14 07:02:25.101: INFO: Checking APIGroup: apiextensions.k8s.io
  Mar 14 07:02:25.101: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Mar 14 07:02:25.101: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Mar 14 07:02:25.101: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Mar 14 07:02:25.101: INFO: Checking APIGroup: scheduling.k8s.io
  Mar 14 07:02:25.102: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Mar 14 07:02:25.102: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Mar 14 07:02:25.102: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Mar 14 07:02:25.102: INFO: Checking APIGroup: coordination.k8s.io
  Mar 14 07:02:25.102: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Mar 14 07:02:25.102: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Mar 14 07:02:25.102: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Mar 14 07:02:25.102: INFO: Checking APIGroup: node.k8s.io
  Mar 14 07:02:25.102: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Mar 14 07:02:25.102: INFO: Versions found [{node.k8s.io/v1 v1}]
  Mar 14 07:02:25.102: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Mar 14 07:02:25.102: INFO: Checking APIGroup: discovery.k8s.io
  Mar 14 07:02:25.103: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Mar 14 07:02:25.103: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Mar 14 07:02:25.103: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Mar 14 07:02:25.103: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Mar 14 07:02:25.103: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Mar 14 07:02:25.103: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Mar 14 07:02:25.103: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Mar 14 07:02:25.103: INFO: Checking APIGroup: crd.projectcalico.org
  Mar 14 07:02:25.103: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Mar 14 07:02:25.103: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Mar 14 07:02:25.103: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Mar 14 07:02:25.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3373" for this suite. @ 03/14/24 07:02:25.105
• [0.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 03/14/24 07:02:25.107
  Mar 14 07:02:25.107: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-runtime @ 03/14/24 07:02:25.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:25.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:25.114
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 03/14/24 07:02:25.118
  E0314 07:02:25.407030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:26.408174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:27.408234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:28.408636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:29.409136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:30.409491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:31.409996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:32.410493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:33.411006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:34.411772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:35.412403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:36.413258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:37.414136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:38.414667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:39.414706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:40.415230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 03/14/24 07:02:41.148
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 03/14/24 07:02:41.149
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 03/14/24 07:02:41.151
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 03/14/24 07:02:41.151
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 03/14/24 07:02:41.158
  E0314 07:02:41.415894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:42.415955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:43.416886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 03/14/24 07:02:44.164
  E0314 07:02:44.417503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 03/14/24 07:02:45.168
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 03/14/24 07:02:45.169
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 03/14/24 07:02:45.169
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 03/14/24 07:02:45.176
  E0314 07:02:45.417610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 03/14/24 07:02:46.178
  E0314 07:02:46.418254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:47.418291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 03/14/24 07:02:48.183
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 03/14/24 07:02:48.185
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 03/14/24 07:02:48.185
  Mar 14 07:02:48.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6810" for this suite. @ 03/14/24 07:02:48.194
• [23.088 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 03/14/24 07:02:48.196
  Mar 14 07:02:48.196: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename field-validation @ 03/14/24 07:02:48.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:48.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:48.204
  STEP: apply creating a deployment @ 03/14/24 07:02:48.205
  Mar 14 07:02:48.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3005" for this suite. @ 03/14/24 07:02:48.211
• [0.017 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 03/14/24 07:02:48.214
  Mar 14 07:02:48.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename cronjob @ 03/14/24 07:02:48.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:48.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:48.222
  STEP: Creating a cronjob @ 03/14/24 07:02:48.223
  STEP: creating @ 03/14/24 07:02:48.223
  STEP: getting @ 03/14/24 07:02:48.225
  STEP: listing @ 03/14/24 07:02:48.226
  STEP: watching @ 03/14/24 07:02:48.227
  Mar 14 07:02:48.227: INFO: starting watch
  STEP: cluster-wide listing @ 03/14/24 07:02:48.228
  STEP: cluster-wide watching @ 03/14/24 07:02:48.229
  Mar 14 07:02:48.229: INFO: starting watch
  STEP: patching @ 03/14/24 07:02:48.229
  STEP: updating @ 03/14/24 07:02:48.233
  Mar 14 07:02:48.237: INFO: waiting for watch events with expected annotations
  Mar 14 07:02:48.237: INFO: saw patched and updated annotations
  STEP: patching /status @ 03/14/24 07:02:48.237
  STEP: updating /status @ 03/14/24 07:02:48.239
  STEP: get /status @ 03/14/24 07:02:48.242
  STEP: deleting @ 03/14/24 07:02:48.243
  STEP: deleting a collection @ 03/14/24 07:02:48.247
  Mar 14 07:02:48.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7704" for this suite. @ 03/14/24 07:02:48.252
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 03/14/24 07:02:48.256
  Mar 14 07:02:48.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replicaset @ 03/14/24 07:02:48.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:48.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:48.263
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 03/14/24 07:02:48.264
  E0314 07:02:48.418346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:49.419187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 03/14/24 07:02:50.271
  STEP: Then the orphan pod is adopted @ 03/14/24 07:02:50.273
  E0314 07:02:50.419662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 03/14/24 07:02:51.276
  Mar 14 07:02:51.277: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 03/14/24 07:02:51.281
  E0314 07:02:51.420642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:02:52.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3022" for this suite. @ 03/14/24 07:02:52.285
• [4.033 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 03/14/24 07:02:52.289
  Mar 14 07:02:52.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sysctl @ 03/14/24 07:02:52.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:52.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:52.294
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 03/14/24 07:02:52.296
  STEP: Watching for error events or started pod @ 03/14/24 07:02:52.299
  E0314 07:02:52.421300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:53.421553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 03/14/24 07:02:54.301
  STEP: Checking that the pod succeeded @ 03/14/24 07:02:54.303
  STEP: Getting logs from the pod @ 03/14/24 07:02:54.303
  STEP: Checking that the sysctl is actually updated @ 03/14/24 07:02:54.305
  Mar 14 07:02:54.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1335" for this suite. @ 03/14/24 07:02:54.307
• [2.021 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 03/14/24 07:02:54.309
  Mar 14 07:02:54.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:02:54.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:54.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:54.316
  STEP: Creating secret with name secret-test-map-51994db5-9d5a-4d59-83f1-f41cd9acd9a9 @ 03/14/24 07:02:54.317
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:02:54.318
  E0314 07:02:54.421731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:55.421852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:02:56.324
  Mar 14 07:02:56.325: INFO: Trying to get logs from node k8s-worker02 pod pod-secrets-717c94ff-0da0-4f34-b8c8-b446a4076b85 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:02:56.327
  Mar 14 07:02:56.331: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1312" for this suite. @ 03/14/24 07:02:56.332
• [2.025 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 03/14/24 07:02:56.335
  Mar 14 07:02:56.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:02:56.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:56.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:56.343
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 03/14/24 07:02:56.345
  E0314 07:02:56.422024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:57.422274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:02:58.351
  Mar 14 07:02:58.353: INFO: Trying to get logs from node k8s-worker02 pod pod-1e49b5b5-2031-40bd-aa6e-6ff1c7c283e7 container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:02:58.355
  Mar 14 07:02:58.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-408" for this suite. @ 03/14/24 07:02:58.363
• [2.030 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 03/14/24 07:02:58.366
  Mar 14 07:02:58.366: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 07:02:58.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:02:58.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:02:58.373
  STEP: Creating configMap with name configmap-test-upd-93ca60a6-61ef-48af-8e11-b0629c96e4f3 @ 03/14/24 07:02:58.375
  STEP: Creating the pod @ 03/14/24 07:02:58.377
  E0314 07:02:58.422592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:02:59.422799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 03/14/24 07:03:00.384
  STEP: Waiting for pod with binary data @ 03/14/24 07:03:00.386
  Mar 14 07:03:00.388: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8598" for this suite. @ 03/14/24 07:03:00.389
• [2.026 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 03/14/24 07:03:00.392
  Mar 14 07:03:00.392: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename daemonsets @ 03/14/24 07:03:00.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:03:00.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:03:00.399
  Mar 14 07:03:00.406: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/14/24 07:03:00.409
  Mar 14 07:03:00.411: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:03:00.411: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:03:00.423112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:01.415: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 14 07:03:01.415: INFO: Node k8s-worker01 is running 0 daemon pod, expected 1
  E0314 07:03:01.423729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:02.416: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 14 07:03:02.416: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 03/14/24 07:03:02.42
  E0314 07:03:02.424561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Check that daemon pods images are updated. @ 03/14/24 07:03:02.426
  Mar 14 07:03:02.427: INFO: Wrong image for pod: daemon-set-7zqld. Expected: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45, got: hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4.
  Mar 14 07:03:02.427: INFO: Wrong image for pod: daemon-set-fnhxh. Expected: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45, got: hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4.
  Mar 14 07:03:02.427: INFO: Wrong image for pod: daemon-set-wxb2h. Expected: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45, got: hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4.
  E0314 07:03:03.425095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:03.430: INFO: Wrong image for pod: daemon-set-7zqld. Expected: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45, got: hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4.
  Mar 14 07:03:03.430: INFO: Wrong image for pod: daemon-set-fnhxh. Expected: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45, got: hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4.
  E0314 07:03:04.425872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:04.431: INFO: Wrong image for pod: daemon-set-7zqld. Expected: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45, got: hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4.
  Mar 14 07:03:04.431: INFO: Wrong image for pod: daemon-set-fnhxh. Expected: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45, got: hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4.
  Mar 14 07:03:04.431: INFO: Pod daemon-set-vbsjp is not available
  E0314 07:03:05.426410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:05.430: INFO: Wrong image for pod: daemon-set-7zqld. Expected: hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45, got: hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4.
  Mar 14 07:03:05.430: INFO: Pod daemon-set-xzwnt is not available
  E0314 07:03:06.426593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:06.431: INFO: Pod daemon-set-cd59b is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 03/14/24 07:03:06.432
  Mar 14 07:03:06.434: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 14 07:03:06.434: INFO: Node k8s-worker02 is running 0 daemon pod, expected 1
  E0314 07:03:07.426830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:07.439: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 14 07:03:07.439: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/14/24 07:03:07.443
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2105, will wait for the garbage collector to delete the pods @ 03/14/24 07:03:07.443
  Mar 14 07:03:07.497: INFO: Deleting DaemonSet.extensions daemon-set took: 2.357179ms
  Mar 14 07:03:07.598: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.040533ms
  E0314 07:03:08.427027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:09.427610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:10.300: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:03:10.300: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 14 07:03:10.301: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21369"},"items":null}

  Mar 14 07:03:10.302: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21369"},"items":null}

  Mar 14 07:03:10.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2105" for this suite. @ 03/14/24 07:03:10.309
• [9.919 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 03/14/24 07:03:10.312
  Mar 14 07:03:10.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:03:10.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:03:10.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:03:10.319
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-665bbcbd-78b8-4b47-81f2-5b7e5a6e0e61 @ 03/14/24 07:03:10.321
  STEP: Creating the pod @ 03/14/24 07:03:10.322
  E0314 07:03:10.427720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:11.428356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-665bbcbd-78b8-4b47-81f2-5b7e5a6e0e61 @ 03/14/24 07:03:12.333
  STEP: waiting to observe update in volume @ 03/14/24 07:03:12.335
  E0314 07:03:12.428726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:13.428903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:14.341: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5451" for this suite. @ 03/14/24 07:03:14.342
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 03/14/24 07:03:14.347
  Mar 14 07:03:14.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename containers @ 03/14/24 07:03:14.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:03:14.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:03:14.354
  E0314 07:03:14.429561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:15.429940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:16.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7236" for this suite. @ 03/14/24 07:03:16.366
• [2.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 03/14/24 07:03:16.37
  Mar 14 07:03:16.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:03:16.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:03:16.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:03:16.378
  STEP: Creating configMap with name projected-configmap-test-volume-6f6e3510-798a-410d-8c19-4e413b457e62 @ 03/14/24 07:03:16.379
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:03:16.381
  E0314 07:03:16.430886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:17.431007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:18.431722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:19.432762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:03:20.389
  Mar 14 07:03:20.391: INFO: Trying to get logs from node k8s-worker01 pod pod-projected-configmaps-1fa8f7c2-a05c-40a8-8134-a7479637febd container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:03:20.393
  Mar 14 07:03:20.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3416" for this suite. @ 03/14/24 07:03:20.401
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 03/14/24 07:03:20.403
  Mar 14 07:03:20.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/14/24 07:03:20.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:03:20.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:03:20.411
  STEP: set up a multi version CRD @ 03/14/24 07:03:20.412
  Mar 14 07:03:20.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:03:20.433528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:21.434400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:22.434972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:23.436122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 03/14/24 07:03:23.563
  STEP: check the new version name is served @ 03/14/24 07:03:23.572
  STEP: check the old version name is removed @ 03/14/24 07:03:24.266
  E0314 07:03:24.436367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 03/14/24 07:03:24.887
  E0314 07:03:25.439915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:26.440256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:27.362: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4376" for this suite. @ 03/14/24 07:03:27.368
• [6.967 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 03/14/24 07:03:27.37
  Mar 14 07:03:27.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename subpath @ 03/14/24 07:03:27.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:03:27.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:03:27.376
  STEP: Setting up data @ 03/14/24 07:03:27.378
  STEP: Creating pod pod-subpath-test-configmap-qn9g @ 03/14/24 07:03:27.38
  STEP: Creating a pod to test atomic-volume-subpath @ 03/14/24 07:03:27.38
  E0314 07:03:27.440809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:28.441033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:29.441941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:30.442390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:31.443352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:32.443485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:33.444186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:34.444298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:35.444636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:36.444717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:37.445011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:38.445138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:39.445756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:40.445926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:41.446812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:42.446944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:43.447554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:44.447671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:45.448512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:46.449405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:47.450086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:48.450215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:03:49.406
  Mar 14 07:03:49.407: INFO: Trying to get logs from node k8s-worker02 pod pod-subpath-test-configmap-qn9g container test-container-subpath-configmap-qn9g: <nil>
  STEP: delete the pod @ 03/14/24 07:03:49.41
  STEP: Deleting pod pod-subpath-test-configmap-qn9g @ 03/14/24 07:03:49.414
  Mar 14 07:03:49.414: INFO: Deleting pod "pod-subpath-test-configmap-qn9g" in namespace "subpath-3442"
  Mar 14 07:03:49.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3442" for this suite. @ 03/14/24 07:03:49.417
• [22.051 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 03/14/24 07:03:49.421
  Mar 14 07:03:49.421: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:03:49.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:03:49.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:03:49.429
  STEP: create deployment with httpd image @ 03/14/24 07:03:49.43
  Mar 14 07:03:49.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3458 create -f -'
  E0314 07:03:49.450827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:03:49.536: INFO: stderr: ""
  Mar 14 07:03:49.536: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 03/14/24 07:03:49.536
  Mar 14 07:03:49.536: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3458 diff -f -'
  Mar 14 07:03:49.628: INFO: rc: 1
  Mar 14 07:03:49.628: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3458 delete -f -'
  Mar 14 07:03:49.667: INFO: stderr: ""
  Mar 14 07:03:49.667: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Mar 14 07:03:49.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3458" for this suite. @ 03/14/24 07:03:49.669
• [0.251 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 03/14/24 07:03:49.672
  Mar 14 07:03:49.672: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename tables @ 03/14/24 07:03:49.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:03:49.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:03:49.68
  Mar 14 07:03:49.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-8772" for this suite. @ 03/14/24 07:03:49.684
• [0.014 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 03/14/24 07:03:49.686
  Mar 14 07:03:49.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename subpath @ 03/14/24 07:03:49.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:03:49.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:03:49.693
  STEP: Setting up data @ 03/14/24 07:03:49.695
  STEP: Creating pod pod-subpath-test-configmap-7fsh @ 03/14/24 07:03:49.698
  STEP: Creating a pod to test atomic-volume-subpath @ 03/14/24 07:03:49.698
  E0314 07:03:50.451091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:51.451169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:52.452302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:53.452411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:54.452640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:55.452734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:56.452917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:57.453103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:58.453995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:03:59.454111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:00.454823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:01.454921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:02.455859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:03.456127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:04.457036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:05.457192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:06.457253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:07.458138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:08.459132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:09.459276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:10.459439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:11.460469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:12.461183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:13.461519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:04:13.732
  Mar 14 07:04:13.733: INFO: Trying to get logs from node k8s-worker01 pod pod-subpath-test-configmap-7fsh container test-container-subpath-configmap-7fsh: <nil>
  STEP: delete the pod @ 03/14/24 07:04:13.735
  STEP: Deleting pod pod-subpath-test-configmap-7fsh @ 03/14/24 07:04:13.746
  Mar 14 07:04:13.746: INFO: Deleting pod "pod-subpath-test-configmap-7fsh" in namespace "subpath-2788"
  Mar 14 07:04:13.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2788" for this suite. @ 03/14/24 07:04:13.749
• [24.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 03/14/24 07:04:13.752
  Mar 14 07:04:13.752: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:04:13.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:04:13.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:04:13.76
  STEP: Creating a ResourceQuota @ 03/14/24 07:04:13.761
  STEP: Getting a ResourceQuota @ 03/14/24 07:04:13.762
  STEP: Listing all ResourceQuotas with LabelSelector @ 03/14/24 07:04:13.764
  STEP: Patching the ResourceQuota @ 03/14/24 07:04:13.765
  STEP: Deleting a Collection of ResourceQuotas @ 03/14/24 07:04:13.767
  STEP: Verifying the deleted ResourceQuota @ 03/14/24 07:04:13.77
  Mar 14 07:04:13.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6130" for this suite. @ 03/14/24 07:04:13.772
• [0.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 03/14/24 07:04:13.774
  Mar 14 07:04:13.774: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename job @ 03/14/24 07:04:13.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:04:13.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:04:13.78
  STEP: Creating a job @ 03/14/24 07:04:13.782
  STEP: Ensuring active pods == parallelism @ 03/14/24 07:04:13.784
  E0314 07:04:14.461856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:15.462294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 03/14/24 07:04:15.786
  Mar 14 07:04:16.292: INFO: Successfully updated pod "adopt-release-hzt75"
  STEP: Checking that the Job readopts the Pod @ 03/14/24 07:04:16.292
  E0314 07:04:16.463220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:17.463480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 03/14/24 07:04:18.295
  E0314 07:04:18.464172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:04:18.801: INFO: Successfully updated pod "adopt-release-hzt75"
  STEP: Checking that the Job releases the Pod @ 03/14/24 07:04:18.801
  E0314 07:04:19.464469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:20.464556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:04:20.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4836" for this suite. @ 03/14/24 07:04:20.806
• [7.034 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 03/14/24 07:04:20.812
  Mar 14 07:04:20.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename deployment @ 03/14/24 07:04:20.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:04:20.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:04:20.819
  Mar 14 07:04:20.821: INFO: Creating simple deployment test-new-deployment
  Mar 14 07:04:20.825: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  E0314 07:04:21.465059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:22.465207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 03/14/24 07:04:22.83
  STEP: updating a scale subresource @ 03/14/24 07:04:22.831
  STEP: verifying the deployment Spec.Replicas was modified @ 03/14/24 07:04:22.835
  STEP: Patch a scale subresource @ 03/14/24 07:04:22.836
  Mar 14 07:04:22.843: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7343",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d91bf8b4-38b7-4537-9bbd-19ab9106ad67",
      ResourceVersion: (string) (len=5) "21842",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845996660,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-788fbd4fc4\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 14 07:04:22.849: INFO: New ReplicaSet "test-new-deployment-788fbd4fc4" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-788fbd4fc4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7343",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7ded32d8-c1ed-4093-a3aa-e218be43bd03",
      ResourceVersion: (string) (len=5) "21845",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845996660,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "d91bf8b4-38b7-4537-9bbd-19ab9106ad67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 39 31 62 66 38  62 34 2d 33 38 62 37 2d  |\"d91bf8b4-38b7-|
              00000120  34 35 33 37 2d 39 62 62  64 2d 31 39 61 62 39 31  |4537-9bbd-19ab91|
              00000130  30 36 61 64 36 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |06ad67\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:04:22.852: INFO: Pod "test-new-deployment-788fbd4fc4-4llzc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-788fbd4fc4-4llzc",
      GenerateName: (string) (len=31) "test-new-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-7343",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c211ac42-a88a-468a-959f-7d629464e3df",
      ResourceVersion: (string) (len=5) "21834",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845996660,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2cfd8f6f52d998577aff51ab79365aea9130541491ea5f8667cf287ff42690f1",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.125/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.125/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "7ded32d8-c1ed-4093-a3aa-e218be43bd03",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  65 64 33 32 64 38 2d 63  |d\":\"7ded32d8-c|
              00000090  31 65 64 2d 34 30 39 33  2d 61 33 61 61 2d 65 32  |1ed-4093-a3aa-e2|
              000000a0  31 38 62 65 34 33 62 64  30 33 5c 22 7d 22 3a 7b  |18be43bd03\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 31 32 35 5c 22 7d  |10.244.79.125\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dxrbz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dxrbz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996661,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845996660,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845996661,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://b27008f95e443e1f1e1af5c5b41821693b18db9275adfd27d31a5d1fe40e6811",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:04:22.854: INFO: Pod "test-new-deployment-788fbd4fc4-gf979" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-788fbd4fc4-gf979",
      GenerateName: (string) (len=31) "test-new-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-7343",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "88264d52-2dba-452a-b050-7637f9e25518",
      ResourceVersion: (string) (len=5) "21846",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845996662,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "7ded32d8-c1ed-4093-a3aa-e218be43bd03",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 64  65 64 33 32 64 38 2d 63  |d\":\"7ded32d8-c|
              00000090  31 65 64 2d 34 30 39 33  2d 61 33 61 61 2d 65 32  |1ed-4093-a3aa-e2|
              000000a0  31 38 62 65 34 33 62 64  30 33 5c 22 7d 22 3a 7b  |18be43bd03\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbbc5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbbc5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:04:22.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7343" for this suite. @ 03/14/24 07:04:22.862
• [2.056 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 03/14/24 07:04:22.869
  Mar 14 07:04:22.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename gc @ 03/14/24 07:04:22.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:04:22.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:04:22.88
  STEP: create the rc @ 03/14/24 07:04:22.883
  W0314 07:04:22.885525      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0314 07:04:23.465246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:24.465429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:25.465435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:26.465530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:27.466348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:28.466482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 03/14/24 07:04:28.887
  STEP: wait for the rc to be deleted @ 03/14/24 07:04:28.889
  E0314 07:04:29.466913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:30.467901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:31.467975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:32.468113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:33.468243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 03/14/24 07:04:33.891
  E0314 07:04:34.469334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:35.469421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:36.469553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:37.469686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:38.469796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:39.470467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:40.470713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:41.471612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:42.471804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:43.471869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:44.472506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:45.472798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:46.472893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:47.473033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:48.473199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:49.473349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:50.473600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:51.473723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:52.473819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:53.473918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:54.474043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:55.474509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:56.474600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:57.474735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:58.474869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:04:59.475911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:00.476808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:01.477483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:02.477725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:03.477836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/14/24 07:05:03.899
  Mar 14 07:05:03.952: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 14 07:05:03.953: INFO: Deleting pod "simpletest.rc-2jpgr" in namespace "gc-104"
  Mar 14 07:05:03.958: INFO: Deleting pod "simpletest.rc-2qsh8" in namespace "gc-104"
  Mar 14 07:05:03.973: INFO: Deleting pod "simpletest.rc-49wmq" in namespace "gc-104"
  Mar 14 07:05:03.981: INFO: Deleting pod "simpletest.rc-4s85q" in namespace "gc-104"
  Mar 14 07:05:03.992: INFO: Deleting pod "simpletest.rc-54mdz" in namespace "gc-104"
  Mar 14 07:05:03.998: INFO: Deleting pod "simpletest.rc-54rkv" in namespace "gc-104"
  Mar 14 07:05:04.007: INFO: Deleting pod "simpletest.rc-5wg4k" in namespace "gc-104"
  Mar 14 07:05:04.022: INFO: Deleting pod "simpletest.rc-64nsx" in namespace "gc-104"
  Mar 14 07:05:04.032: INFO: Deleting pod "simpletest.rc-65j64" in namespace "gc-104"
  Mar 14 07:05:04.042: INFO: Deleting pod "simpletest.rc-68k5s" in namespace "gc-104"
  Mar 14 07:05:04.054: INFO: Deleting pod "simpletest.rc-6mjv4" in namespace "gc-104"
  Mar 14 07:05:04.062: INFO: Deleting pod "simpletest.rc-6vhhv" in namespace "gc-104"
  Mar 14 07:05:04.076: INFO: Deleting pod "simpletest.rc-6x6q2" in namespace "gc-104"
  Mar 14 07:05:04.084: INFO: Deleting pod "simpletest.rc-779t4" in namespace "gc-104"
  Mar 14 07:05:04.094: INFO: Deleting pod "simpletest.rc-7d9kw" in namespace "gc-104"
  Mar 14 07:05:04.106: INFO: Deleting pod "simpletest.rc-7dvs9" in namespace "gc-104"
  Mar 14 07:05:04.125: INFO: Deleting pod "simpletest.rc-7dzlt" in namespace "gc-104"
  Mar 14 07:05:04.140: INFO: Deleting pod "simpletest.rc-7ffmm" in namespace "gc-104"
  Mar 14 07:05:04.170: INFO: Deleting pod "simpletest.rc-7h4nl" in namespace "gc-104"
  Mar 14 07:05:04.185: INFO: Deleting pod "simpletest.rc-7m6wh" in namespace "gc-104"
  Mar 14 07:05:04.239: INFO: Deleting pod "simpletest.rc-7x6jp" in namespace "gc-104"
  Mar 14 07:05:04.292: INFO: Deleting pod "simpletest.rc-85l6b" in namespace "gc-104"
  Mar 14 07:05:04.320: INFO: Deleting pod "simpletest.rc-8lwwt" in namespace "gc-104"
  Mar 14 07:05:04.382: INFO: Deleting pod "simpletest.rc-8q2qj" in namespace "gc-104"
  Mar 14 07:05:04.436: INFO: Deleting pod "simpletest.rc-8vcl8" in namespace "gc-104"
  E0314 07:05:04.478074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:04.479: INFO: Deleting pod "simpletest.rc-8wzvr" in namespace "gc-104"
  Mar 14 07:05:04.518: INFO: Deleting pod "simpletest.rc-9x4sj" in namespace "gc-104"
  Mar 14 07:05:04.548: INFO: Deleting pod "simpletest.rc-b4jdx" in namespace "gc-104"
  Mar 14 07:05:04.573: INFO: Deleting pod "simpletest.rc-bw28c" in namespace "gc-104"
  Mar 14 07:05:04.607: INFO: Deleting pod "simpletest.rc-c5vrc" in namespace "gc-104"
  Mar 14 07:05:04.633: INFO: Deleting pod "simpletest.rc-ccjt8" in namespace "gc-104"
  Mar 14 07:05:04.672: INFO: Deleting pod "simpletest.rc-ctz9p" in namespace "gc-104"
  Mar 14 07:05:04.694: INFO: Deleting pod "simpletest.rc-cwg65" in namespace "gc-104"
  Mar 14 07:05:04.725: INFO: Deleting pod "simpletest.rc-cx4vq" in namespace "gc-104"
  Mar 14 07:05:04.757: INFO: Deleting pod "simpletest.rc-cx99t" in namespace "gc-104"
  Mar 14 07:05:04.782: INFO: Deleting pod "simpletest.rc-dds94" in namespace "gc-104"
  Mar 14 07:05:04.820: INFO: Deleting pod "simpletest.rc-dkfjk" in namespace "gc-104"
  Mar 14 07:05:04.854: INFO: Deleting pod "simpletest.rc-dl74m" in namespace "gc-104"
  Mar 14 07:05:04.878: INFO: Deleting pod "simpletest.rc-dn47s" in namespace "gc-104"
  Mar 14 07:05:04.906: INFO: Deleting pod "simpletest.rc-dpvh9" in namespace "gc-104"
  Mar 14 07:05:04.933: INFO: Deleting pod "simpletest.rc-dslz9" in namespace "gc-104"
  Mar 14 07:05:04.945: INFO: Deleting pod "simpletest.rc-dv78s" in namespace "gc-104"
  Mar 14 07:05:04.973: INFO: Deleting pod "simpletest.rc-f2nd6" in namespace "gc-104"
  Mar 14 07:05:05.007: INFO: Deleting pod "simpletest.rc-fp5gw" in namespace "gc-104"
  Mar 14 07:05:05.029: INFO: Deleting pod "simpletest.rc-fw4k8" in namespace "gc-104"
  Mar 14 07:05:05.050: INFO: Deleting pod "simpletest.rc-g455d" in namespace "gc-104"
  Mar 14 07:05:05.069: INFO: Deleting pod "simpletest.rc-g5wls" in namespace "gc-104"
  Mar 14 07:05:05.083: INFO: Deleting pod "simpletest.rc-gfksx" in namespace "gc-104"
  Mar 14 07:05:05.101: INFO: Deleting pod "simpletest.rc-grm59" in namespace "gc-104"
  Mar 14 07:05:05.113: INFO: Deleting pod "simpletest.rc-gv54c" in namespace "gc-104"
  Mar 14 07:05:05.133: INFO: Deleting pod "simpletest.rc-gzdz6" in namespace "gc-104"
  Mar 14 07:05:05.152: INFO: Deleting pod "simpletest.rc-hcktn" in namespace "gc-104"
  Mar 14 07:05:05.181: INFO: Deleting pod "simpletest.rc-hl8bw" in namespace "gc-104"
  Mar 14 07:05:05.214: INFO: Deleting pod "simpletest.rc-hns6v" in namespace "gc-104"
  Mar 14 07:05:05.249: INFO: Deleting pod "simpletest.rc-j48mb" in namespace "gc-104"
  Mar 14 07:05:05.328: INFO: Deleting pod "simpletest.rc-jgjqj" in namespace "gc-104"
  Mar 14 07:05:05.365: INFO: Deleting pod "simpletest.rc-jpd88" in namespace "gc-104"
  Mar 14 07:05:05.410: INFO: Deleting pod "simpletest.rc-k8mr9" in namespace "gc-104"
  Mar 14 07:05:05.451: INFO: Deleting pod "simpletest.rc-kkmc8" in namespace "gc-104"
  Mar 14 07:05:05.478: INFO: Deleting pod "simpletest.rc-kz2zp" in namespace "gc-104"
  E0314 07:05:05.478305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:05.501: INFO: Deleting pod "simpletest.rc-l7lp7" in namespace "gc-104"
  Mar 14 07:05:05.530: INFO: Deleting pod "simpletest.rc-l8mwc" in namespace "gc-104"
  Mar 14 07:05:05.546: INFO: Deleting pod "simpletest.rc-lcgzk" in namespace "gc-104"
  Mar 14 07:05:05.565: INFO: Deleting pod "simpletest.rc-lcxvr" in namespace "gc-104"
  Mar 14 07:05:05.576: INFO: Deleting pod "simpletest.rc-ln6fh" in namespace "gc-104"
  Mar 14 07:05:05.603: INFO: Deleting pod "simpletest.rc-mkl8j" in namespace "gc-104"
  Mar 14 07:05:05.616: INFO: Deleting pod "simpletest.rc-mqfdr" in namespace "gc-104"
  Mar 14 07:05:05.633: INFO: Deleting pod "simpletest.rc-n6q59" in namespace "gc-104"
  Mar 14 07:05:05.639: INFO: Deleting pod "simpletest.rc-nhnl5" in namespace "gc-104"
  Mar 14 07:05:05.661: INFO: Deleting pod "simpletest.rc-p4tzh" in namespace "gc-104"
  Mar 14 07:05:05.681: INFO: Deleting pod "simpletest.rc-pmh4q" in namespace "gc-104"
  Mar 14 07:05:05.700: INFO: Deleting pod "simpletest.rc-ptb86" in namespace "gc-104"
  Mar 14 07:05:05.733: INFO: Deleting pod "simpletest.rc-pzs84" in namespace "gc-104"
  Mar 14 07:05:05.769: INFO: Deleting pod "simpletest.rc-q4h6b" in namespace "gc-104"
  Mar 14 07:05:05.789: INFO: Deleting pod "simpletest.rc-qh4m8" in namespace "gc-104"
  Mar 14 07:05:05.832: INFO: Deleting pod "simpletest.rc-qzvsr" in namespace "gc-104"
  Mar 14 07:05:05.840: INFO: Deleting pod "simpletest.rc-r2hw7" in namespace "gc-104"
  Mar 14 07:05:05.874: INFO: Deleting pod "simpletest.rc-r6sf5" in namespace "gc-104"
  Mar 14 07:05:05.902: INFO: Deleting pod "simpletest.rc-rctmm" in namespace "gc-104"
  Mar 14 07:05:05.941: INFO: Deleting pod "simpletest.rc-rmlbv" in namespace "gc-104"
  Mar 14 07:05:05.972: INFO: Deleting pod "simpletest.rc-s5phm" in namespace "gc-104"
  Mar 14 07:05:06.003: INFO: Deleting pod "simpletest.rc-sc8m9" in namespace "gc-104"
  Mar 14 07:05:06.029: INFO: Deleting pod "simpletest.rc-sldph" in namespace "gc-104"
  Mar 14 07:05:06.067: INFO: Deleting pod "simpletest.rc-slztz" in namespace "gc-104"
  Mar 14 07:05:06.085: INFO: Deleting pod "simpletest.rc-sw8rh" in namespace "gc-104"
  Mar 14 07:05:06.099: INFO: Deleting pod "simpletest.rc-tnf7b" in namespace "gc-104"
  Mar 14 07:05:06.128: INFO: Deleting pod "simpletest.rc-tpqhq" in namespace "gc-104"
  Mar 14 07:05:06.169: INFO: Deleting pod "simpletest.rc-v6rsz" in namespace "gc-104"
  Mar 14 07:05:06.196: INFO: Deleting pod "simpletest.rc-v7ck9" in namespace "gc-104"
  Mar 14 07:05:06.207: INFO: Deleting pod "simpletest.rc-vrsnx" in namespace "gc-104"
  Mar 14 07:05:06.269: INFO: Deleting pod "simpletest.rc-vvnw5" in namespace "gc-104"
  Mar 14 07:05:06.315: INFO: Deleting pod "simpletest.rc-w4t7h" in namespace "gc-104"
  Mar 14 07:05:06.349: INFO: Deleting pod "simpletest.rc-wp8j6" in namespace "gc-104"
  Mar 14 07:05:06.365: INFO: Deleting pod "simpletest.rc-x56pj" in namespace "gc-104"
  Mar 14 07:05:06.423: INFO: Deleting pod "simpletest.rc-xrq4m" in namespace "gc-104"
  Mar 14 07:05:06.473: INFO: Deleting pod "simpletest.rc-xv255" in namespace "gc-104"
  E0314 07:05:06.478984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:06.518: INFO: Deleting pod "simpletest.rc-z4qq4" in namespace "gc-104"
  Mar 14 07:05:06.541: INFO: Deleting pod "simpletest.rc-z6p7b" in namespace "gc-104"
  Mar 14 07:05:06.556: INFO: Deleting pod "simpletest.rc-z6xmg" in namespace "gc-104"
  Mar 14 07:05:06.589: INFO: Deleting pod "simpletest.rc-zbvm8" in namespace "gc-104"
  Mar 14 07:05:06.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-104" for this suite. @ 03/14/24 07:05:06.652
• [43.831 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 03/14/24 07:05:06.703
  Mar 14 07:05:06.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:05:06.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:06.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:06.725
  STEP: starting the proxy server @ 03/14/24 07:05:06.727
  Mar 14 07:05:06.727: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-851 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 03/14/24 07:05:06.764
  Mar 14 07:05:06.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-851" for this suite. @ 03/14/24 07:05:06.777
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 03/14/24 07:05:06.781
  Mar 14 07:05:06.781: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:05:06.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:06.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:06.796
  Mar 14 07:05:06.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3696" for this suite. @ 03/14/24 07:05:06.842
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 03/14/24 07:05:06.847
  Mar 14 07:05:06.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename field-validation @ 03/14/24 07:05:06.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:06.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:06.858
  Mar 14 07:05:06.860: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:05:07.479978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:08.480229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0314 07:05:09.393961      21 warnings.go:70] unknown field "alpha"
  W0314 07:05:09.393977      21 warnings.go:70] unknown field "beta"
  W0314 07:05:09.393980      21 warnings.go:70] unknown field "delta"
  W0314 07:05:09.393983      21 warnings.go:70] unknown field "epsilon"
  W0314 07:05:09.393986      21 warnings.go:70] unknown field "gamma"
  E0314 07:05:09.481136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:09.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6910" for this suite. @ 03/14/24 07:05:09.908
• [3.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 03/14/24 07:05:09.911
  Mar 14 07:05:09.911: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:05:09.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:09.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:09.918
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 03/14/24 07:05:09.919
  E0314 07:05:10.482014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:11.482221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:05:11.926
  Mar 14 07:05:11.927: INFO: Trying to get logs from node k8s-worker02 pod pod-cc81a0e6-f971-4903-bdde-3fa187c81b29 container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:05:11.93
  Mar 14 07:05:11.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2908" for this suite. @ 03/14/24 07:05:11.936
• [2.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 03/14/24 07:05:11.939
  Mar 14 07:05:11.939: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:05:11.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:11.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:11.946
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:05:11.948
  E0314 07:05:12.483203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:13.483417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:05:13.962
  Mar 14 07:05:13.964: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-99971112-3106-4bc1-bc69-e919248fba1c container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:05:13.966
  Mar 14 07:05:13.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2120" for this suite. @ 03/14/24 07:05:13.972
• [2.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 03/14/24 07:05:13.975
  Mar 14 07:05:13.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:05:13.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:13.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:13.982
  STEP: Setting up server cert @ 03/14/24 07:05:13.99
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:05:14.207
  STEP: Deploying the webhook pod @ 03/14/24 07:05:14.21
  STEP: Wait for the deployment to be ready @ 03/14/24 07:05:14.214
  Mar 14 07:05:14.217: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0314 07:05:14.483458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:15.483561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:05:16.22
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:05:16.223
  E0314 07:05:16.484460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:17.223: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 03/14/24 07:05:17.225
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/14/24 07:05:17.233
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 03/14/24 07:05:17.238
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/14/24 07:05:17.242
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 03/14/24 07:05:17.245
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/14/24 07:05:17.25
  Mar 14 07:05:17.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7110" for this suite. @ 03/14/24 07:05:17.271
  STEP: Destroying namespace "webhook-markers-1930" for this suite. @ 03/14/24 07:05:17.274
• [3.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 03/14/24 07:05:17.278
  Mar 14 07:05:17.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:05:17.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:17.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:17.285
  STEP: Creating projection with secret that has name projected-secret-test-bd676811-3214-445d-b13e-94f0378eafab @ 03/14/24 07:05:17.286
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:05:17.287
  E0314 07:05:17.485459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:18.485687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:19.486719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:20.487041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:05:21.296
  Mar 14 07:05:21.297: INFO: Trying to get logs from node k8s-worker02 pod pod-projected-secrets-2a03ae46-8c03-4972-946c-f1b0e8842694 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:05:21.301
  Mar 14 07:05:21.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5799" for this suite. @ 03/14/24 07:05:21.308
• [4.032 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 03/14/24 07:05:21.31
  Mar 14 07:05:21.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:05:21.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:21.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:21.317
  STEP: Creating a pod to test downward api env vars @ 03/14/24 07:05:21.318
  E0314 07:05:21.487356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:22.487504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:23.488512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:24.489301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:05:25.326
  Mar 14 07:05:25.328: INFO: Trying to get logs from node k8s-worker02 pod downward-api-7adfd266-6ff3-40e7-912a-3c62ebf57149 container dapi-container: <nil>
  STEP: delete the pod @ 03/14/24 07:05:25.33
  Mar 14 07:05:25.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4695" for this suite. @ 03/14/24 07:05:25.336
• [4.035 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 03/14/24 07:05:25.345
  Mar 14 07:05:25.345: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename deployment @ 03/14/24 07:05:25.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:25.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:25.353
  Mar 14 07:05:25.358: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0314 07:05:25.490025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:26.490370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:27.490487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:28.490549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:29.491355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:30.360: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/14/24 07:05:30.36
  Mar 14 07:05:30.360: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 03/14/24 07:05:30.365
  Mar 14 07:05:30.369: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6390",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a0ed200-1866-42ac-b554-2e9c8116778d",
      ResourceVersion: (string) (len=5) "24691",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845996730,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 14 07:05:30.372: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Mar 14 07:05:30.372: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Mar 14 07:05:30.372: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6390",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c19018a-d201-476a-9905-10de80e4a79b",
      ResourceVersion: (string) (len=5) "24692",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845996725,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "8a0ed200-1866-42ac-b554-2e9c8116778d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 38 61 30 65 64 32 30  |"uid\":\"8a0ed20|
              00000040  30 2d 31 38 36 36 2d 34  32 61 63 2d 62 35 35 34  |0-1866-42ac-b554|
              00000050  2d 32 65 39 63 38 31 31  36 37 37 38 64 5c 22 7d  |-2e9c8116778d\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:05:30.374: INFO: Pod "test-cleanup-controller-kr6sc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-kr6sc",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6390",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "604533c8-1c2e-4be7-b126-30ca54041a19",
      ResourceVersion: (string) (len=5) "24681",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845996725,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d83e82e4550233ac5aea7856f1ffcb739d607e60c2e74e91c021dd530ead73ba",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.225/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.225/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "8c19018a-d201-476a-9905-10de80e4a79b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  38 63 31 39 30 31 38 61  |uid\":\"8c19018a|
              00000080  2d 64 32 30 31 2d 34 37  36 61 2d 39 39 30 35 2d  |-d201-476a-9905-|
              00000090  31 30 64 65 38 30 65 34  61 37 39 62 5c 22 7d 22  |10de80e4a79b\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 32 35 5c 22 7d  |10.244.69.225\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9hh5k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9hh5k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996726,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845996725,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845996725,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845996725,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://03c094565e2a1470b8c8f5386c5e286e8bd67a150875fa4150d4a869c54faa32",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:05:30.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6390" for this suite. @ 03/14/24 07:05:30.377
• [5.039 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 03/14/24 07:05:30.384
  Mar 14 07:05:30.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename podtemplate @ 03/14/24 07:05:30.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:30.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:30.392
  Mar 14 07:05:30.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-386" for this suite. @ 03/14/24 07:05:30.407
• [0.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 03/14/24 07:05:30.41
  Mar 14 07:05:30.410: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename job @ 03/14/24 07:05:30.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:30.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:30.417
  STEP: Creating Indexed job @ 03/14/24 07:05:30.418
  STEP: Ensuring job reaches completions @ 03/14/24 07:05:30.421
  E0314 07:05:30.492386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:31.492584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:32.493388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:33.493571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:34.494150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:35.494428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:36.494940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:37.495076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 03/14/24 07:05:38.423
  Mar 14 07:05:38.425: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5800" for this suite. @ 03/14/24 07:05:38.427
• [8.019 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 03/14/24 07:05:38.429
  Mar 14 07:05:38.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename watch @ 03/14/24 07:05:38.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:38.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:38.436
  STEP: creating a watch on configmaps with a certain label @ 03/14/24 07:05:38.438
  STEP: creating a new configmap @ 03/14/24 07:05:38.438
  STEP: modifying the configmap once @ 03/14/24 07:05:38.44
  STEP: changing the label value of the configmap @ 03/14/24 07:05:38.442
  STEP: Expecting to observe a delete notification for the watched object @ 03/14/24 07:05:38.445
  Mar 14 07:05:38.445: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6575  8cc75248-ae2a-4e80-a90c-05e22d6239a2 24844 0 2024-03-14 07:05:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-14 07:05:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:05:38.445: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6575  8cc75248-ae2a-4e80-a90c-05e22d6239a2 24845 0 2024-03-14 07:05:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-14 07:05:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:05:38.445: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6575  8cc75248-ae2a-4e80-a90c-05e22d6239a2 24846 0 2024-03-14 07:05:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-14 07:05:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 03/14/24 07:05:38.445
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 03/14/24 07:05:38.447
  E0314 07:05:38.495760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:39.495893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:40.496958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:41.497097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:42.497240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:43.497373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:44.497962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:45.498044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:46.498202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:47.498488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 03/14/24 07:05:48.448
  STEP: modifying the configmap a third time @ 03/14/24 07:05:48.452
  STEP: deleting the configmap @ 03/14/24 07:05:48.454
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 03/14/24 07:05:48.456
  Mar 14 07:05:48.456: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6575  8cc75248-ae2a-4e80-a90c-05e22d6239a2 24897 0 2024-03-14 07:05:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-14 07:05:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:05:48.456: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6575  8cc75248-ae2a-4e80-a90c-05e22d6239a2 24898 0 2024-03-14 07:05:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-14 07:05:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:05:48.456: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6575  8cc75248-ae2a-4e80-a90c-05e22d6239a2 24899 0 2024-03-14 07:05:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-03-14 07:05:48 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:05:48.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6575" for this suite. @ 03/14/24 07:05:48.458
• [10.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 03/14/24 07:05:48.46
  Mar 14 07:05:48.460: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 07:05:48.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:48.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:48.468
  Mar 14 07:05:48.481: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9106" for this suite. @ 03/14/24 07:05:48.482
• [0.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 03/14/24 07:05:48.485
  Mar 14 07:05:48.485: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:05:48.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:48.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:48.491
  E0314 07:05:48.498507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 03/14/24 07:05:48.5
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:05:49.137
  STEP: Deploying the webhook pod @ 03/14/24 07:05:49.141
  STEP: Wait for the deployment to be ready @ 03/14/24 07:05:49.145
  Mar 14 07:05:49.149: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0314 07:05:49.499424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:50.499723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:05:51.152
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:05:51.157
  E0314 07:05:51.499792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:52.157: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Mar 14 07:05:52.160: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:05:52.499897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9854-crds.webhook.example.com via the AdmissionRegistration API @ 03/14/24 07:05:52.665
  STEP: Creating a custom resource that should be mutated by the webhook @ 03/14/24 07:05:52.672
  E0314 07:05:53.499967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:54.500721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:54.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2660" for this suite. @ 03/14/24 07:05:55.218
  STEP: Destroying namespace "webhook-markers-1463" for this suite. @ 03/14/24 07:05:55.22
• [6.740 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 03/14/24 07:05:55.226
  Mar 14 07:05:55.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename events @ 03/14/24 07:05:55.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:55.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:55.235
  STEP: Create set of events @ 03/14/24 07:05:55.237
  STEP: get a list of Events with a label in the current namespace @ 03/14/24 07:05:55.242
  STEP: delete a list of events @ 03/14/24 07:05:55.244
  Mar 14 07:05:55.244: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 03/14/24 07:05:55.25
  Mar 14 07:05:55.252: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3061" for this suite. @ 03/14/24 07:05:55.254
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 03/14/24 07:05:55.257
  Mar 14 07:05:55.260: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename proxy @ 03/14/24 07:05:55.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:55.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:55.267
  Mar 14 07:05:55.268: INFO: Creating pod...
  E0314 07:05:55.501445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:05:56.501600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:57.274: INFO: Creating service...
  Mar 14 07:05:57.278: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/pods/agnhost/proxy?method=DELETE
  Mar 14 07:05:57.280: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Mar 14 07:05:57.280: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/pods/agnhost/proxy?method=OPTIONS
  Mar 14 07:05:57.281: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Mar 14 07:05:57.281: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/pods/agnhost/proxy?method=PATCH
  Mar 14 07:05:57.282: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Mar 14 07:05:57.282: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/pods/agnhost/proxy?method=POST
  Mar 14 07:05:57.284: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Mar 14 07:05:57.284: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/pods/agnhost/proxy?method=PUT
  Mar 14 07:05:57.286: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Mar 14 07:05:57.286: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/services/e2e-proxy-test-service/proxy?method=DELETE
  Mar 14 07:05:57.287: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Mar 14 07:05:57.287: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Mar 14 07:05:57.289: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Mar 14 07:05:57.289: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/services/e2e-proxy-test-service/proxy?method=PATCH
  Mar 14 07:05:57.290: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Mar 14 07:05:57.290: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/services/e2e-proxy-test-service/proxy?method=POST
  Mar 14 07:05:57.291: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Mar 14 07:05:57.291: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/services/e2e-proxy-test-service/proxy?method=PUT
  Mar 14 07:05:57.292: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Mar 14 07:05:57.292: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/pods/agnhost/proxy?method=GET
  Mar 14 07:05:57.292: INFO: http.Client request:GET StatusCode:301
  Mar 14 07:05:57.292: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/services/e2e-proxy-test-service/proxy?method=GET
  Mar 14 07:05:57.293: INFO: http.Client request:GET StatusCode:301
  Mar 14 07:05:57.294: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/pods/agnhost/proxy?method=HEAD
  Mar 14 07:05:57.294: INFO: http.Client request:HEAD StatusCode:301
  Mar 14 07:05:57.294: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4249/services/e2e-proxy-test-service/proxy?method=HEAD
  Mar 14 07:05:57.295: INFO: http.Client request:HEAD StatusCode:301
  Mar 14 07:05:57.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4249" for this suite. @ 03/14/24 07:05:57.297
• [2.041 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 03/14/24 07:05:57.298
  Mar 14 07:05:57.298: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:05:57.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:57.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:57.304
  Mar 14 07:05:57.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3760 create -f -'
  Mar 14 07:05:57.437: INFO: stderr: ""
  Mar 14 07:05:57.437: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Mar 14 07:05:57.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3760 create -f -'
  E0314 07:05:57.502221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:57.566: INFO: stderr: ""
  Mar 14 07:05:57.566: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 03/14/24 07:05:57.566
  E0314 07:05:58.502339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:05:58.567: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 14 07:05:58.567: INFO: Found 1 / 1
  Mar 14 07:05:58.567: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Mar 14 07:05:58.569: INFO: Selector matched 1 pods for map[app:agnhost]
  Mar 14 07:05:58.569: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Mar 14 07:05:58.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3760 describe pod agnhost-primary-fcknz'
  Mar 14 07:05:58.612: INFO: stderr: ""
  Mar 14 07:05:58.613: INFO: stdout: "Name:             agnhost-primary-fcknz\nNamespace:        kubectl-3760\nPriority:         0\nService Account:  default\nNode:             k8s-worker01/192.168.132.14\nStart Time:       Thu, 14 Mar 2024 07:05:57 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 1e78535b19046592bc0ce27e5511f27990daa54215d68210965a62b817e5d622\n                  cni.projectcalico.org/podIP: 10.244.79.83/32\n                  cni.projectcalico.org/podIPs: 10.244.79.83/32\nStatus:           Running\nIP:               10.244.79.83\nIPs:\n  IP:           10.244.79.83\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://399c94b29acf1035c650f6c70b161df85d6b4f9ab559d2ecdbc82aba7a5fdae3\n    Image:          hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45\n    Image ID:       hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost@sha256:8f07c07228b54f5d644c14241ad3e483b999c5d3a78f7580a6252c8ab42f2b66\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Thu, 14 Mar 2024 07:05:57 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-98xlf (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-98xlf:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3760/agnhost-primary-fcknz to k8s-worker01\n  Normal  Pulled     1s    kubelet            Container image \"hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Mar 14 07:05:58.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3760 describe rc agnhost-primary'
  Mar 14 07:05:58.658: INFO: stderr: ""
  Mar 14 07:05:58.658: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3760\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-fcknz\n"
  Mar 14 07:05:58.658: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3760 describe service agnhost-primary'
  Mar 14 07:05:58.702: INFO: stderr: ""
  Mar 14 07:05:58.702: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-3760\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.96.230.211\nIPs:               10.96.230.211\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.79.83:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Mar 14 07:05:58.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3760 describe node k8s-master01'
  Mar 14 07:05:58.760: INFO: stderr: ""
  Mar 14 07:05:58.760: INFO: stdout: "Name:               k8s-master01\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=k8s-master01\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.132.11/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.244.32.128\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Thu, 14 Mar 2024 05:49:07 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  k8s-master01\n  AcquireTime:     <unset>\n  RenewTime:       Thu, 14 Mar 2024 07:05:52 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Thu, 14 Mar 2024 06:27:18 +0000   Thu, 14 Mar 2024 06:27:18 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Thu, 14 Mar 2024 07:02:54 +0000   Thu, 14 Mar 2024 05:49:05 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Thu, 14 Mar 2024 07:02:54 +0000   Thu, 14 Mar 2024 05:49:05 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Thu, 14 Mar 2024 07:02:54 +0000   Thu, 14 Mar 2024 05:49:05 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Thu, 14 Mar 2024 07:02:54 +0000   Thu, 14 Mar 2024 05:59:51 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.132.11\n  Hostname:    k8s-master01\nCapacity:\n  cpu:                4\n  ephemeral-storage:  51893228Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8039012Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  47824798846\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7936612Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 9adab7063d2345fcabb7c1ec41a3b23d\n  System UUID:                9adab706-3d23-45fc-abb7-c1ec41a3b23d\n  Boot ID:                    ac365468-be5d-45e8-99ea-6dae13bd591d\n  Kernel Version:             5.10.0-172.1.3.oe2203sp3.x86_64\n  OS Image:                   NestOS For Container 22.03LTS_SP3\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.23.2\n  Kubelet Version:            v1.28.0\n  Kube-Proxy Version:         v1.28.0\nPodCIDR:                      10.244.0.0/24\nPodCIDRs:                     10.244.0.0/24\nNon-terminated Pods:          (10 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-kube-controllers-658d97c59c-wdvtv                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         76m\n  kube-system                 calico-node-tq6x7                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         76m\n  kube-system                 coredns-6554b8b87f-hkp8t                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     76m\n  kube-system                 coredns-6554b8b87f-j45dr                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (2%)     76m\n  kube-system                 etcd-k8s-master01                                          100m (2%)     0 (0%)      100Mi (1%)       0 (0%)         76m\n  kube-system                 kube-apiserver-k8s-master01                                250m (6%)     0 (0%)      0 (0%)           0 (0%)         76m\n  kube-system                 kube-controller-manager-k8s-master01                       200m (5%)     0 (0%)      0 (0%)           0 (0%)         76m\n  kube-system                 kube-proxy-8p9f8                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         76m\n  kube-system                 kube-scheduler-k8s-master01                                100m (2%)     0 (0%)      0 (0%)           0 (0%)         76m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-963ba77819a042af-whzhf    0 (0%)        0 (0%)      0 (0%)           0 (0%)         37m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1100m (27%)  0 (0%)\n  memory             240Mi (3%)   340Mi (4%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-1Gi      0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:\n  Type     Reason                   Age                From             Message\n  ----     ------                   ----               ----             -------\n  Normal   Starting                 38m                kube-proxy       \n  Normal   Starting                 66m                kube-proxy       \n  Normal   Starting                 76m                kube-proxy       \n  Normal   Starting                 76m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  76m (x8 over 76m)  kubelet          Node k8s-master01 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    76m (x8 over 76m)  kubelet          Node k8s-master01 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     76m (x8 over 76m)  kubelet          Node k8s-master01 status is now: NodeHasSufficientPID\n  Normal   Starting                 76m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  76m                kubelet          Node k8s-master01 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    76m                kubelet          Node k8s-master01 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     76m                kubelet          Node k8s-master01 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           76m                node-controller  Node k8s-master01 event: Registered Node k8s-master01 in Controller\n  Normal   NodeHasNoDiskPressure    67m                kubelet          Node k8s-master01 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  67m                kubelet          Node k8s-master01 status is now: NodeHasSufficientMemory\n  Normal   Starting                 67m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     67m                kubelet          Node k8s-master01 status is now: NodeHasSufficientPID\n  Normal   NodeNotReady             67m                kubelet          Node k8s-master01 status is now: NodeNotReady\n  Warning  ContainerGCFailed        66m                kubelet          rpc error: code = Unavailable desc = connection error: desc = \"transport: Error while dialing: dial unix /var/run/crio/crio.sock: connect: connection refused\"\n  Normal   Starting                 66m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  66m (x8 over 66m)  kubelet          Node k8s-master01 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    66m (x8 over 66m)  kubelet          Node k8s-master01 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     66m (x8 over 66m)  kubelet          Node k8s-master01 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           65m                node-controller  Node k8s-master01 event: Registered Node k8s-master01 in Controller\n  Normal   Starting                 38m                kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  38m (x8 over 38m)  kubelet          Node k8s-master01 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    38m (x8 over 38m)  kubelet          Node k8s-master01 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     38m (x8 over 38m)  kubelet          Node k8s-master01 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           38m                node-controller  Node k8s-master01 event: Registered Node k8s-master01 in Controller\n"
  Mar 14 07:05:58.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3760 describe namespace kubectl-3760'
  Mar 14 07:05:58.802: INFO: stderr: ""
  Mar 14 07:05:58.802: INFO: stdout: "Name:         kubectl-3760\nLabels:       e2e-framework=kubectl\n              e2e-run=60797c59-5be7-4123-9733-33275cebff3d\n              kubernetes.io/metadata.name=kubectl-3760\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Mar 14 07:05:58.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3760" for this suite. @ 03/14/24 07:05:58.803
• [1.507 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 03/14/24 07:05:58.805
  Mar 14 07:05:58.805: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:05:58.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:05:58.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:05:58.812
  STEP: Creating a pod to test downward api env vars @ 03/14/24 07:05:58.814
  E0314 07:05:59.502457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:00.502745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:06:00.819
  Mar 14 07:06:00.820: INFO: Trying to get logs from node k8s-worker02 pod downward-api-3174b9a0-620d-4725-9d47-a0b74b697c6f container dapi-container: <nil>
  STEP: delete the pod @ 03/14/24 07:06:00.823
  Mar 14 07:06:00.828: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1215" for this suite. @ 03/14/24 07:06:00.83
• [2.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 03/14/24 07:06:00.833
  Mar 14 07:06:00.833: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename field-validation @ 03/14/24 07:06:00.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:06:00.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:06:00.839
  Mar 14 07:06:00.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:06:01.503343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:02.504225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0314 07:06:03.364912      21 warnings.go:70] unknown field "alpha"
  W0314 07:06:03.364928      21 warnings.go:70] unknown field "beta"
  W0314 07:06:03.364931      21 warnings.go:70] unknown field "delta"
  W0314 07:06:03.364934      21 warnings.go:70] unknown field "epsilon"
  W0314 07:06:03.364936      21 warnings.go:70] unknown field "gamma"
  E0314 07:06:03.505050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:06:03.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9114" for this suite. @ 03/14/24 07:06:03.879
• [3.048 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 03/14/24 07:06:03.883
  Mar 14 07:06:03.883: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/14/24 07:06:03.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:06:03.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:06:03.89
  Mar 14 07:06:03.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:06:04.505435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 03/14/24 07:06:05.109
  Mar 14 07:06:05.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 create -f -'
  Mar 14 07:06:05.476: INFO: stderr: ""
  Mar 14 07:06:05.476: INFO: stdout: "e2e-test-crd-publish-openapi-2226-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Mar 14 07:06:05.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 delete e2e-test-crd-publish-openapi-2226-crds test-foo'
  E0314 07:06:05.506065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:06:05.520: INFO: stderr: ""
  Mar 14 07:06:05.520: INFO: stdout: "e2e-test-crd-publish-openapi-2226-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Mar 14 07:06:05.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 apply -f -'
  Mar 14 07:06:05.612: INFO: stderr: ""
  Mar 14 07:06:05.612: INFO: stdout: "e2e-test-crd-publish-openapi-2226-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Mar 14 07:06:05.612: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 delete e2e-test-crd-publish-openapi-2226-crds test-foo'
  Mar 14 07:06:05.656: INFO: stderr: ""
  Mar 14 07:06:05.656: INFO: stdout: "e2e-test-crd-publish-openapi-2226-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 03/14/24 07:06:05.657
  Mar 14 07:06:05.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 create -f -'
  Mar 14 07:06:05.747: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 03/14/24 07:06:05.747
  Mar 14 07:06:05.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 create -f -'
  Mar 14 07:06:05.834: INFO: rc: 1
  Mar 14 07:06:05.834: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 apply -f -'
  Mar 14 07:06:05.927: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 03/14/24 07:06:05.927
  Mar 14 07:06:05.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 create -f -'
  Mar 14 07:06:06.017: INFO: rc: 1
  Mar 14 07:06:06.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 --namespace=crd-publish-openapi-4390 apply -f -'
  Mar 14 07:06:06.104: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 03/14/24 07:06:06.105
  Mar 14 07:06:06.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 explain e2e-test-crd-publish-openapi-2226-crds'
  Mar 14 07:06:06.192: INFO: stderr: ""
  Mar 14 07:06:06.192: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2226-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 03/14/24 07:06:06.192
  Mar 14 07:06:06.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 explain e2e-test-crd-publish-openapi-2226-crds.metadata'
  Mar 14 07:06:06.277: INFO: stderr: ""
  Mar 14 07:06:06.277: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2226-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Mar 14 07:06:06.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 explain e2e-test-crd-publish-openapi-2226-crds.spec'
  Mar 14 07:06:06.365: INFO: stderr: ""
  Mar 14 07:06:06.365: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2226-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Mar 14 07:06:06.365: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 explain e2e-test-crd-publish-openapi-2226-crds.spec.bars'
  Mar 14 07:06:06.454: INFO: stderr: ""
  Mar 14 07:06:06.454: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-2226-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 03/14/24 07:06:06.454
  Mar 14 07:06:06.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4390 explain e2e-test-crd-publish-openapi-2226-crds.spec.bars2'
  E0314 07:06:06.506650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:06:06.542: INFO: rc: 1
  E0314 07:06:07.507150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:06:07.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4390" for this suite. @ 03/14/24 07:06:07.741
• [3.860 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 03/14/24 07:06:07.743
  Mar 14 07:06:07.743: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:06:07.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:06:07.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:06:07.75
  STEP: Creating a ResourceQuota with best effort scope @ 03/14/24 07:06:07.751
  STEP: Ensuring ResourceQuota status is calculated @ 03/14/24 07:06:07.752
  E0314 07:06:08.507174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:09.507900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 03/14/24 07:06:09.754
  STEP: Ensuring ResourceQuota status is calculated @ 03/14/24 07:06:09.757
  E0314 07:06:10.508346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:11.508484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 03/14/24 07:06:11.759
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 03/14/24 07:06:11.765
  E0314 07:06:12.509244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:13.509975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 03/14/24 07:06:13.768
  E0314 07:06:14.510238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:15.510502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/14/24 07:06:15.77
  STEP: Ensuring resource quota status released the pod usage @ 03/14/24 07:06:15.774
  E0314 07:06:16.510529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:17.511069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 03/14/24 07:06:17.776
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 03/14/24 07:06:17.781
  E0314 07:06:18.511284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:19.512004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 03/14/24 07:06:19.783
  E0314 07:06:20.512687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:21.512794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/14/24 07:06:21.785
  STEP: Ensuring resource quota status released the pod usage @ 03/14/24 07:06:21.79
  E0314 07:06:22.513163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:23.513312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:06:23.792: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6596" for this suite. @ 03/14/24 07:06:23.794
• [16.053 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 03/14/24 07:06:23.796
  Mar 14 07:06:23.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename limitrange @ 03/14/24 07:06:23.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:06:23.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:06:23.804
  STEP: Creating LimitRange "e2e-limitrange-5rwn4" in namespace "limitrange-6008" @ 03/14/24 07:06:23.805
  STEP: Creating another limitRange in another namespace @ 03/14/24 07:06:23.806
  Mar 14 07:06:23.811: INFO: Namespace "e2e-limitrange-5rwn4-5068" created
  Mar 14 07:06:23.811: INFO: Creating LimitRange "e2e-limitrange-5rwn4" in namespace "e2e-limitrange-5rwn4-5068"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-5rwn4" @ 03/14/24 07:06:23.812
  Mar 14 07:06:23.813: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-5rwn4" in "limitrange-6008" namespace @ 03/14/24 07:06:23.813
  Mar 14 07:06:23.816: INFO: LimitRange "e2e-limitrange-5rwn4" has been patched
  STEP: Delete LimitRange "e2e-limitrange-5rwn4" by Collection with labelSelector: "e2e-limitrange-5rwn4=patched" @ 03/14/24 07:06:23.816
  STEP: Confirm that the limitRange "e2e-limitrange-5rwn4" has been deleted @ 03/14/24 07:06:23.818
  Mar 14 07:06:23.818: INFO: Requesting list of LimitRange to confirm quantity
  Mar 14 07:06:23.819: INFO: Found 0 LimitRange with label "e2e-limitrange-5rwn4=patched"
  Mar 14 07:06:23.819: INFO: LimitRange "e2e-limitrange-5rwn4" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-5rwn4" @ 03/14/24 07:06:23.819
  Mar 14 07:06:23.820: INFO: Found 1 limitRange
  Mar 14 07:06:23.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6008" for this suite. @ 03/14/24 07:06:23.821
  STEP: Destroying namespace "e2e-limitrange-5rwn4-5068" for this suite. @ 03/14/24 07:06:23.823
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 03/14/24 07:06:23.828
  Mar 14 07:06:23.828: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:06:23.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:06:23.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:06:23.834
  STEP: Counting existing ResourceQuota @ 03/14/24 07:06:23.835
  E0314 07:06:24.514223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:25.514739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:26.515665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:27.515926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:28.516740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/14/24 07:06:28.837
  STEP: Ensuring resource quota status is calculated @ 03/14/24 07:06:28.839
  E0314 07:06:29.517100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:30.517239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 03/14/24 07:06:30.842
  STEP: Ensuring resource quota status captures replication controller creation @ 03/14/24 07:06:30.847
  E0314 07:06:31.517598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:32.517704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 03/14/24 07:06:32.849
  STEP: Ensuring resource quota status released usage @ 03/14/24 07:06:32.852
  E0314 07:06:33.517830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:34.518099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:06:34.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8057" for this suite. @ 03/14/24 07:06:34.855
• [11.030 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 03/14/24 07:06:34.859
  Mar 14 07:06:34.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename lease-test @ 03/14/24 07:06:34.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:06:34.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:06:34.867
  Mar 14 07:06:34.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-2204" for this suite. @ 03/14/24 07:06:34.886
• [0.030 seconds]
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 03/14/24 07:06:34.888
  Mar 14 07:06:34.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename dns @ 03/14/24 07:06:34.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:06:34.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:06:34.895
  STEP: Creating a test externalName service @ 03/14/24 07:06:34.896
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5640.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5640.svc.cluster.local; sleep 1; done
   @ 03/14/24 07:06:34.898
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5640.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5640.svc.cluster.local; sleep 1; done
   @ 03/14/24 07:06:34.898
  STEP: creating a pod to probe DNS @ 03/14/24 07:06:34.898
  STEP: submitting the pod to kubernetes @ 03/14/24 07:06:34.898
  E0314 07:06:35.518351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:36.518427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/14/24 07:06:36.907
  STEP: looking for the results for each expected name from probers @ 03/14/24 07:06:36.908
  Mar 14 07:06:36.911: INFO: DNS probes using dns-test-61bd2342-9e8e-414a-a707-bcab5d19d6ec succeeded

  STEP: changing the externalName to bar.example.com @ 03/14/24 07:06:36.911
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5640.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5640.svc.cluster.local; sleep 1; done
   @ 03/14/24 07:06:36.915
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5640.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5640.svc.cluster.local; sleep 1; done
   @ 03/14/24 07:06:36.915
  STEP: creating a second pod to probe DNS @ 03/14/24 07:06:36.915
  STEP: submitting the pod to kubernetes @ 03/14/24 07:06:36.915
  E0314 07:06:37.519385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:38.519540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/14/24 07:06:38.922
  STEP: looking for the results for each expected name from probers @ 03/14/24 07:06:38.923
  Mar 14 07:06:38.925: INFO: File wheezy_udp@dns-test-service-3.dns-5640.svc.cluster.local from pod  dns-5640/dns-test-d62b232c-a83f-42f4-b83a-de804c521ce1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Mar 14 07:06:38.927: INFO: File jessie_udp@dns-test-service-3.dns-5640.svc.cluster.local from pod  dns-5640/dns-test-d62b232c-a83f-42f4-b83a-de804c521ce1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Mar 14 07:06:38.927: INFO: Lookups using dns-5640/dns-test-d62b232c-a83f-42f4-b83a-de804c521ce1 failed for: [wheezy_udp@dns-test-service-3.dns-5640.svc.cluster.local jessie_udp@dns-test-service-3.dns-5640.svc.cluster.local]

  Mar 14 07:06:38.932: INFO: Pod client logs for webserver: 
  Mar 14 07:06:38.935: INFO: Pod client logs for querier: 
  Mar 14 07:06:38.937: INFO: Pod client logs for jessie-querier: 
  E0314 07:06:39.519960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:40.520917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:41.521096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:42.521224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:43.521459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:06:43.943: INFO: File jessie_udp@dns-test-service-3.dns-5640.svc.cluster.local from pod  dns-5640/dns-test-d62b232c-a83f-42f4-b83a-de804c521ce1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Mar 14 07:06:43.943: INFO: Lookups using dns-5640/dns-test-d62b232c-a83f-42f4-b83a-de804c521ce1 failed for: [jessie_udp@dns-test-service-3.dns-5640.svc.cluster.local]

  Mar 14 07:06:43.945: INFO: Pod client logs for webserver: 
  Mar 14 07:06:43.947: INFO: Pod client logs for querier: 
  Mar 14 07:06:43.949: INFO: Pod client logs for jessie-querier: 
  E0314 07:06:44.522147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:45.522576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:46.522812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:47.522981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:48.523112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:06:48.941: INFO: DNS probes using dns-test-d62b232c-a83f-42f4-b83a-de804c521ce1 succeeded

  STEP: changing the service to type=ClusterIP @ 03/14/24 07:06:48.941
  W0314 07:06:48.946246      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5640.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5640.svc.cluster.local; sleep 1; done
   @ 03/14/24 07:06:48.946
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5640.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5640.svc.cluster.local; sleep 1; done
   @ 03/14/24 07:06:48.946
  STEP: creating a third pod to probe DNS @ 03/14/24 07:06:48.946
  STEP: submitting the pod to kubernetes @ 03/14/24 07:06:48.948
  E0314 07:06:49.523989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:50.524425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/14/24 07:06:50.955
  STEP: looking for the results for each expected name from probers @ 03/14/24 07:06:50.957
  Mar 14 07:06:50.960: INFO: DNS probes using dns-test-abb4f07a-5b53-4c3c-b709-10d1bb602ed5 succeeded

  Mar 14 07:06:50.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:06:50.962
  STEP: deleting the pod @ 03/14/24 07:06:50.967
  STEP: deleting the pod @ 03/14/24 07:06:50.978
  STEP: deleting the test externalName service @ 03/14/24 07:06:50.984
  STEP: Destroying namespace "dns-5640" for this suite. @ 03/14/24 07:06:50.993
• [16.108 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 03/14/24 07:06:50.997
  Mar 14 07:06:50.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 07:06:50.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:06:51.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:06:51.01
  E0314 07:06:51.525348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:52.526151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:53.527337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:54.527492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:55.528355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:56.528959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:57.530022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:58.530097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:06:59.530293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:00.530526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:01.530542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:02.531234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:03.531648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:04.532413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:05.532450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:06.532521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:07.533315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:08.533419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:09.533621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:10.534388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:11.535245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:12.536124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:13.536695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:14.537327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:15.537398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:16.538062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:17.538160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:18.538826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:19.539261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:20.540270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:21.540383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:22.541034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:23.541639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:24.542489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:25.543363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:26.543557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:27.544263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:28.545060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:29.546144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:30.546741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:31.546867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:32.547666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:33.548206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:34.548375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:35.549418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:36.550097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:37.550642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:38.551576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:39.551675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:40.552295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:41.553250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:42.553269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:43.553567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:44.554347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:45.555060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:46.556113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:47.556722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:48.557456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:49.557851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:50.558653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:07:51.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1394" for this suite. @ 03/14/24 07:07:51.022
• [60.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 03/14/24 07:07:51.026
  Mar 14 07:07:51.026: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 07:07:51.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:07:51.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:07:51.033
  STEP: Creating pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001 @ 03/14/24 07:07:51.035
  E0314 07:07:51.559590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:52.559801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/14/24 07:07:53.042
  Mar 14 07:07:53.044: INFO: Initial restart count of pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 is 0
  Mar 14 07:07:53.045: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:07:53.560449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:54.560664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:07:55.047: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:07:55.561588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:56.562388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:07:57.050: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:07:57.562994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:07:58.563170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:07:59.052: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:07:59.563900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:00.563948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:01.053: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:01.564579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:02.564676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:03.055: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:03.565119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:04.566153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:05.057: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:05.566399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:06.567066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:07.059: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:07.566997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:08.567098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:09.061: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:09.567720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:10.568090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:11.063: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:11.569020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:12.569735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:13.065: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:13.570202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:14.570422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:15.067: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:15.570552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:16.570863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:17.068: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:17.571023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:18.571115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:19.070: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:19.572024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:20.572477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:21.073: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:21.573067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:22.574338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:23.075: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:23.574867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:24.575144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:25.077: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:25.575996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:26.576117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:27.079: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:27.576705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:28.576844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:29.080: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:29.577263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:30.577383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:31.082: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:31.577421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:32.577499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:33.084: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:33.577949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:34.578174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:35.086: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:35.578946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:36.579029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:37.087: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:37.579273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:38.579404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:39.090: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:39.580011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:40.580245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:41.092: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:41.581263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:42.581542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:43.094: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:43.581924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:44.582096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:45.096: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:45.582806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:46.582945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:47.098: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:47.583806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:48.583942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:49.100: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:49.584828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:50.585130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:51.102: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:51.585261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:52.586058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:53.105: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:53.586670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:54.586756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:55.106: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:55.587425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:56.588380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:57.108: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:57.588511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:08:58.588609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:08:59.109: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:08:59.588946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:00.589168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:01.111: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:01.589279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:02.589401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:03.113: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:03.589793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:04.589861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:05.114: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:05.590634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:06.590727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:07.116: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:07.590910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:08.591029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:09.117: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:09.591459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:10.591741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:11.119: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:11.592341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:12.593432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:13.121: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:13.594008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:14.594156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:15.123: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:15.594820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:16.594912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:17.124: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:17.595001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:18.595105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:19.125: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:19.595193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:20.595285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:21.128: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:21.595394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:22.595453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:23.130: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:23.595617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:24.595760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:25.131: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:25.596547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:26.596672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:27.133: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:27.596757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:28.596888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:29.135: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:29.597557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:30.597637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:31.137: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:31.598605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:32.598699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:33.139: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:33.598918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:34.599023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:35.141: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:35.599329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:36.599454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:37.143: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:37.599681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:38.599807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:39.144: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:39.600122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:40.600272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:41.146: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:41.601108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:42.602118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:43.147: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:43.602555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:44.602735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:45.149: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:45.603523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:46.603710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:47.151: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:47.604364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:48.605437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:49.153: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:49.605926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:50.606137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:51.155: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:51.607015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:52.607196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:53.157: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:53.607626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:54.607807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:55.158: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:55.608512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:56.608681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:57.160: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:57.609486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:09:58.609683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:09:59.163: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:09:59.609887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:00.610111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:01.165: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:01.611065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:02.611341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:03.167: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:03.612225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:04.612494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:05.169: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:05.612915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:06.613538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:07.171: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:07.614499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:08.614787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:09.174: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:09.615844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:10.615936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:11.176: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:11.616943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:12.617079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:13.177: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:13.617444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:14.617511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:15.179: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:15.618374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:16.618508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:17.181: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:17.619040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:18.619929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:19.183: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:19.620464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:20.620705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:21.185: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:21.621716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:22.621843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:23.186: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:23.622344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:24.622486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:25.188: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:25.623213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:26.623344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:27.190: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:27.623422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:28.623507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:29.192: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:29.623590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:30.623683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:31.195: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:31.624548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:32.624651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:33.196: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:33.624742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:34.624874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:35.198: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:35.625554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:36.625685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:37.199: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:37.626254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:38.627349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:39.201: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:39.628146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:40.628261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:41.204: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:41.628663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:42.628795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:43.205: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:43.629352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:44.629475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:45.207: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:45.630213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:46.630294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:47.209: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:47.631126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:48.631353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:49.211: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:49.632251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:50.632597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:51.214: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:51.633610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:52.633700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:53.215: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:53.634501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:54.634563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:55.217: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:55.635297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:56.635597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:57.219: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:57.635843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:10:58.635974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:10:59.221: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:10:59.636827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:00.636993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:01.223: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:01.637146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:02.637263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:03.225: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:03.638090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:04.638210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:05.230: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:05.639011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:06.639584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:07.232: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:07.640100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:08.640223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:09.234: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:09.640827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:10.641070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:11.236: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:11.641778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:12.641866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:13.237: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:13.642089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:14.642191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:15.241: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:15.642801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:16.642920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:17.243: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:17.643637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:18.643756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:19.245: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:19.644610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:20.644710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:21.247: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:21.644817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:22.645117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:23.249: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:23.645203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:24.645339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:25.252: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:25.646162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:26.646299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:27.254: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:27.646928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:28.647565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:29.256: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:29.648351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:30.648585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:31.259: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:31.649308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:32.649634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:33.260: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:33.649716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:34.649939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:35.262: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:35.650477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:36.650610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:37.264: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:37.651489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:38.651531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:39.266: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:39.652542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:40.652620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:41.268: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:41.652712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:42.652806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:43.269: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:43.653165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:44.653260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:45.271: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:45.654049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:46.654136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:47.273: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:47.654892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:48.655026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:49.275: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:49.655717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:50.655969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:51.277: INFO: Get pod test-webserver-42e1b39a-41cd-40d2-bad2-53bae43354e4 in namespace container-probe-9001
  E0314 07:11:51.656994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:52.657094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:11:53.277: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:11:53.279
  STEP: Destroying namespace "container-probe-9001" for this suite. @ 03/14/24 07:11:53.285
• [242.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 03/14/24 07:11:53.288
  Mar 14 07:11:53.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename statefulset @ 03/14/24 07:11:53.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:11:53.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:11:53.296
  STEP: Creating service test in namespace statefulset-8249 @ 03/14/24 07:11:53.298
  STEP: Creating statefulset ss in namespace statefulset-8249 @ 03/14/24 07:11:53.301
  Mar 14 07:11:53.305: INFO: Found 0 stateful pods, waiting for 1
  E0314 07:11:53.657619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:54.657725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:55.657823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:56.657874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:57.657948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:58.658044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:11:59.658151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:00.658343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:01.658466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:02.658619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:03.307: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 03/14/24 07:12:03.309
  STEP: Getting /status @ 03/14/24 07:12:03.315
  Mar 14 07:12:03.317: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 03/14/24 07:12:03.317
  Mar 14 07:12:03.321: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 03/14/24 07:12:03.321
  Mar 14 07:12:03.322: INFO: Observed &StatefulSet event: ADDED
  Mar 14 07:12:03.322: INFO: Found Statefulset ss in namespace statefulset-8249 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 14 07:12:03.322: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 03/14/24 07:12:03.323
  Mar 14 07:12:03.323: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Mar 14 07:12:03.326: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 03/14/24 07:12:03.326
  Mar 14 07:12:03.327: INFO: Observed &StatefulSet event: ADDED
  Mar 14 07:12:03.327: INFO: Deleting all statefulset in ns statefulset-8249
  Mar 14 07:12:03.328: INFO: Scaling statefulset ss to 0
  E0314 07:12:03.659346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:04.659502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:05.659735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:06.659646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:07.660345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:08.660424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:09.660515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:10.660943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:11.661993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:12.662304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:13.334: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 14 07:12:13.335: INFO: Deleting statefulset ss
  Mar 14 07:12:13.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8249" for this suite. @ 03/14/24 07:12:13.342
• [20.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 03/14/24 07:12:13.345
  Mar 14 07:12:13.345: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:12:13.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:13.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:13.352
  STEP: Creating the pod @ 03/14/24 07:12:13.353
  E0314 07:12:13.662721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:14.662787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:15.663355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:15.871: INFO: Successfully updated pod "labelsupdate941b4820-2306-4676-8fc4-57d4dc8d5541"
  E0314 07:12:16.663632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:17.663776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:17.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3774" for this suite. @ 03/14/24 07:12:17.88
• [4.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 03/14/24 07:12:17.884
  Mar 14 07:12:17.884: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename subjectreview @ 03/14/24 07:12:17.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:17.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:17.892
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-292" @ 03/14/24 07:12:17.893
  Mar 14 07:12:17.894: INFO: saUsername: "system:serviceaccount:subjectreview-292:e2e"
  Mar 14 07:12:17.894: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-292"}
  Mar 14 07:12:17.894: INFO: saUID: "07a9277f-1b74-4fbb-bca5-644112876207"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-292:e2e" @ 03/14/24 07:12:17.894
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-292:e2e" @ 03/14/24 07:12:17.895
  Mar 14 07:12:17.896: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-292:e2e" api 'list' configmaps in "subjectreview-292" namespace @ 03/14/24 07:12:17.896
  Mar 14 07:12:17.897: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-292:e2e" @ 03/14/24 07:12:17.897
  Mar 14 07:12:17.898: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Mar 14 07:12:17.898: INFO: LocalSubjectAccessReview has been verified
  Mar 14 07:12:17.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-292" for this suite. @ 03/14/24 07:12:17.899
• [0.018 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 03/14/24 07:12:17.902
  Mar 14 07:12:17.902: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename init-container @ 03/14/24 07:12:17.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:17.907
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:17.908
  STEP: creating the pod @ 03/14/24 07:12:17.909
  Mar 14 07:12:17.909: INFO: PodSpec: initContainers in spec.initContainers
  E0314 07:12:18.664391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:19.664912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:20.665156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:21.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-884" for this suite. @ 03/14/24 07:12:21.213
• [3.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 03/14/24 07:12:21.216
  Mar 14 07:12:21.216: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:12:21.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:21.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:21.224
  STEP: creating a replication controller @ 03/14/24 07:12:21.225
  Mar 14 07:12:21.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 create -f -'
  Mar 14 07:12:21.578: INFO: stderr: ""
  Mar 14 07:12:21.578: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/14/24 07:12:21.578
  Mar 14 07:12:21.578: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 14 07:12:21.624: INFO: stderr: ""
  Mar 14 07:12:21.624: INFO: stdout: "update-demo-nautilus-m8r6w update-demo-nautilus-pjpgr "
  Mar 14 07:12:21.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-m8r6w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 07:12:21.664: INFO: stderr: ""
  Mar 14 07:12:21.664: INFO: stdout: ""
  Mar 14 07:12:21.664: INFO: update-demo-nautilus-m8r6w is created but not running
  E0314 07:12:21.665233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:22.665387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:23.665481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:24.666356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:25.666657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:26.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0314 07:12:26.667118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:26.707: INFO: stderr: ""
  Mar 14 07:12:26.707: INFO: stdout: "update-demo-nautilus-m8r6w update-demo-nautilus-pjpgr "
  Mar 14 07:12:26.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-m8r6w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 07:12:26.747: INFO: stderr: ""
  Mar 14 07:12:26.747: INFO: stdout: "true"
  Mar 14 07:12:26.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-m8r6w -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 14 07:12:26.785: INFO: stderr: ""
  Mar 14 07:12:26.785: INFO: stdout: "hub.oepkgs.net/nestos/nestos-test/sonobuoy/nautilus:1.7"
  Mar 14 07:12:26.785: INFO: validating pod update-demo-nautilus-m8r6w
  Mar 14 07:12:26.787: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 14 07:12:26.787: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 14 07:12:26.787: INFO: update-demo-nautilus-m8r6w is verified up and running
  Mar 14 07:12:26.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-pjpgr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 07:12:26.827: INFO: stderr: ""
  Mar 14 07:12:26.827: INFO: stdout: "true"
  Mar 14 07:12:26.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-pjpgr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 14 07:12:26.865: INFO: stderr: ""
  Mar 14 07:12:26.865: INFO: stdout: "hub.oepkgs.net/nestos/nestos-test/sonobuoy/nautilus:1.7"
  Mar 14 07:12:26.865: INFO: validating pod update-demo-nautilus-pjpgr
  Mar 14 07:12:26.868: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 14 07:12:26.868: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 14 07:12:26.868: INFO: update-demo-nautilus-pjpgr is verified up and running
  STEP: scaling down the replication controller @ 03/14/24 07:12:26.868
  Mar 14 07:12:26.868: INFO: scanned /root for discovery docs: <nil>
  Mar 14 07:12:26.868: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0314 07:12:27.667815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:27.917: INFO: stderr: ""
  Mar 14 07:12:27.917: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/14/24 07:12:27.917
  Mar 14 07:12:27.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 14 07:12:27.959: INFO: stderr: ""
  Mar 14 07:12:27.960: INFO: stdout: "update-demo-nautilus-pjpgr "
  Mar 14 07:12:27.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-pjpgr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 07:12:28.002: INFO: stderr: ""
  Mar 14 07:12:28.002: INFO: stdout: "true"
  Mar 14 07:12:28.002: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-pjpgr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 14 07:12:28.044: INFO: stderr: ""
  Mar 14 07:12:28.044: INFO: stdout: "hub.oepkgs.net/nestos/nestos-test/sonobuoy/nautilus:1.7"
  Mar 14 07:12:28.044: INFO: validating pod update-demo-nautilus-pjpgr
  Mar 14 07:12:28.046: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 14 07:12:28.046: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 14 07:12:28.046: INFO: update-demo-nautilus-pjpgr is verified up and running
  STEP: scaling up the replication controller @ 03/14/24 07:12:28.046
  Mar 14 07:12:28.046: INFO: scanned /root for discovery docs: <nil>
  Mar 14 07:12:28.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0314 07:12:28.667911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:29.096: INFO: stderr: ""
  Mar 14 07:12:29.096: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 03/14/24 07:12:29.096
  Mar 14 07:12:29.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 14 07:12:29.142: INFO: stderr: ""
  Mar 14 07:12:29.142: INFO: stdout: "update-demo-nautilus-pjpgr update-demo-nautilus-sxrbp "
  Mar 14 07:12:29.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-pjpgr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 07:12:29.183: INFO: stderr: ""
  Mar 14 07:12:29.183: INFO: stdout: "true"
  Mar 14 07:12:29.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-pjpgr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 14 07:12:29.225: INFO: stderr: ""
  Mar 14 07:12:29.225: INFO: stdout: "hub.oepkgs.net/nestos/nestos-test/sonobuoy/nautilus:1.7"
  Mar 14 07:12:29.225: INFO: validating pod update-demo-nautilus-pjpgr
  Mar 14 07:12:29.227: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 14 07:12:29.227: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 14 07:12:29.227: INFO: update-demo-nautilus-pjpgr is verified up and running
  Mar 14 07:12:29.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-sxrbp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 07:12:29.267: INFO: stderr: ""
  Mar 14 07:12:29.267: INFO: stdout: ""
  Mar 14 07:12:29.267: INFO: update-demo-nautilus-sxrbp is created but not running
  E0314 07:12:29.668840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:30.669702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:31.669837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:32.669935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:33.670002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:34.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Mar 14 07:12:34.310: INFO: stderr: ""
  Mar 14 07:12:34.310: INFO: stdout: "update-demo-nautilus-pjpgr update-demo-nautilus-sxrbp "
  Mar 14 07:12:34.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-pjpgr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 07:12:34.348: INFO: stderr: ""
  Mar 14 07:12:34.348: INFO: stdout: "true"
  Mar 14 07:12:34.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-pjpgr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 14 07:12:34.388: INFO: stderr: ""
  Mar 14 07:12:34.388: INFO: stdout: "hub.oepkgs.net/nestos/nestos-test/sonobuoy/nautilus:1.7"
  Mar 14 07:12:34.388: INFO: validating pod update-demo-nautilus-pjpgr
  Mar 14 07:12:34.390: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 14 07:12:34.390: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 14 07:12:34.390: INFO: update-demo-nautilus-pjpgr is verified up and running
  Mar 14 07:12:34.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-sxrbp -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Mar 14 07:12:34.430: INFO: stderr: ""
  Mar 14 07:12:34.430: INFO: stdout: "true"
  Mar 14 07:12:34.431: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods update-demo-nautilus-sxrbp -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Mar 14 07:12:34.468: INFO: stderr: ""
  Mar 14 07:12:34.468: INFO: stdout: "hub.oepkgs.net/nestos/nestos-test/sonobuoy/nautilus:1.7"
  Mar 14 07:12:34.468: INFO: validating pod update-demo-nautilus-sxrbp
  Mar 14 07:12:34.471: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Mar 14 07:12:34.471: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Mar 14 07:12:34.471: INFO: update-demo-nautilus-sxrbp is verified up and running
  STEP: using delete to clean up resources @ 03/14/24 07:12:34.471
  Mar 14 07:12:34.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 delete --grace-period=0 --force -f -'
  Mar 14 07:12:34.511: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 14 07:12:34.511: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Mar 14 07:12:34.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get rc,svc -l name=update-demo --no-headers'
  Mar 14 07:12:34.559: INFO: stderr: "No resources found in kubectl-3341 namespace.\n"
  Mar 14 07:12:34.559: INFO: stdout: ""
  Mar 14 07:12:34.559: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3341 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Mar 14 07:12:34.601: INFO: stderr: ""
  Mar 14 07:12:34.601: INFO: stdout: ""
  Mar 14 07:12:34.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3341" for this suite. @ 03/14/24 07:12:34.603
• [13.391 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 03/14/24 07:12:34.606
  Mar 14 07:12:34.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:12:34.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:34.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:34.614
  STEP: running the image hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4 @ 03/14/24 07:12:34.616
  Mar 14 07:12:34.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5951 run e2e-test-httpd-pod --image=hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Mar 14 07:12:34.667: INFO: stderr: ""
  Mar 14 07:12:34.667: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 03/14/24 07:12:34.667
  E0314 07:12:34.670385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:35.671379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:36.671878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:37.672199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:38.672479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:39.672580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 03/14/24 07:12:39.718
  Mar 14 07:12:39.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5951 get pod e2e-test-httpd-pod -o json'
  Mar 14 07:12:39.762: INFO: stderr: ""
  Mar 14 07:12:39.762: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"e9f6e6612fdc65225efcbad940600948deac2ce707e1f41b15c90213c5bb5f12\",\n            \"cni.projectcalico.org/podIP\": \"10.244.69.235/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.244.69.235/32\"\n        },\n        \"creationTimestamp\": \"2024-03-14T07:12:34Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5951\",\n        \"resourceVersion\": \"26313\",\n        \"uid\": \"489af398-a4d9-4f8d-bdcd-1497e07b047e\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-kp2wn\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"k8s-worker02\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-kp2wn\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-03-14T07:12:34Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-03-14T07:12:36Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-03-14T07:12:36Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-03-14T07:12:34Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://c92158e25c97b52b2a0bba90055168689cb23e8e5c255e323bc360858e03382f\",\n                \"image\": \"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4\",\n                \"imageID\": \"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-03-14T07:12:35Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.132.15\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.69.235\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.69.235\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-03-14T07:12:34Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 03/14/24 07:12:39.762
  Mar 14 07:12:39.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5951 replace -f -'
  Mar 14 07:12:39.892: INFO: stderr: ""
  Mar 14 07:12:39.892: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image hub.oepkgs.net/nestos/nestos-test/sonobuoy/busybox:1.29-4 @ 03/14/24 07:12:39.892
  Mar 14 07:12:39.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-5951 delete pods e2e-test-httpd-pod'
  E0314 07:12:40.672641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:41.176: INFO: stderr: ""
  Mar 14 07:12:41.176: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Mar 14 07:12:41.176: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5951" for this suite. @ 03/14/24 07:12:41.178
• [6.574 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 03/14/24 07:12:41.182
  Mar 14 07:12:41.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename csistoragecapacity @ 03/14/24 07:12:41.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:41.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:41.189
  STEP: getting /apis @ 03/14/24 07:12:41.19
  STEP: getting /apis/storage.k8s.io @ 03/14/24 07:12:41.192
  STEP: getting /apis/storage.k8s.io/v1 @ 03/14/24 07:12:41.192
  STEP: creating @ 03/14/24 07:12:41.193
  STEP: watching @ 03/14/24 07:12:41.198
  Mar 14 07:12:41.198: INFO: starting watch
  STEP: getting @ 03/14/24 07:12:41.201
  STEP: listing in namespace @ 03/14/24 07:12:41.202
  STEP: listing across namespaces @ 03/14/24 07:12:41.203
  STEP: patching @ 03/14/24 07:12:41.204
  STEP: updating @ 03/14/24 07:12:41.206
  Mar 14 07:12:41.207: INFO: waiting for watch events with expected annotations in namespace
  Mar 14 07:12:41.207: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 03/14/24 07:12:41.208
  STEP: deleting a collection @ 03/14/24 07:12:41.212
  Mar 14 07:12:41.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2465" for this suite. @ 03/14/24 07:12:41.218
• [0.038 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 03/14/24 07:12:41.22
  Mar 14 07:12:41.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:12:41.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:41.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:41.226
  STEP: Creating configMap with name projected-configmap-test-volume-976e0970-24eb-49b2-bd37-5284eb82de8a @ 03/14/24 07:12:41.228
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:12:41.229
  E0314 07:12:41.673221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:42.673404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:43.673503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:44.673643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:12:45.237
  Mar 14 07:12:45.239: INFO: Trying to get logs from node k8s-worker02 pod pod-projected-configmaps-b887c321-6f48-4ba2-91e6-5cb1824c0ca2 container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:12:45.242
  Mar 14 07:12:45.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9909" for this suite. @ 03/14/24 07:12:45.249
• [4.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 03/14/24 07:12:45.253
  Mar 14 07:12:45.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename events @ 03/14/24 07:12:45.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:45.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:45.26
  STEP: Create set of events @ 03/14/24 07:12:45.261
  Mar 14 07:12:45.263: INFO: created test-event-1
  Mar 14 07:12:45.265: INFO: created test-event-2
  Mar 14 07:12:45.267: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 03/14/24 07:12:45.267
  STEP: delete collection of events @ 03/14/24 07:12:45.268
  Mar 14 07:12:45.268: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 03/14/24 07:12:45.272
  Mar 14 07:12:45.272: INFO: requesting list of events to confirm quantity
  Mar 14 07:12:45.273: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4165" for this suite. @ 03/14/24 07:12:45.275
• [0.025 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 03/14/24 07:12:45.278
  Mar 14 07:12:45.278: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-pred @ 03/14/24 07:12:45.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:45.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:45.285
  Mar 14 07:12:45.286: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Mar 14 07:12:45.289: INFO: Waiting for terminating namespaces to be deleted...
  Mar 14 07:12:45.290: INFO: 
  Logging pods the apiserver thinks is on node k8s-master01 before test
  Mar 14 07:12:45.293: INFO: calico-kube-controllers-658d97c59c-wdvtv from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container calico-kube-controllers ready: true, restart count 2
  Mar 14 07:12:45.293: INFO: calico-node-tq6x7 from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 07:12:45.293: INFO: coredns-6554b8b87f-hkp8t from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container coredns ready: true, restart count 2
  Mar 14 07:12:45.293: INFO: coredns-6554b8b87f-j45dr from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container coredns ready: true, restart count 2
  Mar 14 07:12:45.293: INFO: etcd-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container etcd ready: true, restart count 2
  Mar 14 07:12:45.293: INFO: kube-apiserver-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container kube-apiserver ready: true, restart count 2
  Mar 14 07:12:45.293: INFO: kube-controller-manager-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container kube-controller-manager ready: true, restart count 2
  Mar 14 07:12:45.293: INFO: kube-proxy-8p9f8 from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container kube-proxy ready: true, restart count 2
  Mar 14 07:12:45.293: INFO: kube-scheduler-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container kube-scheduler ready: true, restart count 2
  Mar 14 07:12:45.293: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-whzhf from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:12:45.293: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:12:45.293: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 14 07:12:45.293: INFO: 
  Logging pods the apiserver thinks is on node k8s-worker01 before test
  Mar 14 07:12:45.295: INFO: calico-node-6dkfv from kube-system started at 2024-03-14 05:49:28 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.295: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 07:12:45.295: INFO: kube-proxy-nn4d4 from kube-system started at 2024-03-14 05:49:28 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.295: INFO: 	Container kube-proxy ready: true, restart count 1
  Mar 14 07:12:45.295: INFO: sonobuoy-e2e-job-ba74beec76fb403d from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:12:45.295: INFO: 	Container e2e ready: true, restart count 0
  Mar 14 07:12:45.295: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:12:45.295: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-vnvzm from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:12:45.295: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:12:45.295: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 14 07:12:45.295: INFO: 
  Logging pods the apiserver thinks is on node k8s-worker02 before test
  Mar 14 07:12:45.297: INFO: calico-node-dm8mw from kube-system started at 2024-03-14 05:49:27 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.297: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 07:12:45.297: INFO: kube-proxy-bw5s2 from kube-system started at 2024-03-14 05:49:27 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.297: INFO: 	Container kube-proxy ready: true, restart count 1
  Mar 14 07:12:45.297: INFO: sonobuoy from sonobuoy started at 2024-03-14 06:28:43 +0000 UTC (1 container statuses recorded)
  Mar 14 07:12:45.297: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Mar 14 07:12:45.297: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-hlfxv from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:12:45.297: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:12:45.297: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 03/14/24 07:12:45.297
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17bc9011f5bd569e], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] @ 03/14/24 07:12:45.31
  E0314 07:12:45.673716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:46.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-94" for this suite. @ 03/14/24 07:12:46.308
• [1.033 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 03/14/24 07:12:46.31
  Mar 14 07:12:46.311: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:12:46.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:46.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:46.319
  STEP: Setting up server cert @ 03/14/24 07:12:46.326
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:12:46.472
  STEP: Deploying the webhook pod @ 03/14/24 07:12:46.475
  STEP: Wait for the deployment to be ready @ 03/14/24 07:12:46.479
  Mar 14 07:12:46.482: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0314 07:12:46.674302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:47.675134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:12:48.487
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:12:48.49
  E0314 07:12:48.675805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:49.490: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 03/14/24 07:12:49.493
  STEP: Creating a custom resource definition that should be denied by the webhook @ 03/14/24 07:12:49.5
  Mar 14 07:12:49.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:12:49.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4872" for this suite. @ 03/14/24 07:12:49.521
  STEP: Destroying namespace "webhook-markers-8745" for this suite. @ 03/14/24 07:12:49.524
• [3.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 03/14/24 07:12:49.53
  Mar 14 07:12:49.530: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubelet-test @ 03/14/24 07:12:49.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:49.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:49.537
  E0314 07:12:49.676471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:50.676964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:51.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8667" for this suite. @ 03/14/24 07:12:51.548
• [2.020 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 03/14/24 07:12:51.551
  Mar 14 07:12:51.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename namespaces @ 03/14/24 07:12:51.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:51.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:51.56
  STEP: Read namespace status @ 03/14/24 07:12:51.561
  Mar 14 07:12:51.562: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 03/14/24 07:12:51.562
  Mar 14 07:12:51.564: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 03/14/24 07:12:51.564
  Mar 14 07:12:51.567: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Mar 14 07:12:51.567: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9598" for this suite. @ 03/14/24 07:12:51.569
• [0.020 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 03/14/24 07:12:51.572
  Mar 14 07:12:51.572: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/14/24 07:12:51.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:51.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:51.578
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 03/14/24 07:12:51.579
  Mar 14 07:12:51.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:12:51.677195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:52.677916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:52.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:12:53.678053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:54.678948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:55.679844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:56.680238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:57.681099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:12:57.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5820" for this suite. @ 03/14/24 07:12:57.689
• [6.119 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 03/14/24 07:12:57.691
  Mar 14 07:12:57.691: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:12:57.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:57.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:57.699
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:12:57.7
  E0314 07:12:58.681741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:12:59.681821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:12:59.706
  Mar 14 07:12:59.707: INFO: Trying to get logs from node k8s-worker01 pod downwardapi-volume-a85d90d6-2733-4ed9-81af-a294fee36de0 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:12:59.711
  Mar 14 07:12:59.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4604" for this suite. @ 03/14/24 07:12:59.717
• [2.028 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 03/14/24 07:12:59.72
  Mar 14 07:12:59.720: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pod-network-test @ 03/14/24 07:12:59.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:12:59.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:12:59.729
  STEP: Performing setup for networking test in namespace pod-network-test-3197 @ 03/14/24 07:12:59.73
  STEP: creating a selector @ 03/14/24 07:12:59.73
  STEP: Creating the service pods in kubernetes @ 03/14/24 07:12:59.73
  Mar 14 07:12:59.730: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0314 07:13:00.682666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:01.682970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:02.683547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:03.683909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:04.684639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:05.685010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:06.685507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:07.685618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:08.686002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:09.686184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:10.686284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:11.686394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/14/24 07:13:11.758
  E0314 07:13:12.686540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:13.686623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:13:13.771: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Mar 14 07:13:13.771: INFO: Going to poll 10.244.32.150 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Mar 14 07:13:13.772: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.32.150 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3197 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:13:13.772: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:13:13.773: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:13:13.773: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3197/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.32.150+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0314 07:13:14.687197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:13:14.810: INFO: Found all 1 expected endpoints: [netserver-0]
  Mar 14 07:13:14.810: INFO: Going to poll 10.244.79.80 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Mar 14 07:13:14.812: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.79.80 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3197 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:13:14.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:13:14.812: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:13:14.813: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3197/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.79.80+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0314 07:13:15.687973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:13:15.849: INFO: Found all 1 expected endpoints: [netserver-1]
  Mar 14 07:13:15.849: INFO: Going to poll 10.244.69.241 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Mar 14 07:13:15.851: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.69.241 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3197 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:13:15.851: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:13:15.851: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:13:15.852: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-3197/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.69.241+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0314 07:13:16.688062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:13:16.895: INFO: Found all 1 expected endpoints: [netserver-2]
  Mar 14 07:13:16.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3197" for this suite. @ 03/14/24 07:13:16.897
• [17.179 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 03/14/24 07:13:16.9
  Mar 14 07:13:16.900: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:13:16.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:13:16.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:13:16.909
  STEP: creating the pod @ 03/14/24 07:13:16.911
  Mar 14 07:13:16.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-7890 create -f -'
  Mar 14 07:13:17.035: INFO: stderr: ""
  Mar 14 07:13:17.035: INFO: stdout: "pod/pause created\n"
  E0314 07:13:17.688569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:18.688944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 03/14/24 07:13:19.039
  Mar 14 07:13:19.039: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-7890 label pods pause testing-label=testing-label-value'
  Mar 14 07:13:19.084: INFO: stderr: ""
  Mar 14 07:13:19.084: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 03/14/24 07:13:19.084
  Mar 14 07:13:19.084: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-7890 get pod pause -L testing-label'
  Mar 14 07:13:19.123: INFO: stderr: ""
  Mar 14 07:13:19.123: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 03/14/24 07:13:19.123
  Mar 14 07:13:19.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-7890 label pods pause testing-label-'
  Mar 14 07:13:19.167: INFO: stderr: ""
  Mar 14 07:13:19.167: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 03/14/24 07:13:19.167
  Mar 14 07:13:19.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-7890 get pod pause -L testing-label'
  Mar 14 07:13:19.207: INFO: stderr: ""
  Mar 14 07:13:19.207: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 03/14/24 07:13:19.207
  Mar 14 07:13:19.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-7890 delete --grace-period=0 --force -f -'
  Mar 14 07:13:19.251: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Mar 14 07:13:19.251: INFO: stdout: "pod \"pause\" force deleted\n"
  Mar 14 07:13:19.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-7890 get rc,svc -l name=pause --no-headers'
  Mar 14 07:13:19.299: INFO: stderr: "No resources found in kubectl-7890 namespace.\n"
  Mar 14 07:13:19.299: INFO: stdout: ""
  Mar 14 07:13:19.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-7890 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Mar 14 07:13:19.337: INFO: stderr: ""
  Mar 14 07:13:19.337: INFO: stdout: ""
  Mar 14 07:13:19.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7890" for this suite. @ 03/14/24 07:13:19.339
• [2.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 03/14/24 07:13:19.342
  Mar 14 07:13:19.342: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename daemonsets @ 03/14/24 07:13:19.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:13:19.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:13:19.347
  STEP: Creating simple DaemonSet "daemon-set" @ 03/14/24 07:13:19.355
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/14/24 07:13:19.357
  Mar 14 07:13:19.360: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:13:19.360: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:13:19.689867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:13:20.363: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 14 07:13:20.363: INFO: Node k8s-worker01 is running 0 daemon pod, expected 1
  E0314 07:13:20.690807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:13:21.364: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 14 07:13:21.364: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 03/14/24 07:13:21.365
  STEP: DeleteCollection of the DaemonSets @ 03/14/24 07:13:21.366
  STEP: Verify that ReplicaSets have been deleted @ 03/14/24 07:13:21.369
  Mar 14 07:13:21.372: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26785"},"items":null}

  Mar 14 07:13:21.376: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26785"},"items":[{"metadata":{"name":"daemon-set-ppmhw","generateName":"daemon-set-","namespace":"daemonsets-274","uid":"75fc0621-6c4a-4234-a8a0-c1014e1296ae","resourceVersion":"26780","creationTimestamp":"2024-03-14T07:13:19Z","labels":{"controller-revision-hash":"9b9bf89d6","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"259f73defbf5db9fd906740bb0de33e9132a6d5b23a50c0a683bcd1a5b6fbaa6","cni.projectcalico.org/podIP":"10.244.69.244/32","cni.projectcalico.org/podIPs":"10.244.69.244/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f4ecb60d-0015-4cc0-8ba6-0e1ac675aa72","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-03-14T07:13:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-03-14T07:13:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f4ecb60d-0015-4cc0-8ba6-0e1ac675aa72\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-03-14T07:13:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.69.244\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-4ttdt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-4ttdt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-worker02","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-worker02"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:19Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:20Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:20Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:19Z"}],"hostIP":"192.168.132.15","podIP":"10.244.69.244","podIPs":[{"ip":"10.244.69.244"}],"startTime":"2024-03-14T07:13:19Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-03-14T07:13:19Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4","imageID":"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3","containerID":"cri-o://cc47efc561984e772064e4a3f21f26c289395d8a86419b05627a17f5157f7062","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-rjx9s","generateName":"daemon-set-","namespace":"daemonsets-274","uid":"2a735aef-7f68-4864-843c-799513237255","resourceVersion":"26778","creationTimestamp":"2024-03-14T07:13:19Z","labels":{"controller-revision-hash":"9b9bf89d6","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"46d8ce7ba71efc04ad65119f86ee5cfff4d98ea50f469deba83a89296efdd665","cni.projectcalico.org/podIP":"10.244.32.165/32","cni.projectcalico.org/podIPs":"10.244.32.165/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f4ecb60d-0015-4cc0-8ba6-0e1ac675aa72","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-03-14T07:13:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-03-14T07:13:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f4ecb60d-0015-4cc0-8ba6-0e1ac675aa72\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-03-14T07:13:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.32.165\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-82fzj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-82fzj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-master01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-master01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:19Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:20Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:20Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:19Z"}],"hostIP":"192.168.132.11","podIP":"10.244.32.165","podIPs":[{"ip":"10.244.32.165"}],"startTime":"2024-03-14T07:13:19Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-03-14T07:13:19Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4","imageID":"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3","containerID":"cri-o://6521d2236eaf03b5cb87edd1894abd7ac94d7cd4f9c5e2cf44df6e4f162cd911","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-vhzzp","generateName":"daemon-set-","namespace":"daemonsets-274","uid":"23f40ee7-18a5-45a6-8a5b-04f30c692004","resourceVersion":"26782","creationTimestamp":"2024-03-14T07:13:19Z","labels":{"controller-revision-hash":"9b9bf89d6","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"960086ebdc76eb861f561fa768c2bb4b9e656e12e2b9098661bb5e7af10629cf","cni.projectcalico.org/podIP":"10.244.79.82/32","cni.projectcalico.org/podIPs":"10.244.79.82/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f4ecb60d-0015-4cc0-8ba6-0e1ac675aa72","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-03-14T07:13:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-03-14T07:13:19Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f4ecb60d-0015-4cc0-8ba6-0e1ac675aa72\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-03-14T07:13:20Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.79.82\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-scjfp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-scjfp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"k8s-worker01","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["k8s-worker01"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:19Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:20Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:20Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-03-14T07:13:19Z"}],"hostIP":"192.168.132.14","podIP":"10.244.79.82","podIPs":[{"ip":"10.244.79.82"}],"startTime":"2024-03-14T07:13:19Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-03-14T07:13:19Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4","imageID":"hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3","containerID":"cri-o://9854accb57d9f33e76a4d0286837b0094de105b33fbd8a2e8a91e67a74f27c11","started":true}],"qosClass":"BestEffort"}}]}

  Mar 14 07:13:21.387: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-274" for this suite. @ 03/14/24 07:13:21.388
• [2.049 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 03/14/24 07:13:21.391
  Mar 14 07:13:21.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename subpath @ 03/14/24 07:13:21.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:13:21.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:13:21.399
  STEP: Setting up data @ 03/14/24 07:13:21.4
  STEP: Creating pod pod-subpath-test-projected-7gd7 @ 03/14/24 07:13:21.403
  STEP: Creating a pod to test atomic-volume-subpath @ 03/14/24 07:13:21.403
  E0314 07:13:21.691834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:22.692035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:23.692848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:24.692984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:25.693978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:26.693906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:27.694390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:28.694532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:29.695099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:30.695263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:31.696328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:32.696426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:33.697255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:34.697395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:35.698116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:36.698619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:37.699468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:38.699561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:39.699625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:40.699731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:41.700240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:42.700341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:43.700880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:44.700969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:13:45.428
  Mar 14 07:13:45.429: INFO: Trying to get logs from node k8s-worker01 pod pod-subpath-test-projected-7gd7 container test-container-subpath-projected-7gd7: <nil>
  STEP: delete the pod @ 03/14/24 07:13:45.432
  STEP: Deleting pod pod-subpath-test-projected-7gd7 @ 03/14/24 07:13:45.436
  Mar 14 07:13:45.436: INFO: Deleting pod "pod-subpath-test-projected-7gd7" in namespace "subpath-2997"
  Mar 14 07:13:45.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2997" for this suite. @ 03/14/24 07:13:45.44
• [24.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 03/14/24 07:13:45.443
  Mar 14 07:13:45.443: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename var-expansion @ 03/14/24 07:13:45.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:13:45.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:13:45.449
  E0314 07:13:45.701947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:46.702427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:13:47.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 07:13:47.460: INFO: Deleting pod "var-expansion-d8844f83-e176-4195-9eb0-c182d7c685c8" in namespace "var-expansion-2474"
  Mar 14 07:13:47.463: INFO: Wait up to 5m0s for pod "var-expansion-d8844f83-e176-4195-9eb0-c182d7c685c8" to be fully deleted
  E0314 07:13:47.702936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:48.703615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-2474" for this suite. @ 03/14/24 07:13:49.466
• [4.026 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 03/14/24 07:13:49.468
  Mar 14 07:13:49.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename namespaces @ 03/14/24 07:13:49.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:13:49.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:13:49.475
  STEP: Updating Namespace "namespaces-683" @ 03/14/24 07:13:49.477
  Mar 14 07:13:49.479: INFO: Namespace "namespaces-683" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"60797c59-5be7-4123-9733-33275cebff3d", "kubernetes.io/metadata.name":"namespaces-683", "namespaces-683":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Mar 14 07:13:49.479: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-683" for this suite. @ 03/14/24 07:13:49.483
• [0.017 seconds]
------------------------------
SSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 03/14/24 07:13:49.486
  Mar 14 07:13:49.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename containers @ 03/14/24 07:13:49.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:13:49.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:13:49.493
  STEP: Creating a pod to test override arguments @ 03/14/24 07:13:49.494
  E0314 07:13:49.704524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:50.704854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:13:51.499
  Mar 14 07:13:51.500: INFO: Trying to get logs from node k8s-worker02 pod client-containers-feaa90d6-0883-48fd-bdfa-d927d9deeeef container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:13:51.502
  Mar 14 07:13:51.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5502" for this suite. @ 03/14/24 07:13:51.509
• [2.026 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 03/14/24 07:13:51.516
  Mar 14 07:13:51.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename cronjob @ 03/14/24 07:13:51.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:13:51.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:13:51.524
  STEP: Creating a suspended cronjob @ 03/14/24 07:13:51.525
  STEP: Ensuring no jobs are scheduled @ 03/14/24 07:13:51.526
  E0314 07:13:51.705333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:52.706293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:53.707305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:54.707477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:55.708266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:56.708485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:57.708945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:58.709962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:13:59.710708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:00.711032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:01.711588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:02.711728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:03.712566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:04.712664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:05.713425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:06.713541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:07.713832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:08.713937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:09.714600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:10.715054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:11.715691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:12.716492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:13.716833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:14.716932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:15.717875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:16.718054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:17.718698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:18.718830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:19.719750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:20.719999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:21.720260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:22.720382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:23.721127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:24.721273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:25.722268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:26.723198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:27.723678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:28.723758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:29.724337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:30.725334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:31.725617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:32.725818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:33.726395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:34.727262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:35.728061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:36.728271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:37.729190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:38.729254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:39.729450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:40.729564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:41.729992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:42.730136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:43.730562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:44.730701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:45.731225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:46.731731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:47.732815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:48.732949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:49.733364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:50.733671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:51.734175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:52.734388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:53.734838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:54.734970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:55.735849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:56.735986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:57.736225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:58.736453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:14:59.736488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:00.736736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:01.737124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:02.737227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:03.737693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:04.737825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:05.738393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:06.738497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:07.738999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:08.739118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:09.739487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:10.739701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:11.740025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:12.740128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:13.740831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:14.740952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:15.741926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:16.742038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:17.742873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:18.743005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:19.743655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:20.743897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:21.744807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:22.744906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:23.745006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:24.745400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:25.745830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:26.745922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:27.746759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:28.746863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:29.747796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:30.747880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:31.748657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:32.748770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:33.749303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:34.749414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:35.749728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:36.749848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:37.750449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:38.750566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:39.751405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:40.751613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:41.752074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:42.752187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:43.752881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:44.753112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:45.753981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:46.754214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:47.755025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:48.755255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:49.756195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:50.756438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:51.757147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:52.757388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:53.758127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:54.758346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:55.759071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:56.759732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:57.760358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:58.760498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:15:59.761245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:00.761500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:01.762086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:02.762195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:03.763026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:04.763159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:05.763999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:06.764137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:07.765045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:08.765173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:09.765877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:10.766133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:11.766863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:12.766987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:13.767456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:14.767539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:15.767569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:16.767697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:17.768400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:18.768495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:19.769350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:20.769439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:21.770004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:22.770129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:23.770933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:24.771055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:25.771678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:26.771805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:27.772282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:28.772379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:29.772783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:30.773004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:31.773508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:32.773611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:33.773696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:34.773823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:35.774461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:36.774552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:37.774626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:38.774715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:39.775094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:40.775253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:41.775742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:42.775873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:43.776745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:44.776873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:45.777876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:46.778021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:47.778474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:48.778623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:49.779056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:50.779263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:51.779947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:52.780098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:53.780870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:54.781014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:55.781900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:56.782048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:57.782456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:58.783042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:16:59.783043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:00.783132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:01.784152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:02.784256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:03.785033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:04.785129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:05.785650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:06.785742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:07.785811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:08.785909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:09.786937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:10.787028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:11.787646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:12.787707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:13.788417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:14.788544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:15.789382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:16.789451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:17.790058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:18.790291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:19.790994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:20.791232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:21.791968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:22.792109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:23.792649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:24.792869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:25.793946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:26.794020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:27.794658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:28.794758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:29.794850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:30.794952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:31.794962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:32.795065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:33.796070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:34.796159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:35.796820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:36.796904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:37.797098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:38.797392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:39.798257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:40.798345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:41.798704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:42.798794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:43.799424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:44.799525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:45.800499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:46.800589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:47.801387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:48.801532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:49.801645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:50.801978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:51.802565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:52.802669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:53.803582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:54.803693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:55.804090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:56.804211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:57.804881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:58.804988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:17:59.805732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:00.805941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:01.806561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:02.806673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:03.807479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:04.807603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:05.808464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:06.809467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:07.810129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:08.810484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:09.811001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:10.811240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:11.811976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:12.812094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:13.812724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:14.812822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:15.813825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:16.813947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:17.814696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:18.814811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:19.815432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:20.815656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:21.816391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:22.816473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:23.817091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:24.817474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:25.818184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:26.818278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:27.819223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:28.819296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:29.819723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:30.819818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:31.820257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:32.820388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:33.821076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:34.821165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:35.821811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:36.821937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:37.822489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:38.822612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:39.823298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:40.823527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:41.824290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:42.824414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:43.824947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:44.825071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:45.826046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:46.826170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:47.826240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:48.826346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:49.827151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:50.827473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 03/14/24 07:18:51.529
  STEP: Removing cronjob @ 03/14/24 07:18:51.53
  Mar 14 07:18:51.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-491" for this suite. @ 03/14/24 07:18:51.533
• [300.019 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 03/14/24 07:18:51.536
  Mar 14 07:18:51.536: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:18:51.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:18:51.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:18:51.546
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 03/14/24 07:18:51.548
  E0314 07:18:51.828497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:52.828758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:53.830210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:54.830361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:18:55.556
  Mar 14 07:18:55.557: INFO: Trying to get logs from node k8s-worker02 pod pod-aa8b4717-86d1-449e-9d2c-6610d377e11f container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:18:55.566
  Mar 14 07:18:55.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3809" for this suite. @ 03/14/24 07:18:55.574
• [4.040 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 03/14/24 07:18:55.579
  Mar 14 07:18:55.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename events @ 03/14/24 07:18:55.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:18:55.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:18:55.586
  STEP: creating a test event @ 03/14/24 07:18:55.587
  STEP: listing events in all namespaces @ 03/14/24 07:18:55.588
  STEP: listing events in test namespace @ 03/14/24 07:18:55.592
  STEP: listing events with field selection filtering on source @ 03/14/24 07:18:55.593
  STEP: listing events with field selection filtering on reportingController @ 03/14/24 07:18:55.593
  STEP: getting the test event @ 03/14/24 07:18:55.594
  STEP: patching the test event @ 03/14/24 07:18:55.595
  STEP: getting the test event @ 03/14/24 07:18:55.597
  STEP: updating the test event @ 03/14/24 07:18:55.598
  STEP: getting the test event @ 03/14/24 07:18:55.6
  STEP: deleting the test event @ 03/14/24 07:18:55.601
  STEP: listing events in all namespaces @ 03/14/24 07:18:55.602
  STEP: listing events in test namespace @ 03/14/24 07:18:55.606
  Mar 14 07:18:55.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4698" for this suite. @ 03/14/24 07:18:55.61
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 03/14/24 07:18:55.613
  Mar 14 07:18:55.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:18:55.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:18:55.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:18:55.619
  STEP: Setting up server cert @ 03/14/24 07:18:55.626
  E0314 07:18:55.830722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:18:55.836
  STEP: Deploying the webhook pod @ 03/14/24 07:18:55.838
  STEP: Wait for the deployment to be ready @ 03/14/24 07:18:55.842
  Mar 14 07:18:55.844: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0314 07:18:56.831175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:18:57.831427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:18:57.849
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:18:57.853
  E0314 07:18:58.831455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:18:58.854: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 03/14/24 07:18:58.857
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 03/14/24 07:18:58.865
  STEP: Creating a dummy validating-webhook-configuration object @ 03/14/24 07:18:58.872
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 03/14/24 07:18:58.875
  STEP: Creating a dummy mutating-webhook-configuration object @ 03/14/24 07:18:58.877
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 03/14/24 07:18:58.881
  Mar 14 07:18:58.883: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5921" for this suite. @ 03/14/24 07:18:58.903
  STEP: Destroying namespace "webhook-markers-3893" for this suite. @ 03/14/24 07:18:58.907
• [3.297 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 03/14/24 07:18:58.91
  Mar 14 07:18:58.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:18:58.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:18:58.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:18:58.921
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:18:58.922
  E0314 07:18:59.832147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:00.832597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:19:00.929
  Mar 14 07:19:00.930: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-04de3046-a73e-4921-b4b8-7a0508ab3000 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:19:00.932
  Mar 14 07:19:00.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9142" for this suite. @ 03/14/24 07:19:00.938
• [2.030 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 03/14/24 07:19:00.941
  Mar 14 07:19:00.941: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:19:00.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:19:00.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:19:00.947
  STEP: fetching services @ 03/14/24 07:19:00.948
  Mar 14 07:19:00.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9381" for this suite. @ 03/14/24 07:19:00.952
• [0.014 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 03/14/24 07:19:00.954
  Mar 14 07:19:00.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-webhook @ 03/14/24 07:19:00.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:19:00.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:19:00.961
  STEP: Setting up server cert @ 03/14/24 07:19:00.962
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/14/24 07:19:01.102
  STEP: Deploying the custom resource conversion webhook pod @ 03/14/24 07:19:01.104
  STEP: Wait for the deployment to be ready @ 03/14/24 07:19:01.109
  Mar 14 07:19:01.111: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0314 07:19:01.832801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:02.833032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:19:03.116
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:19:03.119
  E0314 07:19:03.833685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:19:04.120: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Mar 14 07:19:04.123: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:19:04.834558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:05.835545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 03/14/24 07:19:06.659
  STEP: Create a v2 custom resource @ 03/14/24 07:19:06.667
  STEP: List CRs in v1 @ 03/14/24 07:19:06.686
  STEP: List CRs in v2 @ 03/14/24 07:19:06.687
  Mar 14 07:19:06.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0314 07:19:06.836463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-7051" for this suite. @ 03/14/24 07:19:07.214
• [6.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 03/14/24 07:19:07.217
  Mar 14 07:19:07.218: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 07:19:07.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:19:07.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:19:07.229
  Mar 14 07:19:07.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: creating the pod @ 03/14/24 07:19:07.231
  STEP: submitting the pod to kubernetes @ 03/14/24 07:19:07.231
  E0314 07:19:07.836575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:08.836905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:19:09.296: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-875" for this suite. @ 03/14/24 07:19:09.298
• [2.083 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 03/14/24 07:19:09.3
  Mar 14 07:19:09.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replication-controller @ 03/14/24 07:19:09.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:19:09.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:19:09.309
  STEP: Given a ReplicationController is created @ 03/14/24 07:19:09.31
  STEP: When the matched label of one of its pods change @ 03/14/24 07:19:09.312
  Mar 14 07:19:09.313: INFO: Pod name pod-release: Found 0 pods out of 1
  E0314 07:19:09.837406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:10.837694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:11.837802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:12.837895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:13.837969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:19:14.315: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 03/14/24 07:19:14.319
  E0314 07:19:14.839030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:19:15.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-392" for this suite. @ 03/14/24 07:19:15.324
• [6.025 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 03/14/24 07:19:15.326
  Mar 14 07:19:15.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename security-context-test @ 03/14/24 07:19:15.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:19:15.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:19:15.332
  E0314 07:19:15.839577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:16.839711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:19:17.347: INFO: Got logs for pod "busybox-privileged-false-46441146-8ef5-4505-8cd9-f05c134927b4": "ip: RTNETLINK answers: Operation not permitted\n"
  Mar 14 07:19:17.347: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4737" for this suite. @ 03/14/24 07:19:17.349
• [2.025 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 03/14/24 07:19:17.351
  Mar 14 07:19:17.351: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:19:17.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:19:17.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:19:17.36
  STEP: creating service in namespace services-7338 @ 03/14/24 07:19:17.361
  STEP: creating service affinity-nodeport-transition in namespace services-7338 @ 03/14/24 07:19:17.362
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7338 @ 03/14/24 07:19:17.365
  I0314 07:19:17.368723      21 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-7338, replica count: 3
  E0314 07:19:17.840384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:18.840570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:19.840747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 07:19:20.420439      21 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 14 07:19:20.424: INFO: Creating new exec pod
  E0314 07:19:20.841514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:21.841774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:22.841900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:19:23.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7338 exec execpod-affinityxxs7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Mar 14 07:19:23.517: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Mar 14 07:19:23.517: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:19:23.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7338 exec execpod-affinityxxs7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.153.61 80'
  Mar 14 07:19:23.595: INFO: stderr: "+ + nc -v -t -w 2 10.96.153.61 80\necho hostName\nConnection to 10.96.153.61 80 port [tcp/http] succeeded!\n"
  Mar 14 07:19:23.595: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:19:23.595: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7338 exec execpod-affinityxxs7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.132.11 30834'
  Mar 14 07:19:23.674: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.132.11 30834\nConnection to 192.168.132.11 30834 port [tcp/*] succeeded!\n"
  Mar 14 07:19:23.674: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:19:23.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7338 exec execpod-affinityxxs7c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.132.15 30834'
  Mar 14 07:19:23.761: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.132.15 30834\nConnection to 192.168.132.15 30834 port [tcp/*] succeeded!\n"
  Mar 14 07:19:23.761: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:19:23.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7338 exec execpod-affinityxxs7c -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.132.11:30834/ ; done'
  E0314 07:19:23.842846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:19:23.886: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n"
  Mar 14 07:19:23.886: INFO: stdout: "\naffinity-nodeport-transition-95lfb\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-95lfb\naffinity-nodeport-transition-hqvv8\naffinity-nodeport-transition-hqvv8\naffinity-nodeport-transition-95lfb\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-95lfb\naffinity-nodeport-transition-95lfb\naffinity-nodeport-transition-hqvv8\naffinity-nodeport-transition-hqvv8\naffinity-nodeport-transition-hqvv8\naffinity-nodeport-transition-95lfb\naffinity-nodeport-transition-hqvv8"
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-95lfb
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-95lfb
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-hqvv8
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-hqvv8
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-95lfb
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-95lfb
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-95lfb
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-hqvv8
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-hqvv8
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-hqvv8
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-95lfb
  Mar 14 07:19:23.886: INFO: Received response from host: affinity-nodeport-transition-hqvv8
  Mar 14 07:19:23.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7338 exec execpod-affinityxxs7c -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.132.11:30834/ ; done'
  Mar 14 07:19:24.010: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:30834/\n"
  Mar 14 07:19:24.010: INFO: stdout: "\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q\naffinity-nodeport-transition-fxj4q"
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Received response from host: affinity-nodeport-transition-fxj4q
  Mar 14 07:19:24.010: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 07:19:24.012: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7338, will wait for the garbage collector to delete the pods @ 03/14/24 07:19:24.017
  Mar 14 07:19:24.070: INFO: Deleting ReplicationController affinity-nodeport-transition took: 1.88972ms
  Mar 14 07:19:24.170: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.247986ms
  E0314 07:19:24.843064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:25.843131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:26.843359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-7338" for this suite. @ 03/14/24 07:19:26.878
• [9.529 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 03/14/24 07:19:26.882
  Mar 14 07:19:26.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:19:26.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:19:26.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:19:26.889
  STEP: Creating configMap with name projected-configmap-test-volume-map-a8fb59e7-f3b2-42e1-a023-f7bd7b0a835b @ 03/14/24 07:19:26.89
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:19:26.891
  E0314 07:19:27.843512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:28.844445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:19:28.898
  Mar 14 07:19:28.899: INFO: Trying to get logs from node k8s-worker02 pod pod-projected-configmaps-0894c65e-b162-4843-97fa-a5c31cce7678 container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:19:28.901
  Mar 14 07:19:28.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8" for this suite. @ 03/14/24 07:19:28.908
• [2.028 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 03/14/24 07:19:28.91
  Mar 14 07:19:28.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename cronjob @ 03/14/24 07:19:28.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:19:28.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:19:28.917
  STEP: Creating a ForbidConcurrent cronjob @ 03/14/24 07:19:28.918
  STEP: Ensuring a job is scheduled @ 03/14/24 07:19:28.92
  E0314 07:19:29.844655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:30.844750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:31.845059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:32.845175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:33.845276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:34.845423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:35.845506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:36.845593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:37.846329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:38.846564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:39.847435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:40.847752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:41.848326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:42.849269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:43.850232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:44.850379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:45.851187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:46.851314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:47.851433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:48.851634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:49.851713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:50.851989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:51.852836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:52.852975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:53.853645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:54.853798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:55.853913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:56.854064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:57.854715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:58.854854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:19:59.854938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:00.855012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 03/14/24 07:20:00.922
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 03/14/24 07:20:00.923
  STEP: Ensuring no more jobs are scheduled @ 03/14/24 07:20:00.924
  E0314 07:20:01.855642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:02.855792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:03.855814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:04.855914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:05.856017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:06.856110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:07.856203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:08.856362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:09.856840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:10.857082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:11.857592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:12.857719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:13.857779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:14.857865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:15.858508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:16.858654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:17.859015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:18.859092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:19.859177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:20.859249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:21.859353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:22.859438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:23.859980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:24.860126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:25.860228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:26.860460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:27.861292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:28.861411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:29.861471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:30.861601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:31.862211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:32.862363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:33.862403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:34.862493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:35.862574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:36.862672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:37.863531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:38.863618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:39.863714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:40.864084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:41.864622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:42.864772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:43.865219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:44.865314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:45.866081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:46.866207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:47.866604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:48.866702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:49.866790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:50.867011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:51.867123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:52.867380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:53.867428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:54.867527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:55.867626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:56.867738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:57.867994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:58.867975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:20:59.868233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:00.869075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:01.869159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:02.869538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:03.869618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:04.869828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:05.870842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:06.870975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:07.871048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:08.871145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:09.871410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:10.871515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:11.872435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:12.872518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:13.872586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:14.872683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:15.872941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:16.873024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:17.874196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:18.874560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:19.874711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:20.874856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:21.875421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:22.875678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:23.876465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:24.876577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:25.877174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:26.877298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:27.877723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:28.877816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:29.878480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:30.878714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:31.879407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:32.879500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:33.880067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:34.880480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:35.880846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:36.880966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:37.881487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:38.881586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:39.881661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:40.881753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:41.881870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:42.881970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:43.882057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:44.882188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:45.882275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:46.882374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:47.883207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:48.883675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:49.884552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:50.884821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:51.885442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:52.885528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:53.886024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:54.886252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:55.887020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:56.887150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:57.887565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:58.888589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:21:59.888938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:00.889162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:01.889737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:02.889868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:03.889953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:04.890036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:05.890698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:06.890766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:07.891827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:08.892000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:09.892102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:10.892266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:11.892928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:12.892937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:13.893765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:14.893894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:15.894608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:16.894822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:17.895455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:18.895642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:19.896642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:20.896939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:21.897294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:22.897467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:23.897619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:24.897720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:25.898238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:26.898337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:27.898850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:28.898930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:29.899434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:30.899661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:31.899745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:32.899873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:33.899952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:34.900039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:35.900128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:36.900213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:37.900282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:38.900389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:39.900481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:40.900732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:41.900870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:42.900958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:43.901040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:44.901124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:45.901891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:46.903038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:47.903139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:48.903238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:49.903333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:50.903413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:51.903441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:52.903587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:53.904025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:54.904079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:55.904753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:56.904878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:57.905300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:58.905177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:22:59.905729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:00.905958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:01.906080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:02.906169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:03.906438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:04.906574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:05.906662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:06.906809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:07.907148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:08.907276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:09.907344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:10.907466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:11.907490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:12.907591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:13.907676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:14.907707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:15.908069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:16.908150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:17.908415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:18.908586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:19.909392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:20.909651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:21.909728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:22.909877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:23.910582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:24.910669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:25.911521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:26.911605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:27.911691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:28.911773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:29.912046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:30.912140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:31.912229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:32.912312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:33.912425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:34.913561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:35.914105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:36.914237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:37.914325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:38.914461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:39.914818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:40.915065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:41.915139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:42.915265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:43.915583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:44.915699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:45.916728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:46.916855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:47.917216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:48.917363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:49.917881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:50.917998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:51.918796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:52.918883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:53.918972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:54.919055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:55.919154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:56.919187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:57.919648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:58.919867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:23:59.920972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:00.921233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:01.922138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:02.923252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:03.923509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:04.923662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:05.924670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:06.925468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:07.926383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:08.926795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:09.927619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:10.928275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:11.928400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:12.928841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:13.929226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:14.929902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:15.930271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:16.930397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:17.930505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:18.931262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:19.931400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:20.932204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:21.932300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:22.932760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:23.932876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:24.933441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:25.933605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:26.934376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:27.934504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:28.935100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:29.935199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:30.936197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:31.936302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:32.937113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:33.937239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:34.938186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:35.938525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:36.939033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:37.939152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:38.939819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:39.940478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:40.941169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:41.941279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:42.941648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:43.942725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:44.943121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:45.943449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:46.944062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:47.944231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:48.944810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:49.944982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:50.945639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:51.945810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:52.946207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:53.946389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:54.946807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:55.946914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:56.947538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:57.947914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:58.948137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:24:59.948242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 03/14/24 07:25:00.927
  Mar 14 07:25:00.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6397" for this suite. @ 03/14/24 07:25:00.931
• [332.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 03/14/24 07:25:00.935
  Mar 14 07:25:00.935: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 07:25:00.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:00.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:00.944
  STEP: creating a ConfigMap @ 03/14/24 07:25:00.946
  STEP: fetching the ConfigMap @ 03/14/24 07:25:00.948
  E0314 07:25:00.948238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the ConfigMap @ 03/14/24 07:25:00.949
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 03/14/24 07:25:00.952
  STEP: deleting the ConfigMap by collection with a label selector @ 03/14/24 07:25:00.953
  STEP: listing all ConfigMaps in test namespace @ 03/14/24 07:25:00.955
  Mar 14 07:25:00.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8956" for this suite. @ 03/14/24 07:25:00.957
• [0.024 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 03/14/24 07:25:00.96
  Mar 14 07:25:00.960: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename runtimeclass @ 03/14/24 07:25:00.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:00.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:00.967
  E0314 07:25:01.948293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:02.948420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:25:02.975: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8260" for this suite. @ 03/14/24 07:25:02.98
• [2.022 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 03/14/24 07:25:02.984
  Mar 14 07:25:02.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:25:02.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:02.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:02.991
  STEP: Setting up server cert @ 03/14/24 07:25:02.999
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:25:03.406
  STEP: Deploying the webhook pod @ 03/14/24 07:25:03.409
  STEP: Wait for the deployment to be ready @ 03/14/24 07:25:03.413
  Mar 14 07:25:03.415: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0314 07:25:03.948677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:04.948892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:25:05.42
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:25:05.423
  E0314 07:25:05.949624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:25:06.424: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 03/14/24 07:25:06.426
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 03/14/24 07:25:06.435
  STEP: Creating a configMap that should not be mutated @ 03/14/24 07:25:06.438
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 03/14/24 07:25:06.441
  STEP: Creating a configMap that should be mutated @ 03/14/24 07:25:06.444
  Mar 14 07:25:06.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-612" for this suite. @ 03/14/24 07:25:06.468
  STEP: Destroying namespace "webhook-markers-9430" for this suite. @ 03/14/24 07:25:06.471
• [3.490 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 03/14/24 07:25:06.475
  Mar 14 07:25:06.475: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename namespaces @ 03/14/24 07:25:06.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:06.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:06.483
  STEP: creating a Namespace @ 03/14/24 07:25:06.484
  STEP: patching the Namespace @ 03/14/24 07:25:06.488
  STEP: get the Namespace and ensuring it has the label @ 03/14/24 07:25:06.49
  Mar 14 07:25:06.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3256" for this suite. @ 03/14/24 07:25:06.492
  STEP: Destroying namespace "nspatchtest-7c5f2d21-9a2e-49f2-b46b-cae23c22bd58-4384" for this suite. @ 03/14/24 07:25:06.494
• [0.021 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 03/14/24 07:25:06.496
  Mar 14 07:25:06.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:25:06.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:06.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:06.503
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:25:06.504
  E0314 07:25:06.950394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:07.950483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:25:08.511
  Mar 14 07:25:08.512: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-37c3f91e-bc2d-4605-a26f-d2fdc44330cd container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:25:08.516
  Mar 14 07:25:08.521: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5285" for this suite. @ 03/14/24 07:25:08.522
• [2.027 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 03/14/24 07:25:08.524
  Mar 14 07:25:08.525: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 07:25:08.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:08.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:08.532
  STEP: Creating configMap that has name configmap-test-emptyKey-01914618-77d9-4e29-b1f7-8d7d4db2e44f @ 03/14/24 07:25:08.533
  Mar 14 07:25:08.534: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9668" for this suite. @ 03/14/24 07:25:08.535
• [0.013 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 03/14/24 07:25:08.537
  Mar 14 07:25:08.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/14/24 07:25:08.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:08.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:08.544
  Mar 14 07:25:08.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:25:08.950883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/14/24 07:25:09.784
  Mar 14 07:25:09.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4616 --namespace=crd-publish-openapi-4616 create -f -'
  E0314 07:25:09.951295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:25:10.083: INFO: stderr: ""
  Mar 14 07:25:10.083: INFO: stdout: "e2e-test-crd-publish-openapi-2580-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Mar 14 07:25:10.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4616 --namespace=crd-publish-openapi-4616 delete e2e-test-crd-publish-openapi-2580-crds test-cr'
  Mar 14 07:25:10.125: INFO: stderr: ""
  Mar 14 07:25:10.125: INFO: stdout: "e2e-test-crd-publish-openapi-2580-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Mar 14 07:25:10.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4616 --namespace=crd-publish-openapi-4616 apply -f -'
  Mar 14 07:25:10.216: INFO: stderr: ""
  Mar 14 07:25:10.216: INFO: stdout: "e2e-test-crd-publish-openapi-2580-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Mar 14 07:25:10.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4616 --namespace=crd-publish-openapi-4616 delete e2e-test-crd-publish-openapi-2580-crds test-cr'
  Mar 14 07:25:10.259: INFO: stderr: ""
  Mar 14 07:25:10.259: INFO: stdout: "e2e-test-crd-publish-openapi-2580-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 03/14/24 07:25:10.259
  Mar 14 07:25:10.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-4616 explain e2e-test-crd-publish-openapi-2580-crds'
  Mar 14 07:25:10.346: INFO: stderr: ""
  Mar 14 07:25:10.346: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-2580-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0314 07:25:10.951477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:25:11.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4616" for this suite. @ 03/14/24 07:25:11.592
• [3.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 03/14/24 07:25:11.596
  Mar 14 07:25:11.596: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 07:25:11.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:11.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:11.604
  STEP: Creating configMap configmap-5879/configmap-test-6347c9e4-2061-4ee9-b449-a2751c674006 @ 03/14/24 07:25:11.605
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:25:11.606
  E0314 07:25:11.952473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:12.952677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:25:13.614
  Mar 14 07:25:13.616: INFO: Trying to get logs from node k8s-worker02 pod pod-configmaps-8b4f5b41-e520-4dc8-a1bb-9eae62d012e4 container env-test: <nil>
  STEP: delete the pod @ 03/14/24 07:25:13.619
  Mar 14 07:25:13.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5879" for this suite. @ 03/14/24 07:25:13.626
• [2.031 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 03/14/24 07:25:13.628
  Mar 14 07:25:13.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename deployment @ 03/14/24 07:25:13.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:13.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:13.635
  Mar 14 07:25:13.636: INFO: Creating deployment "test-recreate-deployment"
  Mar 14 07:25:13.638: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Mar 14 07:25:13.640: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  E0314 07:25:13.953659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:14.953831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:25:15.642: INFO: Waiting deployment "test-recreate-deployment" to complete
  Mar 14 07:25:15.643: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Mar 14 07:25:15.646: INFO: Updating deployment test-recreate-deployment
  Mar 14 07:25:15.646: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Mar 14 07:25:15.676: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2350",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ee893e9c-8384-41e9-a9ef-4f81848be216",
      ResourceVersion: (string) (len=5) "28939",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845997913,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997913,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-545c4f5f9d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 14 07:25:15.681: INFO: New ReplicaSet "test-recreate-deployment-545c4f5f9d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-545c4f5f9d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2350",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f36a64fa-d12d-4999-82eb-9833d6b80d50",
      ResourceVersion: (string) (len=5) "28937",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845997915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "545c4f5f9d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "ee893e9c-8384-41e9-a9ef-4f81848be216",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 65 38 39 33 65  39 63 2d 38 33 38 34 2d  |\"ee893e9c-8384-|
              00000120  34 31 65 39 2d 61 39 65  66 2d 34 66 38 31 38 34  |41e9-a9ef-4f8184|
              00000130  38 62 65 32 31 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8be216\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "545c4f5f9d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "545c4f5f9d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:25:15.681: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Mar 14 07:25:15.681: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-67594f86c5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2350",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffb8b06b-e758-4287-90e0-67bc5e3feec4",
      ResourceVersion: (string) (len=5) "28927",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845997913,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67594f86c5",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "ee893e9c-8384-41e9-a9ef-4f81848be216",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 65 38 39 33 65  39 63 2d 38 33 38 34 2d  |\"ee893e9c-8384-|
              00000120  34 31 65 39 2d 61 39 65  66 2d 34 66 38 31 38 34  |41e9-a9ef-4f8184|
              00000130  38 62 65 32 31 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8be216\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67594f86c5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67594f86c5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:25:15.684: INFO: Pod "test-recreate-deployment-545c4f5f9d-n5p8h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-545c4f5f9d-n5p8h",
      GenerateName: (string) (len=36) "test-recreate-deployment-545c4f5f9d-",
      Namespace: (string) (len=15) "deployment-2350",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "195c36d3-dbf4-467d-bcbc-1b61f26b6a91",
      ResourceVersion: (string) (len=5) "28938",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845997915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "545c4f5f9d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-545c4f5f9d",
          UID: (types.UID) (len=36) "f36a64fa-d12d-4999-82eb-9833d6b80d50",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 33  36 61 36 34 66 61 2d 64  |d\":\"f36a64fa-d|
              00000090  31 32 64 2d 34 39 39 39  2d 38 32 65 62 2d 39 38  |12d-4999-82eb-98|
              000000a0  33 33 64 36 62 38 30 64  35 30 5c 22 7d 22 3a 7b  |33d6b80d50\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-96p9g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-96p9g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845997915,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845997915,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:25:15.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2350" for this suite. @ 03/14/24 07:25:15.689
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 03/14/24 07:25:15.693
  Mar 14 07:25:15.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:25:15.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:15.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:15.7
  STEP: Creating configMap with name projected-configmap-test-volume-700b046e-5371-49b0-a4c7-3144f187b598 @ 03/14/24 07:25:15.701
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:25:15.703
  E0314 07:25:15.954683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:16.954923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:17.954987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:18.955100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:25:19.71
  Mar 14 07:25:19.711: INFO: Trying to get logs from node k8s-worker02 pod pod-projected-configmaps-78404996-e9ea-4849-b57c-2dbbf2fb5846 container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:25:19.713
  Mar 14 07:25:19.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6362" for this suite. @ 03/14/24 07:25:19.719
• [4.028 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 03/14/24 07:25:19.721
  Mar 14 07:25:19.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:25:19.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:19.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:19.728
  STEP: Setting up server cert @ 03/14/24 07:25:19.74
  E0314 07:25:19.955710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:25:20.239
  STEP: Deploying the webhook pod @ 03/14/24 07:25:20.242
  STEP: Wait for the deployment to be ready @ 03/14/24 07:25:20.246
  Mar 14 07:25:20.248: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0314 07:25:20.956610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:21.956669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:25:22.252
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:25:22.255
  E0314 07:25:22.956748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:25:23.256: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 03/14/24 07:25:23.258
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 03/14/24 07:25:23.258
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 03/14/24 07:25:23.258
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 03/14/24 07:25:23.258
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 03/14/24 07:25:23.259
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 03/14/24 07:25:23.259
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 03/14/24 07:25:23.26
  Mar 14 07:25:23.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2667" for this suite. @ 03/14/24 07:25:23.273
  STEP: Destroying namespace "webhook-markers-5688" for this suite. @ 03/14/24 07:25:23.275
• [3.558 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 03/14/24 07:25:23.28
  Mar 14 07:25:23.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:25:23.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:23.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:23.287
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:25:23.288
  E0314 07:25:23.957107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:24.957421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:25:25.294
  Mar 14 07:25:25.295: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-2fe62f84-cd84-49ec-83cf-bb16a8559d65 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:25:25.298
  Mar 14 07:25:25.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-835" for this suite. @ 03/14/24 07:25:25.305
• [2.026 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 03/14/24 07:25:25.308
  Mar 14 07:25:25.308: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/14/24 07:25:25.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:25.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:25.316
  Mar 14 07:25:25.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:25:25.836: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7055" for this suite. @ 03/14/24 07:25:25.837
• [0.531 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 03/14/24 07:25:25.84
  Mar 14 07:25:25.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:25:25.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:25.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:25.846
  STEP: Creating secret with name secret-test-aeab446d-12d6-4634-bdea-0ac48f408bc0 @ 03/14/24 07:25:25.847
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:25:25.849
  E0314 07:25:25.957494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:26.957703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:27.958576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:28.958696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:25:29.856
  Mar 14 07:25:29.857: INFO: Trying to get logs from node k8s-worker02 pod pod-secrets-a34b30e4-906c-4475-ada4-eb04e85984a9 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:25:29.86
  Mar 14 07:25:29.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8566" for this suite. @ 03/14/24 07:25:29.866
• [4.028 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 03/14/24 07:25:29.869
  Mar 14 07:25:29.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename dns @ 03/14/24 07:25:29.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:29.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:29.874
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 03/14/24 07:25:29.875
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 03/14/24 07:25:29.875
  STEP: creating a pod to probe DNS @ 03/14/24 07:25:29.875
  STEP: submitting the pod to kubernetes @ 03/14/24 07:25:29.875
  E0314 07:25:29.958723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:30.958943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/14/24 07:25:31.881
  STEP: looking for the results for each expected name from probers @ 03/14/24 07:25:31.882
  Mar 14 07:25:31.888: INFO: DNS probes using dns-8929/dns-test-b76a37a6-fece-4814-8343-a08e4f3ce274 succeeded

  Mar 14 07:25:31.888: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:25:31.89
  STEP: Destroying namespace "dns-8929" for this suite. @ 03/14/24 07:25:31.895
• [2.029 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 03/14/24 07:25:31.898
  Mar 14 07:25:31.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 07:25:31.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:31.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:31.905
  STEP: creating the pod @ 03/14/24 07:25:31.906
  STEP: setting up watch @ 03/14/24 07:25:31.906
  E0314 07:25:31.959776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: submitting the pod to kubernetes @ 03/14/24 07:25:32.007
  STEP: verifying the pod is in kubernetes @ 03/14/24 07:25:32.011
  STEP: verifying pod creation was observed @ 03/14/24 07:25:32.012
  E0314 07:25:32.959963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:33.960485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 03/14/24 07:25:34.016
  STEP: verifying pod deletion was observed @ 03/14/24 07:25:34.019
  E0314 07:25:34.961126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:35.961477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:25:36.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5860" for this suite. @ 03/14/24 07:25:36.185
• [4.289 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 03/14/24 07:25:36.187
  Mar 14 07:25:36.187: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-pred @ 03/14/24 07:25:36.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:36.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:36.195
  Mar 14 07:25:36.196: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Mar 14 07:25:36.199: INFO: Waiting for terminating namespaces to be deleted...
  Mar 14 07:25:36.200: INFO: 
  Logging pods the apiserver thinks is on node k8s-master01 before test
  Mar 14 07:25:36.202: INFO: calico-kube-controllers-658d97c59c-wdvtv from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container calico-kube-controllers ready: true, restart count 2
  Mar 14 07:25:36.202: INFO: calico-node-tq6x7 from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 07:25:36.202: INFO: coredns-6554b8b87f-hkp8t from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container coredns ready: true, restart count 2
  Mar 14 07:25:36.202: INFO: coredns-6554b8b87f-j45dr from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container coredns ready: true, restart count 2
  Mar 14 07:25:36.202: INFO: etcd-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container etcd ready: true, restart count 2
  Mar 14 07:25:36.202: INFO: kube-apiserver-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container kube-apiserver ready: true, restart count 2
  Mar 14 07:25:36.202: INFO: kube-controller-manager-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container kube-controller-manager ready: true, restart count 2
  Mar 14 07:25:36.202: INFO: kube-proxy-8p9f8 from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container kube-proxy ready: true, restart count 2
  Mar 14 07:25:36.202: INFO: kube-scheduler-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container kube-scheduler ready: true, restart count 2
  Mar 14 07:25:36.202: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-whzhf from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:25:36.202: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:25:36.202: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 14 07:25:36.202: INFO: 
  Logging pods the apiserver thinks is on node k8s-worker01 before test
  Mar 14 07:25:36.205: INFO: calico-node-6dkfv from kube-system started at 2024-03-14 05:49:28 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.205: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 07:25:36.205: INFO: kube-proxy-nn4d4 from kube-system started at 2024-03-14 05:49:28 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.205: INFO: 	Container kube-proxy ready: true, restart count 1
  Mar 14 07:25:36.205: INFO: sonobuoy-e2e-job-ba74beec76fb403d from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:25:36.205: INFO: 	Container e2e ready: true, restart count 0
  Mar 14 07:25:36.205: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:25:36.205: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-vnvzm from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:25:36.205: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:25:36.205: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 14 07:25:36.205: INFO: 
  Logging pods the apiserver thinks is on node k8s-worker02 before test
  Mar 14 07:25:36.207: INFO: calico-node-dm8mw from kube-system started at 2024-03-14 05:49:27 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.207: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 07:25:36.208: INFO: kube-proxy-bw5s2 from kube-system started at 2024-03-14 05:49:27 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.208: INFO: 	Container kube-proxy ready: true, restart count 1
  Mar 14 07:25:36.208: INFO: sonobuoy from sonobuoy started at 2024-03-14 06:28:43 +0000 UTC (1 container statuses recorded)
  Mar 14 07:25:36.209: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Mar 14 07:25:36.209: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-hlfxv from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:25:36.209: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:25:36.210: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 03/14/24 07:25:36.21
  E0314 07:25:36.961564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:37.962450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 03/14/24 07:25:38.217
  STEP: Trying to apply a random label on the found node. @ 03/14/24 07:25:38.221
  STEP: verifying the node has the label kubernetes.io/e2e-db86cf2d-d411-4fee-baa5-8011fbe86b53 42 @ 03/14/24 07:25:38.225
  STEP: Trying to relaunch the pod, now with labels. @ 03/14/24 07:25:38.227
  E0314 07:25:38.962511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:39.962699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-db86cf2d-d411-4fee-baa5-8011fbe86b53 off the node k8s-worker02 @ 03/14/24 07:25:40.233
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-db86cf2d-d411-4fee-baa5-8011fbe86b53 @ 03/14/24 07:25:40.238
  Mar 14 07:25:40.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6210" for this suite. @ 03/14/24 07:25:40.243
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 03/14/24 07:25:40.249
  Mar 14 07:25:40.249: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:25:40.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:40.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:40.256
  STEP: creating a Service @ 03/14/24 07:25:40.258
  STEP: watching for the Service to be added @ 03/14/24 07:25:40.261
  Mar 14 07:25:40.262: INFO: Found Service test-service-hcdpn in namespace services-3631 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Mar 14 07:25:40.262: INFO: Service test-service-hcdpn created
  STEP: Getting /status @ 03/14/24 07:25:40.262
  Mar 14 07:25:40.264: INFO: Service test-service-hcdpn has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 03/14/24 07:25:40.264
  STEP: watching for the Service to be patched @ 03/14/24 07:25:40.267
  Mar 14 07:25:40.268: INFO: observed Service test-service-hcdpn in namespace services-3631 with annotations: map[] & LoadBalancer: {[]}
  Mar 14 07:25:40.268: INFO: Found Service test-service-hcdpn in namespace services-3631 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Mar 14 07:25:40.268: INFO: Service test-service-hcdpn has service status patched
  STEP: updating the ServiceStatus @ 03/14/24 07:25:40.268
  Mar 14 07:25:40.273: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 03/14/24 07:25:40.273
  Mar 14 07:25:40.274: INFO: Observed Service test-service-hcdpn in namespace services-3631 with annotations: map[] & Conditions: {[]}
  Mar 14 07:25:40.274: INFO: Observed event: &Service{ObjectMeta:{test-service-hcdpn  services-3631  719fd2fa-7f42-4184-b13b-0112367f8c72 29297 0 2024-03-14 07:25:40 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-03-14 07:25:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-03-14 07:25:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.96.160.45,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.96.160.45],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Mar 14 07:25:40.274: INFO: Found Service test-service-hcdpn in namespace services-3631 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Mar 14 07:25:40.274: INFO: Service test-service-hcdpn has service status updated
  STEP: patching the service @ 03/14/24 07:25:40.274
  STEP: watching for the Service to be patched @ 03/14/24 07:25:40.281
  Mar 14 07:25:40.281: INFO: observed Service test-service-hcdpn in namespace services-3631 with labels: map[test-service-static:true]
  Mar 14 07:25:40.281: INFO: observed Service test-service-hcdpn in namespace services-3631 with labels: map[test-service-static:true]
  Mar 14 07:25:40.282: INFO: observed Service test-service-hcdpn in namespace services-3631 with labels: map[test-service-static:true]
  Mar 14 07:25:40.282: INFO: Found Service test-service-hcdpn in namespace services-3631 with labels: map[test-service:patched test-service-static:true]
  Mar 14 07:25:40.282: INFO: Service test-service-hcdpn patched
  STEP: deleting the service @ 03/14/24 07:25:40.282
  STEP: watching for the Service to be deleted @ 03/14/24 07:25:40.286
  Mar 14 07:25:40.286: INFO: Observed event: ADDED
  Mar 14 07:25:40.286: INFO: Observed event: MODIFIED
  Mar 14 07:25:40.286: INFO: Observed event: MODIFIED
  Mar 14 07:25:40.287: INFO: Observed event: MODIFIED
  Mar 14 07:25:40.287: INFO: Found Service test-service-hcdpn in namespace services-3631 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Mar 14 07:25:40.287: INFO: Service test-service-hcdpn deleted
  Mar 14 07:25:40.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3631" for this suite. @ 03/14/24 07:25:40.289
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 03/14/24 07:25:40.292
  Mar 14 07:25:40.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename statefulset @ 03/14/24 07:25:40.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:25:40.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:25:40.299
  STEP: Creating service test in namespace statefulset-3406 @ 03/14/24 07:25:40.3
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 03/14/24 07:25:40.302
  STEP: Creating stateful set ss in namespace statefulset-3406 @ 03/14/24 07:25:40.303
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3406 @ 03/14/24 07:25:40.305
  Mar 14 07:25:40.306: INFO: Found 0 stateful pods, waiting for 1
  E0314 07:25:40.962793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:41.963565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:42.963621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:43.963756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:44.963892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:45.964007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:46.964093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:47.964157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:48.964239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:49.964336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:25:50.309: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 03/14/24 07:25:50.309
  Mar 14 07:25:50.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-3406 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 07:25:50.393: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 07:25:50.393: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 07:25:50.393: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 14 07:25:50.394: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0314 07:25:50.965188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:51.965353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:52.965491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:53.965583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:54.965729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:55.965815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:56.965961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:57.966047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:58.966179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:25:59.966296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:00.396: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Mar 14 07:26:00.396: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Mar 14 07:26:00.402: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999892s
  E0314 07:26:00.966665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:01.403: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.99890476s
  E0314 07:26:01.967427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:02.405: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.997132463s
  E0314 07:26:02.968279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:03.407: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.995260384s
  E0314 07:26:03.968761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:04.408: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.993769575s
  E0314 07:26:04.969440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:05.410: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.992161435s
  E0314 07:26:05.969544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:06.412: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.989989774s
  E0314 07:26:06.969587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:07.414: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.98781599s
  E0314 07:26:07.970060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:08.417: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.985436549s
  E0314 07:26:08.970982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:09.419: INFO: Verifying statefulset ss doesn't scale past 1 for another 983.575496ms
  E0314 07:26:09.971735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3406 @ 03/14/24 07:26:10.419
  Mar 14 07:26:10.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-3406 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 14 07:26:10.504: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 14 07:26:10.504: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 14 07:26:10.504: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 14 07:26:10.505: INFO: Found 1 stateful pods, waiting for 3
  E0314 07:26:10.971832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:11.971984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:12.972144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:13.972481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:14.972630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:15.972856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:16.973479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:17.973605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:18.973748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:19.973889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:20.507: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 07:26:20.507: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 07:26:20.507: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 03/14/24 07:26:20.507
  STEP: Scale down will halt with unhealthy stateful pod @ 03/14/24 07:26:20.507
  Mar 14 07:26:20.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-3406 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 07:26:20.586: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 07:26:20.586: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 07:26:20.586: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 14 07:26:20.586: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-3406 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 07:26:20.669: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 07:26:20.669: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 07:26:20.669: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 14 07:26:20.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-3406 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Mar 14 07:26:20.744: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Mar 14 07:26:20.744: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Mar 14 07:26:20.744: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Mar 14 07:26:20.744: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Mar 14 07:26:20.746: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0314 07:26:20.974252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:21.974930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:22.975064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:23.975154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:24.975242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:25.975639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:26.975868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:27.976004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:28.976048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:29.976172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:30.749: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Mar 14 07:26:30.749: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Mar 14 07:26:30.749: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Mar 14 07:26:30.754: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999857s
  E0314 07:26:30.976892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:31.756: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.998092368s
  E0314 07:26:31.977715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:32.758: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.996459532s
  E0314 07:26:32.978412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:33.761: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.993807052s
  E0314 07:26:33.979239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:34.764: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.990974844s
  E0314 07:26:34.980267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:35.765: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.988726571s
  E0314 07:26:35.981132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:36.768: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.98664106s
  E0314 07:26:36.981551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:37.769: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.984698485s
  E0314 07:26:37.982182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:38.772: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.983070781s
  E0314 07:26:38.982258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:39.774: INFO: Verifying statefulset ss doesn't scale past 3 for another 980.1636ms
  E0314 07:26:39.982790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3406 @ 03/14/24 07:26:40.775
  Mar 14 07:26:40.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-3406 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 14 07:26:40.852: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 14 07:26:40.852: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 14 07:26:40.852: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 14 07:26:40.852: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-3406 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Mar 14 07:26:40.932: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 14 07:26:40.932: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 14 07:26:40.932: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 14 07:26:40.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=statefulset-3406 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0314 07:26:40.983383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:26:41.013: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Mar 14 07:26:41.013: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Mar 14 07:26:41.013: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Mar 14 07:26:41.013: INFO: Scaling statefulset ss to 0
  E0314 07:26:41.984220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:42.984310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:43.985284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:44.985187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:45.985281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:46.985366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:47.985857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:48.985992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:49.986083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:50.986177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 03/14/24 07:26:51.022
  Mar 14 07:26:51.022: INFO: Deleting all statefulset in ns statefulset-3406
  Mar 14 07:26:51.023: INFO: Scaling statefulset ss to 0
  Mar 14 07:26:51.028: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 14 07:26:51.029: INFO: Deleting statefulset ss
  Mar 14 07:26:51.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3406" for this suite. @ 03/14/24 07:26:51.035
• [70.746 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 03/14/24 07:26:51.038
  Mar 14 07:26:51.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:26:51.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:26:51.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:26:51.047
  STEP: Counting existing ResourceQuota @ 03/14/24 07:26:51.048
  E0314 07:26:51.986952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:52.987034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:53.987378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:54.987465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:55.988042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/14/24 07:26:56.05
  STEP: Ensuring resource quota status is calculated @ 03/14/24 07:26:56.052
  E0314 07:26:56.988133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:57.988993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 03/14/24 07:26:58.054
  STEP: Ensuring ResourceQuota status captures the pod usage @ 03/14/24 07:26:58.06
  E0314 07:26:58.989163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:26:59.989306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 03/14/24 07:27:00.061
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 03/14/24 07:27:00.063
  STEP: Ensuring a pod cannot update its resource requirements @ 03/14/24 07:27:00.064
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 03/14/24 07:27:00.066
  E0314 07:27:00.990140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:01.990278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/14/24 07:27:02.068
  STEP: Ensuring resource quota status released the pod usage @ 03/14/24 07:27:02.072
  E0314 07:27:02.991144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:03.991278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:27:04.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-43" for this suite. @ 03/14/24 07:27:04.075
• [13.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 03/14/24 07:27:04.079
  Mar 14 07:27:04.079: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-runtime @ 03/14/24 07:27:04.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:27:04.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:27:04.087
  STEP: create the container @ 03/14/24 07:27:04.088
  W0314 07:27:04.091394      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 03/14/24 07:27:04.091
  E0314 07:27:04.991560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:05.991679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:06.991759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/14/24 07:27:07.098
  STEP: the container should be terminated @ 03/14/24 07:27:07.099
  STEP: the termination message should be set @ 03/14/24 07:27:07.099
  Mar 14 07:27:07.099: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 03/14/24 07:27:07.099
  Mar 14 07:27:07.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-621" for this suite. @ 03/14/24 07:27:07.106
• [3.029 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 03/14/24 07:27:07.109
  Mar 14 07:27:07.109: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename runtimeclass @ 03/14/24 07:27:07.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:27:07.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:27:07.117
  STEP: getting /apis @ 03/14/24 07:27:07.118
  STEP: getting /apis/node.k8s.io @ 03/14/24 07:27:07.121
  STEP: getting /apis/node.k8s.io/v1 @ 03/14/24 07:27:07.121
  STEP: creating @ 03/14/24 07:27:07.122
  STEP: watching @ 03/14/24 07:27:07.127
  Mar 14 07:27:07.128: INFO: starting watch
  STEP: getting @ 03/14/24 07:27:07.13
  STEP: listing @ 03/14/24 07:27:07.131
  STEP: patching @ 03/14/24 07:27:07.132
  STEP: updating @ 03/14/24 07:27:07.134
  Mar 14 07:27:07.135: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 03/14/24 07:27:07.135
  STEP: deleting a collection @ 03/14/24 07:27:07.139
  Mar 14 07:27:07.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6055" for this suite. @ 03/14/24 07:27:07.144
• [0.037 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 03/14/24 07:27:07.148
  Mar 14 07:27:07.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:27:07.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:27:07.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:27:07.155
  STEP: Creating secret with name s-test-opt-del-a4fad7e3-351e-47d4-9a4e-19fac9b83609 @ 03/14/24 07:27:07.158
  STEP: Creating secret with name s-test-opt-upd-ae8c9375-8c17-4661-b1d5-5562638376db @ 03/14/24 07:27:07.16
  STEP: Creating the pod @ 03/14/24 07:27:07.161
  E0314 07:27:07.992124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:08.992217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-a4fad7e3-351e-47d4-9a4e-19fac9b83609 @ 03/14/24 07:27:09.175
  STEP: Updating secret s-test-opt-upd-ae8c9375-8c17-4661-b1d5-5562638376db @ 03/14/24 07:27:09.177
  STEP: Creating secret with name s-test-opt-create-74bdde58-a621-4e9f-bc38-3cc166529e20 @ 03/14/24 07:27:09.178
  STEP: waiting to observe update in volume @ 03/14/24 07:27:09.18
  E0314 07:27:09.993002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:10.993473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:27:11.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9525" for this suite. @ 03/14/24 07:27:11.21
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 03/14/24 07:27:11.222
  Mar 14 07:27:11.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:27:11.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:27:11.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:27:11.229
  STEP: Creating a pod to test downward api env vars @ 03/14/24 07:27:11.23
  E0314 07:27:11.993572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:12.993900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:13.994733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:14.994958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:27:15.24
  Mar 14 07:27:15.242: INFO: Trying to get logs from node k8s-worker01 pod downward-api-4e6777ed-0176-48b5-9896-d9490c995021 container dapi-container: <nil>
  STEP: delete the pod @ 03/14/24 07:27:15.245
  Mar 14 07:27:15.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-327" for this suite. @ 03/14/24 07:27:15.252
• [4.032 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 03/14/24 07:27:15.254
  Mar 14 07:27:15.254: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:27:15.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:27:15.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:27:15.263
  STEP: Creating configMap with name projected-configmap-test-volume-map-238c7b4d-d9ef-448f-96b6-d9390896b19c @ 03/14/24 07:27:15.264
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:27:15.265
  E0314 07:27:15.995881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:16.996058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:17.996602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:18.997176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:27:19.278
  Mar 14 07:27:19.279: INFO: Trying to get logs from node k8s-worker01 pod pod-projected-configmaps-76860cd7-422b-45bc-a11c-abd25707d918 container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:27:19.281
  Mar 14 07:27:19.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2365" for this suite. @ 03/14/24 07:27:19.288
• [4.036 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 03/14/24 07:27:19.291
  Mar 14 07:27:19.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename proxy @ 03/14/24 07:27:19.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:27:19.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:27:19.297
  Mar 14 07:27:19.299: INFO: Creating pod...
  E0314 07:27:19.997544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:20.998395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:27:21.306: INFO: Creating service...
  Mar 14 07:27:21.310: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/pods/agnhost/proxy/some/path/with/DELETE
  Mar 14 07:27:21.313: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Mar 14 07:27:21.313: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/pods/agnhost/proxy/some/path/with/GET
  Mar 14 07:27:21.315: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Mar 14 07:27:21.315: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/pods/agnhost/proxy/some/path/with/HEAD
  Mar 14 07:27:21.316: INFO: http.Client request:HEAD | StatusCode:200
  Mar 14 07:27:21.316: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/pods/agnhost/proxy/some/path/with/OPTIONS
  Mar 14 07:27:21.318: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Mar 14 07:27:21.318: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/pods/agnhost/proxy/some/path/with/PATCH
  Mar 14 07:27:21.319: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Mar 14 07:27:21.319: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/pods/agnhost/proxy/some/path/with/POST
  Mar 14 07:27:21.321: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Mar 14 07:27:21.321: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/pods/agnhost/proxy/some/path/with/PUT
  Mar 14 07:27:21.322: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Mar 14 07:27:21.322: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/services/test-service/proxy/some/path/with/DELETE
  Mar 14 07:27:21.324: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Mar 14 07:27:21.324: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/services/test-service/proxy/some/path/with/GET
  Mar 14 07:27:21.326: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Mar 14 07:27:21.326: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/services/test-service/proxy/some/path/with/HEAD
  Mar 14 07:27:21.327: INFO: http.Client request:HEAD | StatusCode:200
  Mar 14 07:27:21.327: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/services/test-service/proxy/some/path/with/OPTIONS
  Mar 14 07:27:21.329: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Mar 14 07:27:21.329: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/services/test-service/proxy/some/path/with/PATCH
  Mar 14 07:27:21.330: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Mar 14 07:27:21.330: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/services/test-service/proxy/some/path/with/POST
  Mar 14 07:27:21.332: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Mar 14 07:27:21.332: INFO: Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-6439/services/test-service/proxy/some/path/with/PUT
  Mar 14 07:27:21.333: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Mar 14 07:27:21.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6439" for this suite. @ 03/14/24 07:27:21.335
• [2.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 03/14/24 07:27:21.34
  Mar 14 07:27:21.340: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:27:21.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:27:21.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:27:21.348
  STEP: Counting existing ResourceQuota @ 03/14/24 07:27:21.35
  E0314 07:27:21.999335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:22.999872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:24.000626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:25.001127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:26.002238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/14/24 07:27:26.351
  STEP: Ensuring resource quota status is calculated @ 03/14/24 07:27:26.353
  E0314 07:27:27.002287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:28.002833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 03/14/24 07:27:28.355
  STEP: Ensuring resource quota status captures replicaset creation @ 03/14/24 07:27:28.36
  E0314 07:27:29.002912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:30.003124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 03/14/24 07:27:30.363
  STEP: Ensuring resource quota status released usage @ 03/14/24 07:27:30.365
  E0314 07:27:31.003175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:32.003302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:27:32.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1818" for this suite. @ 03/14/24 07:27:32.369
• [11.032 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 03/14/24 07:27:32.372
  Mar 14 07:27:32.372: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename subpath @ 03/14/24 07:27:32.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:27:32.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:27:32.378
  STEP: Setting up data @ 03/14/24 07:27:32.379
  STEP: Creating pod pod-subpath-test-downwardapi-vv5r @ 03/14/24 07:27:32.382
  STEP: Creating a pod to test atomic-volume-subpath @ 03/14/24 07:27:32.382
  E0314 07:27:33.004047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:34.004388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:35.004894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:36.005193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:37.006425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:38.006451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:39.006489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:40.007254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:41.007309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:42.007455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:43.007553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:44.008491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:45.009165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:46.009461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:47.009872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:48.010136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:49.010573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:50.010728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:51.011674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:52.011813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:53.012656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:54.012771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:55.013694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:56.014678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:27:56.412
  Mar 14 07:27:56.414: INFO: Trying to get logs from node k8s-worker02 pod pod-subpath-test-downwardapi-vv5r container test-container-subpath-downwardapi-vv5r: <nil>
  STEP: delete the pod @ 03/14/24 07:27:56.416
  STEP: Deleting pod pod-subpath-test-downwardapi-vv5r @ 03/14/24 07:27:56.421
  Mar 14 07:27:56.421: INFO: Deleting pod "pod-subpath-test-downwardapi-vv5r" in namespace "subpath-9079"
  Mar 14 07:27:56.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9079" for this suite. @ 03/14/24 07:27:56.424
• [24.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 03/14/24 07:27:56.427
  Mar 14 07:27:56.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename statefulset @ 03/14/24 07:27:56.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:27:56.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:27:56.434
  STEP: Creating service test in namespace statefulset-328 @ 03/14/24 07:27:56.435
  STEP: Looking for a node to schedule stateful set and pod @ 03/14/24 07:27:56.437
  STEP: Creating pod with conflicting port in namespace statefulset-328 @ 03/14/24 07:27:56.439
  STEP: Waiting until pod test-pod will start running in namespace statefulset-328 @ 03/14/24 07:27:56.442
  E0314 07:27:57.015280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:27:58.015396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-328 @ 03/14/24 07:27:58.445
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-328 @ 03/14/24 07:27:58.448
  Mar 14 07:27:58.462: INFO: Observed stateful pod in namespace: statefulset-328, name: ss-0, uid: 2428cce8-f38e-4cd7-9fa5-5fccc58e197a, status phase: Pending. Waiting for statefulset controller to delete.
  Mar 14 07:27:58.469: INFO: Observed stateful pod in namespace: statefulset-328, name: ss-0, uid: 2428cce8-f38e-4cd7-9fa5-5fccc58e197a, status phase: Failed. Waiting for statefulset controller to delete.
  Mar 14 07:27:58.473: INFO: Observed stateful pod in namespace: statefulset-328, name: ss-0, uid: 2428cce8-f38e-4cd7-9fa5-5fccc58e197a, status phase: Failed. Waiting for statefulset controller to delete.
  Mar 14 07:27:58.475: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-328
  STEP: Removing pod with conflicting port in namespace statefulset-328 @ 03/14/24 07:27:58.475
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-328 and will be in running state @ 03/14/24 07:27:58.483
  E0314 07:27:59.016393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:00.016704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:28:00.487: INFO: Deleting all statefulset in ns statefulset-328
  Mar 14 07:28:00.489: INFO: Scaling statefulset ss to 0
  E0314 07:28:01.017602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:02.017742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:03.018628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:04.019425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:05.019842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:06.020173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:07.020440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:08.021496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:09.021735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:10.022097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:28:10.496: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 14 07:28:10.497: INFO: Deleting statefulset ss
  Mar 14 07:28:10.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-328" for this suite. @ 03/14/24 07:28:10.502
• [14.080 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 03/14/24 07:28:10.508
  Mar 14 07:28:10.508: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename deployment @ 03/14/24 07:28:10.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:10.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:10.515
  Mar 14 07:28:10.516: INFO: Creating deployment "webserver-deployment"
  Mar 14 07:28:10.519: INFO: Waiting for observed generation 1
  E0314 07:28:11.022424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:12.022782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:28:12.522: INFO: Waiting for all required pods to come up
  Mar 14 07:28:12.523: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 03/14/24 07:28:12.523
  Mar 14 07:28:12.524: INFO: Waiting for deployment "webserver-deployment" to complete
  Mar 14 07:28:12.525: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Mar 14 07:28:12.529: INFO: Updating deployment webserver-deployment
  Mar 14 07:28:12.529: INFO: Waiting for observed generation 2
  E0314 07:28:13.023493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:14.023700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:28:14.531: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Mar 14 07:28:14.532: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Mar 14 07:28:14.533: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Mar 14 07:28:14.536: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Mar 14 07:28:14.536: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Mar 14 07:28:14.537: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Mar 14 07:28:14.539: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Mar 14 07:28:14.539: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Mar 14 07:28:14.542: INFO: Updating deployment webserver-deployment
  Mar 14 07:28:14.542: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Mar 14 07:28:14.544: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Mar 14 07:28:14.545: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  E0314 07:28:15.024420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:16.024540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:28:16.549: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a915ac5-c401-4663-aa32-5667e107627c",
      ResourceVersion: (string) (len=5) "30763",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      UnavailableReplicas: (int32) 13,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 14 07:28:16.553: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
      ResourceVersion: (string) (len=5) "30540",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0a915ac5-c401-4663-aa32-5667e107627c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 39 31 35 61  63 35 2d 63 34 30 31 2d  |\"0a915ac5-c401-|
              00000120  34 36 36 33 2d 61 61 33  32 2d 35 36 36 37 65 31  |4663-aa32-5667e1|
              00000130  30 37 36 32 37 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |07627c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:28:16.554: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Mar 14 07:28:16.555: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
      ResourceVersion: (string) (len=5) "30760",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "0a915ac5-c401-4663-aa32-5667e107627c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 61 39 31 35 61  63 35 2d 63 34 30 31 2d  |\"0a915ac5-c401-|
              00000120  34 36 36 33 2d 61 61 33  32 2d 35 36 36 37 65 31  |4663-aa32-5667e1|
              00000130  30 37 36 32 37 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |07627c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 20,
      AvailableReplicas: (int32) 20,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:28:16.559: INFO: Pod "webserver-deployment-788fbd4fc4-2dzpr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-2dzpr",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb08f3b7-da95-4f1e-b075-bd438d7af132",
      ResourceVersion: (string) (len=5) "30700",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.109/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.109/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "026f1235ca19715742a0c97cf78e78c80555d23d9336a25ddd8371190a4c45d7"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 31 30 39 5c 22 7d  |10.244.79.109\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cml5w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cml5w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.109",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.109"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://a9744bd15e6085dd165035190060437d8727d9e220bdc652f4f59f46530c1e49",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.560: INFO: Pod "webserver-deployment-788fbd4fc4-5sbvd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-5sbvd",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7121492-e945-4226-b0e5-a0b51b2a2f45",
      ResourceVersion: (string) (len=5) "30738",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bd0d7cf028ac123fa62f3081851e14facfb0f5eaa26152abaf588927870b5f38",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.222/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.222/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 32 32 5c 22 7d  |10.244.69.222\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v8vf6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v8vf6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.222",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.222"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://2c011b4e5dbe5b385f57b8804fd52a229986a7c67e404335ddd3775e51e18e96",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.562: INFO: Pod "webserver-deployment-788fbd4fc4-8hfrm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-8hfrm",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a6b592a-6c0a-4f78-a366-46d3252374d9",
      ResourceVersion: (string) (len=5) "30654",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3658a7847eebaed998c195e735dbd005028c2a06fc268641a87d393554c82570",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.200/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.200/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 30 30 5c 22 7d  |10.244.69.200\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sdp5c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sdp5c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.200",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.200"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://3f9266bd9de83dc43981bba7e4e457c8cf4ed6577833ddaa11f4d8d216aebe36",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.565: INFO: Pod "webserver-deployment-788fbd4fc4-8srkd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-8srkd",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb598f2d-4e5a-4197-b943-35d4c46bac41",
      ResourceVersion: (string) (len=5) "30671",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.113/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.113/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b96750148bd4f188c0521643951925cf45efba56b5185f3cacc01238d478cebd"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 31 31 33 5c 22 7d  |10.244.79.113\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ncg2d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ncg2d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.113",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.113"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://566c6f3f060739e7403fd9c6dcf110ce0c7d54417433d9f8928c7b772703a37d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.566: INFO: Pod "webserver-deployment-788fbd4fc4-dkz8q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-dkz8q",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55e40df0-44fd-49a4-bb21-6729471d1a2a",
      ResourceVersion: (string) (len=5) "30326",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c27665d3b9d4f5a5bef2808647862b48e9988e6a28e16bbb5fd857a258179b6e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.107/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.107/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 31 30 37 5c 22 7d  |10.244.79.107\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g9xs7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g9xs7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.107",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.107"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://b211048bb7b1ff3d690b71abb61c3cb5bf34952b045ea816ba544a9833d5ef47",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.568: INFO: Pod "webserver-deployment-788fbd4fc4-fwqt6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-fwqt6",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "979c758a-228c-4e56-a704-6cfac59b2512",
      ResourceVersion: (string) (len=5) "30304",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7d9f7da2bec74045dcd08f0268b42c81981d644d5ea8161b0b71bef676237aa9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.216/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.216/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 31 36 5c 22 7d  |10.244.69.216\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xq8t7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xq8t7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://a2deba560d701eec3ff9e3e5ebc9771947ae489a20188122a0f692ed1285e27c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.569: INFO: Pod "webserver-deployment-788fbd4fc4-g2mn5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-g2mn5",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b39507bc-069d-4488-834b-c44f1254a6fb",
      ResourceVersion: (string) (len=5) "30306",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "72a94c57efb995d59f7c1e10eaaa6525a3437a726b866b05bfae45f31a72b792",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.195/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.195/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 31 39 35 5c 22 7d  |10.244.69.195\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9vhp7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9vhp7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.195",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.195"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://17a98d5910c938f4ec4e8fda983303214186dd401f1abf1841add3a990c4667c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.570: INFO: Pod "webserver-deployment-788fbd4fc4-gvgtz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-gvgtz",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a5d5f9f-14e7-40f6-8fbd-7979ed84f85c",
      ResourceVersion: (string) (len=5) "30324",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.79.72/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "64536f601ffd28edf4f3ee765389869fcf9158d1ac042d5f8c9ff8da6e5baa11",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.79.72/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 37 32 5c 22 7d 22  |10.244.79.72\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mdn7l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mdn7l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.79.72",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.79.72"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://edbda07d1b5980da79f09f79b96d612f51912f5bdbe0fa8e5e3e6f286f5fa70a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.571: INFO: Pod "webserver-deployment-788fbd4fc4-lwz7h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-lwz7h",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd4affb4-a8e5-4469-9068-7906ddb0bf6e",
      ResourceVersion: (string) (len=5) "30682",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9eba2e8e793a8b9ba2ffda9af9468bf89330882725263206d5705a01e5e4f53d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.110/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.110/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 31 31 30 5c 22 7d  |10.244.79.110\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tgd8s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tgd8s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.110",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.110"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://72c24a968cfaee0f732bf29a93bc36bdb0ae67629f6f2f54d7605615c34e1787",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.573: INFO: Pod "webserver-deployment-788fbd4fc4-m6h5j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-m6h5j",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae8f94cf-be23-4d74-b4a4-08fba81ed773",
      ResourceVersion: (string) (len=5) "30744",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a52ba2888ced522422010e50abdd88d7a951eb31c1003936718006dfac3e7eaa",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.149/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.149/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  32 2e 31 34 39 5c 22 7d  |10.244.32.149\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dmq9q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dmq9q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://a7ac16390aaab8ff206f6a4801397ffda878b17065d271e0e1298e349d6887d6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.573: INFO: Pod "webserver-deployment-788fbd4fc4-nhjz2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-nhjz2",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05416106-df09-467b-89d0-8ec453a60b07",
      ResourceVersion: (string) (len=5) "30319",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "122c0a4ddfd712bd002070579ab45cb7cad4a504b8ab487b45e0cf05b42ecded",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.176/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.176/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  32 2e 31 37 36 5c 22 7d  |10.244.32.176\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jd2bw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jd2bw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://796baaccd827b4454c11d0858524f7feff2bdb1a6882686b1d6b32c56983ee13",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.574: INFO: Pod "webserver-deployment-788fbd4fc4-t8wzw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-t8wzw",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f189e87-e3fa-4eba-8d3e-2b00c96c9071",
      ResourceVersion: (string) (len=5) "30308",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.164/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.164/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "84694d4fdc4d60b8acad86b9e64f3da4ca642d60cbf1a63e3c7ed775c8dd6ba1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  32 2e 31 36 34 5c 22 7d  |10.244.32.164\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4drvn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4drvn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.164",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.164"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://549e3a44639cdb36a16c4f213a4aac16f62fd2f50136794ca71f3a581672d8f2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.575: INFO: Pod "webserver-deployment-788fbd4fc4-tbx6j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-tbx6j",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "390be2c9-40b9-4a44-9688-9ee0f009ce2c",
      ResourceVersion: (string) (len=5) "30687",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8829b1fdbf1136ff69c1c49a35b236eb2e120fea75778afc44af7e0533f83460",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.112/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.112/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 31 31 32 5c 22 7d  |10.244.79.112\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4scbt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4scbt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.112",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.112"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://73fe31ccb68378b85621bd3d10048dac20b36043baba1aceec4439aebcc4c30d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.576: INFO: Pod "webserver-deployment-788fbd4fc4-tlprd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-tlprd",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d29321d-f832-44d3-a241-edf8968c0dce",
      ResourceVersion: (string) (len=5) "30329",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.79.77/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f7f0e2658e2be279c7a4315b9977e72ede434fffa5625dd4c4a6db3726fe3b57",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.79.77/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 37 37 5c 22 7d 22  |10.244.79.77\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7vgsx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7vgsx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.79.77",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.79.77"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://5bf73f27d94e4401e324bfde9987adb98c02c6d3776805640c5091f5a8124648",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.577: INFO: Pod "webserver-deployment-788fbd4fc4-vf4kl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-vf4kl",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f8a9c79-bab3-4483-ac09-12afc231f959",
      ResourceVersion: (string) (len=5) "30754",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "30d0862cad4721080f8dd29a59d4aeaf89291b7871f1b91ec10fb42655bb77aa",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.227/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.227/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 32 37 5c 22 7d  |10.244.69.227\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pdgxc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pdgxc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.227",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.227"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://59d2fabe6fa8d3b0f5f66e4453858c2c69872d7abbee97c8fcede91d2380a3c1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.578: INFO: Pod "webserver-deployment-788fbd4fc4-vh86x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-vh86x",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d2569418-8d4d-40a3-b8c5-08c02cfac0b6",
      ResourceVersion: (string) (len=5) "30661",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fc2ca55160aa47a2707bbf2ba6ab97b62f6c0ca58ba4038c29dce142df168b38",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.205/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.205/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 30 35 5c 22 7d  |10.244.69.205\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6rvm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6rvm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://02e2666150b1cfcdeddf2f44d2085b26390eec1c11ef00372a1543447ace577b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.579: INFO: Pod "webserver-deployment-788fbd4fc4-vm7k4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-vm7k4",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa5fc6b2-3d31-4b5a-9094-3dc8fdad4b93",
      ResourceVersion: (string) (len=5) "30312",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d8c67733a0cb3a2d1e39133f30ce9e61b17df93616b6bca78805028ab034524f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.159/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.159/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  32 2e 31 35 39 5c 22 7d  |10.244.32.159\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85l4c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85l4c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://fb7fa2d5f44d7c07f72b2301c952477671afa1b63cea4a35a09c62b36441f17f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.580: INFO: Pod "webserver-deployment-788fbd4fc4-zh48b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-zh48b",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0d91d676-7dba-48a7-91de-c9590746b7bf",
      ResourceVersion: (string) (len=5) "30681",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.220/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3d8b4915e2d5dc1ada7862fc047497db899c2d0515100e574d8c4b18c2f26e2a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.220/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 36  39 2e 32 32 30 5c 22 7d  |10.244.69.220\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xtdgs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xtdgs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.220",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.220"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://f292260df3abdd7da8e0c4a894eac6df83eba9cd7779f092c7d723a14481f174",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.582: INFO: Pod "webserver-deployment-788fbd4fc4-znlh8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-znlh8",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e426fa1-ece4-4fa1-9819-7d6a50dcf741",
      ResourceVersion: (string) (len=5) "30755",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.172/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9025930428be87d3e91ee3998abe6fee20ceafc22f37282fca7769d1b24294c2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.172/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  32 2e 31 37 32 5c 22 7d  |10.244.32.172\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dprw5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dprw5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.172",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.172"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://efd9cb758903703183bc1edfc099a932500171d778970e82914ec9b6735ecddb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.583: INFO: Pod "webserver-deployment-788fbd4fc4-zxbsw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-788fbd4fc4-zxbsw",
      GenerateName: (string) (len=32) "webserver-deployment-788fbd4fc4-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "148818c8-6a5b-4f13-858e-de8068de46c7",
      ResourceVersion: (string) (len=5) "30657",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "788fbd4fc4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "183fc7690acfac6b62409a7cee1dd2aefb2d05ab4df2c273ef7f322ab2423486",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.177/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.177/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-788fbd4fc4",
          UID: (types.UID) (len=36) "2354b9d9-2f5f-42e2-9d31-0db26ec488b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 33  35 34 62 39 64 39 2d 32  |d\":\"2354b9d9-2|
              00000090  66 35 66 2d 34 32 65 32  2d 39 64 33 31 2d 30 64  |f5f-42e2-9d31-0d|
              000000a0  62 32 36 65 63 34 38 38  62 35 5c 22 7d 22 3a 7b  |b26ec488b5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 33  32 2e 31 37 37 5c 22 7d  |10.244.32.177\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7drkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7drkk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.177",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.177"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998095,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://0fa7e90c2043f1745499cb66192fba2e2a8351e4c9cf5acc428f8f7b7f4be580",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.584: INFO: Pod "webserver-deployment-9b4f5bf69-2k85t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2k85t",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "698c06a9-6bce-49de-9304-a876e7788bbe",
      ResourceVersion: (string) (len=5) "30410",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "dba71e8ca11430013a4fabb7b78da17021c7f954a084ec29797364e8df2c2582",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.248/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.248/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 36 39 2e 32  34 38 5c 22 7d 22 3a 7b  |244.69.248\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nq6p2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nq6p2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.248",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.248"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.585: INFO: Pod "webserver-deployment-9b4f5bf69-7tlkn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7tlkn",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0197e45a-5be2-4605-9aa0-48a8678a62e2",
      ResourceVersion: (string) (len=5) "30750",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "bbdcfce99b61a589e6c3e836b9ea86006de615845a0569bd115d2623dd5e7e50",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.175/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.175/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 33 32 2e 31  37 35 5c 22 7d 22 3a 7b  |244.32.175\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tg944",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tg944",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.586: INFO: Pod "webserver-deployment-9b4f5bf69-7vfmq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-7vfmq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6275b46d-79ff-4c6c-a783-d23cad67a609",
      ResourceVersion: (string) (len=5) "30670",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e8ce91f765dc62b80ec32f828355546be738599def4e7e02adede8b0b4535886",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.153/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.153/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 33 32 2e 31  35 33 5c 22 7d 22 3a 7b  |244.32.153\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9hdz8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9hdz8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.153",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.153"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.587: INFO: Pod "webserver-deployment-9b4f5bf69-8hl4q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8hl4q",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c83f863a-22a3-4e27-bd53-86e7a9f1fab8",
      ResourceVersion: (string) (len=5) "30748",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.225/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cb23f1a75cc3b407a41d4915feec9209e0cd27b9b72ad224eca62f7a6b260bdd",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.225/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 36 39 2e 32  32 35 5c 22 7d 22 3a 7b  |244.69.225\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hsxmw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hsxmw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.225",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.225"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.589: INFO: Pod "webserver-deployment-9b4f5bf69-blz6m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-blz6m",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33072ef2-c36c-4c97-b3d7-f1bd92bc6340",
      ResourceVersion: (string) (len=5) "30424",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.108/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "696f6d799fa88c548db7ddf44f1127d590d7c987fae0f6f65d03191210b10bec",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.108/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 37 39 2e 31  30 38 5c 22 7d 22 3a 7b  |244.79.108\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sj7rs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sj7rs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.590: INFO: Pod "webserver-deployment-9b4f5bf69-gh54m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gh54m",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d2b65e1-a2cb-41df-877b-d29a8b18faee",
      ResourceVersion: (string) (len=5) "30694",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1f6198dad48bf09125834f7d6cfde1a83059ab491d2f3d42ab136a0abb62558a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.114/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.114/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 37 39 2e 31  31 34 5c 22 7d 22 3a 7b  |244.79.114\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9gj2x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9gj2x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.114",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.114"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.591: INFO: Pod "webserver-deployment-9b4f5bf69-gzfb6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gzfb6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf380ca3-2fe0-452a-a039-45e5d7355f02",
      ResourceVersion: (string) (len=5) "30416",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5d90087e642205547f4700c871b890d520b81cb50e26e38327ef98f62e8b26ed",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.156/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.156/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 33 32 2e 31  35 36 5c 22 7d 22 3a 7b  |244.32.156\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqqbx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqqbx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.156",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.156"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.592: INFO: Pod "webserver-deployment-9b4f5bf69-jx6nq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jx6nq",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f920f7e-c7ae-45b6-ab2c-7dfe2b96f562",
      ResourceVersion: (string) (len=5) "30666",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8089df05f87804920a935ad49dc662063b0fd634ed38535362c605a7b1425fc2",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.32.162/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.32.162/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 33 32 2e 31  36 32 5c 22 7d 22 3a 7b  |244.32.162\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8qccx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8qccx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-master01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.11",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.32.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.32.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.593: INFO: Pod "webserver-deployment-9b4f5bf69-kpjsv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kpjsv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f1b2b284-1583-4f9f-8039-5e749534bba6",
      ResourceVersion: (string) (len=5) "30421",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3e3d9b2ad8d77bcd2058098fcdaa5137665a32657124a1dd8dd81982f399cc9a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.111/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.111/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 37 39 2e 31  31 31 5c 22 7d 22 3a 7b  |244.79.111\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ns8kh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ns8kh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.111",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.111"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.594: INFO: Pod "webserver-deployment-9b4f5bf69-kt5pp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kt5pp",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e478cfb1-68fd-45fa-87a9-218d80622884",
      ResourceVersion: (string) (len=5) "30414",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "23e7e522eaca8d21d0d653bbea790ccc400aa94357c98aede0340d69df07e728",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.196/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.196/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998093,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 36 39 2e 31  39 36 5c 22 7d 22 3a 7b  |244.69.196\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tpp29",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tpp29",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.196",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.196"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998092,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.595: INFO: Pod "webserver-deployment-9b4f5bf69-qg22l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qg22l",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac571df6-8553-4416-90a0-e101a334eab9",
      ResourceVersion: (string) (len=5) "30690",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "eda07badbb754bb08f5ddabe30207c0ece0ff3f4655ec8ba7940d05736d03b23",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.125/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.125/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 37 39 2e 31  32 35 5c 22 7d 22 3a 7b  |244.79.125\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czjh2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czjh2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.125",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.125"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.596: INFO: Pod "webserver-deployment-9b4f5bf69-r67kl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-r67kl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f914e06-87aa-4723-b570-68bfa0a0e1ce",
      ResourceVersion: (string) (len=5) "30674",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b77b73f4ba5cfded9517d9cd9c97c73531ebad95f30e29513b78073ba8e6a297",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.221/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.221/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 36 39 2e 32  32 31 5c 22 7d 22 3a 7b  |244.69.221\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fb8mm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fb8mm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.221",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.221"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.598: INFO: Pod "webserver-deployment-9b4f5bf69-rdds7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-rdds7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4812",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b82e5efa-be49-4906-abfe-c3f451e8cb8c",
      ResourceVersion: (string) (len=5) "30742",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.69.223/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2d56f932bc06f1d2cd41c5c3b35ff917a92f1e840532aabba73ee12fdfdd8cda",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.69.223/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b8e10f8f-b8fb-451e-9f44-910a5cef19c4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 38  65 31 30 66 38 66 2d 62  |d\":\"b8e10f8f-b|
              00000090  38 66 62 2d 34 35 31 65  2d 39 66 34 34 2d 39 31  |8fb-451e-9f44-91|
              000000a0  30 61 35 63 65 66 31 39  63 34 5c 22 7d 22 3a 7b  |0a5cef19c4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998095,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  32 34 34 2e 36 39 2e 32  32 33 5c 22 7d 22 3a 7b  |244.69.223\"}":{|
              00000210  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000220  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vbpgk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vbpgk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker02",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998094,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.15",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.69.223",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.69.223"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998094,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ImageInspectError",
              Message: (string) (len=214) "Failed to inspect image \"webserver:404\": rpc error: code = Unknown desc = short-name \"webserver:404\" did not resolve to an alias and no unqualified-search registries are defined in \"/etc/containers/registries.conf\""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:16.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4812" for this suite. @ 03/14/24 07:28:16.604
• [6.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 03/14/24 07:28:16.61
  Mar 14 07:28:16.610: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:28:16.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:16.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:16.621
  STEP: Setting up server cert @ 03/14/24 07:28:16.632
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:28:16.929
  STEP: Deploying the webhook pod @ 03/14/24 07:28:16.932
  STEP: Wait for the deployment to be ready @ 03/14/24 07:28:16.936
  Mar 14 07:28:16.939: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0314 07:28:17.024970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:18.025192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:28:18.944
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:28:18.948
  E0314 07:28:19.025412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:28:19.948: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 03/14/24 07:28:19.95
  STEP: create a pod that should be updated by the webhook @ 03/14/24 07:28:19.958
  Mar 14 07:28:19.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0314 07:28:20.025682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-6772" for this suite. @ 03/14/24 07:28:20.03
  STEP: Destroying namespace "webhook-markers-264" for this suite. @ 03/14/24 07:28:20.032
• [3.426 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 03/14/24 07:28:20.037
  Mar 14 07:28:20.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-pred @ 03/14/24 07:28:20.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:20.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:20.046
  Mar 14 07:28:20.048: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Mar 14 07:28:20.051: INFO: Waiting for terminating namespaces to be deleted...
  Mar 14 07:28:20.052: INFO: 
  Logging pods the apiserver thinks is on node k8s-master01 before test
  Mar 14 07:28:20.056: INFO: webserver-deployment-788fbd4fc4-m6h5j from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.056: INFO: webserver-deployment-788fbd4fc4-nhjz2 from deployment-4812 started at 2024-03-14 07:28:10 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.056: INFO: webserver-deployment-788fbd4fc4-t8wzw from deployment-4812 started at 2024-03-14 07:28:10 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.056: INFO: webserver-deployment-788fbd4fc4-vm7k4 from deployment-4812 started at 2024-03-14 07:28:10 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.056: INFO: webserver-deployment-788fbd4fc4-znlh8 from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.056: INFO: webserver-deployment-788fbd4fc4-zxbsw from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.056: INFO: webserver-deployment-9b4f5bf69-7tlkn from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.056: INFO: webserver-deployment-9b4f5bf69-7vfmq from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.056: INFO: webserver-deployment-9b4f5bf69-gzfb6 from deployment-4812 started at 2024-03-14 07:28:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.056: INFO: webserver-deployment-9b4f5bf69-jx6nq from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.056: INFO: calico-kube-controllers-658d97c59c-wdvtv from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container calico-kube-controllers ready: true, restart count 2
  Mar 14 07:28:20.056: INFO: calico-node-tq6x7 from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 07:28:20.056: INFO: coredns-6554b8b87f-hkp8t from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container coredns ready: true, restart count 2
  Mar 14 07:28:20.056: INFO: coredns-6554b8b87f-j45dr from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container coredns ready: true, restart count 2
  Mar 14 07:28:20.056: INFO: etcd-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container etcd ready: true, restart count 2
  Mar 14 07:28:20.056: INFO: kube-apiserver-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.056: INFO: 	Container kube-apiserver ready: true, restart count 2
  Mar 14 07:28:20.056: INFO: kube-controller-manager-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.057: INFO: 	Container kube-controller-manager ready: true, restart count 2
  Mar 14 07:28:20.057: INFO: kube-proxy-8p9f8 from kube-system started at 2024-03-14 05:49:24 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.057: INFO: 	Container kube-proxy ready: true, restart count 2
  Mar 14 07:28:20.057: INFO: kube-scheduler-k8s-master01 from kube-system started at 2024-03-14 06:27:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.057: INFO: 	Container kube-scheduler ready: true, restart count 2
  Mar 14 07:28:20.057: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-whzhf from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:28:20.057: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:28:20.057: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 14 07:28:20.057: INFO: 
  Logging pods the apiserver thinks is on node k8s-worker01 before test
  Mar 14 07:28:20.060: INFO: webserver-deployment-788fbd4fc4-2dzpr from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.060: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.060: INFO: webserver-deployment-788fbd4fc4-8srkd from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.060: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.060: INFO: webserver-deployment-788fbd4fc4-dkz8q from deployment-4812 started at 2024-03-14 07:28:10 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.060: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.060: INFO: webserver-deployment-788fbd4fc4-gvgtz from deployment-4812 started at 2024-03-14 07:28:10 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.060: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.060: INFO: webserver-deployment-788fbd4fc4-lwz7h from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.060: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.060: INFO: webserver-deployment-788fbd4fc4-tbx6j from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.060: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.060: INFO: webserver-deployment-788fbd4fc4-tlprd from deployment-4812 started at 2024-03-14 07:28:10 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.060: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.060: INFO: webserver-deployment-9b4f5bf69-blz6m from deployment-4812 started at 2024-03-14 07:28:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.060: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.060: INFO: webserver-deployment-9b4f5bf69-gh54m from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.060: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.061: INFO: webserver-deployment-9b4f5bf69-kpjsv from deployment-4812 started at 2024-03-14 07:28:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.061: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.061: INFO: webserver-deployment-9b4f5bf69-qg22l from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.061: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.061: INFO: calico-node-6dkfv from kube-system started at 2024-03-14 05:49:28 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.061: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 07:28:20.061: INFO: kube-proxy-nn4d4 from kube-system started at 2024-03-14 05:49:28 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.061: INFO: 	Container kube-proxy ready: true, restart count 1
  Mar 14 07:28:20.061: INFO: sonobuoy-e2e-job-ba74beec76fb403d from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:28:20.061: INFO: 	Container e2e ready: true, restart count 0
  Mar 14 07:28:20.061: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:28:20.061: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-vnvzm from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:28:20.061: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:28:20.061: INFO: 	Container systemd-logs ready: true, restart count 0
  Mar 14 07:28:20.061: INFO: webhook-to-be-mutated from webhook-6772 started at 2024-03-14 07:28:19 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.061: INFO: 	Container example ready: false, restart count 0
  Mar 14 07:28:20.061: INFO: 
  Logging pods the apiserver thinks is on node k8s-worker02 before test
  Mar 14 07:28:20.064: INFO: webserver-deployment-788fbd4fc4-5sbvd from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-788fbd4fc4-8hfrm from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-788fbd4fc4-fwqt6 from deployment-4812 started at 2024-03-14 07:28:10 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-788fbd4fc4-g2mn5 from deployment-4812 started at 2024-03-14 07:28:10 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-788fbd4fc4-vf4kl from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-788fbd4fc4-vh86x from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-788fbd4fc4-zh48b from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: true, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-9b4f5bf69-2k85t from deployment-4812 started at 2024-03-14 07:28:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-9b4f5bf69-8hl4q from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-9b4f5bf69-kt5pp from deployment-4812 started at 2024-03-14 07:28:12 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.064: INFO: webserver-deployment-9b4f5bf69-r67kl from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.064: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.065: INFO: webserver-deployment-9b4f5bf69-rdds7 from deployment-4812 started at 2024-03-14 07:28:14 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.065: INFO: 	Container httpd ready: false, restart count 0
  Mar 14 07:28:20.065: INFO: calico-node-dm8mw from kube-system started at 2024-03-14 05:49:27 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.065: INFO: 	Container calico-node ready: true, restart count 1
  Mar 14 07:28:20.065: INFO: kube-proxy-bw5s2 from kube-system started at 2024-03-14 05:49:27 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.065: INFO: 	Container kube-proxy ready: true, restart count 1
  Mar 14 07:28:20.065: INFO: sonobuoy from sonobuoy started at 2024-03-14 06:28:43 +0000 UTC (1 container statuses recorded)
  Mar 14 07:28:20.065: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Mar 14 07:28:20.065: INFO: sonobuoy-systemd-logs-daemon-set-963ba77819a042af-hlfxv from sonobuoy started at 2024-03-14 06:28:44 +0000 UTC (2 container statuses recorded)
  Mar 14 07:28:20.065: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Mar 14 07:28:20.065: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node k8s-master01 @ 03/14/24 07:28:20.076
  STEP: verifying the node has the label node k8s-worker01 @ 03/14/24 07:28:20.082
  STEP: verifying the node has the label node k8s-worker02 @ 03/14/24 07:28:20.089
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-2dzpr requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-5sbvd requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-8hfrm requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-8srkd requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-dkz8q requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-fwqt6 requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-g2mn5 requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-gvgtz requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-lwz7h requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-m6h5j requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-nhjz2 requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-t8wzw requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-tbx6j requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-tlprd requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-vf4kl requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-vh86x requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-vm7k4 requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-zh48b requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-znlh8 requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-788fbd4fc4-zxbsw requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-2k85t requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-7tlkn requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-7vfmq requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-8hl4q requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-blz6m requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-gh54m requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-gzfb6 requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-jx6nq requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-kpjsv requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-kt5pp requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-qg22l requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-r67kl requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod webserver-deployment-9b4f5bf69-rdds7 requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod calico-kube-controllers-658d97c59c-wdvtv requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod calico-node-6dkfv requesting resource cpu=250m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod calico-node-dm8mw requesting resource cpu=250m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod calico-node-tq6x7 requesting resource cpu=250m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod coredns-6554b8b87f-hkp8t requesting resource cpu=100m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod coredns-6554b8b87f-j45dr requesting resource cpu=100m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod etcd-k8s-master01 requesting resource cpu=100m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod kube-apiserver-k8s-master01 requesting resource cpu=250m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod kube-controller-manager-k8s-master01 requesting resource cpu=200m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod kube-proxy-8p9f8 requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod kube-proxy-bw5s2 requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod kube-proxy-nn4d4 requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod kube-scheduler-k8s-master01 requesting resource cpu=100m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod sonobuoy requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod sonobuoy-e2e-job-ba74beec76fb403d requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod sonobuoy-systemd-logs-daemon-set-963ba77819a042af-hlfxv requesting resource cpu=0m on Node k8s-worker02
  Mar 14 07:28:20.097: INFO: Pod sonobuoy-systemd-logs-daemon-set-963ba77819a042af-vnvzm requesting resource cpu=0m on Node k8s-worker01
  Mar 14 07:28:20.097: INFO: Pod sonobuoy-systemd-logs-daemon-set-963ba77819a042af-whzhf requesting resource cpu=0m on Node k8s-master01
  Mar 14 07:28:20.097: INFO: Pod webhook-to-be-mutated requesting resource cpu=0m on Node k8s-worker01
  STEP: Starting Pods to consume most of the cluster CPU. @ 03/14/24 07:28:20.097
  Mar 14 07:28:20.097: INFO: Creating a pod which consumes cpu=2625m on Node k8s-worker02
  Mar 14 07:28:20.101: INFO: Creating a pod which consumes cpu=2030m on Node k8s-master01
  Mar 14 07:28:20.105: INFO: Creating a pod which consumes cpu=2625m on Node k8s-worker01
  E0314 07:28:21.025805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:22.026244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 03/14/24 07:28:22.129
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-093104ae-c7f5-4ecd-9f21-6c757267df20.17bc90eb9c194e0c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6488/filler-pod-093104ae-c7f5-4ecd-9f21-6c757267df20 to k8s-worker02] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-093104ae-c7f5-4ecd-9f21-6c757267df20.17bc90ebb6b266dc], Reason = [Pulled], Message = [Container image "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9" already present on machine] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-093104ae-c7f5-4ecd-9f21-6c757267df20.17bc90ebba9f3e4b], Reason = [Created], Message = [Created container filler-pod-093104ae-c7f5-4ecd-9f21-6c757267df20] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-093104ae-c7f5-4ecd-9f21-6c757267df20.17bc90ebbb6b92e9], Reason = [Started], Message = [Started container filler-pod-093104ae-c7f5-4ecd-9f21-6c757267df20] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c799fb8c-8c99-40de-bf70-0c6c2b1893db.17bc90eb9cabe1ae], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6488/filler-pod-c799fb8c-8c99-40de-bf70-0c6c2b1893db to k8s-worker01] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c799fb8c-8c99-40de-bf70-0c6c2b1893db.17bc90ebb6332945], Reason = [Pulled], Message = [Container image "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9" already present on machine] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c799fb8c-8c99-40de-bf70-0c6c2b1893db.17bc90ebba9e6cef], Reason = [Created], Message = [Created container filler-pod-c799fb8c-8c99-40de-bf70-0c6c2b1893db] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c799fb8c-8c99-40de-bf70-0c6c2b1893db.17bc90ebbb596601], Reason = [Started], Message = [Started container filler-pod-c799fb8c-8c99-40de-bf70-0c6c2b1893db] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eadcd68e-20e3-4cd0-b7d9-7b0db8996685.17bc90eb9c93b182], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6488/filler-pod-eadcd68e-20e3-4cd0-b7d9-7b0db8996685 to k8s-master01] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eadcd68e-20e3-4cd0-b7d9-7b0db8996685.17bc90ebb6ef79df], Reason = [Pulled], Message = [Container image "hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9" already present on machine] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eadcd68e-20e3-4cd0-b7d9-7b0db8996685.17bc90ebbbec3741], Reason = [Created], Message = [Created container filler-pod-eadcd68e-20e3-4cd0-b7d9-7b0db8996685] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-eadcd68e-20e3-4cd0-b7d9-7b0db8996685.17bc90ebbcba28d4], Reason = [Started], Message = [Started container filler-pod-eadcd68e-20e3-4cd0-b7d9-7b0db8996685] @ 03/14/24 07:28:22.141
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17bc90ec15cf35bf], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] @ 03/14/24 07:28:22.201
  E0314 07:28:23.026255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node k8s-master01 @ 03/14/24 07:28:23.147
  STEP: verifying the node doesn't have the label node @ 03/14/24 07:28:23.152
  STEP: removing the label node off the node k8s-worker01 @ 03/14/24 07:28:23.156
  STEP: verifying the node doesn't have the label node @ 03/14/24 07:28:23.162
  STEP: removing the label node off the node k8s-worker02 @ 03/14/24 07:28:23.165
  STEP: verifying the node doesn't have the label node @ 03/14/24 07:28:23.171
  Mar 14 07:28:23.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6488" for this suite. @ 03/14/24 07:28:23.175
• [3.141 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 03/14/24 07:28:23.181
  Mar 14 07:28:23.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename job @ 03/14/24 07:28:23.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:23.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:23.191
  STEP: Creating a job @ 03/14/24 07:28:23.192
  STEP: Ensure pods equal to parallelism count is attached to the job @ 03/14/24 07:28:23.194
  E0314 07:28:24.026465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:25.027014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 03/14/24 07:28:25.197
  STEP: updating /status @ 03/14/24 07:28:25.2
  STEP: get /status @ 03/14/24 07:28:25.203
  Mar 14 07:28:25.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4820" for this suite. @ 03/14/24 07:28:25.207
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 03/14/24 07:28:25.212
  Mar 14 07:28:25.212: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename field-validation @ 03/14/24 07:28:25.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:25.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:25.221
  STEP: apply creating a deployment @ 03/14/24 07:28:25.23
  Mar 14 07:28:25.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-226" for this suite. @ 03/14/24 07:28:25.24
• [0.030 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 03/14/24 07:28:25.242
  Mar 14 07:28:25.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename watch @ 03/14/24 07:28:25.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:25.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:25.251
  STEP: creating a watch on configmaps with label A @ 03/14/24 07:28:25.252
  STEP: creating a watch on configmaps with label B @ 03/14/24 07:28:25.252
  STEP: creating a watch on configmaps with label A or B @ 03/14/24 07:28:25.253
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 03/14/24 07:28:25.254
  Mar 14 07:28:25.256: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5007  30a782a4-30e8-4990-b3d9-7927d7c7dad7 31273 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:28:25.256: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5007  30a782a4-30e8-4990-b3d9-7927d7c7dad7 31273 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 03/14/24 07:28:25.256
  Mar 14 07:28:25.259: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5007  30a782a4-30e8-4990-b3d9-7927d7c7dad7 31274 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:28:25.259: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5007  30a782a4-30e8-4990-b3d9-7927d7c7dad7 31274 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 03/14/24 07:28:25.259
  Mar 14 07:28:25.262: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5007  30a782a4-30e8-4990-b3d9-7927d7c7dad7 31275 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:28:25.262: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5007  30a782a4-30e8-4990-b3d9-7927d7c7dad7 31275 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 03/14/24 07:28:25.262
  Mar 14 07:28:25.264: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5007  30a782a4-30e8-4990-b3d9-7927d7c7dad7 31276 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:28:25.264: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5007  30a782a4-30e8-4990-b3d9-7927d7c7dad7 31276 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 03/14/24 07:28:25.264
  Mar 14 07:28:25.266: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5007  0f08570e-4d21-43f2-ae1b-e7a0054e7ebd 31277 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:28:25.266: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5007  0f08570e-4d21-43f2-ae1b-e7a0054e7ebd 31277 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0314 07:28:26.027102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:27.027339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:28.027492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:29.027595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:30.027955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:31.028740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:32.028876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:33.028974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:34.029171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:35.029960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 03/14/24 07:28:35.267
  Mar 14 07:28:35.270: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5007  0f08570e-4d21-43f2-ae1b-e7a0054e7ebd 31371 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Mar 14 07:28:35.270: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5007  0f08570e-4d21-43f2-ae1b-e7a0054e7ebd 31371 0 2024-03-14 07:28:25 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-03-14 07:28:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0314 07:28:36.030119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:37.030197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:38.030295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:39.030606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:40.030857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:41.030966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:42.031083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:43.031193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:44.031311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:45.031721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:28:45.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5007" for this suite. @ 03/14/24 07:28:45.273
• [20.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 03/14/24 07:28:45.275
  Mar 14 07:28:45.275: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:28:45.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:45.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:45.282
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:28:45.284
  E0314 07:28:46.032210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:47.032518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:48.033258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:49.033407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:28:49.292
  Mar 14 07:28:49.294: INFO: Trying to get logs from node k8s-worker01 pod downwardapi-volume-1d9027aa-6aad-4e75-939b-d097fb59d65e container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:28:49.297
  Mar 14 07:28:49.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3050" for this suite. @ 03/14/24 07:28:49.305
• [4.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 03/14/24 07:28:49.309
  Mar 14 07:28:49.309: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename deployment @ 03/14/24 07:28:49.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:49.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:49.316
  STEP: creating a Deployment @ 03/14/24 07:28:49.321
  Mar 14 07:28:49.321: INFO: Creating simple deployment test-deployment-4m62v
  Mar 14 07:28:49.327: INFO: deployment "test-deployment-4m62v" doesn't have the required revision set
  E0314 07:28:50.033592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:51.033688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 03/14/24 07:28:51.332
  Mar 14 07:28:51.333: INFO: Deployment test-deployment-4m62v has Conditions: [{Available True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4m62v-7986b7f74" has successfully progressed.}]
  STEP: updating Deployment Status @ 03/14/24 07:28:51.333
  Mar 14 07:28:51.336: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 28, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 28, 50, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 28, 50, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 28, 49, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-4m62v-7986b7f74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 03/14/24 07:28:51.336
  Mar 14 07:28:51.337: INFO: Observed &Deployment event: ADDED
  Mar 14 07:28:51.337: INFO: Observed Deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4m62v-7986b7f74"}
  Mar 14 07:28:51.338: INFO: Observed &Deployment event: MODIFIED
  Mar 14 07:28:51.338: INFO: Observed Deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4m62v-7986b7f74"}
  Mar 14 07:28:51.338: INFO: Observed Deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Mar 14 07:28:51.338: INFO: Observed &Deployment event: MODIFIED
  Mar 14 07:28:51.338: INFO: Observed Deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Mar 14 07:28:51.338: INFO: Observed Deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4m62v-7986b7f74" is progressing.}
  Mar 14 07:28:51.338: INFO: Observed &Deployment event: MODIFIED
  Mar 14 07:28:51.338: INFO: Observed Deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Mar 14 07:28:51.338: INFO: Observed Deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4m62v-7986b7f74" has successfully progressed.}
  Mar 14 07:28:51.338: INFO: Observed &Deployment event: MODIFIED
  Mar 14 07:28:51.338: INFO: Observed Deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Mar 14 07:28:51.338: INFO: Observed Deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4m62v-7986b7f74" has successfully progressed.}
  Mar 14 07:28:51.339: INFO: Found Deployment test-deployment-4m62v in namespace deployment-6595 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 14 07:28:51.339: INFO: Deployment test-deployment-4m62v has an updated status
  STEP: patching the Statefulset Status @ 03/14/24 07:28:51.339
  Mar 14 07:28:51.339: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Mar 14 07:28:51.342: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 03/14/24 07:28:51.342
  Mar 14 07:28:51.344: INFO: Observed &Deployment event: ADDED
  Mar 14 07:28:51.344: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4m62v-7986b7f74"}
  Mar 14 07:28:51.344: INFO: Observed &Deployment event: MODIFIED
  Mar 14 07:28:51.344: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4m62v-7986b7f74"}
  Mar 14 07:28:51.344: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Mar 14 07:28:51.344: INFO: Observed &Deployment event: MODIFIED
  Mar 14 07:28:51.344: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Mar 14 07:28:51.344: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:49 +0000 UTC 2024-03-14 07:28:49 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4m62v-7986b7f74" is progressing.}
  Mar 14 07:28:51.344: INFO: Observed &Deployment event: MODIFIED
  Mar 14 07:28:51.344: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Mar 14 07:28:51.344: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4m62v-7986b7f74" has successfully progressed.}
  Mar 14 07:28:51.345: INFO: Observed &Deployment event: MODIFIED
  Mar 14 07:28:51.345: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:50 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Mar 14 07:28:51.345: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-03-14 07:28:50 +0000 UTC 2024-03-14 07:28:49 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4m62v-7986b7f74" has successfully progressed.}
  Mar 14 07:28:51.345: INFO: Observed deployment test-deployment-4m62v in namespace deployment-6595 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 14 07:28:51.345: INFO: Observed &Deployment event: MODIFIED
  Mar 14 07:28:51.345: INFO: Found deployment test-deployment-4m62v in namespace deployment-6595 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Mar 14 07:28:51.345: INFO: Deployment test-deployment-4m62v has a patched status
  Mar 14 07:28:51.347: INFO: Deployment "test-deployment-4m62v":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-4m62v",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6595",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a8fc75e9-64e2-4124-83b0-82f17e8665f8",
      ResourceVersion: (string) (len=5) "31452",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998131,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-4m62v-7986b7f74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 14 07:28:51.360: INFO: New ReplicaSet "test-deployment-4m62v-7986b7f74" of Deployment "test-deployment-4m62v":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-4m62v-7986b7f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6595",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7aed1b97-aedd-4bb5-88a6-2677b4134ced",
      ResourceVersion: (string) (len=5) "31446",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7986b7f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-4m62v",
          UID: (types.UID) (len=36) "a8fc75e9-64e2-4124-83b0-82f17e8665f8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 61 38 66  |k:{\"uid\":\"a8f|
              00000120  63 37 35 65 39 2d 36 34  65 32 2d 34 31 32 34 2d  |c75e9-64e2-4124-|
              00000130  38 33 62 30 2d 38 32 66  31 37 65 38 36 36 35 66  |83b0-82f17e8665f|
              00000140  38 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |8\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7986b7f74"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7986b7f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:28:51.364: INFO: Pod "test-deployment-4m62v-7986b7f74-7q2tw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-4m62v-7986b7f74-7q2tw",
      GenerateName: (string) (len=32) "test-deployment-4m62v-7986b7f74-",
      Namespace: (string) (len=15) "deployment-6595",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c604487a-c8db-4110-b15e-9b962eeb04c7",
      ResourceVersion: (string) (len=5) "31445",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "7986b7f74",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "01f522ad445cc5da299422b14332b12827eef4a4a772cf2746e928766c9b8948",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.244.79.122/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.244.79.122/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-4m62v-7986b7f74",
          UID: (types.UID) (len=36) "7aed1b97-aedd-4bb5-88a6-2677b4134ced",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 61 65 64 31 62 39  37 2d 61 65 64 64 2d 34  |"7aed1b97-aedd-4|
              000000a0  62 62 35 2d 38 38 61 36  2d 32 36 37 37 62 34 31  |bb5-88a6-2677b41|
              000000b0  33 34 63 65 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |34ced\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 31 32 32 5c 22 7d  |10.244.79.122\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s624c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s624c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845998129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.244.79.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.244.79.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845998129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845998129,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
          ImageID: (string) (len=120) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd@sha256:8b745b6e9cb6a6184353110aabe28d8d6f6145d3fe7c0e1899aa70c8228c0fd3",
          ContainerID: (string) (len=72) "cri-o://441744515fc186b04dca75f3438ca3bc07357cef236e7ce1926a8accdf9e2d79",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:28:51.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6595" for this suite. @ 03/14/24 07:28:51.368
• [2.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 03/14/24 07:28:51.371
  Mar 14 07:28:51.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename svcaccounts @ 03/14/24 07:28:51.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:51.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:51.378
  STEP: creating a ServiceAccount @ 03/14/24 07:28:51.379
  STEP: watching for the ServiceAccount to be added @ 03/14/24 07:28:51.382
  STEP: patching the ServiceAccount @ 03/14/24 07:28:51.383
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 03/14/24 07:28:51.385
  STEP: deleting the ServiceAccount @ 03/14/24 07:28:51.386
  Mar 14 07:28:51.390: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1892" for this suite. @ 03/14/24 07:28:51.391
• [0.022 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 03/14/24 07:28:51.394
  Mar 14 07:28:51.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:28:51.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:51.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:51.401
  STEP: creating an Endpoint @ 03/14/24 07:28:51.404
  STEP: waiting for available Endpoint @ 03/14/24 07:28:51.405
  STEP: listing all Endpoints @ 03/14/24 07:28:51.406
  STEP: updating the Endpoint @ 03/14/24 07:28:51.407
  STEP: fetching the Endpoint @ 03/14/24 07:28:51.411
  STEP: patching the Endpoint @ 03/14/24 07:28:51.412
  STEP: fetching the Endpoint @ 03/14/24 07:28:51.416
  STEP: deleting the Endpoint by Collection @ 03/14/24 07:28:51.417
  STEP: waiting for Endpoint deletion @ 03/14/24 07:28:51.419
  STEP: fetching the Endpoint @ 03/14/24 07:28:51.42
  Mar 14 07:28:51.421: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2427" for this suite. @ 03/14/24 07:28:51.422
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 03/14/24 07:28:51.424
  Mar 14 07:28:51.424: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir-wrapper @ 03/14/24 07:28:51.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:51.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:51.43
  E0314 07:28:52.033873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:53.033968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:28:53.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 03/14/24 07:28:53.442
  STEP: Cleaning up the configmap @ 03/14/24 07:28:53.444
  STEP: Cleaning up the pod @ 03/14/24 07:28:53.446
  STEP: Destroying namespace "emptydir-wrapper-5112" for this suite. @ 03/14/24 07:28:53.45
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 03/14/24 07:28:53.455
  Mar 14 07:28:53.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:28:53.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:53.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:53.462
  STEP: Creating secret with name secret-test-93daf2f4-a325-4899-b0ca-f7fae495bc31 @ 03/14/24 07:28:53.464
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:28:53.465
  E0314 07:28:54.034395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:55.034803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:56.035637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:57.035784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:28:57.474
  Mar 14 07:28:57.475: INFO: Trying to get logs from node k8s-worker02 pod pod-secrets-50d73135-f7a4-4102-84ed-c0861093438e container secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:28:57.478
  Mar 14 07:28:57.484: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6731" for this suite. @ 03/14/24 07:28:57.486
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 03/14/24 07:28:57.489
  Mar 14 07:28:57.489: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:28:57.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:28:57.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:28:57.497
  STEP: Counting existing ResourceQuota @ 03/14/24 07:28:57.498
  E0314 07:28:58.035866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:28:59.035957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:00.036552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:01.036924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:02.037032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/14/24 07:29:02.5
  STEP: Ensuring resource quota status is calculated @ 03/14/24 07:29:02.502
  E0314 07:29:03.037729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:04.037861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 03/14/24 07:29:04.504
  STEP: Creating a NodePort Service @ 03/14/24 07:29:04.512
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 03/14/24 07:29:04.519
  STEP: Ensuring resource quota status captures service creation @ 03/14/24 07:29:04.527
  E0314 07:29:05.038060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:06.038149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 03/14/24 07:29:06.529
  STEP: Ensuring resource quota status released usage @ 03/14/24 07:29:06.543
  E0314 07:29:07.038206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:08.038328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:29:08.546: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1796" for this suite. @ 03/14/24 07:29:08.547
• [11.061 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 03/14/24 07:29:08.55
  Mar 14 07:29:08.550: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 07:29:08.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:08.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:08.56
  STEP: Creating configMap with name configmap-test-volume-map-b2d4317c-f324-4207-a60f-9eaf206de93c @ 03/14/24 07:29:08.561
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:29:08.562
  E0314 07:29:09.038546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:10.038810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:11.039657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:12.040365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:29:12.571
  Mar 14 07:29:12.572: INFO: Trying to get logs from node k8s-worker02 pod pod-configmaps-a5c9f68f-dcff-40c7-b72e-bfc46ae5138c container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:29:12.575
  Mar 14 07:29:12.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9115" for this suite. @ 03/14/24 07:29:12.582
• [4.034 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 03/14/24 07:29:12.586
  Mar 14 07:29:12.586: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:29:12.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:12.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:12.594
  STEP: Creating secret with name projected-secret-test-e8fd35cb-ba91-4b18-8267-da8c3880d58b @ 03/14/24 07:29:12.595
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:29:12.597
  E0314 07:29:13.040391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:14.040508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:29:14.603
  Mar 14 07:29:14.604: INFO: Trying to get logs from node k8s-worker02 pod pod-projected-secrets-eca734a4-d73f-4523-96a6-63c829a4d3f2 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:29:14.607
  Mar 14 07:29:14.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8997" for this suite. @ 03/14/24 07:29:14.614
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 03/14/24 07:29:14.616
  Mar 14 07:29:14.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:29:14.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:14.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:14.624
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:29:14.626
  E0314 07:29:15.041409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:16.041597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:29:16.632
  Mar 14 07:29:16.634: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-da640d27-705e-4351-ac8e-24f4b10ed63b container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:29:16.636
  Mar 14 07:29:16.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5796" for this suite. @ 03/14/24 07:29:16.642
• [2.028 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 03/14/24 07:29:16.645
  Mar 14 07:29:16.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename endpointslice @ 03/14/24 07:29:16.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:16.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:16.653
  Mar 14 07:29:16.656: INFO: Endpoints addresses: [192.168.132.11] , ports: [6443]
  Mar 14 07:29:16.656: INFO: EndpointSlices addresses: [192.168.132.11] , ports: [6443]
  Mar 14 07:29:16.656: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8883" for this suite. @ 03/14/24 07:29:16.658
• [0.015 seconds]
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 03/14/24 07:29:16.66
  Mar 14 07:29:16.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:29:16.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:16.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:16.668
  STEP: Creating the pod @ 03/14/24 07:29:16.669
  E0314 07:29:17.042209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:18.043005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:19.043308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:29:19.185: INFO: Successfully updated pod "annotationupdate37850c07-ba40-4000-8830-1fdf64208b86"
  E0314 07:29:20.043458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:21.043622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:29:21.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8040" for this suite. @ 03/14/24 07:29:21.193
• [4.536 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 03/14/24 07:29:21.196
  Mar 14 07:29:21.196: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 03/14/24 07:29:21.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:21.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:21.204
  STEP: creating a target pod @ 03/14/24 07:29:21.205
  E0314 07:29:22.044057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:23.044158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 03/14/24 07:29:23.211
  E0314 07:29:24.045193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:25.045600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:26.046404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:27.046532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 03/14/24 07:29:27.225
  Mar 14 07:29:27.225: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1235 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:29:27.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:29:27.226: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:29:27.226: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-1235/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Mar 14 07:29:27.262: INFO: Exec stderr: ""
  Mar 14 07:29:27.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1235" for this suite. @ 03/14/24 07:29:27.266
• [6.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 03/14/24 07:29:27.269
  Mar 14 07:29:27.269: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename namespaces @ 03/14/24 07:29:27.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:27.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:27.276
  STEP: Creating a test namespace @ 03/14/24 07:29:27.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:27.281
  STEP: Creating a service in the namespace @ 03/14/24 07:29:27.283
  STEP: Deleting the namespace @ 03/14/24 07:29:27.286
  STEP: Waiting for the namespace to be removed. @ 03/14/24 07:29:27.29
  E0314 07:29:28.046643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:29.046707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:30.047097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:31.047279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:32.047361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:33.048335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 03/14/24 07:29:33.293
  STEP: Verifying there is no service in the namespace @ 03/14/24 07:29:33.298
  Mar 14 07:29:33.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7632" for this suite. @ 03/14/24 07:29:33.3
  STEP: Destroying namespace "nsdeletetest-8268" for this suite. @ 03/14/24 07:29:33.303
  Mar 14 07:29:33.304: INFO: Namespace nsdeletetest-8268 was already deleted
  STEP: Destroying namespace "nsdeletetest-3874" for this suite. @ 03/14/24 07:29:33.304
• [6.036 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 03/14/24 07:29:33.309
  Mar 14 07:29:33.309: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:29:33.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:33.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:33.316
  STEP: Setting up server cert @ 03/14/24 07:29:33.324
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:29:33.573
  STEP: Deploying the webhook pod @ 03/14/24 07:29:33.576
  STEP: Wait for the deployment to be ready @ 03/14/24 07:29:33.58
  Mar 14 07:29:33.581: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0314 07:29:34.048461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:35.049065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:29:35.585
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:29:35.588
  E0314 07:29:36.049377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:29:36.589: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 03/14/24 07:29:36.591
  STEP: create a configmap that should be updated by the webhook @ 03/14/24 07:29:36.598
  Mar 14 07:29:36.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4540" for this suite. @ 03/14/24 07:29:36.623
  STEP: Destroying namespace "webhook-markers-3470" for this suite. @ 03/14/24 07:29:36.631
• [3.324 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 03/14/24 07:29:36.635
  Mar 14 07:29:36.635: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:29:36.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:36.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:36.642
  STEP: creating secret secrets-1502/secret-test-57760dca-a841-49a1-b3a8-3107e86d2165 @ 03/14/24 07:29:36.643
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:29:36.645
  E0314 07:29:37.050109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:38.050439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:29:38.652
  Mar 14 07:29:38.654: INFO: Trying to get logs from node k8s-worker02 pod pod-configmaps-37c00b7a-4c74-4a1b-94de-8b81acf50acc container env-test: <nil>
  STEP: delete the pod @ 03/14/24 07:29:38.656
  Mar 14 07:29:38.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1502" for this suite. @ 03/14/24 07:29:38.662
• [2.029 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 03/14/24 07:29:38.665
  Mar 14 07:29:38.665: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:29:38.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:38.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:38.672
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:29:38.673
  E0314 07:29:39.050516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:40.050766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:29:40.679
  Mar 14 07:29:40.680: INFO: Trying to get logs from node k8s-worker01 pod downwardapi-volume-c37ebe64-61ab-45c2-98d1-d47dd54c2b64 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:29:40.682
  Mar 14 07:29:40.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3944" for this suite. @ 03/14/24 07:29:40.688
• [2.025 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 03/14/24 07:29:40.693
  Mar 14 07:29:40.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename containers @ 03/14/24 07:29:40.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:40.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:40.7
  STEP: Creating a pod to test override all @ 03/14/24 07:29:40.701
  E0314 07:29:41.050878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:42.051203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:29:42.707
  Mar 14 07:29:42.708: INFO: Trying to get logs from node k8s-worker01 pod client-containers-2b606f91-6713-4da8-9547-c959957ecd0a container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:29:42.71
  Mar 14 07:29:42.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3005" for this suite. @ 03/14/24 07:29:42.715
• [2.024 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 03/14/24 07:29:42.718
  Mar 14 07:29:42.718: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 07:29:42.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:29:42.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:29:42.724
  E0314 07:29:43.051444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:44.051557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:45.052000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:46.052129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:47.052803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:48.053025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:49.054133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:50.054372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:51.054428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:52.054562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:53.055195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:54.055330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:55.056002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:56.056136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:57.056191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:58.056314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:29:59.056365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:00.059281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:01.059110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:02.059215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:03.059815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:04.060029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:30:04.751: INFO: Container started at 2024-03-14 07:29:43 +0000 UTC, pod became ready at 2024-03-14 07:30:03 +0000 UTC
  Mar 14 07:30:04.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6491" for this suite. @ 03/14/24 07:30:04.753
• [22.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 03/14/24 07:30:04.755
  Mar 14 07:30:04.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:30:04.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:30:04.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:30:04.762
  STEP: Creating the pod @ 03/14/24 07:30:04.763
  E0314 07:30:05.060939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:06.061107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:07.062116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:30:07.278: INFO: Successfully updated pod "labelsupdate523d669c-28bf-416c-8709-e8d94c62d2df"
  E0314 07:30:08.062790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:09.062967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:30:09.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-492" for this suite. @ 03/14/24 07:30:09.287
• [4.535 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 03/14/24 07:30:09.29
  Mar 14 07:30:09.290: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:30:09.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:30:09.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:30:09.298
  STEP: Creating projection with secret that has name projected-secret-test-map-201d1bde-7095-4611-ba01-3d914df59fc0 @ 03/14/24 07:30:09.3
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:30:09.301
  E0314 07:30:10.063120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:11.063240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:12.063325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:13.063424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:30:13.312
  Mar 14 07:30:13.313: INFO: Trying to get logs from node k8s-worker02 pod pod-projected-secrets-246f33c8-2262-41c5-827b-e26a238b3100 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:30:13.317
  Mar 14 07:30:13.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6889" for this suite. @ 03/14/24 07:30:13.324
• [4.036 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 03/14/24 07:30:13.326
  Mar 14 07:30:13.326: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename server-version @ 03/14/24 07:30:13.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:30:13.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:30:13.333
  STEP: Request ServerVersion @ 03/14/24 07:30:13.335
  STEP: Confirm major version @ 03/14/24 07:30:13.335
  Mar 14 07:30:13.335: INFO: Major version: 1
  STEP: Confirm minor version @ 03/14/24 07:30:13.335
  Mar 14 07:30:13.335: INFO: cleanMinorVersion: 28
  Mar 14 07:30:13.335: INFO: Minor version: 28
  Mar 14 07:30:13.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3807" for this suite. @ 03/14/24 07:30:13.337
• [0.012 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 03/14/24 07:30:13.339
  Mar 14 07:30:13.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:30:13.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:30:13.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:30:13.346
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:30:13.348
  E0314 07:30:14.063986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:15.065024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:16.065045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:17.065197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:30:17.357
  Mar 14 07:30:17.359: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-f32fbfc0-da8f-462f-aa27-15cc15a44a87 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:30:17.361
  Mar 14 07:30:17.367: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8106" for this suite. @ 03/14/24 07:30:17.368
• [4.032 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 03/14/24 07:30:17.375
  Mar 14 07:30:17.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename init-container @ 03/14/24 07:30:17.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:30:17.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:30:17.383
  STEP: creating the pod @ 03/14/24 07:30:17.384
  Mar 14 07:30:17.384: INFO: PodSpec: initContainers in spec.initContainers
  E0314 07:30:18.066178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:19.067008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:20.067494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:21.068249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:30:21.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9773" for this suite. @ 03/14/24 07:30:21.703
• [4.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 03/14/24 07:30:21.707
  Mar 14 07:30:21.707: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:30:21.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:30:21.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:30:21.716
  STEP: Discovering how many secrets are in namespace by default @ 03/14/24 07:30:21.718
  E0314 07:30:22.068842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:23.069615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:24.069725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:25.070540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:26.071383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 03/14/24 07:30:26.72
  E0314 07:30:27.071982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:28.072520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:29.073148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:30.073621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:31.074529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/14/24 07:30:31.722
  STEP: Ensuring resource quota status is calculated @ 03/14/24 07:30:31.725
  E0314 07:30:32.075545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:33.075701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 03/14/24 07:30:33.726
  STEP: Ensuring resource quota status captures secret creation @ 03/14/24 07:30:33.732
  E0314 07:30:34.075869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:35.076308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 03/14/24 07:30:35.734
  STEP: Ensuring resource quota status released usage @ 03/14/24 07:30:35.736
  E0314 07:30:36.076807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:37.077812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:30:37.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2540" for this suite. @ 03/14/24 07:30:37.739
• [16.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 03/14/24 07:30:37.742
  Mar 14 07:30:37.743: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replicaset @ 03/14/24 07:30:37.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:30:37.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:30:37.751
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 03/14/24 07:30:37.752
  Mar 14 07:30:37.755: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0314 07:30:38.078079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:39.078333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:40.078758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:41.078919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:42.079046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:30:42.757: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/14/24 07:30:42.757
  STEP: getting scale subresource @ 03/14/24 07:30:42.757
  STEP: updating a scale subresource @ 03/14/24 07:30:42.759
  STEP: verifying the replicaset Spec.Replicas was modified @ 03/14/24 07:30:42.761
  STEP: Patch a scale subresource @ 03/14/24 07:30:42.762
  Mar 14 07:30:42.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7099" for this suite. @ 03/14/24 07:30:42.769
• [5.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 03/14/24 07:30:42.774
  Mar 14 07:30:42.774: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename dns @ 03/14/24 07:30:42.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:30:42.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:30:42.782
  STEP: Creating a test headless service @ 03/14/24 07:30:42.783
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7339 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7339;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7339 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7339;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7339.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7339.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7339.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7339.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7339.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7339.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7339.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7339.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7339.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7339.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7339.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7339.svc;check="$$(dig +notcp +noall +answer +search 16.226.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.226.16_udp@PTR;check="$$(dig +tcp +noall +answer +search 16.226.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.226.16_tcp@PTR;sleep 1; done
   @ 03/14/24 07:30:42.79
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7339 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7339;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7339 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7339;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7339.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7339.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7339.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7339.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7339.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7339.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7339.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7339.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7339.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7339.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7339.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7339.svc;check="$$(dig +notcp +noall +answer +search 16.226.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.226.16_udp@PTR;check="$$(dig +tcp +noall +answer +search 16.226.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.226.16_tcp@PTR;sleep 1; done
   @ 03/14/24 07:30:42.79
  STEP: creating a pod to probe DNS @ 03/14/24 07:30:42.79
  STEP: submitting the pod to kubernetes @ 03/14/24 07:30:42.79
  E0314 07:30:43.079854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:44.080014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/14/24 07:30:44.801
  STEP: looking for the results for each expected name from probers @ 03/14/24 07:30:44.802
  Mar 14 07:30:44.804: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.805: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.806: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.807: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.808: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.810: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.817: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.818: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.819: INFO: Unable to read jessie_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.820: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.822: INFO: Unable to read jessie_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.823: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:44.828: INFO: Lookups using dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7339 wheezy_tcp@dns-test-service.dns-7339 wheezy_udp@dns-test-service.dns-7339.svc wheezy_tcp@dns-test-service.dns-7339.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7339 jessie_tcp@dns-test-service.dns-7339 jessie_udp@dns-test-service.dns-7339.svc jessie_tcp@dns-test-service.dns-7339.svc]

  Mar 14 07:30:44.830: INFO: Pod client logs for webserver: 
  Mar 14 07:30:44.833: INFO: Pod client logs for querier: 
  Mar 14 07:30:44.834: INFO: Pod client logs for jessie-querier: 
  E0314 07:30:45.080534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:46.080660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:47.080748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:48.081187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:49.081348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:30:49.836: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.838: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.839: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.840: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.841: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.842: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.848: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.849: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.850: INFO: Unable to read jessie_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.851: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.852: INFO: Unable to read jessie_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.853: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:49.858: INFO: Lookups using dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7339 wheezy_tcp@dns-test-service.dns-7339 wheezy_udp@dns-test-service.dns-7339.svc wheezy_tcp@dns-test-service.dns-7339.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7339 jessie_tcp@dns-test-service.dns-7339 jessie_udp@dns-test-service.dns-7339.svc jessie_tcp@dns-test-service.dns-7339.svc]

  Mar 14 07:30:49.860: INFO: Pod client logs for webserver: 
  Mar 14 07:30:49.862: INFO: Pod client logs for querier: 
  Mar 14 07:30:49.864: INFO: Pod client logs for jessie-querier: 
  E0314 07:30:50.081717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:51.082482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:52.083472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:53.083649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:54.083779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:30:54.837: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.838: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.839: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.841: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.842: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.843: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.850: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.851: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.852: INFO: Unable to read jessie_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.853: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.854: INFO: Unable to read jessie_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.855: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:54.861: INFO: Lookups using dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7339 wheezy_tcp@dns-test-service.dns-7339 wheezy_udp@dns-test-service.dns-7339.svc wheezy_tcp@dns-test-service.dns-7339.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7339 jessie_tcp@dns-test-service.dns-7339 jessie_udp@dns-test-service.dns-7339.svc jessie_tcp@dns-test-service.dns-7339.svc]

  Mar 14 07:30:54.863: INFO: Pod client logs for webserver: 
  Mar 14 07:30:54.865: INFO: Pod client logs for querier: 
  Mar 14 07:30:54.867: INFO: Pod client logs for jessie-querier: 
  E0314 07:30:55.083968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:56.084096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:57.084339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:58.084466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:30:59.085667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:30:59.837: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.838: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.839: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.840: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.842: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.843: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.849: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.850: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.851: INFO: Unable to read jessie_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.852: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.854: INFO: Unable to read jessie_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.855: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:30:59.861: INFO: Lookups using dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7339 wheezy_tcp@dns-test-service.dns-7339 wheezy_udp@dns-test-service.dns-7339.svc wheezy_tcp@dns-test-service.dns-7339.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7339 jessie_tcp@dns-test-service.dns-7339 jessie_udp@dns-test-service.dns-7339.svc jessie_tcp@dns-test-service.dns-7339.svc]

  Mar 14 07:30:59.863: INFO: Pod client logs for webserver: 
  Mar 14 07:30:59.865: INFO: Pod client logs for querier: 
  Mar 14 07:30:59.867: INFO: Pod client logs for jessie-querier: 
  E0314 07:31:00.086481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:01.087302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:02.087438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:03.087546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:04.087755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:31:04.837: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.839: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.840: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.842: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.843: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.844: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.852: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.854: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.856: INFO: Unable to read jessie_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.857: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.858: INFO: Unable to read jessie_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.860: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:04.866: INFO: Lookups using dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7339 wheezy_tcp@dns-test-service.dns-7339 wheezy_udp@dns-test-service.dns-7339.svc wheezy_tcp@dns-test-service.dns-7339.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7339 jessie_tcp@dns-test-service.dns-7339 jessie_udp@dns-test-service.dns-7339.svc jessie_tcp@dns-test-service.dns-7339.svc]

  Mar 14 07:31:04.868: INFO: Pod client logs for webserver: 
  Mar 14 07:31:04.871: INFO: Pod client logs for querier: 
  Mar 14 07:31:04.873: INFO: Pod client logs for jessie-querier: 
  E0314 07:31:05.087965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:06.088101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:07.088918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:08.088977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:09.089884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:31:09.837: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.838: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.839: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.840: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.841: INFO: Unable to read wheezy_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.842: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.850: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.851: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.852: INFO: Unable to read jessie_udp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.853: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339 from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.854: INFO: Unable to read jessie_udp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.855: INFO: Unable to read jessie_tcp@dns-test-service.dns-7339.svc from pod dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8: the server could not find the requested resource (get pods dns-test-5531a324-41d0-4432-ba91-4f6312a102c8)
  Mar 14 07:31:09.861: INFO: Lookups using dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7339 wheezy_tcp@dns-test-service.dns-7339 wheezy_udp@dns-test-service.dns-7339.svc wheezy_tcp@dns-test-service.dns-7339.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7339 jessie_tcp@dns-test-service.dns-7339 jessie_udp@dns-test-service.dns-7339.svc jessie_tcp@dns-test-service.dns-7339.svc]

  Mar 14 07:31:09.863: INFO: Pod client logs for webserver: 
  Mar 14 07:31:09.865: INFO: Pod client logs for querier: 
  Mar 14 07:31:09.867: INFO: Pod client logs for jessie-querier: 
  E0314 07:31:10.089918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:11.090081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:12.090478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:13.090657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:14.090856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:31:14.860: INFO: DNS probes using dns-7339/dns-test-5531a324-41d0-4432-ba91-4f6312a102c8 succeeded

  Mar 14 07:31:14.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:31:14.862
  STEP: deleting the test service @ 03/14/24 07:31:14.872
  STEP: deleting the test headless service @ 03/14/24 07:31:14.886
  STEP: Destroying namespace "dns-7339" for this suite. @ 03/14/24 07:31:14.891
• [32.120 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 03/14/24 07:31:14.894
  Mar 14 07:31:14.894: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename daemonsets @ 03/14/24 07:31:14.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:31:14.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:31:14.901
  Mar 14 07:31:14.910: INFO: Create a RollingUpdate DaemonSet
  Mar 14 07:31:14.912: INFO: Check that daemon pods launch on every node of the cluster
  Mar 14 07:31:14.915: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:31:14.915: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:31:15.091930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:31:15.918: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 14 07:31:15.918: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Mar 14 07:31:15.918: INFO: Update the DaemonSet to trigger a rollout
  Mar 14 07:31:15.922: INFO: Updating DaemonSet daemon-set
  E0314 07:31:16.092911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:17.094077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:31:17.928: INFO: Roll back the DaemonSet before rollout is complete
  Mar 14 07:31:17.931: INFO: Updating DaemonSet daemon-set
  Mar 14 07:31:17.931: INFO: Make sure DaemonSet rollback is complete
  Mar 14 07:31:17.934: INFO: Wrong image for pod: daemon-set-lncf7. Expected: hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4, got: foo:non-existent.
  Mar 14 07:31:17.934: INFO: Pod daemon-set-lncf7 is not available
  E0314 07:31:18.095072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:19.096173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:31:19.937: INFO: Pod daemon-set-9krsc is not available
  STEP: Deleting DaemonSet "daemon-set" @ 03/14/24 07:31:19.941
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-603, will wait for the garbage collector to delete the pods @ 03/14/24 07:31:19.941
  Mar 14 07:31:19.995: INFO: Deleting DaemonSet.extensions daemon-set took: 1.878886ms
  Mar 14 07:31:20.095: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.429846ms
  E0314 07:31:20.096832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:21.097265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:31:21.797: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:31:21.797: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 14 07:31:21.798: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32655"},"items":null}

  Mar 14 07:31:21.799: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32655"},"items":null}

  Mar 14 07:31:21.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-603" for this suite. @ 03/14/24 07:31:21.804
• [6.913 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 03/14/24 07:31:21.807
  Mar 14 07:31:21.807: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename gc @ 03/14/24 07:31:21.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:31:21.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:31:21.814
  STEP: create the deployment @ 03/14/24 07:31:21.815
  W0314 07:31:21.818052      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 03/14/24 07:31:21.818
  E0314 07:31:22.097412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 03/14/24 07:31:22.322
  STEP: wait for all rs to be garbage collected @ 03/14/24 07:31:22.324
  STEP: expected 0 rs, got 1 rs @ 03/14/24 07:31:22.326
  STEP: expected 0 pods, got 2 pods @ 03/14/24 07:31:22.327
  STEP: Gathering metrics @ 03/14/24 07:31:22.832
  Mar 14 07:31:22.885: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 14 07:31:22.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5987" for this suite. @ 03/14/24 07:31:22.887
• [1.083 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 03/14/24 07:31:22.89
  Mar 14 07:31:22.890: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:31:22.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:31:22.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:31:22.898
  STEP: Creating resourceQuota "e2e-rq-status-x65qm" @ 03/14/24 07:31:22.9
  Mar 14 07:31:22.903: INFO: Resource quota "e2e-rq-status-x65qm" reports spec: hard cpu limit of 500m
  Mar 14 07:31:22.903: INFO: Resource quota "e2e-rq-status-x65qm" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-x65qm" /status @ 03/14/24 07:31:22.903
  STEP: Confirm /status for "e2e-rq-status-x65qm" resourceQuota via watch @ 03/14/24 07:31:22.909
  Mar 14 07:31:22.909: INFO: observed resourceQuota "e2e-rq-status-x65qm" in namespace "resourcequota-665" with hard status: v1.ResourceList(nil)
  Mar 14 07:31:22.909: INFO: Found resourceQuota "e2e-rq-status-x65qm" in namespace "resourcequota-665" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Mar 14 07:31:22.910: INFO: ResourceQuota "e2e-rq-status-x65qm" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 03/14/24 07:31:22.91
  Mar 14 07:31:22.912: INFO: Resource quota "e2e-rq-status-x65qm" reports spec: hard cpu limit of 1
  Mar 14 07:31:22.912: INFO: Resource quota "e2e-rq-status-x65qm" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-x65qm" /status @ 03/14/24 07:31:22.913
  STEP: Confirm /status for "e2e-rq-status-x65qm" resourceQuota via watch @ 03/14/24 07:31:22.915
  Mar 14 07:31:22.916: INFO: observed resourceQuota "e2e-rq-status-x65qm" in namespace "resourcequota-665" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Mar 14 07:31:22.916: INFO: Found resourceQuota "e2e-rq-status-x65qm" in namespace "resourcequota-665" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Mar 14 07:31:22.916: INFO: ResourceQuota "e2e-rq-status-x65qm" /status was patched
  STEP: Get "e2e-rq-status-x65qm" /status @ 03/14/24 07:31:22.916
  Mar 14 07:31:22.918: INFO: Resourcequota "e2e-rq-status-x65qm" reports status: hard cpu of 1
  Mar 14 07:31:22.918: INFO: Resourcequota "e2e-rq-status-x65qm" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-x65qm" /status before checking Spec is unchanged @ 03/14/24 07:31:22.919
  Mar 14 07:31:22.921: INFO: Resourcequota "e2e-rq-status-x65qm" reports status: hard cpu of 2
  Mar 14 07:31:22.921: INFO: Resourcequota "e2e-rq-status-x65qm" reports status: hard memory of 2Gi
  Mar 14 07:31:22.922: INFO: Found resourceQuota "e2e-rq-status-x65qm" in namespace "resourcequota-665" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0314 07:31:23.098224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:24.099090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:25.099427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:26.099509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:27.099729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:28.100406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:29.101462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:30.101848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:31.101941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:32.102139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:33.102440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:34.102565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:35.102898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:36.103018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:37.103140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:38.103562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:39.103692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:40.103922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:41.104535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:42.104695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:43.104799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:44.105149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:45.105989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:46.106129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:47.106224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:48.106852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:49.107068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:50.107782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:51.108811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:52.108902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:53.109340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:54.109737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:55.109964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:56.110053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:57.110137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:58.110199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:31:59.110276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:00.110476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:01.110570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:02.110655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:03.111531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:04.111783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:05.112126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:06.112247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:07.112382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:08.112929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:09.113035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:10.113254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:11.113375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:12.113593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:13.113741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:14.113874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:15.114402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:16.114489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:17.114658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:18.114864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:19.115073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:20.115530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:21.115662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:22.115783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:23.116488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:24.116708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:25.117090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:26.118304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:27.118217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:28.118859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:29.118985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:30.119256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:31.119750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:32.119841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:33.119939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:34.120070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:35.120505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:36.121557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:37.121412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:38.121685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:39.121897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:40.122124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:41.122266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:42.122395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:32:42.925: INFO: ResourceQuota "e2e-rq-status-x65qm" Spec was unchanged and /status reset
  Mar 14 07:32:42.925: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-665" for this suite. @ 03/14/24 07:32:42.926
• [80.039 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 03/14/24 07:32:42.929
  Mar 14 07:32:42.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replication-controller @ 03/14/24 07:32:42.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:32:42.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:32:42.936
  STEP: Creating ReplicationController "e2e-rc-kxhsr" @ 03/14/24 07:32:42.937
  Mar 14 07:32:42.938: INFO: Get Replication Controller "e2e-rc-kxhsr" to confirm replicas
  E0314 07:32:43.123267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:32:43.940: INFO: Get Replication Controller "e2e-rc-kxhsr" to confirm replicas
  Mar 14 07:32:43.941: INFO: Found 1 replicas for "e2e-rc-kxhsr" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-kxhsr" @ 03/14/24 07:32:43.941
  STEP: Updating a scale subresource @ 03/14/24 07:32:43.942
  STEP: Verifying replicas where modified for replication controller "e2e-rc-kxhsr" @ 03/14/24 07:32:43.944
  Mar 14 07:32:43.944: INFO: Get Replication Controller "e2e-rc-kxhsr" to confirm replicas
  E0314 07:32:44.123977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:32:44.946: INFO: Get Replication Controller "e2e-rc-kxhsr" to confirm replicas
  Mar 14 07:32:44.947: INFO: Found 2 replicas for "e2e-rc-kxhsr" replication controller
  Mar 14 07:32:44.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5181" for this suite. @ 03/14/24 07:32:44.949
• [2.024 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 03/14/24 07:32:44.953
  Mar 14 07:32:44.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename dns @ 03/14/24 07:32:44.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:32:44.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:32:44.96
  STEP: Creating a test headless service @ 03/14/24 07:32:44.961
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local;sleep 1; done
   @ 03/14/24 07:32:44.963
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1517.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local;sleep 1; done
   @ 03/14/24 07:32:44.963
  STEP: creating a pod to probe DNS @ 03/14/24 07:32:44.963
  STEP: submitting the pod to kubernetes @ 03/14/24 07:32:44.963
  E0314 07:32:45.124869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:46.125895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/14/24 07:32:46.971
  STEP: looking for the results for each expected name from probers @ 03/14/24 07:32:46.972
  Mar 14 07:32:46.974: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:46.975: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:46.976: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:46.977: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:46.978: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:46.979: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:46.980: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:46.981: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:46.981: INFO: Lookups using dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local]

  Mar 14 07:32:46.983: INFO: Pod client logs for webserver: 
  Mar 14 07:32:46.985: INFO: Pod client logs for querier: 
  Mar 14 07:32:46.986: INFO: Pod client logs for jessie-querier: 
  E0314 07:32:47.126135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:48.127194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:49.127341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:50.127588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:51.127689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:32:51.989: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:51.990: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:51.991: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:51.992: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:51.993: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:51.994: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:51.995: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:51.996: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:51.996: INFO: Lookups using dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local]

  Mar 14 07:32:51.998: INFO: Pod client logs for webserver: 
  Mar 14 07:32:52.000: INFO: Pod client logs for querier: 
  Mar 14 07:32:52.002: INFO: Pod client logs for jessie-querier: 
  E0314 07:32:52.128229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:53.128296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:54.128849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:55.129216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:56.129524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:32:56.989: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:56.990: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:56.991: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:56.993: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:56.994: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:56.995: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:56.996: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:56.997: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:32:56.997: INFO: Lookups using dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local]

  Mar 14 07:32:56.999: INFO: Pod client logs for webserver: 
  Mar 14 07:32:57.001: INFO: Pod client logs for querier: 
  Mar 14 07:32:57.003: INFO: Pod client logs for jessie-querier: 
  E0314 07:32:57.130195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:58.130329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:32:59.130816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:00.131066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:01.131176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:01.989: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:01.990: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:01.992: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:01.993: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:01.994: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:01.995: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:01.996: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:01.997: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:01.997: INFO: Lookups using dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local]

  Mar 14 07:33:01.999: INFO: Pod client logs for webserver: 
  Mar 14 07:33:02.001: INFO: Pod client logs for querier: 
  Mar 14 07:33:02.003: INFO: Pod client logs for jessie-querier: 
  E0314 07:33:02.132095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:03.132226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:04.132331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:05.132876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:06.133011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:06.988: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:06.990: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:06.991: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:06.992: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:06.994: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:06.995: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:06.996: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:06.997: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:06.997: INFO: Lookups using dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local]

  Mar 14 07:33:07.000: INFO: Pod client logs for webserver: 
  Mar 14 07:33:07.002: INFO: Pod client logs for querier: 
  Mar 14 07:33:07.004: INFO: Pod client logs for jessie-querier: 
  E0314 07:33:07.133571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:08.133789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:09.133890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:10.134369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:11.134474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:11.990: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:11.991: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:11.993: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:11.994: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:11.995: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:11.996: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:11.998: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:11.999: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local from pod dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615: the server could not find the requested resource (get pods dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615)
  Mar 14 07:33:11.999: INFO: Lookups using dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1517.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1517.svc.cluster.local jessie_udp@dns-test-service-2.dns-1517.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1517.svc.cluster.local]

  Mar 14 07:33:12.001: INFO: Pod client logs for webserver: 
  Mar 14 07:33:12.003: INFO: Pod client logs for querier: 
  Mar 14 07:33:12.005: INFO: Pod client logs for jessie-querier: 
  E0314 07:33:12.134944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:13.135057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:14.135578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:15.136111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:16.136515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:16.996: INFO: DNS probes using dns-1517/dns-test-b8c0d0f2-ebad-4e9c-8b43-009dedbef615 succeeded

  Mar 14 07:33:16.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:33:16.998
  STEP: deleting the test headless service @ 03/14/24 07:33:17.008
  STEP: Destroying namespace "dns-1517" for this suite. @ 03/14/24 07:33:17.016
• [32.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 03/14/24 07:33:17.021
  Mar 14 07:33:17.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 07:33:17.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:33:17.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:33:17.029
  STEP: creating the pod @ 03/14/24 07:33:17.031
  STEP: submitting the pod to kubernetes @ 03/14/24 07:33:17.031
  STEP: verifying QOS class is set on the pod @ 03/14/24 07:33:17.034
  Mar 14 07:33:17.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1459" for this suite. @ 03/14/24 07:33:17.038
• [0.019 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 03/14/24 07:33:17.041
  Mar 14 07:33:17.041: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:33:17.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:33:17.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:33:17.052
  STEP: Setting up server cert @ 03/14/24 07:33:17.06
  E0314 07:33:17.136503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:33:17.361
  STEP: Deploying the webhook pod @ 03/14/24 07:33:17.366
  STEP: Wait for the deployment to be ready @ 03/14/24 07:33:17.371
  Mar 14 07:33:17.374: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0314 07:33:18.137073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:19.137239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:33:19.378
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:33:19.382
  E0314 07:33:20.137729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:20.383: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Mar 14 07:33:20.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 03/14/24 07:33:20.892
  STEP: Creating a custom resource that should be denied by the webhook @ 03/14/24 07:33:20.9
  E0314 07:33:21.137717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:22.138355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 03/14/24 07:33:22.915
  STEP: Updating the custom resource with disallowed data should be denied @ 03/14/24 07:33:22.92
  STEP: Deleting the custom resource should be denied @ 03/14/24 07:33:22.924
  STEP: Remove the offending key and value from the custom resource data @ 03/14/24 07:33:22.927
  STEP: Deleting the updated custom resource should be successful @ 03/14/24 07:33:22.931
  Mar 14 07:33:22.934: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0314 07:33:23.138443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-1122" for this suite. @ 03/14/24 07:33:23.457
  STEP: Destroying namespace "webhook-markers-661" for this suite. @ 03/14/24 07:33:23.459
• [6.422 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 03/14/24 07:33:23.463
  Mar 14 07:33:23.463: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 07:33:23.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:33:23.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:33:23.472
  STEP: Creating pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266 @ 03/14/24 07:33:23.473
  E0314 07:33:24.138811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:25.139841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/14/24 07:33:25.479
  Mar 14 07:33:25.480: INFO: Initial restart count of pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 is 0
  Mar 14 07:33:25.481: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:26.140683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:27.140987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:27.484: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:28.141136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:29.141378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:29.486: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:30.142194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:31.142361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:31.488: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:32.142708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:33.142849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:33.490: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:34.142975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:35.143980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:35.492: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:36.144810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:37.145577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:37.494: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:38.145652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:39.145786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:39.497: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:40.146667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:41.146802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:41.498: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:42.147065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:43.147203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:43.501: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:44.147709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:45.148056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:45.503: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:46.148964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:47.149081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:47.504: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:48.149600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:49.149751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:49.506: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:50.150569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:51.150694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:51.508: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:52.151564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:53.151666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:53.510: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:54.152060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:55.153034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:55.512: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:56.153541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:57.153634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:57.514: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:33:58.153767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:33:59.153859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:33:59.515: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:00.154551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:01.154707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:01.517: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:02.155469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:03.155613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:03.520: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:04.155738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:05.156178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:05.522: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:06.156953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:07.157090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:07.523: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:08.157612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:09.157707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:09.525: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:10.158324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:11.158425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:11.527: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:12.159172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:13.159363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:13.529: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:14.159436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:15.160378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:15.531: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:16.161353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:17.161682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:17.533: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:18.162718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:19.162997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:19.536: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:20.163404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:21.163586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:21.539: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:22.163732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:23.163907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:23.541: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:24.164175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:25.164560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:25.543: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:26.165532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:27.165828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:27.546: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:28.166805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:29.166916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:29.547: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:30.167747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:31.167859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:31.549: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:32.168418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:33.168503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:33.551: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:34.169046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:35.169894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:35.554: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:36.170887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:37.170989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:37.556: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:38.171839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:39.172976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:39.558: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:40.173622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:41.173778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:41.559: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:42.174491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:43.174649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:43.561: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:44.175654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:45.176010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:45.563: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:46.176725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:47.177625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:47.565: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:48.177699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:49.177793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:49.567: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:50.178436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:51.178552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:51.569: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:52.179072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:53.179206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:53.571: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:54.180200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:55.181036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:55.574: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:56.181761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:57.181879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:57.575: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:34:58.181987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:34:59.182064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:34:59.578: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:00.182458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:01.183553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:01.580: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:02.184342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:03.184427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:03.583: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:04.184533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:05.185014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:05.585: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:06.185906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:07.186941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:07.587: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:08.187830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:09.187985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:09.589: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:10.188887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:11.189035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:11.590: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:12.189133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:13.189221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:13.592: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:14.189428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:15.189721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:15.594: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:16.190442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:17.190576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:17.596: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:18.191043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:19.191390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:19.598: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:20.192239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:21.192415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:21.601: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:22.192668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:23.192937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:23.603: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:24.193037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:25.194071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:25.605: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:26.193989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:27.194331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:27.607: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:28.195160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:29.195255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:29.609: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:30.195608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:31.195707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:31.610: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:32.196503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:33.196639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:33.613: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:34.196727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:35.197099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:35.615: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:36.197843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:37.197928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:37.616: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:38.198273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:39.199167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:39.619: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:40.200055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:41.200439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:41.621: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:42.200523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:43.200611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:43.623: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:44.201557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:45.201973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:45.626: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:46.202715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:47.202840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:47.628: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:48.202872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:49.202971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:49.629: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:50.203315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:51.203395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:51.631: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:52.204070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:53.204165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:53.633: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:54.204208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:55.205359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:55.635: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:56.205981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:57.206187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:57.636: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:35:58.206390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:35:59.206478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:35:59.638: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:00.207365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:01.207446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:01.640: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:02.208041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:03.208258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:03.643: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:04.208424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:05.209494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:05.645: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:06.209957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:07.210085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:07.647: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:08.210596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:09.210732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:09.648: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:10.211641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:11.211726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:11.650: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:12.212496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:13.212571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:13.653: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:14.212657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:15.212991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:15.655: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:16.213074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:17.213729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:17.657: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:18.214481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:19.214613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:19.659: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:20.215409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:21.215537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:21.661: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:22.216279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:23.216501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:23.664: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:24.216907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:25.216966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:25.666: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:26.217802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:27.217945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:27.668: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:28.218649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:29.218753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:29.670: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:30.219667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:31.219753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:31.672: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:32.220624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:33.220758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:33.674: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:34.221826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:35.222178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:35.675: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:36.222372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:37.222517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:37.677: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:38.223502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:39.224486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:39.679: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:40.224506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:41.224623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:41.681: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:42.225637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:43.225782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:43.684: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:44.226832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:45.227562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:45.685: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:46.228484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:47.229416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:47.687: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:48.230348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:49.230533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:49.690: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:50.231355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:51.231448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:51.692: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:52.232487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:53.232661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:53.695: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:54.232789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:55.233002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:55.697: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:56.233841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:57.233976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:57.699: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:36:58.234625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:36:59.235750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:36:59.701: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:00.235744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:01.235858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:01.703: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:02.236642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:03.237576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:03.706: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:04.237855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:05.238377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:05.708: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:06.238961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:07.239053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:07.711: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:08.239378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:09.239444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:09.713: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:10.240204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:11.240355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:11.715: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:12.240801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:13.241561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:13.718: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:14.241815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:15.242140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:15.719: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:16.242786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:17.242863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:17.722: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:18.242900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:19.242999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:19.724: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:20.243758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:21.243898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:21.726: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:22.244475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:23.244624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:23.728: INFO: Get pod test-grpc-d44c69af-a101-44f6-9cce-52075abb7b48 in namespace container-probe-7266
  E0314 07:37:24.244858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:25.244954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:37:25.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:37:25.73
  STEP: Destroying namespace "container-probe-7266" for this suite. @ 03/14/24 07:37:25.735
• [242.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 03/14/24 07:37:25.739
  Mar 14 07:37:25.739: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename cronjob @ 03/14/24 07:37:25.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:37:25.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:37:25.747
  STEP: Creating a ReplaceConcurrent cronjob @ 03/14/24 07:37:25.749
  STEP: Ensuring a job is scheduled @ 03/14/24 07:37:25.751
  E0314 07:37:26.244970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:27.245084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:28.245161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:29.245242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:30.245302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:31.245453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:32.246388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:33.246609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:34.247689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:35.248159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:36.249195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:37.249290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:38.249560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:39.249685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:40.249759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:41.249846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:42.250457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:43.250567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:44.251529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:45.252096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:46.252175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:47.252356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:48.253388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:49.253491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:50.254379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:51.254464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:52.255293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:53.255439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:54.255936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:55.256275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:56.256605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:57.257694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:58.258476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:37:59.259234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:00.259770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:01.259860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 03/14/24 07:38:01.752
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 03/14/24 07:38:01.753
  STEP: Ensuring the job is replaced with a new one @ 03/14/24 07:38:01.754
  E0314 07:38:02.260469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:03.260711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:04.262049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:05.263028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:06.263884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:07.264037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:08.264588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:09.264711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:10.265557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:11.265733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:12.266437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:13.266629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:14.267282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:15.267414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:16.267772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:17.267909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:18.268889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:19.269835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:20.270511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:21.270653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:22.271476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:23.271609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:24.272098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:25.272468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:26.272834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:27.272948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:28.273454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:29.274371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:30.274811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:31.275816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:32.276392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:33.276498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:34.276510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:35.277120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:36.277281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:37.277417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:38.277713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:39.277863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:40.278600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:41.278719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:42.279030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:43.279163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:44.279939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:45.280209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:46.280652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:47.281448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:48.282297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:49.282395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:50.282841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:51.282966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:52.283889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:53.283985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:54.284947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:55.285395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:56.286054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:57.286252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:58.287184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:38:59.288208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:00.288255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:01.288395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 03/14/24 07:39:01.756
  Mar 14 07:39:01.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3710" for this suite. @ 03/14/24 07:39:01.761
• [96.024 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 03/14/24 07:39:01.763
  Mar 14 07:39:01.763: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pod-network-test @ 03/14/24 07:39:01.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:01.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:01.77
  STEP: Performing setup for networking test in namespace pod-network-test-1439 @ 03/14/24 07:39:01.771
  STEP: creating a selector @ 03/14/24 07:39:01.771
  STEP: Creating the service pods in kubernetes @ 03/14/24 07:39:01.771
  Mar 14 07:39:01.772: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0314 07:39:02.289275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:03.290045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:04.291160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:05.292225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:06.292883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:07.293009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:08.293779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:09.293850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:10.294880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:11.295093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:12.295159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:13.295442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/14/24 07:39:13.807
  E0314 07:39:14.296209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:15.296535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:39:15.814: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Mar 14 07:39:15.814: INFO: Breadth first check of 10.244.32.170 on host 192.168.132.11...
  Mar 14 07:39:15.815: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.69.204:9080/dial?request=hostname&protocol=udp&host=10.244.32.170&port=8081&tries=1'] Namespace:pod-network-test-1439 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:39:15.815: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:39:15.815: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:39:15.815: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1439/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.69.204%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.32.170%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 14 07:39:15.864: INFO: Waiting for responses: map[]
  Mar 14 07:39:15.864: INFO: reached 10.244.32.170 after 0/1 tries
  Mar 14 07:39:15.864: INFO: Breadth first check of 10.244.79.84 on host 192.168.132.14...
  Mar 14 07:39:15.866: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.69.204:9080/dial?request=hostname&protocol=udp&host=10.244.79.84&port=8081&tries=1'] Namespace:pod-network-test-1439 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:39:15.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:39:15.867: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:39:15.867: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1439/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.69.204%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.79.84%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 14 07:39:15.908: INFO: Waiting for responses: map[]
  Mar 14 07:39:15.908: INFO: reached 10.244.79.84 after 0/1 tries
  Mar 14 07:39:15.908: INFO: Breadth first check of 10.244.69.249 on host 192.168.132.15...
  Mar 14 07:39:15.909: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.69.204:9080/dial?request=hostname&protocol=udp&host=10.244.69.249&port=8081&tries=1'] Namespace:pod-network-test-1439 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:39:15.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:39:15.910: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:39:15.910: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1439/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.69.204%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.69.249%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Mar 14 07:39:15.954: INFO: Waiting for responses: map[]
  Mar 14 07:39:15.954: INFO: reached 10.244.69.249 after 0/1 tries
  Mar 14 07:39:15.954: INFO: Going to retry 0 out of 3 pods....
  Mar 14 07:39:15.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1439" for this suite. @ 03/14/24 07:39:15.957
• [14.197 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 03/14/24 07:39:15.96
  Mar 14 07:39:15.960: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:39:15.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:15.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:15.969
  STEP: Creating projection with secret that has name secret-emptykey-test-e2113091-19d9-468f-81b1-dde8296ca578 @ 03/14/24 07:39:15.971
  Mar 14 07:39:15.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2363" for this suite. @ 03/14/24 07:39:15.973
• [0.015 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 03/14/24 07:39:15.975
  Mar 14 07:39:15.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-webhook @ 03/14/24 07:39:15.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:15.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:15.982
  STEP: Setting up server cert @ 03/14/24 07:39:15.983
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 03/14/24 07:39:16.226
  STEP: Deploying the custom resource conversion webhook pod @ 03/14/24 07:39:16.229
  STEP: Wait for the deployment to be ready @ 03/14/24 07:39:16.234
  Mar 14 07:39:16.237: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0314 07:39:16.297120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:17.298042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:39:18.242
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:39:18.245
  E0314 07:39:18.298168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:39:19.246: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Mar 14 07:39:19.248: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:39:19.298194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:20.298372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:21.298530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 03/14/24 07:39:21.783
  STEP: v2 custom resource should be converted @ 03/14/24 07:39:21.785
  Mar 14 07:39:21.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0314 07:39:22.298531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-webhook-771" for this suite. @ 03/14/24 07:39:22.306
• [6.334 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 03/14/24 07:39:22.31
  Mar 14 07:39:22.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:39:22.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:22.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:22.319
  STEP: creating a collection of services @ 03/14/24 07:39:22.32
  Mar 14 07:39:22.320: INFO: Creating e2e-svc-a-cb4gv
  Mar 14 07:39:22.324: INFO: Creating e2e-svc-b-86lkr
  Mar 14 07:39:22.327: INFO: Creating e2e-svc-c-qkfnj
  STEP: deleting service collection @ 03/14/24 07:39:22.333
  Mar 14 07:39:22.343: INFO: Collection of services has been deleted
  Mar 14 07:39:22.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5800" for this suite. @ 03/14/24 07:39:22.344
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 03/14/24 07:39:22.349
  Mar 14 07:39:22.349: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:39:22.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:22.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:22.356
  STEP: Setting up server cert @ 03/14/24 07:39:22.363
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:39:22.569
  STEP: Deploying the webhook pod @ 03/14/24 07:39:22.572
  STEP: Wait for the deployment to be ready @ 03/14/24 07:39:22.576
  Mar 14 07:39:22.579: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0314 07:39:23.298829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:24.299104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:39:24.583
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:39:24.586
  E0314 07:39:25.300005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:39:25.587: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 03/14/24 07:39:25.611
  STEP: Creating a configMap that should be mutated @ 03/14/24 07:39:25.619
  STEP: Deleting the collection of validation webhooks @ 03/14/24 07:39:25.631
  STEP: Creating a configMap that should not be mutated @ 03/14/24 07:39:25.643
  Mar 14 07:39:25.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9080" for this suite. @ 03/14/24 07:39:25.66
  STEP: Destroying namespace "webhook-markers-661" for this suite. @ 03/14/24 07:39:25.662
• [3.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 03/14/24 07:39:25.666
  Mar 14 07:39:25.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename podtemplate @ 03/14/24 07:39:25.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:25.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:25.673
  STEP: Create a pod template @ 03/14/24 07:39:25.675
  STEP: Replace a pod template @ 03/14/24 07:39:25.677
  Mar 14 07:39:25.679: INFO: Found updated podtemplate annotation: "true"

  Mar 14 07:39:25.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1095" for this suite. @ 03/14/24 07:39:25.681
• [0.017 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 03/14/24 07:39:25.686
  Mar 14 07:39:25.686: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename prestop @ 03/14/24 07:39:25.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:25.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:25.693
  STEP: Creating server pod server in namespace prestop-5214 @ 03/14/24 07:39:25.694
  STEP: Waiting for pods to come up. @ 03/14/24 07:39:25.697
  E0314 07:39:26.300328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:27.300457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-5214 @ 03/14/24 07:39:27.701
  E0314 07:39:28.301214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:29.301369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 03/14/24 07:39:29.707
  E0314 07:39:30.302265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:31.302375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:32.302460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:33.302556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:34.302697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:39:34.714: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Mar 14 07:39:34.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 03/14/24 07:39:34.717
  STEP: Destroying namespace "prestop-5214" for this suite. @ 03/14/24 07:39:34.723
• [9.039 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 03/14/24 07:39:34.726
  Mar 14 07:39:34.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/14/24 07:39:34.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:34.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:34.734
  Mar 14 07:39:34.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:39:35.303265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:39:35.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6438" for this suite. @ 03/14/24 07:39:35.749
• [1.026 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 03/14/24 07:39:35.752
  Mar 14 07:39:35.752: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:39:35.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:35.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:35.76
  STEP: Creating a ResourceQuota with terminating scope @ 03/14/24 07:39:35.762
  STEP: Ensuring ResourceQuota status is calculated @ 03/14/24 07:39:35.764
  E0314 07:39:36.304180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:37.304491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 03/14/24 07:39:37.766
  STEP: Ensuring ResourceQuota status is calculated @ 03/14/24 07:39:37.768
  E0314 07:39:38.305165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:39.305527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 03/14/24 07:39:39.77
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 03/14/24 07:39:39.776
  E0314 07:39:40.305731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:41.305870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 03/14/24 07:39:41.778
  E0314 07:39:42.306679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:43.306807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/14/24 07:39:43.779
  STEP: Ensuring resource quota status released the pod usage @ 03/14/24 07:39:43.786
  E0314 07:39:44.306917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:45.307221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 03/14/24 07:39:45.789
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 03/14/24 07:39:45.794
  E0314 07:39:46.308037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:47.308128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 03/14/24 07:39:47.796
  E0314 07:39:48.309042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:49.309764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 03/14/24 07:39:49.797
  STEP: Ensuring resource quota status released the pod usage @ 03/14/24 07:39:49.802
  E0314 07:39:50.310782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:51.311846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:39:51.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8792" for this suite. @ 03/14/24 07:39:51.805
• [16.055 seconds]
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 03/14/24 07:39:51.807
  Mar 14 07:39:51.807: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename watch @ 03/14/24 07:39:51.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:51.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:51.814
  STEP: getting a starting resourceVersion @ 03/14/24 07:39:51.816
  STEP: starting a background goroutine to produce watch events @ 03/14/24 07:39:51.817
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 03/14/24 07:39:51.817
  E0314 07:39:52.312160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:53.313130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:54.313144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:39:54.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2675" for this suite. @ 03/14/24 07:39:54.661
• [2.903 seconds]
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 03/14/24 07:39:54.71
  Mar 14 07:39:54.711: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 07:39:54.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:54.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:54.719
  STEP: creating pod @ 03/14/24 07:39:54.72
  E0314 07:39:55.313497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:56.313728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:39:56.728: INFO: Pod pod-hostip-3c3fa1dc-99d6-4a42-a8f5-7fe5dfd12077 has hostIP: 192.168.132.14
  Mar 14 07:39:56.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4258" for this suite. @ 03/14/24 07:39:56.73
• [2.021 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 03/14/24 07:39:56.732
  Mar 14 07:39:56.732: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-preemption @ 03/14/24 07:39:56.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:39:56.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:39:56.74
  Mar 14 07:39:56.746: INFO: Waiting up to 1m0s for all nodes to be ready
  E0314 07:39:57.314192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:58.314501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:39:59.314611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:00.314809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:01.315024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:02.315072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:03.315814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:04.316241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:05.316667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:06.316752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:07.316880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:08.317015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:09.317361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:10.317426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:11.318007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:12.318122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:13.318646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:14.318928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:15.319264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:16.319671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:17.319758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:18.319905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:19.320488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:20.320621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:21.321614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:22.321787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:23.322374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:24.322537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:25.326078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:26.326216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:27.326415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:28.327428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:29.327404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:30.328358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:31.329114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:32.329560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:33.330402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:34.330449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:35.331382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:36.331658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:37.331945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:38.332078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:39.332645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:40.332874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:41.333724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:42.334049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:43.334186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:44.334390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:45.335270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:46.335444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:47.335858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:48.336767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:49.336671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:50.336889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:51.336969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:52.337125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:53.337859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:54.337948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:55.338041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:56.338125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:40:56.756: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 03/14/24 07:40:56.757
  Mar 14 07:40:56.768: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Mar 14 07:40:56.770: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Mar 14 07:40:56.779: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Mar 14 07:40:56.783: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Mar 14 07:40:56.792: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Mar 14 07:40:56.795: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 03/14/24 07:40:56.795
  E0314 07:40:57.339066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:40:58.339478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 03/14/24 07:40:58.804
  E0314 07:40:59.340347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:00.340596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:01.340702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:02.341434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:41:02.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5575" for this suite. @ 03/14/24 07:41:02.866
• [66.141 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 03/14/24 07:41:02.874
  Mar 14 07:41:02.874: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:41:02.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:41:02.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:41:02.887
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:41:02.888
  E0314 07:41:03.342387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:04.342982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:41:04.895
  Mar 14 07:41:04.896: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-d8abd3bf-f5d6-4fcc-9ee1-762ed87b7c56 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:41:04.899
  Mar 14 07:41:04.905: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4045" for this suite. @ 03/14/24 07:41:04.907
• [2.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 03/14/24 07:41:04.91
  Mar 14 07:41:04.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/14/24 07:41:04.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:41:04.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:41:04.918
  Mar 14 07:41:04.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:41:05.343484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 03/14/24 07:41:06.125
  Mar 14 07:41:06.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-3910 --namespace=crd-publish-openapi-3910 create -f -'
  E0314 07:41:06.343773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:41:06.466: INFO: stderr: ""
  Mar 14 07:41:06.466: INFO: stdout: "e2e-test-crd-publish-openapi-8421-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Mar 14 07:41:06.466: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-3910 --namespace=crd-publish-openapi-3910 delete e2e-test-crd-publish-openapi-8421-crds test-cr'
  Mar 14 07:41:06.508: INFO: stderr: ""
  Mar 14 07:41:06.508: INFO: stdout: "e2e-test-crd-publish-openapi-8421-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Mar 14 07:41:06.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-3910 --namespace=crd-publish-openapi-3910 apply -f -'
  Mar 14 07:41:06.597: INFO: stderr: ""
  Mar 14 07:41:06.597: INFO: stdout: "e2e-test-crd-publish-openapi-8421-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Mar 14 07:41:06.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-3910 --namespace=crd-publish-openapi-3910 delete e2e-test-crd-publish-openapi-8421-crds test-cr'
  Mar 14 07:41:06.639: INFO: stderr: ""
  Mar 14 07:41:06.639: INFO: stdout: "e2e-test-crd-publish-openapi-8421-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 03/14/24 07:41:06.639
  Mar 14 07:41:06.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=crd-publish-openapi-3910 explain e2e-test-crd-publish-openapi-8421-crds'
  Mar 14 07:41:06.725: INFO: stderr: ""
  Mar 14 07:41:06.725: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8421-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0314 07:41:07.344700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:41:07.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3910" for this suite. @ 03/14/24 07:41:07.94
• [3.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 03/14/24 07:41:07.943
  Mar 14 07:41:07.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:41:07.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:41:07.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:41:07.95
  STEP: Creating the pod @ 03/14/24 07:41:07.951
  E0314 07:41:08.345348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:09.345420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:10.345505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:41:10.468: INFO: Successfully updated pod "annotationupdateede2803d-7b22-4c93-b86e-ff749cc6aa04"
  E0314 07:41:11.346268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:12.346480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:41:12.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7891" for this suite. @ 03/14/24 07:41:12.477
• [4.536 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 03/14/24 07:41:12.48
  Mar 14 07:41:12.480: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename svcaccounts @ 03/14/24 07:41:12.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:41:12.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:41:12.487
  Mar 14 07:41:12.492: INFO: created pod
  E0314 07:41:13.346574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:14.346669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:41:14.496
  E0314 07:41:15.347198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:16.347482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:17.347595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:18.347683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:19.347711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:20.347812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:21.347834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:22.347941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:23.348146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:24.348258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:25.348702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:26.349511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:27.349611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:28.349808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:29.350939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:30.351490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:31.351677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:32.352354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:33.352484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:34.353487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:35.353831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:36.353917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:37.354081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:38.354491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:39.354845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:40.355012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:41.355209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:42.355356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:43.355485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:44.355607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:41:44.496: INFO: polling logs
  Mar 14 07:41:44.500: INFO: Pod logs: 
  I0314 07:41:12.990678       1 log.go:194] OK: Got token
  I0314 07:41:12.990722       1 log.go:194] validating with in-cluster discovery
  I0314 07:41:12.990891       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0314 07:41:12.990910       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9001:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001e2ad0), NotBefore:(*jwt.NumericDate)(0xc0001e2bb8), IssuedAt:(*jwt.NumericDate)(0xc0001e2ae0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9001", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2c43f44e-5e1a-4c5d-bcfa-a0f251560ee5"}}}
  I0314 07:41:12.999879       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0314 07:41:13.004697       1 log.go:194] OK: Validated signature on JWT
  I0314 07:41:13.004749       1 log.go:194] OK: Got valid claims from token!
  I0314 07:41:13.004766       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9001:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001e3d20), NotBefore:(*jwt.NumericDate)(0xc0001e3d48), IssuedAt:(*jwt.NumericDate)(0xc0001e3d28), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9001", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2c43f44e-5e1a-4c5d-bcfa-a0f251560ee5"}}}

  Mar 14 07:41:44.501: INFO: completed pod
  Mar 14 07:41:44.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9001" for this suite. @ 03/14/24 07:41:44.504
• [32.027 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 03/14/24 07:41:44.507
  Mar 14 07:41:44.507: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/14/24 07:41:44.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:41:44.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:41:44.515
  Mar 14 07:41:44.516: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:41:45.356488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:46.356602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:47.357048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:41:47.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3970" for this suite. @ 03/14/24 07:41:47.665
• [3.161 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 03/14/24 07:41:47.668
  Mar 14 07:41:47.668: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename sched-preemption @ 03/14/24 07:41:47.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:41:47.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:41:47.677
  Mar 14 07:41:47.683: INFO: Waiting up to 1m0s for all nodes to be ready
  E0314 07:41:48.357155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:49.357310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:50.357773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:51.358496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:52.358508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:53.358624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:54.359690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:55.360210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:56.360812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:57.360936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:58.362007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:41:59.363069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:00.364081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:01.364231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:02.365217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:03.365365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:04.365458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:05.365817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:06.366397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:07.366637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:08.366733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:09.366865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:10.367225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:11.367367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:12.367615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:13.368310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:14.368774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:15.368887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:16.368894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:17.368994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:18.369077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:19.369439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:20.370282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:21.370379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:22.371028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:23.371170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:24.372045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:25.372127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:26.372649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:27.372784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:28.372998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:29.373122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:30.373279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:31.373449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:32.374437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:33.374645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:34.374734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:35.374830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:36.375434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:37.375530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:38.375630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:39.375720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:40.376286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:41.376408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:42.376693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:43.376806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:44.376882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:45.377190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:46.377269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:47.377375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:42:47.694: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 03/14/24 07:42:47.695
  Mar 14 07:42:47.703: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Mar 14 07:42:47.704: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Mar 14 07:42:47.712: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Mar 14 07:42:47.715: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Mar 14 07:42:47.722: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Mar 14 07:42:47.724: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 03/14/24 07:42:47.724
  E0314 07:42:48.377782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:49.377963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 03/14/24 07:42:49.734
  E0314 07:42:50.378672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:51.378819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:42:51.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3236" for this suite. @ 03/14/24 07:42:51.766
• [64.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 03/14/24 07:42:51.769
  Mar 14 07:42:51.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pod-network-test @ 03/14/24 07:42:51.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:42:51.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:42:51.777
  STEP: Performing setup for networking test in namespace pod-network-test-9354 @ 03/14/24 07:42:51.778
  STEP: creating a selector @ 03/14/24 07:42:51.778
  STEP: Creating the service pods in kubernetes @ 03/14/24 07:42:51.778
  Mar 14 07:42:51.779: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0314 07:42:52.379103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:53.379188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:54.380080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:55.380183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:56.380557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:57.380707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:58.381160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:42:59.381261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:00.381820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:01.381961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:02.382829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:03.382976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 03/14/24 07:43:03.808
  E0314 07:43:04.383113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:05.383480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:43:05.820: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Mar 14 07:43:05.820: INFO: Going to poll 10.244.32.181 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Mar 14 07:43:05.821: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.32.181:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9354 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:43:05.821: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:43:05.821: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:43:05.821: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9354/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.32.181%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Mar 14 07:43:05.864: INFO: Found all 1 expected endpoints: [netserver-0]
  Mar 14 07:43:05.864: INFO: Going to poll 10.244.79.67 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Mar 14 07:43:05.865: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.79.67:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9354 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:43:05.865: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:43:05.866: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:43:05.866: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9354/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.79.67%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Mar 14 07:43:05.909: INFO: Found all 1 expected endpoints: [netserver-1]
  Mar 14 07:43:05.909: INFO: Going to poll 10.244.69.208 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Mar 14 07:43:05.910: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.69.208:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9354 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:43:05.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:43:05.910: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:43:05.911: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9354/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.69.208%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Mar 14 07:43:05.954: INFO: Found all 1 expected endpoints: [netserver-2]
  Mar 14 07:43:05.954: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9354" for this suite. @ 03/14/24 07:43:05.956
• [14.189 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 03/14/24 07:43:05.958
  Mar 14 07:43:05.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:43:05.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:43:05.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:43:05.966
  STEP: Creating secret with name secret-test-87add5d9-bd17-41ff-93c0-53c5a76a7a36 @ 03/14/24 07:43:05.969
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:43:05.97
  E0314 07:43:06.385418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:07.384517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:43:07.976
  Mar 14 07:43:07.977: INFO: Trying to get logs from node k8s-worker01 pod pod-secrets-e2d23563-7b2f-4dff-8bdf-9003b18cf133 container secret-env-test: <nil>
  STEP: delete the pod @ 03/14/24 07:43:07.979
  Mar 14 07:43:07.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2176" for this suite. @ 03/14/24 07:43:07.986
• [2.029 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 03/14/24 07:43:07.988
  Mar 14 07:43:07.989: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 07:43:07.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:43:07.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:43:07.996
  STEP: Creating configMap with name configmap-test-volume-map-0db8855a-1305-4213-81d6-d539a9d0c62e @ 03/14/24 07:43:07.997
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:43:07.998
  E0314 07:43:08.385063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:09.385132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:43:10.004
  Mar 14 07:43:10.005: INFO: Trying to get logs from node k8s-worker01 pod pod-configmaps-224d343d-0533-4f74-86b6-994e53b6fd96 container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:43:10.007
  Mar 14 07:43:10.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4483" for this suite. @ 03/14/24 07:43:10.013
• [2.026 seconds]
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 03/14/24 07:43:10.015
  Mar 14 07:43:10.015: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename job @ 03/14/24 07:43:10.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:43:10.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:43:10.023
  STEP: Creating a job @ 03/14/24 07:43:10.024
  STEP: Ensuring active pods == parallelism @ 03/14/24 07:43:10.026
  E0314 07:43:10.385239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:11.385440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 03/14/24 07:43:12.028
  STEP: deleting Job.batch foo in namespace job-1732, will wait for the garbage collector to delete the pods @ 03/14/24 07:43:12.028
  Mar 14 07:43:12.082: INFO: Deleting Job.batch foo took: 2.038268ms
  Mar 14 07:43:12.183: INFO: Terminating Job.batch foo pods took: 100.65407ms
  E0314 07:43:12.386176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:13.386435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:14.386565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:15.386880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:16.386879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:17.387044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:18.387283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:19.387442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:20.387740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:21.387770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:22.387797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:23.388013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:24.388207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:25.388638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:26.388827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:27.388971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:28.390023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:29.391068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:30.391119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:31.392172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:32.392205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:33.392836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:34.392978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:35.393471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:36.394423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:37.394654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:38.394800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:39.395818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:40.396834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:41.397858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:42.398193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:43.399183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:44.399630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 03/14/24 07:43:44.584
  Mar 14 07:43:44.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1732" for this suite. @ 03/14/24 07:43:44.587
• [34.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 03/14/24 07:43:44.591
  Mar 14 07:43:44.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubelet-test @ 03/14/24 07:43:44.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:43:44.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:43:44.599
  Mar 14 07:43:44.611: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4239" for this suite. @ 03/14/24 07:43:44.612
• [0.023 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 03/14/24 07:43:44.616
  Mar 14 07:43:44.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename crd-publish-openapi @ 03/14/24 07:43:44.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:43:44.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:43:44.623
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 03/14/24 07:43:44.625
  Mar 14 07:43:44.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:43:45.400176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:46.400660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:47.401219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:48.401472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:49.402665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 03/14/24 07:43:49.541
  Mar 14 07:43:49.542: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:43:50.403273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:43:50.772: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:43:51.403388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:52.403794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:53.404776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:54.405733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:55.405962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:43:55.621: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9138" for this suite. @ 03/14/24 07:43:55.626
• [11.013 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 03/14/24 07:43:55.628
  Mar 14 07:43:55.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:43:55.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:43:55.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:43:55.635
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 03/14/24 07:43:55.637
  E0314 07:43:56.406824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:57.408079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:58.408711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:43:59.408835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:43:59.644
  Mar 14 07:43:59.646: INFO: Trying to get logs from node k8s-worker02 pod pod-1d6d1b1f-d166-4d28-ac6f-afc01dbc0aa7 container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:43:59.648
  Mar 14 07:43:59.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4102" for this suite. @ 03/14/24 07:43:59.657
• [4.032 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 03/14/24 07:43:59.661
  Mar 14 07:43:59.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename daemonsets @ 03/14/24 07:43:59.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:43:59.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:43:59.667
  STEP: Creating simple DaemonSet "daemon-set" @ 03/14/24 07:43:59.675
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/14/24 07:43:59.676
  Mar 14 07:43:59.679: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:43:59.679: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:44:00.408995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:00.682: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Mar 14 07:44:00.682: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:44:01.409079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:01.682: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 14 07:44:01.682: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 03/14/24 07:44:01.683
  Mar 14 07:44:01.690: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 14 07:44:01.690: INFO: Node k8s-worker01 is running 0 daemon pod, expected 1
  E0314 07:44:02.409170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:02.695: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 14 07:44:02.695: INFO: Node k8s-worker01 is running 0 daemon pod, expected 1
  E0314 07:44:03.409243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:03.694: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 14 07:44:03.694: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/14/24 07:44:03.695
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-585, will wait for the garbage collector to delete the pods @ 03/14/24 07:44:03.695
  Mar 14 07:44:03.749: INFO: Deleting DaemonSet.extensions daemon-set took: 2.496501ms
  Mar 14 07:44:03.850: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.850658ms
  E0314 07:44:04.409777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:05.410821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:06.410913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:06.652: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:44:06.652: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 14 07:44:06.653: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"35771"},"items":null}

  Mar 14 07:44:06.654: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"35771"},"items":null}

  Mar 14 07:44:06.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-585" for this suite. @ 03/14/24 07:44:06.66
• [7.001 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 03/14/24 07:44:06.663
  Mar 14 07:44:06.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:44:06.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:44:06.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:44:06.671
  STEP: Setting up server cert @ 03/14/24 07:44:06.679
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:44:07.015
  STEP: Deploying the webhook pod @ 03/14/24 07:44:07.018
  STEP: Wait for the deployment to be ready @ 03/14/24 07:44:07.022
  Mar 14 07:44:07.026: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0314 07:44:07.410938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:08.411155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:44:09.03
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:44:09.034
  E0314 07:44:09.411251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:10.035: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 03/14/24 07:44:10.056
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/14/24 07:44:10.077
  STEP: Deleting the collection of validation webhooks @ 03/14/24 07:44:10.095
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 03/14/24 07:44:10.106
  Mar 14 07:44:10.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7962" for this suite. @ 03/14/24 07:44:10.123
  STEP: Destroying namespace "webhook-markers-1676" for this suite. @ 03/14/24 07:44:10.126
• [3.466 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 03/14/24 07:44:10.13
  Mar 14 07:44:10.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename gc @ 03/14/24 07:44:10.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:44:10.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:44:10.136
  STEP: create the rc @ 03/14/24 07:44:10.138
  W0314 07:44:10.140570      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0314 07:44:10.411957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:11.412109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:12.412242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:13.412391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:14.412616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 03/14/24 07:44:15.142
  STEP: wait for all pods to be garbage collected @ 03/14/24 07:44:15.144
  E0314 07:44:15.413329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:16.413452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:17.414368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:18.414565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:19.414763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/14/24 07:44:20.148
  Mar 14 07:44:20.199: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 14 07:44:20.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4273" for this suite. @ 03/14/24 07:44:20.201
• [10.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 03/14/24 07:44:20.205
  Mar 14 07:44:20.205: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename csiinlinevolumes @ 03/14/24 07:44:20.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:44:20.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:44:20.212
  STEP: Creating two CSIDrivers @ 03/14/24 07:44:20.213
  STEP: Getting "inline-driver-ea4f51b7-5f60-44a4-af18-99b43563016b" & "inline-driver-c64e4cb0-19a4-43a3-9dc1-87686c121099" @ 03/14/24 07:44:20.218
  STEP: Patching the CSIDriver "inline-driver-c64e4cb0-19a4-43a3-9dc1-87686c121099" @ 03/14/24 07:44:20.22
  STEP: Updating the CSIDriver "inline-driver-c64e4cb0-19a4-43a3-9dc1-87686c121099" @ 03/14/24 07:44:20.223
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2875" @ 03/14/24 07:44:20.226
  STEP: Deleting CSIDriver "inline-driver-ea4f51b7-5f60-44a4-af18-99b43563016b" @ 03/14/24 07:44:20.227
  STEP: Confirm deletion of CSIDriver "inline-driver-ea4f51b7-5f60-44a4-af18-99b43563016b" @ 03/14/24 07:44:20.229
  STEP: Deleting CSIDriver "inline-driver-c64e4cb0-19a4-43a3-9dc1-87686c121099" via DeleteCollection @ 03/14/24 07:44:20.23
  STEP: Confirm deletion of CSIDriver "inline-driver-c64e4cb0-19a4-43a3-9dc1-87686c121099" @ 03/14/24 07:44:20.232
  Mar 14 07:44:20.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2875" for this suite. @ 03/14/24 07:44:20.234
• [0.031 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 03/14/24 07:44:20.237
  Mar 14 07:44:20.237: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:44:20.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:44:20.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:44:20.244
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 03/14/24 07:44:20.245
  E0314 07:44:20.414850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:21.415892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:22.416338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:23.416505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:44:24.253
  Mar 14 07:44:24.254: INFO: Trying to get logs from node k8s-worker02 pod pod-2c959122-5ba7-469a-b1a2-6380f3a47c73 container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:44:24.256
  Mar 14 07:44:24.262: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7350" for this suite. @ 03/14/24 07:44:24.263
• [4.029 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 03/14/24 07:44:24.267
  Mar 14 07:44:24.267: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename security-context @ 03/14/24 07:44:24.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:44:24.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:44:24.274
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 03/14/24 07:44:24.275
  E0314 07:44:24.417288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:25.417878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:26.418516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:27.418639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:44:28.282
  Mar 14 07:44:28.283: INFO: Trying to get logs from node k8s-worker02 pod security-context-0e5f2a8a-106f-4907-b663-e95cbfa06fee container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:44:28.286
  Mar 14 07:44:28.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6876" for this suite. @ 03/14/24 07:44:28.292
• [4.027 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 03/14/24 07:44:28.295
  Mar 14 07:44:28.295: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 07:44:28.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:44:28.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:44:28.302
  STEP: Creating pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774 @ 03/14/24 07:44:28.303
  E0314 07:44:28.418978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:29.419121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/14/24 07:44:30.309
  Mar 14 07:44:30.311: INFO: Initial restart count of pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d is 0
  Mar 14 07:44:30.312: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:30.419209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:31.419287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:32.313: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:32.420056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:33.420437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:34.315: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:34.420499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:35.420572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:36.316: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:36.420987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:37.421122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:38.318: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:38.421922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:39.422075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:40.321: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:40.422389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:41.422566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:42.323: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:42.423603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:43.423740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:44.325: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:44.424411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:45.425460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:46.326: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:46.425962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:47.426111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:48.328: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:48.426884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:49.427016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:50.331: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:50.427883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:51.428264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:52.333: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:52.429032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:53.429505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:54.335: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:54.429703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:55.430610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:56.336: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:56.431186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:57.431298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:44:58.338: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:44:58.431805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:44:59.431960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:00.341: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:00.432367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:01.432535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:02.343: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:02.433326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:03.433527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:04.345: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:04.434120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:05.434929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:06.346: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:06.435691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:07.435854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:08.348: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:08.436555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:09.437559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:10.351: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:10.438533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:11.439252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:12.353: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:12.439897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:13.441071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:14.355: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:14.441464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:15.442398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:16.356: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:16.442989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:17.443117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:18.359: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:18.443458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:19.443810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:20.361: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:20.443862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:21.444005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:22.363: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:22.444761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:23.444909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:24.365: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:24.445485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:25.446335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:26.367: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:26.446908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:27.447669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:28.369: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:28.448580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:29.449645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:30.371: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:30.450590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:31.451194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:32.373: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  E0314 07:45:32.452069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:33.452212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:34.375: INFO: Get pod test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d in namespace container-probe-2774
  Mar 14 07:45:34.375: INFO: Restart count of pod container-probe-2774/test-grpc-6ffd9568-20a3-4ffd-b475-c50c661ea37d is now 1 (1m4.064312032s elapsed)
  Mar 14 07:45:34.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:45:34.376
  STEP: Destroying namespace "container-probe-2774" for this suite. @ 03/14/24 07:45:34.381
• [66.089 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 03/14/24 07:45:34.385
  Mar 14 07:45:34.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename statefulset @ 03/14/24 07:45:34.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:45:34.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:45:34.393
  STEP: Creating service test in namespace statefulset-1230 @ 03/14/24 07:45:34.394
  STEP: Creating a new StatefulSet @ 03/14/24 07:45:34.396
  Mar 14 07:45:34.401: INFO: Found 0 stateful pods, waiting for 3
  E0314 07:45:34.452528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:35.453498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:36.453628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:37.453772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:38.454656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:39.455683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:40.456380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:41.456470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:42.456658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:43.456850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:45:44.404: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 07:45:44.404: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 07:45:44.404: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4 to hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.39-4 @ 03/14/24 07:45:44.406
  Mar 14 07:45:44.420: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 03/14/24 07:45:44.42
  E0314 07:45:44.457892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:45.458672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:46.459346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:47.459670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:48.459927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:49.459986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:50.460050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:51.460160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:52.461395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:53.461234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 03/14/24 07:45:54.426
  STEP: Performing a canary update @ 03/14/24 07:45:54.426
  Mar 14 07:45:54.440: INFO: Updating stateful set ss2
  Mar 14 07:45:54.451: INFO: Waiting for Pod statefulset-1230/ss2-2 to have revision ss2-6b66c85569 update revision ss2-6655bf8dfb
  E0314 07:45:54.461737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:55.462058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:56.462167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:57.462308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:58.462438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:45:59.463575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:00.463917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:01.463890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:02.464522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:03.465342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 03/14/24 07:46:04.454
  E0314 07:46:04.465335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:46:04.485: INFO: Found 2 stateful pods, waiting for 3
  E0314 07:46:05.466339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:06.466793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:07.467161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:08.467441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:09.467550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:10.467625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:11.467716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:12.467809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:13.467915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:14.468000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:46:14.488: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 07:46:14.488: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 07:46:14.488: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 03/14/24 07:46:14.49
  Mar 14 07:46:14.504: INFO: Updating stateful set ss2
  Mar 14 07:46:14.506: INFO: Waiting for Pod statefulset-1230/ss2-1 to have revision ss2-6b66c85569 update revision ss2-6655bf8dfb
  E0314 07:46:15.468667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:16.468860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:17.469059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:18.469251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:19.469393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:20.470461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:21.471469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:22.471555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:23.471648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:24.471734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:46:24.523: INFO: Updating stateful set ss2
  Mar 14 07:46:24.525: INFO: Waiting for StatefulSet statefulset-1230/ss2 to complete update
  Mar 14 07:46:24.525: INFO: Waiting for Pod statefulset-1230/ss2-0 to have revision ss2-6b66c85569 update revision ss2-6655bf8dfb
  E0314 07:46:25.471832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:26.471918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:27.472009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:28.472103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:29.472188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:30.472280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:31.472380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:32.472459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:33.472596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:34.472727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:46:34.529: INFO: Deleting all statefulset in ns statefulset-1230
  Mar 14 07:46:34.531: INFO: Scaling statefulset ss2 to 0
  E0314 07:46:35.473759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:36.473893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:37.474009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:38.474176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:39.474338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:40.474490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:41.474657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:42.475038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:43.475194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:44.475380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:46:44.539: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 14 07:46:44.540: INFO: Deleting statefulset ss2
  Mar 14 07:46:44.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1230" for this suite. @ 03/14/24 07:46:44.546
• [70.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 03/14/24 07:46:44.55
  Mar 14 07:46:44.550: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename custom-resource-definition @ 03/14/24 07:46:44.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:46:44.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:46:44.557
  Mar 14 07:46:44.558: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:46:45.476209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:46.477192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:47.477907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:48.479204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:49.479818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:50.480290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:46:50.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1263" for this suite. @ 03/14/24 07:46:50.661
• [6.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 03/14/24 07:46:50.664
  Mar 14 07:46:50.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename webhook @ 03/14/24 07:46:50.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:46:50.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:46:50.67
  STEP: Setting up server cert @ 03/14/24 07:46:50.678
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 03/14/24 07:46:50.968
  STEP: Deploying the webhook pod @ 03/14/24 07:46:50.971
  STEP: Wait for the deployment to be ready @ 03/14/24 07:46:50.975
  Mar 14 07:46:50.977: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0314 07:46:51.481152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:52.481275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 03/14/24 07:46:52.981
  STEP: Verifying the service has paired with the endpoint @ 03/14/24 07:46:52.985
  E0314 07:46:53.481940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:46:53.985: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Mar 14 07:46:53.987: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  E0314 07:46:54.482261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-990-crds.webhook.example.com via the AdmissionRegistration API @ 03/14/24 07:46:54.492
  STEP: Creating a custom resource that should be mutated by the webhook @ 03/14/24 07:46:54.5
  E0314 07:46:55.482374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:56.482462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:46:56.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8612" for this suite. @ 03/14/24 07:46:57.045
  STEP: Destroying namespace "webhook-markers-6606" for this suite. @ 03/14/24 07:46:57.047
• [6.386 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 03/14/24 07:46:57.05
  Mar 14 07:46:57.050: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:46:57.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:46:57.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:46:57.057
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5653 @ 03/14/24 07:46:57.058
  STEP: changing the ExternalName service to type=ClusterIP @ 03/14/24 07:46:57.06
  STEP: creating replication controller externalname-service in namespace services-5653 @ 03/14/24 07:46:57.064
  I0314 07:46:57.067465      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-5653, replica count: 2
  E0314 07:46:57.483306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:58.483674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:46:59.484480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 07:47:00.118673      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 14 07:47:00.118: INFO: Creating new exec pod
  E0314 07:47:00.485454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:01.486242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:02.486876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:03.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5653 exec execpod6l8kz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Mar 14 07:47:03.212: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Mar 14 07:47:03.212: INFO: stdout: ""
  E0314 07:47:03.487478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:04.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5653 exec execpod6l8kz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Mar 14 07:47:04.300: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Mar 14 07:47:04.300: INFO: stdout: "externalname-service-pwg62"
  Mar 14 07:47:04.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5653 exec execpod6l8kz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.193.59 80'
  Mar 14 07:47:04.383: INFO: stderr: "+ + nc -v -t -w 2 10.96.193.59 80\necho hostName\nConnection to 10.96.193.59 80 port [tcp/http] succeeded!\n"
  Mar 14 07:47:04.383: INFO: stdout: ""
  E0314 07:47:04.488089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:05.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5653 exec execpod6l8kz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.193.59 80'
  Mar 14 07:47:05.470: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.193.59 80\nConnection to 10.96.193.59 80 port [tcp/http] succeeded!\n"
  Mar 14 07:47:05.470: INFO: stdout: "externalname-service-59fpx"
  Mar 14 07:47:05.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 07:47:05.471: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-5653" for this suite. @ 03/14/24 07:47:05.477
• [8.431 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 03/14/24 07:47:05.481
  Mar 14 07:47:05.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename gc @ 03/14/24 07:47:05.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:47:05.488
  E0314 07:47:05.488458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:47:05.49
  STEP: create the rc @ 03/14/24 07:47:05.493
  W0314 07:47:05.495844      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0314 07:47:06.488611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:07.489562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:08.490497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:09.490600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:10.491439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:11.491506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 03/14/24 07:47:11.497
  STEP: wait for the rc to be deleted @ 03/14/24 07:47:11.499
  E0314 07:47:12.492487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:12.511: INFO: 80 pods remaining
  Mar 14 07:47:12.511: INFO: 80 pods has nil DeletionTimestamp
  Mar 14 07:47:12.511: INFO: 
  E0314 07:47:13.492566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:13.516: INFO: 71 pods remaining
  Mar 14 07:47:13.516: INFO: 70 pods has nil DeletionTimestamp
  Mar 14 07:47:13.516: INFO: 
  E0314 07:47:14.493451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:14.506: INFO: 60 pods remaining
  Mar 14 07:47:14.506: INFO: 60 pods has nil DeletionTimestamp
  Mar 14 07:47:14.506: INFO: 
  E0314 07:47:15.494470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:15.509: INFO: 40 pods remaining
  Mar 14 07:47:15.509: INFO: 40 pods has nil DeletionTimestamp
  Mar 14 07:47:15.509: INFO: 
  E0314 07:47:16.495253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:16.507: INFO: 31 pods remaining
  Mar 14 07:47:16.507: INFO: 30 pods has nil DeletionTimestamp
  Mar 14 07:47:16.507: INFO: 
  E0314 07:47:17.496077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:17.503: INFO: 20 pods remaining
  Mar 14 07:47:17.503: INFO: 20 pods has nil DeletionTimestamp
  Mar 14 07:47:17.503: INFO: 
  E0314 07:47:18.496424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 03/14/24 07:47:18.503
  Mar 14 07:47:18.553: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Mar 14 07:47:18.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7324" for this suite. @ 03/14/24 07:47:18.555
• [13.076 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 03/14/24 07:47:18.557
  Mar 14 07:47:18.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl-logs @ 03/14/24 07:47:18.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:47:18.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:47:18.568
  STEP: creating an pod @ 03/14/24 07:47:18.569
  Mar 14 07:47:18.569: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-logs-7061 run logs-generator --image=hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Mar 14 07:47:18.614: INFO: stderr: ""
  Mar 14 07:47:18.614: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 03/14/24 07:47:18.614
  Mar 14 07:47:18.614: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0314 07:47:19.496600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:20.496802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:20.617: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 03/14/24 07:47:20.617
  Mar 14 07:47:20.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-logs-7061 logs logs-generator logs-generator'
  Mar 14 07:47:20.664: INFO: stderr: ""
  Mar 14 07:47:20.664: INFO: stdout: "I0314 07:47:19.100416       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/shnp 297\nI0314 07:47:19.300533       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/q4p4 398\nI0314 07:47:19.501057       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/wbf 274\nI0314 07:47:19.701345       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/5w4g 546\nI0314 07:47:19.900584       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/r5x 452\nI0314 07:47:20.100896       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/mvr4 216\nI0314 07:47:20.301193       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/ndkn 384\nI0314 07:47:20.500449       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/zgf 392\n"
  STEP: limiting log lines @ 03/14/24 07:47:20.664
  Mar 14 07:47:20.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-logs-7061 logs logs-generator logs-generator --tail=1'
  Mar 14 07:47:20.706: INFO: stderr: ""
  Mar 14 07:47:20.706: INFO: stdout: "I0314 07:47:20.700761       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/2g7 261\n"
  Mar 14 07:47:20.706: INFO: got output "I0314 07:47:20.700761       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/2g7 261\n"
  STEP: limiting log bytes @ 03/14/24 07:47:20.707
  Mar 14 07:47:20.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-logs-7061 logs logs-generator logs-generator --limit-bytes=1'
  Mar 14 07:47:20.751: INFO: stderr: ""
  Mar 14 07:47:20.751: INFO: stdout: "I"
  Mar 14 07:47:20.751: INFO: got output "I"
  STEP: exposing timestamps @ 03/14/24 07:47:20.751
  Mar 14 07:47:20.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-logs-7061 logs logs-generator logs-generator --tail=1 --timestamps'
  Mar 14 07:47:20.794: INFO: stderr: ""
  Mar 14 07:47:20.794: INFO: stdout: "2024-03-14T07:47:20.700796634Z I0314 07:47:20.700761       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/2g7 261\n"
  Mar 14 07:47:20.794: INFO: got output "2024-03-14T07:47:20.700796634Z I0314 07:47:20.700761       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/2g7 261\n"
  STEP: restricting to a time range @ 03/14/24 07:47:20.794
  E0314 07:47:21.497715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:22.497794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:23.295: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-logs-7061 logs logs-generator logs-generator --since=1s'
  Mar 14 07:47:23.338: INFO: stderr: ""
  Mar 14 07:47:23.338: INFO: stdout: "I0314 07:47:22.501425       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/l7pk 454\nI0314 07:47:22.700729       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/xmfg 505\nI0314 07:47:22.901033       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/t4tm 358\nI0314 07:47:23.101330       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/2f4 556\nI0314 07:47:23.300571       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/x4t 570\n"
  Mar 14 07:47:23.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-logs-7061 logs logs-generator logs-generator --since=24h'
  Mar 14 07:47:23.380: INFO: stderr: ""
  Mar 14 07:47:23.380: INFO: stdout: "I0314 07:47:19.100416       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/shnp 297\nI0314 07:47:19.300533       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/q4p4 398\nI0314 07:47:19.501057       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/wbf 274\nI0314 07:47:19.701345       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/5w4g 546\nI0314 07:47:19.900584       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/r5x 452\nI0314 07:47:20.100896       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/mvr4 216\nI0314 07:47:20.301193       1 logs_generator.go:76] 6 POST /api/v1/namespaces/kube-system/pods/ndkn 384\nI0314 07:47:20.500449       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/zgf 392\nI0314 07:47:20.700761       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/2g7 261\nI0314 07:47:20.901074       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/tkp4 272\nI0314 07:47:21.101344       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/kdtb 482\nI0314 07:47:21.300609       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/4ztf 248\nI0314 07:47:21.500920       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/27b 307\nI0314 07:47:21.701222       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/qkws 570\nI0314 07:47:21.900466       1 logs_generator.go:76] 14 POST /api/v1/namespaces/kube-system/pods/rp8r 470\nI0314 07:47:22.100800       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/4j5k 400\nI0314 07:47:22.301106       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/fq78 201\nI0314 07:47:22.501425       1 logs_generator.go:76] 17 POST /api/v1/namespaces/kube-system/pods/l7pk 454\nI0314 07:47:22.700729       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/xmfg 505\nI0314 07:47:22.901033       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/t4tm 358\nI0314 07:47:23.101330       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/2f4 556\nI0314 07:47:23.300571       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/kube-system/pods/x4t 570\n"
  Mar 14 07:47:23.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-logs-7061 delete pod logs-generator'
  E0314 07:47:23.498418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:24.112: INFO: stderr: ""
  Mar 14 07:47:24.112: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Mar 14 07:47:24.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7061" for this suite. @ 03/14/24 07:47:24.114
• [5.559 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 03/14/24 07:47:24.117
  Mar 14 07:47:24.117: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:47:24.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:47:24.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:47:24.124
  STEP: Creating projection with secret that has name projected-secret-test-b87c767f-a04b-4476-a40a-07b3317e9f45 @ 03/14/24 07:47:24.125
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:47:24.127
  E0314 07:47:24.498650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:25.499284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:26.499902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:27.500036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:47:28.136
  Mar 14 07:47:28.137: INFO: Trying to get logs from node k8s-worker02 pod pod-projected-secrets-7acf4d41-6c6d-41dd-b2f0-8292df712ad1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:47:28.139
  Mar 14 07:47:28.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3373" for this suite. @ 03/14/24 07:47:28.146
• [4.031 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 03/14/24 07:47:28.148
  Mar 14 07:47:28.148: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:47:28.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:47:28.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:47:28.156
  STEP: creating service in namespace services-8812 @ 03/14/24 07:47:28.157
  STEP: creating service affinity-clusterip in namespace services-8812 @ 03/14/24 07:47:28.157
  STEP: creating replication controller affinity-clusterip in namespace services-8812 @ 03/14/24 07:47:28.16
  I0314 07:47:28.162991      21 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-8812, replica count: 3
  E0314 07:47:28.501269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:29.501355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:30.501436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 07:47:31.214234      21 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 14 07:47:31.216: INFO: Creating new exec pod
  E0314 07:47:31.501494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:32.501592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:33.501678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:34.221: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-8812 exec execpod-affinityq6879 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Mar 14 07:47:34.304: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Mar 14 07:47:34.304: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:47:34.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-8812 exec execpod-affinityq6879 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.11.233 80'
  Mar 14 07:47:34.387: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.11.233 80\nConnection to 10.96.11.233 80 port [tcp/http] succeeded!\n"
  Mar 14 07:47:34.387: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:47:34.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-8812 exec execpod-affinityq6879 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.96.11.233:80/ ; done'
  E0314 07:47:34.502272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:47:34.511: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.96.11.233:80/\n"
  Mar 14 07:47:34.511: INFO: stdout: "\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4\naffinity-clusterip-97xk4"
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Received response from host: affinity-clusterip-97xk4
  Mar 14 07:47:34.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 07:47:34.514: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8812, will wait for the garbage collector to delete the pods @ 03/14/24 07:47:34.519
  Mar 14 07:47:34.574: INFO: Deleting ReplicationController affinity-clusterip took: 2.545343ms
  Mar 14 07:47:34.675: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.998928ms
  E0314 07:47:35.502477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:36.502549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-8812" for this suite. @ 03/14/24 07:47:37.281
• [9.134 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 03/14/24 07:47:37.283
  Mar 14 07:47:37.283: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:47:37.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:47:37.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:47:37.29
  STEP: Creating secret with name secret-test-d29a0d70-7003-461a-834d-bf02f346bf91 @ 03/14/24 07:47:37.297
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:47:37.299
  E0314 07:47:37.502908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:38.503472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:47:39.304
  Mar 14 07:47:39.305: INFO: Trying to get logs from node k8s-worker02 pod pod-secrets-52867c9c-3393-4de2-9711-bb23adc2606f container secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:47:39.307
  Mar 14 07:47:39.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4731" for this suite. @ 03/14/24 07:47:39.313
  STEP: Destroying namespace "secret-namespace-6470" for this suite. @ 03/14/24 07:47:39.315
• [2.034 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 03/14/24 07:47:39.317
  Mar 14 07:47:39.317: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename init-container @ 03/14/24 07:47:39.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:47:39.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:47:39.325
  STEP: creating the pod @ 03/14/24 07:47:39.327
  Mar 14 07:47:39.327: INFO: PodSpec: initContainers in spec.initContainers
  E0314 07:47:39.504221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:40.504311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:41.504396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:42.505445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:43.505585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:44.506302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:45.506423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:46.506560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:47.506715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:48.506946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:49.507030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:50.507732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:51.507838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:52.508073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:53.508208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:54.508626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:55.508873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:56.508970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:57.509051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:58.509934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:47:59.510003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:00.510233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:01.510207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:02.510450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:03.510561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:04.510624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:05.510923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:06.511044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:07.511174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:08.511352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:09.511802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:10.512051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:11.512341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:12.512547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:13.512724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:14.513378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:15.513405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:16.513512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:17.513657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:18.514078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:19.514434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:20.514755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:21.515907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:22.204: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-104696e5-c5d5-460c-85ed-f9075cc0abfa", GenerateName:"", Namespace:"init-container-9293", SelfLink:"", UID:"c6128a1a-b902-4c3f-8204-f4f5cd119d4c", ResourceVersion:"39671", Generation:0, CreationTimestamp:time.Date(2024, time.March, 14, 7, 47, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"327072520"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"6d8edf352d26b005a1d6e8a21d8ad34bb28e8cbc2b916e944fd5a9d305d02517", "cni.projectcalico.org/podIP":"10.244.69.207/32", "cni.projectcalico.org/podIPs":"10.244.69.207/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.March, 14, 7, 47, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001236540), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.March, 14, 7, 47, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc001236570), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.March, 14, 7, 48, 22, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012365a0), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-5lhvn", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0051e0ac0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"hub.oepkgs.net/nestos/nestos-test/sonobuoy/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5lhvn", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"hub.oepkgs.net/nestos/nestos-test/sonobuoy/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5lhvn", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-5lhvn", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc006262738), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"k8s-worker02", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004f0c150), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0062627c0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0062627e0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc0062627e8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc0062627ec), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0040ce840), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.March, 14, 7, 47, 39, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.March, 14, 7, 47, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.March, 14, 7, 47, 39, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.March, 14, 7, 47, 39, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.132.15", HostIPs:[]v1.HostIP(nil), PodIP:"10.244.69.207", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.69.207"}}, StartTime:time.Date(2024, time.March, 14, 7, 47, 39, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004f0c230)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004f0c2a0)}, Ready:false, RestartCount:3, Image:"hub.oepkgs.net/nestos/nestos-test/sonobuoy/busybox:1.29-4", ImageID:"hub.oepkgs.net/nestos/nestos-test/sonobuoy/busybox@sha256:7ddd6b83e44b8f6e2f1fccace9562f5600b71e7717515ebd2131bdb94ad8634c", ContainerID:"cri-o://8715d8c208c96331708de85850d67be34f904e604433b734a96dc139d54c5da0", Started:(*bool)(0xc00626288f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0051e0b60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"hub.oepkgs.net/nestos/nestos-test/sonobuoy/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc006262895), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0051e0b40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"hub.oepkgs.net/nestos/nestos-test/sonobuoy/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc006262864), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Mar 14 07:48:22.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9293" for this suite. @ 03/14/24 07:48:22.207
• [42.892 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 03/14/24 07:48:22.211
  Mar 14 07:48:22.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename containers @ 03/14/24 07:48:22.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:48:22.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:48:22.22
  STEP: Creating a pod to test override command @ 03/14/24 07:48:22.221
  E0314 07:48:22.517044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:23.516778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:48:24.229
  Mar 14 07:48:24.231: INFO: Trying to get logs from node k8s-worker01 pod client-containers-d1539f71-b5d2-4a86-9e31-a34bd798244b container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:48:24.234
  Mar 14 07:48:24.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1829" for this suite. @ 03/14/24 07:48:24.241
• [2.032 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 03/14/24 07:48:24.243
  Mar 14 07:48:24.243: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/14/24 07:48:24.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:48:24.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:48:24.25
  STEP: create the container to handle the HTTPGet hook request. @ 03/14/24 07:48:24.253
  E0314 07:48:24.516839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:25.517203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/14/24 07:48:26.262
  E0314 07:48:26.517594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:27.517740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 03/14/24 07:48:28.268
  STEP: delete the pod with lifecycle hook @ 03/14/24 07:48:28.27
  E0314 07:48:28.518509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:29.518788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:30.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7685" for this suite. @ 03/14/24 07:48:30.276
• [6.035 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 03/14/24 07:48:30.279
  Mar 14 07:48:30.279: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename hostport @ 03/14/24 07:48:30.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:48:30.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:48:30.285
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 03/14/24 07:48:30.287
  E0314 07:48:30.519427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:31.519644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.132.15 on the node which pod1 resides and expect scheduled @ 03/14/24 07:48:32.294
  E0314 07:48:32.520386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:33.520566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.132.15 but use UDP protocol on the node which pod2 resides @ 03/14/24 07:48:34.3
  E0314 07:48:34.520554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:35.521017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:36.521639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:37.522876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 03/14/24 07:48:38.313
  Mar 14 07:48:38.313: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.132.15 http://127.0.0.1:54323/hostname] Namespace:hostport-835 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:48:38.313: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:48:38.313: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:48:38.313: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-835/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.132.15+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.132.15, port: 54323 @ 03/14/24 07:48:38.359
  Mar 14 07:48:38.359: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.132.15:54323/hostname] Namespace:hostport-835 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:48:38.359: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:48:38.359: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:48:38.360: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-835/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.132.15%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.132.15, port: 54323 UDP @ 03/14/24 07:48:38.403
  Mar 14 07:48:38.403: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.132.15 54323] Namespace:hostport-835 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:48:38.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:48:38.404: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:48:38.404: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-835/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.132.15+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0314 07:48:38.523607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:39.524773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:40.524977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:41.525075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:42.525172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:43.455: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-835" for this suite. @ 03/14/24 07:48:43.457
• [13.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 03/14/24 07:48:43.466
  Mar 14 07:48:43.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename runtimeclass @ 03/14/24 07:48:43.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:48:43.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:48:43.475
  E0314 07:48:43.525219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:44.525471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:45.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9696" for this suite. @ 03/14/24 07:48:45.489
• [2.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 03/14/24 07:48:45.494
  Mar 14 07:48:45.494: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-probe @ 03/14/24 07:48:45.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:48:45.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:48:45.503
  STEP: Creating pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483 @ 03/14/24 07:48:45.504
  E0314 07:48:45.525957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:46.526662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 03/14/24 07:48:47.512
  Mar 14 07:48:47.514: INFO: Initial restart count of pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a is 0
  Mar 14 07:48:47.515: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:48:47.527212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:48.527604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:49.517: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:48:49.528456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:50.529490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:51.518: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:48:51.530063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:52.530170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:53.520: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:48:53.530600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:54.530726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:55.522: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:48:55.531714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:56.531860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:57.524: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:48:57.532817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:48:58.532952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:48:59.526: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:48:59.533652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:00.533780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:01.528: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:01.534262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:02.534419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:03.529: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:03.534910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:04.535040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:05.531: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:05.535801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:06.535932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:07.534: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  Mar 14 07:49:07.534: INFO: Restart count of pod container-probe-8483/liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a is now 1 (20.02011119s elapsed)
  E0314 07:49:07.536257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:08.537171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:09.535: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:09.537829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:10.538758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:11.538: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:11.539443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:12.540424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:13.540: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:13.541101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:14.541353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:15.541474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:15.541: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:16.541913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:17.541969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:17.543: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:18.542843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:19.543425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:19.545: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:20.544187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:21.544327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:21.547: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:22.544956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:23.545067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:23.549: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:24.546053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:25.546143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:25.552: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:26.546725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:27.546869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:27.554: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  Mar 14 07:49:27.554: INFO: Restart count of pod container-probe-8483/liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a is now 2 (40.040822295s elapsed)
  E0314 07:49:28.547673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:29.547842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:29.556: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:30.548246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:31.548406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:31.557: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:32.548500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:33.548688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:33.559: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:34.548801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:35.549297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:35.562: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:36.550038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:37.550184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:37.564: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:38.550287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:39.550453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:39.566: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:40.550553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:41.550643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:41.568: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:42.550737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:43.550837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:43.570: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:44.551143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:45.551463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:45.572: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:46.552429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:47.552583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:47.574: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  Mar 14 07:49:47.574: INFO: Restart count of pod container-probe-8483/liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a is now 3 (1m0.060413007s elapsed)
  E0314 07:49:48.552877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:49.552947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:49.576: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:50.553352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:51.553502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:51.579: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:52.554228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:53.554374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:53.581: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:54.555289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:55.555762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:55.583: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:56.556529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:57.556726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:57.585: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:49:58.556971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:49:59.557148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:49:59.587: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:00.557374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:01.557705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:01.590: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:02.557929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:03.558194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:03.591: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:04.558510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:05.558768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:05.594: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:06.558970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:07.559151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:07.597: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  Mar 14 07:50:07.597: INFO: Restart count of pod container-probe-8483/liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a is now 4 (1m20.083150798s elapsed)
  E0314 07:50:08.559734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:09.559810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:09.599: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:10.560586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:11.560680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:11.601: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:12.560966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:13.561294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:13.602: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:14.561384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:15.561652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:15.604: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:16.562084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:17.562179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:17.606: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:18.562276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:19.562557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:19.608: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:20.563589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:21.564387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:21.609: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:22.564460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:23.564549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:23.612: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:24.564785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:25.565055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:25.613: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:26.565838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:27.565929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:27.616: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:28.566171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:29.566353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:29.618: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:30.567224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:31.567308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:31.619: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:32.567882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:33.568705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:33.622: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:34.568787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:35.569387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:35.623: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:36.570084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:37.570177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:37.625: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:38.570410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:39.570629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:39.628: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:40.571486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:41.571707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:41.630: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:42.571956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:43.572149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:43.631: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:44.572556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:45.572904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:45.633: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:46.573449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:47.574384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:47.636: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:48.574428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:49.574526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:49.638: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:50.575580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:51.575670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:51.640: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:52.576218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:53.576315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:53.642: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:54.577264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:55.577366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:55.644: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:56.577641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:57.577760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:57.646: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:50:58.578389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:50:59.578470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:50:59.649: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:51:00.579490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:01.580752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:01.651: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:51:02.580768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:03.581520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:03.653: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:51:04.582121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:05.582211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:05.655: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:51:06.582443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:07.583424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:07.657: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:51:08.584461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:09.584602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:09.660: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:51:10.584885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:11.586001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:11.661: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:51:12.586420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:13.586548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:13.664: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  E0314 07:51:14.586823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:15.587083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:15.665: INFO: Get pod liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a in namespace container-probe-8483
  Mar 14 07:51:15.665: INFO: Restart count of pod container-probe-8483/liveness-1a6dd0c8-fd0a-43e3-a155-a311fa37416a is now 5 (2m28.151882512s elapsed)
  Mar 14 07:51:15.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:51:15.667
  STEP: Destroying namespace "container-probe-8483" for this suite. @ 03/14/24 07:51:15.675
• [150.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 03/14/24 07:51:15.68
  Mar 14 07:51:15.680: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:51:15.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:51:15.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:51:15.69
  STEP: validating cluster-info @ 03/14/24 07:51:15.691
  Mar 14 07:51:15.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-3521 cluster-info'
  Mar 14 07:51:15.732: INFO: stderr: ""
  Mar 14 07:51:15.732: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Mar 14 07:51:15.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3521" for this suite. @ 03/14/24 07:51:15.733
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 03/14/24 07:51:15.736
  Mar 14 07:51:15.736: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename daemonsets @ 03/14/24 07:51:15.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:51:15.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:51:15.744
  Mar 14 07:51:15.753: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 03/14/24 07:51:15.755
  Mar 14 07:51:15.758: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:51:15.758: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 03/14/24 07:51:15.758
  Mar 14 07:51:15.766: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:51:15.766: INFO: Node k8s-worker02 is running 0 daemon pod, expected 1
  E0314 07:51:16.587854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:16.768: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Mar 14 07:51:16.768: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 03/14/24 07:51:16.769
  Mar 14 07:51:16.777: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Mar 14 07:51:16.777: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0314 07:51:17.588757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:17.780: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:51:17.780: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 03/14/24 07:51:17.78
  Mar 14 07:51:17.785: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:51:17.785: INFO: Node k8s-worker02 is running 0 daemon pod, expected 1
  E0314 07:51:18.589294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:18.787: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:51:18.787: INFO: Node k8s-worker02 is running 0 daemon pod, expected 1
  E0314 07:51:19.589381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:19.787: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Mar 14 07:51:19.787: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 03/14/24 07:51:19.789
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1305, will wait for the garbage collector to delete the pods @ 03/14/24 07:51:19.789
  Mar 14 07:51:19.843: INFO: Deleting DaemonSet.extensions daemon-set took: 2.465688ms
  Mar 14 07:51:19.944: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.86813ms
  E0314 07:51:20.589587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:21.590870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:22.445: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:51:22.445: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 14 07:51:22.446: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40296"},"items":null}

  Mar 14 07:51:22.447: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40296"},"items":null}

  Mar 14 07:51:22.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1305" for this suite. @ 03/14/24 07:51:22.459
• [6.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 03/14/24 07:51:22.462
  Mar 14 07:51:22.462: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename daemonsets @ 03/14/24 07:51:22.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:51:22.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:51:22.471
  STEP: Creating a simple DaemonSet "daemon-set" @ 03/14/24 07:51:22.479
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/14/24 07:51:22.481
  Mar 14 07:51:22.484: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:51:22.484: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:51:22.591581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:23.488: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 14 07:51:23.488: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:51:23.592337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:24.487: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 14 07:51:24.487: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 03/14/24 07:51:24.488
  Mar 14 07:51:24.497: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Mar 14 07:51:24.497: INFO: Node k8s-worker02 is running 0 daemon pod, expected 1
  E0314 07:51:24.593010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:25.500: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Mar 14 07:51:25.500: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 03/14/24 07:51:25.5
  STEP: Deleting DaemonSet "daemon-set" @ 03/14/24 07:51:25.503
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1641, will wait for the garbage collector to delete the pods @ 03/14/24 07:51:25.503
  Mar 14 07:51:25.556: INFO: Deleting DaemonSet.extensions daemon-set took: 2.317843ms
  E0314 07:51:25.593020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:25.657: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.731402ms
  E0314 07:51:26.593737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:27.594600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:28.459: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Mar 14 07:51:28.459: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Mar 14 07:51:28.460: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40426"},"items":null}

  Mar 14 07:51:28.461: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40426"},"items":null}

  Mar 14 07:51:28.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1641" for this suite. @ 03/14/24 07:51:28.466
• [6.007 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 03/14/24 07:51:28.47
  Mar 14 07:51:28.470: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 03/14/24 07:51:28.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:51:28.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:51:28.478
  STEP: create the container to handle the HTTPGet hook request. @ 03/14/24 07:51:28.481
  E0314 07:51:28.595525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:29.596455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 03/14/24 07:51:30.489
  E0314 07:51:30.596294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:31.596486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 03/14/24 07:51:32.496
  STEP: delete the pod with lifecycle hook @ 03/14/24 07:51:32.499
  E0314 07:51:32.597514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:33.598404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:34.505: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1642" for this suite. @ 03/14/24 07:51:34.507
• [6.041 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 03/14/24 07:51:34.51
  Mar 14 07:51:34.510: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:51:34.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:51:34.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:51:34.517
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7237 @ 03/14/24 07:51:34.518
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 03/14/24 07:51:34.523
  STEP: creating service externalsvc in namespace services-7237 @ 03/14/24 07:51:34.523
  STEP: creating replication controller externalsvc in namespace services-7237 @ 03/14/24 07:51:34.527
  I0314 07:51:34.530728      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-7237, replica count: 2
  E0314 07:51:34.598552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:35.598853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:36.599626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 07:51:37.581710      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 03/14/24 07:51:37.583
  Mar 14 07:51:37.589: INFO: Creating new exec pod
  E0314 07:51:37.599945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:38.600482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:39.598: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7237 exec execpodrggf8 -- /bin/sh -x -c nslookup nodeport-service.services-7237.svc.cluster.local'
  E0314 07:51:39.600642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:39.706: INFO: stderr: "+ nslookup nodeport-service.services-7237.svc.cluster.local\n"
  Mar 14 07:51:39.706: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-7237.svc.cluster.local\tcanonical name = externalsvc.services-7237.svc.cluster.local.\nName:\texternalsvc.services-7237.svc.cluster.local\nAddress: 10.96.230.173\n\n"
  Mar 14 07:51:39.706: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-7237, will wait for the garbage collector to delete the pods @ 03/14/24 07:51:39.709
  Mar 14 07:51:39.764: INFO: Deleting ReplicationController externalsvc took: 1.95168ms
  Mar 14 07:51:39.864: INFO: Terminating ReplicationController externalsvc pods took: 100.331609ms
  E0314 07:51:40.601303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:41.601588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:42.570: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-7237" for this suite. @ 03/14/24 07:51:42.573
• [8.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 03/14/24 07:51:42.576
  Mar 14 07:51:42.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename downward-api @ 03/14/24 07:51:42.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:51:42.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:51:42.583
  STEP: Creating a pod to test downward api env vars @ 03/14/24 07:51:42.584
  E0314 07:51:42.602253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:43.602454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:51:44.59
  Mar 14 07:51:44.591: INFO: Trying to get logs from node k8s-worker01 pod downward-api-d8b86a8e-3c9d-4bd4-94c4-1101c8763877 container dapi-container: <nil>
  STEP: delete the pod @ 03/14/24 07:51:44.594
  Mar 14 07:51:44.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4317" for this suite. @ 03/14/24 07:51:44.6
• [2.026 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 03/14/24 07:51:44.602
  Mar 14 07:51:44.602: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename container-runtime @ 03/14/24 07:51:44.602
  E0314 07:51:44.603282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:51:44.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:51:44.608
  STEP: create the container @ 03/14/24 07:51:44.609
  W0314 07:51:44.612204      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 03/14/24 07:51:44.612
  E0314 07:51:45.604049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:46.604630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 03/14/24 07:51:46.617
  STEP: the container should be terminated @ 03/14/24 07:51:46.618
  STEP: the termination message should be set @ 03/14/24 07:51:46.618
  Mar 14 07:51:46.618: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 03/14/24 07:51:46.618
  Mar 14 07:51:46.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7036" for this suite. @ 03/14/24 07:51:46.625
• [2.026 seconds]
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 03/14/24 07:51:46.628
  Mar 14 07:51:46.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename dns @ 03/14/24 07:51:46.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:51:46.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:51:46.635
  STEP: Creating a test headless service @ 03/14/24 07:51:46.636
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6542.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6542.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6542.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6542.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6542.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6542.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6542.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6542.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6542.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 49.68.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.68.49_udp@PTR;check="$$(dig +tcp +noall +answer +search 49.68.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.68.49_tcp@PTR;sleep 1; done
   @ 03/14/24 07:51:46.641
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6542.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6542.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6542.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6542.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6542.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6542.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6542.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6542.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6542.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6542.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 49.68.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.68.49_udp@PTR;check="$$(dig +tcp +noall +answer +search 49.68.96.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.96.68.49_tcp@PTR;sleep 1; done
   @ 03/14/24 07:51:46.641
  STEP: creating a pod to probe DNS @ 03/14/24 07:51:46.641
  STEP: submitting the pod to kubernetes @ 03/14/24 07:51:46.641
  E0314 07:51:47.605199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:48.605437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/14/24 07:51:48.65
  STEP: looking for the results for each expected name from probers @ 03/14/24 07:51:48.651
  Mar 14 07:51:48.653: INFO: Unable to read wheezy_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:48.654: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:48.655: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:48.656: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:48.662: INFO: Unable to read jessie_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:48.663: INFO: Unable to read jessie_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:48.664: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:48.665: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:48.669: INFO: Lookups using dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a failed for: [wheezy_udp@dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_udp@dns-test-service.dns-6542.svc.cluster.local jessie_tcp@dns-test-service.dns-6542.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local]

  Mar 14 07:51:48.671: INFO: Pod client logs for webserver: 
  Mar 14 07:51:48.673: INFO: Pod client logs for querier: 
  Mar 14 07:51:48.675: INFO: Pod client logs for jessie-querier: 
  E0314 07:51:49.605536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:50.605624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:51.605765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:52.605913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:53.606072      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:53.678: INFO: Unable to read wheezy_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:53.679: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:53.680: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:53.681: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:53.686: INFO: Unable to read jessie_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:53.688: INFO: Unable to read jessie_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:53.689: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:53.690: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:53.694: INFO: Lookups using dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a failed for: [wheezy_udp@dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_udp@dns-test-service.dns-6542.svc.cluster.local jessie_tcp@dns-test-service.dns-6542.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local]

  Mar 14 07:51:53.696: INFO: Pod client logs for webserver: 
  Mar 14 07:51:53.698: INFO: Pod client logs for querier: 
  Mar 14 07:51:53.700: INFO: Pod client logs for jessie-querier: 
  E0314 07:51:54.606167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:55.606263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:56.606398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:57.606456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:51:58.607804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:51:58.677: INFO: Unable to read wheezy_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:58.678: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:58.680: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:58.681: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:58.685: INFO: Unable to read jessie_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:58.686: INFO: Unable to read jessie_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:58.687: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:58.688: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:51:58.692: INFO: Lookups using dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a failed for: [wheezy_udp@dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_udp@dns-test-service.dns-6542.svc.cluster.local jessie_tcp@dns-test-service.dns-6542.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local]

  Mar 14 07:51:58.694: INFO: Pod client logs for webserver: 
  Mar 14 07:51:58.696: INFO: Pod client logs for querier: 
  Mar 14 07:51:58.698: INFO: Pod client logs for jessie-querier: 
  E0314 07:51:59.608398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:00.608701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:01.608678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:02.609396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:03.610427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:52:03.677: INFO: Unable to read wheezy_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:03.678: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:03.680: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:03.681: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:03.686: INFO: Unable to read jessie_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:03.687: INFO: Unable to read jessie_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:03.688: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:03.689: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:03.693: INFO: Lookups using dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a failed for: [wheezy_udp@dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_udp@dns-test-service.dns-6542.svc.cluster.local jessie_tcp@dns-test-service.dns-6542.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local]

  Mar 14 07:52:03.694: INFO: Pod client logs for webserver: 
  Mar 14 07:52:03.696: INFO: Pod client logs for querier: 
  Mar 14 07:52:03.699: INFO: Pod client logs for jessie-querier: 
  E0314 07:52:04.611045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:05.611943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:06.612886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:07.613743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:08.614031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:52:08.677: INFO: Unable to read wheezy_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:08.679: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:08.680: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:08.681: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:08.686: INFO: Unable to read jessie_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:08.690: INFO: Unable to read jessie_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:08.691: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:08.692: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:08.696: INFO: Lookups using dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a failed for: [wheezy_udp@dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_udp@dns-test-service.dns-6542.svc.cluster.local jessie_tcp@dns-test-service.dns-6542.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local]

  Mar 14 07:52:08.699: INFO: Pod client logs for webserver: 
  Mar 14 07:52:08.700: INFO: Pod client logs for querier: 
  Mar 14 07:52:08.703: INFO: Pod client logs for jessie-querier: 
  E0314 07:52:09.614121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:10.614132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:11.614244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:12.614769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:13.615555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:52:13.677: INFO: Unable to read wheezy_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:13.678: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:13.679: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:13.680: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:13.685: INFO: Unable to read jessie_udp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:13.686: INFO: Unable to read jessie_tcp@dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:13.687: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:13.688: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local from pod dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a: the server could not find the requested resource (get pods dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a)
  Mar 14 07:52:13.692: INFO: Lookups using dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a failed for: [wheezy_udp@dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@dns-test-service.dns-6542.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_udp@dns-test-service.dns-6542.svc.cluster.local jessie_tcp@dns-test-service.dns-6542.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6542.svc.cluster.local]

  Mar 14 07:52:13.694: INFO: Pod client logs for webserver: 
  Mar 14 07:52:13.696: INFO: Pod client logs for querier: 
  Mar 14 07:52:13.698: INFO: Pod client logs for jessie-querier: 
  E0314 07:52:14.616495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:15.616845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:16.617034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:17.617172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:18.617789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:52:18.692: INFO: DNS probes using dns-6542/dns-test-42891c04-4a30-4af7-88ae-aae9e16d699a succeeded

  Mar 14 07:52:18.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:52:18.693
  STEP: deleting the test service @ 03/14/24 07:52:18.698
  STEP: deleting the test headless service @ 03/14/24 07:52:18.712
  STEP: Destroying namespace "dns-6542" for this suite. @ 03/14/24 07:52:18.717
• [32.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 03/14/24 07:52:18.721
  Mar 14 07:52:18.721: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:52:18.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:52:18.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:52:18.729
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 03/14/24 07:52:18.731
  E0314 07:52:19.618557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:20.618640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:52:20.738
  Mar 14 07:52:20.739: INFO: Trying to get logs from node k8s-worker02 pod pod-dff609fb-57e1-43dd-9aa7-f43b7ea894ef container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:52:20.743
  Mar 14 07:52:20.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5814" for this suite. @ 03/14/24 07:52:20.75
• [2.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 03/14/24 07:52:20.762
  Mar 14 07:52:20.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:52:20.762
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:52:20.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:52:20.769
  STEP: Creating secret with name s-test-opt-del-b645e5f5-1b1f-48de-9f90-1078cd749e4c @ 03/14/24 07:52:20.771
  STEP: Creating secret with name s-test-opt-upd-83c8a361-e326-4b9e-b185-33f51ff61453 @ 03/14/24 07:52:20.773
  STEP: Creating the pod @ 03/14/24 07:52:20.774
  E0314 07:52:21.619398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:22.619551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-b645e5f5-1b1f-48de-9f90-1078cd749e4c @ 03/14/24 07:52:22.788
  STEP: Updating secret s-test-opt-upd-83c8a361-e326-4b9e-b185-33f51ff61453 @ 03/14/24 07:52:22.79
  STEP: Creating secret with name s-test-opt-create-c4253690-74b1-45c0-a739-bf1a42ac6bfa @ 03/14/24 07:52:22.792
  STEP: waiting to observe update in volume @ 03/14/24 07:52:22.793
  E0314 07:52:23.619808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:24.620053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:25.620295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:26.620412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:27.620427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:28.620526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:29.621509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:30.621600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:31.621649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:32.621725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:33.621885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:34.621991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:35.622933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:36.623073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:37.623890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:38.624060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:39.624774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:40.624903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:41.625088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:42.625219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:43.625314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:44.625431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:45.626363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:46.626944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:47.627074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:48.627587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:49.627999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:50.628219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:51.628431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:52.628547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:53.629558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:54.629675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:55.630151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:56.630272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:57.630746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:58.630905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:52:59.631871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:00.632159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:01.632252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:02.632519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:03.632820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:04.633007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:05.633464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:06.633831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:07.633908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:08.634911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:09.635863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:10.635737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:11.635927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:12.636078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:13.636275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:14.636415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:15.636668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:16.636809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:17.637120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:18.637551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:19.637611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:20.637678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:21.637777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:22.637825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:23.638289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:24.638799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:25.639167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:26.639431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:27.639722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:28.640583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:29.641582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:30.641891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:31.642721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:32.642803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:33.643395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:34.643619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:35.643705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:36.644476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:37.645414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:38.646329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:39.646732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:40.647662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:53:40.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2517" for this suite. @ 03/14/24 07:53:40.944
• [80.185 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 03/14/24 07:53:40.948
  Mar 14 07:53:40.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:53:40.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:53:40.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:53:40.955
  STEP: validating api versions @ 03/14/24 07:53:40.957
  Mar 14 07:53:40.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-1898 api-versions'
  Mar 14 07:53:40.997: INFO: stderr: ""
  Mar 14 07:53:40.997: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Mar 14 07:53:40.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1898" for this suite. @ 03/14/24 07:53:40.999
• [0.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 03/14/24 07:53:41.003
  Mar 14 07:53:41.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 07:53:41.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:53:41.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:53:41.013
  STEP: Creating configMap with name configmap-test-volume-958dbb1f-c737-4d7c-8201-8fdc3d9b00ef @ 03/14/24 07:53:41.014
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:53:41.016
  E0314 07:53:41.648644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:42.648813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:43.649248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:44.649410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:53:45.025
  Mar 14 07:53:45.026: INFO: Trying to get logs from node k8s-worker01 pod pod-configmaps-e7157e45-5f79-4c3f-860e-d721d8265b7f container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:53:45.029
  Mar 14 07:53:45.033: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1037" for this suite. @ 03/14/24 07:53:45.034
• [4.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 03/14/24 07:53:45.037
  Mar 14 07:53:45.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename job @ 03/14/24 07:53:45.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:53:45.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:53:45.043
  STEP: Creating a job @ 03/14/24 07:53:45.044
  STEP: Ensuring job reaches completions @ 03/14/24 07:53:45.046
  E0314 07:53:45.649674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:46.649923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:47.650228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:48.651344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:49.652388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:50.652682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:51.652913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:52.653127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:53.653223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:54.653403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:53:55.048: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6627" for this suite. @ 03/14/24 07:53:55.049
• [10.014 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 03/14/24 07:53:55.052
  Mar 14 07:53:55.052: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename deployment @ 03/14/24 07:53:55.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:53:55.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:53:55.059
  Mar 14 07:53:55.063: INFO: Pod name rollover-pod: Found 0 pods out of 1
  E0314 07:53:55.653743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:56.653908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:57.654062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:58.654184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:53:59.654332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:00.065: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/14/24 07:54:00.065
  Mar 14 07:54:00.065: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0314 07:54:00.654558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:01.655136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:02.068: INFO: Creating deployment "test-rollover-deployment"
  Mar 14 07:54:02.072: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  E0314 07:54:02.655135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:03.655231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:04.075: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Mar 14 07:54:04.078: INFO: Ensure that both replica sets have 1 created replica
  Mar 14 07:54:04.080: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Mar 14 07:54:04.084: INFO: Updating deployment test-rollover-deployment
  Mar 14 07:54:04.084: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0314 07:54:04.655519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:05.655899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:06.088: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Mar 14 07:54:06.090: INFO: Make sure deployment "test-rollover-deployment" is complete
  Mar 14 07:54:06.093: INFO: all replica sets need to contain the pod-template-hash label
  Mar 14 07:54:06.093: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-df7c4dd5d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0314 07:54:06.656766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:07.656963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:08.096: INFO: all replica sets need to contain the pod-template-hash label
  Mar 14 07:54:08.096: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-df7c4dd5d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0314 07:54:08.657944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:09.658099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:10.096: INFO: all replica sets need to contain the pod-template-hash label
  Mar 14 07:54:10.096: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-df7c4dd5d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0314 07:54:10.658994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:11.659093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:12.096: INFO: all replica sets need to contain the pod-template-hash label
  Mar 14 07:54:12.096: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-df7c4dd5d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0314 07:54:12.659909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:13.660008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:14.096: INFO: all replica sets need to contain the pod-template-hash label
  Mar 14 07:54:14.096: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.March, 14, 7, 54, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.March, 14, 7, 54, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-df7c4dd5d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0314 07:54:14.660608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:15.661483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:16.096: INFO: 
  Mar 14 07:54:16.096: INFO: Ensure that both old replica sets have no replicas
  Mar 14 07:54:16.099: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3286",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0d1d977-c86b-4193-b612-64b5437ba366",
      ResourceVersion: (string) (len=5) "41371",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845999642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999642,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-rollover-deployment-df7c4dd5d\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Mar 14 07:54:16.109: INFO: New ReplicaSet "test-rollover-deployment-df7c4dd5d" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-rollover-deployment-df7c4dd5d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3286",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2def01d4-44b2-4032-ae45-3450978697d8",
      ResourceVersion: (string) (len=5) "41361",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845999644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "df7c4dd5d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e0d1d977-c86b-4193-b612-64b5437ba366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 30 64 31 64 39  37 37 2d 63 38 36 62 2d  |\"e0d1d977-c86b-|
              00000120  34 31 39 33 2d 62 36 31  32 2d 36 34 62 35 34 33  |4193-b612-64b543|
              00000130  37 62 61 33 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7ba366\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "df7c4dd5d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "df7c4dd5d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:54:16.110: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Mar 14 07:54:16.110: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3286",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f5f1c23-43b8-4ed4-83e1-c27a0917039d",
      ResourceVersion: (string) (len=5) "41370",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845999635,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e0d1d977-c86b-4193-b612-64b5437ba366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999635,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 30 64 31 64 39 37 37  2d 63 38 36 62 2d 34 31  |e0d1d977-c86b-41|
              000000c0  39 33 2d 62 36 31 32 2d  36 34 62 35 34 33 37 62  |93-b612-64b5437b|
              000000d0  61 33 36 36 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |a366\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999655,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=57) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:54:16.112: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3286",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a34ac939-a83e-48f6-a8ac-fd56c965f077",
      ResourceVersion: (string) (len=5) "41329",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845999642,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e0d1d977-c86b-4193-b612-64b5437ba366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 30 64 31 64 39  37 37 2d 63 38 36 62 2d  |\"e0d1d977-c86b-|
              00000120  34 31 39 33 2d 62 36 31  32 2d 36 34 62 35 34 33  |4193-b612-64b543|
              00000130  37 62 61 33 36 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |7ba366\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Mar 14 07:54:16.116: INFO: Pod "test-rollover-deployment-df7c4dd5d-pkf27" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rollover-deployment-df7c4dd5d-pkf27",
      GenerateName: (string) (len=35) "test-rollover-deployment-df7c4dd5d-",
      Namespace: (string) (len=15) "deployment-3286",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2490e46d-e13e-41ac-83d5-5736a304ab4a",
      ResourceVersion: (string) (len=5) "41341",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845999644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "df7c4dd5d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5ff0fe8aefa96731f3f4e23df36fa2c05f0867f9a5f20c850e0859dcc3838811",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.244.79.66/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.244.79.66/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-rollover-deployment-df7c4dd5d",
          UID: (types.UID) (len=36) "2def01d4-44b2-4032-ae45-3450978697d8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 64  65 66 30 31 64 34 2d 34  |d\":\"2def01d4-4|
              00000090  34 62 32 2d 34 30 33 32  2d 61 65 34 35 2d 33 34  |4b2-4032-ae45-34|
              000000a0  35 30 39 37 38 36 39 37  64 38 5c 22 7d 22 3a 7b  |50978697d8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 34 34 2e 37  39 2e 36 36 5c 22 7d 22  |10.244.79.66\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8zskp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8zskp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=12) "k8s-worker01",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999645,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63845999644,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.132.14",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.244.79.66",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.79.66"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63845999644,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63845999644,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=55) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost:2.45",
          ImageID: (string) (len=122) "hub.oepkgs.net/nestos/nestos-test/sonobuoy/agnhost@sha256:8f07c07228b54f5d644c14241ad3e483b999c5d3a78f7580a6252c8ab42f2b66",
          ContainerID: (string) (len=72) "cri-o://6e022afb20316375bfa9edbb3a8a9d9b01eb662742f39b38ddbce5d2099108e6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Mar 14 07:54:16.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3286" for this suite. @ 03/14/24 07:54:16.121
• [21.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 03/14/24 07:54:16.129
  Mar 14 07:54:16.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:54:16.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:54:16.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:54:16.137
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7713 @ 03/14/24 07:54:16.138
  STEP: changing the ExternalName service to type=NodePort @ 03/14/24 07:54:16.14
  STEP: creating replication controller externalname-service in namespace services-7713 @ 03/14/24 07:54:16.145
  I0314 07:54:16.150091      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-7713, replica count: 2
  E0314 07:54:16.661858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:17.662859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:18.663049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 07:54:19.200720      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 14 07:54:19.200: INFO: Creating new exec pod
  E0314 07:54:19.663852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:20.664031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:21.664142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:22.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7713 exec execpod26wsm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Mar 14 07:54:22.296: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Mar 14 07:54:22.296: INFO: stdout: ""
  E0314 07:54:22.664820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:23.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7713 exec execpod26wsm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Mar 14 07:54:23.378: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Mar 14 07:54:23.378: INFO: stdout: "externalname-service-qrknp"
  Mar 14 07:54:23.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7713 exec execpod26wsm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.168.53 80'
  Mar 14 07:54:23.464: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.168.53 80\nConnection to 10.96.168.53 80 port [tcp/http] succeeded!\n"
  Mar 14 07:54:23.464: INFO: stdout: ""
  E0314 07:54:23.664880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:24.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7713 exec execpod26wsm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.168.53 80'
  Mar 14 07:54:24.549: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.168.53 80\nConnection to 10.96.168.53 80 port [tcp/http] succeeded!\n"
  Mar 14 07:54:24.549: INFO: stdout: "externalname-service-qrknp"
  Mar 14 07:54:24.549: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7713 exec execpod26wsm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.132.11 30771'
  Mar 14 07:54:24.636: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.132.11 30771\nConnection to 192.168.132.11 30771 port [tcp/*] succeeded!\n"
  Mar 14 07:54:24.636: INFO: stdout: "externalname-service-c7sdv"
  Mar 14 07:54:24.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-7713 exec execpod26wsm -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.132.15 30771'
  E0314 07:54:24.665435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:24.716: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.132.15 30771\nConnection to 192.168.132.15 30771 port [tcp/*] succeeded!\n"
  Mar 14 07:54:24.716: INFO: stdout: "externalname-service-c7sdv"
  Mar 14 07:54:24.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 07:54:24.718: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-7713" for this suite. @ 03/14/24 07:54:24.726
• [8.599 seconds]
------------------------------
S
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 03/14/24 07:54:24.729
  Mar 14 07:54:24.729: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 03/14/24 07:54:24.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:54:24.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:54:24.736
  STEP: Setting up the test @ 03/14/24 07:54:24.737
  STEP: Creating hostNetwork=false pod @ 03/14/24 07:54:24.737
  E0314 07:54:25.666257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:26.666481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 03/14/24 07:54:26.745
  E0314 07:54:27.667220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:28.667362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 03/14/24 07:54:28.752
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 03/14/24 07:54:28.752
  Mar 14 07:54:28.752: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:28.752: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:28.753: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:28.753: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Mar 14 07:54:28.797: INFO: Exec stderr: ""
  Mar 14 07:54:28.797: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:28.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:28.798: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:28.798: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Mar 14 07:54:28.831: INFO: Exec stderr: ""
  Mar 14 07:54:28.831: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:28.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:28.832: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:28.832: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Mar 14 07:54:28.866: INFO: Exec stderr: ""
  Mar 14 07:54:28.866: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:28.866: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:28.866: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:28.866: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Mar 14 07:54:28.904: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 03/14/24 07:54:28.904
  Mar 14 07:54:28.904: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:28.904: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:28.905: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:28.905: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Mar 14 07:54:28.935: INFO: Exec stderr: ""
  Mar 14 07:54:28.935: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:28.935: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:28.936: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:28.936: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Mar 14 07:54:28.971: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 03/14/24 07:54:28.971
  Mar 14 07:54:28.971: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:28.971: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:28.972: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:28.972: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Mar 14 07:54:29.011: INFO: Exec stderr: ""
  Mar 14 07:54:29.011: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:29.011: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:29.011: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:29.011: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Mar 14 07:54:29.047: INFO: Exec stderr: ""
  Mar 14 07:54:29.047: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:29.047: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:29.048: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:29.048: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Mar 14 07:54:29.086: INFO: Exec stderr: ""
  Mar 14 07:54:29.086: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-2780 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:54:29.086: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:54:29.087: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:54:29.087: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-2780/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Mar 14 07:54:29.124: INFO: Exec stderr: ""
  Mar 14 07:54:29.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-2780" for this suite. @ 03/14/24 07:54:29.126
• [4.399 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 03/14/24 07:54:29.129
  Mar 14 07:54:29.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:54:29.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:54:29.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:54:29.136
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3360 @ 03/14/24 07:54:29.137
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 03/14/24 07:54:29.14
  STEP: creating service externalsvc in namespace services-3360 @ 03/14/24 07:54:29.14
  STEP: creating replication controller externalsvc in namespace services-3360 @ 03/14/24 07:54:29.145
  I0314 07:54:29.147668      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3360, replica count: 2
  E0314 07:54:29.667468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:30.667586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:31.667887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 07:54:32.199607      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 03/14/24 07:54:32.201
  Mar 14 07:54:32.205: INFO: Creating new exec pod
  E0314 07:54:32.668277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:33.668378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:34.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-3360 exec execpodwxxnw -- /bin/sh -x -c nslookup clusterip-service.services-3360.svc.cluster.local'
  Mar 14 07:54:34.313: INFO: stderr: "+ nslookup clusterip-service.services-3360.svc.cluster.local\n"
  Mar 14 07:54:34.313: INFO: stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-3360.svc.cluster.local\tcanonical name = externalsvc.services-3360.svc.cluster.local.\nName:\texternalsvc.services-3360.svc.cluster.local\nAddress: 10.96.244.102\n\n"
  Mar 14 07:54:34.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-3360, will wait for the garbage collector to delete the pods @ 03/14/24 07:54:34.317
  Mar 14 07:54:34.371: INFO: Deleting ReplicationController externalsvc took: 1.622064ms
  Mar 14 07:54:34.471: INFO: Terminating ReplicationController externalsvc pods took: 100.54361ms
  E0314 07:54:34.669141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:35.669454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:36.669681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:37.478: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-3360" for this suite. @ 03/14/24 07:54:37.481
• [8.354 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 03/14/24 07:54:37.484
  Mar 14 07:54:37.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:54:37.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:54:37.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:54:37.489
  STEP: running the image hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4 @ 03/14/24 07:54:37.491
  Mar 14 07:54:37.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4444 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4'
  Mar 14 07:54:37.534: INFO: stderr: ""
  Mar 14 07:54:37.534: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 03/14/24 07:54:37.534
  Mar 14 07:54:37.537: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-4444 delete pods e2e-test-httpd-pod'
  E0314 07:54:37.669723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:38.670049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:39.458: INFO: stderr: ""
  Mar 14 07:54:39.458: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Mar 14 07:54:39.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4444" for this suite. @ 03/14/24 07:54:39.46
• [1.978 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 03/14/24 07:54:39.462
  Mar 14 07:54:39.462: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename replicaset @ 03/14/24 07:54:39.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:54:39.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:54:39.468
  STEP: Create a Replicaset @ 03/14/24 07:54:39.47
  STEP: Verify that the required pods have come up. @ 03/14/24 07:54:39.472
  Mar 14 07:54:39.474: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0314 07:54:39.670345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:40.670761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:41.670890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:42.670987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:43.671070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:44.476: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 03/14/24 07:54:44.476
  STEP: Getting /status @ 03/14/24 07:54:44.476
  Mar 14 07:54:44.478: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 03/14/24 07:54:44.478
  Mar 14 07:54:44.482: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 03/14/24 07:54:44.482
  Mar 14 07:54:44.483: INFO: Observed &ReplicaSet event: ADDED
  Mar 14 07:54:44.483: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 14 07:54:44.483: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 14 07:54:44.484: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 14 07:54:44.484: INFO: Found replicaset test-rs in namespace replicaset-2522 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Mar 14 07:54:44.484: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 03/14/24 07:54:44.484
  Mar 14 07:54:44.484: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Mar 14 07:54:44.487: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 03/14/24 07:54:44.487
  Mar 14 07:54:44.487: INFO: Observed &ReplicaSet event: ADDED
  Mar 14 07:54:44.487: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 14 07:54:44.487: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 14 07:54:44.487: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 14 07:54:44.487: INFO: Observed replicaset test-rs in namespace replicaset-2522 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Mar 14 07:54:44.488: INFO: Observed &ReplicaSet event: MODIFIED
  Mar 14 07:54:44.488: INFO: Found replicaset test-rs in namespace replicaset-2522 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Mar 14 07:54:44.488: INFO: Replicaset test-rs has a patched status
  Mar 14 07:54:44.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2522" for this suite. @ 03/14/24 07:54:44.489
• [5.029 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 03/14/24 07:54:44.492
  Mar 14 07:54:44.492: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename controllerrevisions @ 03/14/24 07:54:44.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:54:44.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:54:44.498
  STEP: Creating DaemonSet "e2e-pkh2m-daemon-set" @ 03/14/24 07:54:44.505
  STEP: Check that daemon pods launch on every node of the cluster. @ 03/14/24 07:54:44.508
  Mar 14 07:54:44.510: INFO: Number of nodes with available pods controlled by daemonset e2e-pkh2m-daemon-set: 0
  Mar 14 07:54:44.510: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:54:44.671984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:45.513: INFO: Number of nodes with available pods controlled by daemonset e2e-pkh2m-daemon-set: 1
  Mar 14 07:54:45.513: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:54:45.673027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:46.514: INFO: Number of nodes with available pods controlled by daemonset e2e-pkh2m-daemon-set: 2
  Mar 14 07:54:46.514: INFO: Node k8s-master01 is running 0 daemon pod, expected 1
  E0314 07:54:46.673723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:47.515: INFO: Number of nodes with available pods controlled by daemonset e2e-pkh2m-daemon-set: 3
  Mar 14 07:54:47.515: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-pkh2m-daemon-set
  STEP: Confirm DaemonSet "e2e-pkh2m-daemon-set" successfully created with "daemonset-name=e2e-pkh2m-daemon-set" label @ 03/14/24 07:54:47.516
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-pkh2m-daemon-set" @ 03/14/24 07:54:47.518
  Mar 14 07:54:47.519: INFO: Located ControllerRevision: "e2e-pkh2m-daemon-set-79d59bfc58"
  STEP: Patching ControllerRevision "e2e-pkh2m-daemon-set-79d59bfc58" @ 03/14/24 07:54:47.52
  Mar 14 07:54:47.525: INFO: e2e-pkh2m-daemon-set-79d59bfc58 has been patched
  STEP: Create a new ControllerRevision @ 03/14/24 07:54:47.525
  Mar 14 07:54:47.527: INFO: Created ControllerRevision: e2e-pkh2m-daemon-set-cd849744d
  STEP: Confirm that there are two ControllerRevisions @ 03/14/24 07:54:47.527
  Mar 14 07:54:47.527: INFO: Requesting list of ControllerRevisions to confirm quantity
  Mar 14 07:54:47.528: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-pkh2m-daemon-set-79d59bfc58" @ 03/14/24 07:54:47.528
  STEP: Confirm that there is only one ControllerRevision @ 03/14/24 07:54:47.53
  Mar 14 07:54:47.530: INFO: Requesting list of ControllerRevisions to confirm quantity
  Mar 14 07:54:47.531: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-pkh2m-daemon-set-cd849744d" @ 03/14/24 07:54:47.532
  Mar 14 07:54:47.535: INFO: e2e-pkh2m-daemon-set-cd849744d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 03/14/24 07:54:47.535
  W0314 07:54:47.538046      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 03/14/24 07:54:47.538
  Mar 14 07:54:47.538: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0314 07:54:47.674380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:48.539: INFO: Requesting list of ControllerRevisions to confirm quantity
  Mar 14 07:54:48.541: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-pkh2m-daemon-set-cd849744d=updated" @ 03/14/24 07:54:48.541
  STEP: Confirm that there is only one ControllerRevision @ 03/14/24 07:54:48.543
  Mar 14 07:54:48.543: INFO: Requesting list of ControllerRevisions to confirm quantity
  Mar 14 07:54:48.544: INFO: Found 1 ControllerRevisions
  Mar 14 07:54:48.545: INFO: ControllerRevision "e2e-pkh2m-daemon-set-74657bb765" has revision 3
  STEP: Deleting DaemonSet "e2e-pkh2m-daemon-set" @ 03/14/24 07:54:48.546
  STEP: deleting DaemonSet.extensions e2e-pkh2m-daemon-set in namespace controllerrevisions-8552, will wait for the garbage collector to delete the pods @ 03/14/24 07:54:48.546
  Mar 14 07:54:48.600: INFO: Deleting DaemonSet.extensions e2e-pkh2m-daemon-set took: 2.37518ms
  E0314 07:54:48.674960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:48.701: INFO: Terminating DaemonSet.extensions e2e-pkh2m-daemon-set pods took: 100.264291ms
  E0314 07:54:49.676022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:54:49.902: INFO: Number of nodes with available pods controlled by daemonset e2e-pkh2m-daemon-set: 0
  Mar 14 07:54:49.902: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-pkh2m-daemon-set
  Mar 14 07:54:49.903: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41896"},"items":null}

  Mar 14 07:54:49.904: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41896"},"items":null}

  Mar 14 07:54:49.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8552" for this suite. @ 03/14/24 07:54:49.909
• [5.420 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 03/14/24 07:54:49.912
  Mar 14 07:54:49.912: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename configmap @ 03/14/24 07:54:49.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:54:49.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:54:49.921
  STEP: Creating configMap with name configmap-test-volume-26e8fd73-bbe4-47c1-8735-6d0d82a61bc9 @ 03/14/24 07:54:49.922
  STEP: Creating a pod to test consume configMaps @ 03/14/24 07:54:49.924
  E0314 07:54:50.676119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:51.677086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:54:51.93
  Mar 14 07:54:51.931: INFO: Trying to get logs from node k8s-worker02 pod pod-configmaps-6f888e38-6b6a-426e-8c1e-7872a5659541 container agnhost-container: <nil>
  STEP: delete the pod @ 03/14/24 07:54:51.934
  Mar 14 07:54:51.939: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7838" for this suite. @ 03/14/24 07:54:51.941
• [2.030 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 03/14/24 07:54:51.943
  Mar 14 07:54:51.943: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename endpointslice @ 03/14/24 07:54:51.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:54:51.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:54:51.95
  STEP: getting /apis @ 03/14/24 07:54:51.952
  STEP: getting /apis/discovery.k8s.io @ 03/14/24 07:54:51.955
  STEP: getting /apis/discovery.k8s.iov1 @ 03/14/24 07:54:51.955
  STEP: creating @ 03/14/24 07:54:51.956
  STEP: getting @ 03/14/24 07:54:51.961
  STEP: listing @ 03/14/24 07:54:51.961
  STEP: watching @ 03/14/24 07:54:51.962
  Mar 14 07:54:51.962: INFO: starting watch
  STEP: cluster-wide listing @ 03/14/24 07:54:51.963
  STEP: cluster-wide watching @ 03/14/24 07:54:51.964
  Mar 14 07:54:51.964: INFO: starting watch
  STEP: patching @ 03/14/24 07:54:51.965
  STEP: updating @ 03/14/24 07:54:51.967
  Mar 14 07:54:51.970: INFO: waiting for watch events with expected annotations
  Mar 14 07:54:51.970: INFO: saw patched and updated annotations
  STEP: deleting @ 03/14/24 07:54:51.97
  STEP: deleting a collection @ 03/14/24 07:54:51.974
  Mar 14 07:54:51.978: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8581" for this suite. @ 03/14/24 07:54:51.98
• [0.039 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 03/14/24 07:54:51.982
  Mar 14 07:54:51.982: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename statefulset @ 03/14/24 07:54:51.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:54:51.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:54:51.99
  STEP: Creating service test in namespace statefulset-6815 @ 03/14/24 07:54:51.991
  STEP: Creating statefulset ss in namespace statefulset-6815 @ 03/14/24 07:54:51.993
  Mar 14 07:54:52.003: INFO: Found 0 stateful pods, waiting for 1
  E0314 07:54:52.677960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:53.678086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:54.678285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:55.679282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:56.679431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:57.679579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:58.680532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:54:59.681332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:00.681426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:01.681532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:55:02.005: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 03/14/24 07:55:02.007
  STEP: updating a scale subresource @ 03/14/24 07:55:02.009
  STEP: verifying the statefulset Spec.Replicas was modified @ 03/14/24 07:55:02.012
  STEP: Patch a scale subresource @ 03/14/24 07:55:02.013
  STEP: verifying the statefulset Spec.Replicas was modified @ 03/14/24 07:55:02.017
  Mar 14 07:55:02.019: INFO: Deleting all statefulset in ns statefulset-6815
  Mar 14 07:55:02.020: INFO: Scaling statefulset ss to 0
  E0314 07:55:02.682122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:03.682261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:04.682366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:05.682444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:06.682650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:07.682751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:08.683110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:09.683183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:10.683461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:11.683559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:55:12.030: INFO: Waiting for statefulset status.replicas updated to 0
  Mar 14 07:55:12.031: INFO: Deleting statefulset ss
  Mar 14 07:55:12.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6815" for this suite. @ 03/14/24 07:55:12.037
• [20.059 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 03/14/24 07:55:12.04
  Mar 14 07:55:12.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename emptydir @ 03/14/24 07:55:12.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:12.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:12.047
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 03/14/24 07:55:12.049
  E0314 07:55:12.683995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:13.684189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:55:14.055
  Mar 14 07:55:14.056: INFO: Trying to get logs from node k8s-worker02 pod pod-5183d9a8-40f6-4b06-a37f-1e905919e95a container test-container: <nil>
  STEP: delete the pod @ 03/14/24 07:55:14.059
  Mar 14 07:55:14.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7710" for this suite. @ 03/14/24 07:55:14.066
• [2.027 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 03/14/24 07:55:14.068
  Mar 14 07:55:14.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename projected @ 03/14/24 07:55:14.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:14.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:14.076
  STEP: Creating a pod to test downward API volume plugin @ 03/14/24 07:55:14.078
  E0314 07:55:14.685084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:15.685148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:55:16.085
  Mar 14 07:55:16.086: INFO: Trying to get logs from node k8s-worker02 pod downwardapi-volume-aaf17877-4786-49ea-86a0-bd4ad4a39ce3 container client-container: <nil>
  STEP: delete the pod @ 03/14/24 07:55:16.088
  Mar 14 07:55:16.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3765" for this suite. @ 03/14/24 07:55:16.094
• [2.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 03/14/24 07:55:16.097
  Mar 14 07:55:16.097: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename namespaces @ 03/14/24 07:55:16.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:16.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:16.105
  STEP: Creating a test namespace @ 03/14/24 07:55:16.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:16.111
  STEP: Creating a pod in the namespace @ 03/14/24 07:55:16.112
  STEP: Waiting for the pod to have running status @ 03/14/24 07:55:16.115
  E0314 07:55:16.685823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:17.685971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 03/14/24 07:55:18.118
  STEP: Waiting for the namespace to be removed. @ 03/14/24 07:55:18.121
  E0314 07:55:18.686413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:19.686709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:20.686816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:21.687126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:22.687878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:23.688091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:24.688890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:25.688994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:26.689413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:27.689507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:28.690178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 03/14/24 07:55:29.123
  STEP: Verifying there are no pods in the namespace @ 03/14/24 07:55:29.128
  Mar 14 07:55:29.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9022" for this suite. @ 03/14/24 07:55:29.131
  STEP: Destroying namespace "nsdeletetest-9272" for this suite. @ 03/14/24 07:55:29.133
  Mar 14 07:55:29.134: INFO: Namespace nsdeletetest-9272 was already deleted
  STEP: Destroying namespace "nsdeletetest-574" for this suite. @ 03/14/24 07:55:29.134
• [13.038 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 03/14/24 07:55:29.136
  Mar 14 07:55:29.136: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename csiinlinevolumes @ 03/14/24 07:55:29.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:29.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:29.141
  STEP: creating @ 03/14/24 07:55:29.142
  STEP: getting @ 03/14/24 07:55:29.147
  STEP: listing in namespace @ 03/14/24 07:55:29.148
  STEP: patching @ 03/14/24 07:55:29.15
  STEP: deleting @ 03/14/24 07:55:29.152
  Mar 14 07:55:29.156: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8305" for this suite. @ 03/14/24 07:55:29.157
• [0.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 03/14/24 07:55:29.159
  Mar 14 07:55:29.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename dns @ 03/14/24 07:55:29.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:29.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:29.165
  STEP: Creating a test headless service @ 03/14/24 07:55:29.166
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4375.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-4375.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 03/14/24 07:55:29.168
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-4375.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-4375.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 03/14/24 07:55:29.168
  STEP: creating a pod to probe DNS @ 03/14/24 07:55:29.168
  STEP: submitting the pod to kubernetes @ 03/14/24 07:55:29.168
  E0314 07:55:29.691098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:30.692239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 03/14/24 07:55:31.175
  STEP: looking for the results for each expected name from probers @ 03/14/24 07:55:31.176
  Mar 14 07:55:31.181: INFO: DNS probes using dns-4375/dns-test-1d18d045-7346-4d6e-8023-85f0e701ad06 succeeded

  Mar 14 07:55:31.181: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 03/14/24 07:55:31.182
  STEP: deleting the test headless service @ 03/14/24 07:55:31.186
  STEP: Destroying namespace "dns-4375" for this suite. @ 03/14/24 07:55:31.19
• [2.033 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 03/14/24 07:55:31.193
  Mar 14 07:55:31.193: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename pods @ 03/14/24 07:55:31.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:31.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:31.201
  E0314 07:55:31.692245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:32.692413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:33.693197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:34.693267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:35.693651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:36.693809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:55:37.226
  Mar 14 07:55:37.228: INFO: Trying to get logs from node k8s-worker01 pod client-envvars-d06b1191-4be8-44a2-b7dd-2566c0507580 container env3cont: <nil>
  STEP: delete the pod @ 03/14/24 07:55:37.23
  Mar 14 07:55:37.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4260" for this suite. @ 03/14/24 07:55:37.237
• [6.046 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 03/14/24 07:55:37.24
  Mar 14 07:55:37.240: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubelet-test @ 03/14/24 07:55:37.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:37.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:37.248
  E0314 07:55:37.694577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:38.694693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:39.694765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:40.694856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:55:41.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9742" for this suite. @ 03/14/24 07:55:41.259
• [4.021 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 03/14/24 07:55:41.262
  Mar 14 07:55:41.262: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 03/14/24 07:55:41.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:41.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:41.271
  STEP: creating a target pod @ 03/14/24 07:55:41.272
  E0314 07:55:41.694973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:42.695075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 03/14/24 07:55:43.28
  E0314 07:55:43.695183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:44.695338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 03/14/24 07:55:45.287
  Mar 14 07:55:45.287: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6766 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Mar 14 07:55:45.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  Mar 14 07:55:45.288: INFO: ExecWithOptions: Clientset creation
  Mar 14 07:55:45.288: INFO: ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-6766/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Mar 14 07:55:45.328: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 03/14/24 07:55:45.331
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 03/14/24 07:55:45.332
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 03/14/24 07:55:45.337
  Mar 14 07:55:45.339: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6766" for this suite. @ 03/14/24 07:55:45.34
• [4.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 03/14/24 07:55:45.343
  Mar 14 07:55:45.343: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename services @ 03/14/24 07:55:45.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:45.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:45.351
  STEP: creating service in namespace services-5298 @ 03/14/24 07:55:45.352
  STEP: creating service affinity-nodeport in namespace services-5298 @ 03/14/24 07:55:45.352
  STEP: creating replication controller affinity-nodeport in namespace services-5298 @ 03/14/24 07:55:45.356
  I0314 07:55:45.361238      21 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-5298, replica count: 3
  E0314 07:55:45.695500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:46.696286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:47.696371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0314 07:55:48.413266      21 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Mar 14 07:55:48.417: INFO: Creating new exec pod
  E0314 07:55:48.696924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:49.697110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:50.697508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:55:51.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5298 exec execpod-affinityqwtlc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Mar 14 07:55:51.516: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Mar 14 07:55:51.516: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:55:51.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5298 exec execpod-affinityqwtlc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.96.109.125 80'
  Mar 14 07:55:51.594: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.96.109.125 80\nConnection to 10.96.109.125 80 port [tcp/http] succeeded!\n"
  Mar 14 07:55:51.594: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:55:51.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5298 exec execpod-affinityqwtlc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.132.14 32712'
  Mar 14 07:55:51.676: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.132.14 32712\nConnection to 192.168.132.14 32712 port [tcp/*] succeeded!\n"
  Mar 14 07:55:51.676: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:55:51.676: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5298 exec execpod-affinityqwtlc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.132.11 32712'
  E0314 07:55:51.698127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:55:51.756: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.132.11 32712\nConnection to 192.168.132.11 32712 port [tcp/*] succeeded!\n"
  Mar 14 07:55:51.756: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Mar 14 07:55:51.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=services-5298 exec execpod-affinityqwtlc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.132.11:32712/ ; done'
  Mar 14 07:55:51.875: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.132.11:32712/\n"
  Mar 14 07:55:51.875: INFO: stdout: "\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl\naffinity-nodeport-bwdjl"
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Received response from host: affinity-nodeport-bwdjl
  Mar 14 07:55:51.875: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 07:55:51.877: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5298, will wait for the garbage collector to delete the pods @ 03/14/24 07:55:51.884
  Mar 14 07:55:51.938: INFO: Deleting ReplicationController affinity-nodeport took: 2.112621ms
  Mar 14 07:55:52.038: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.138608ms
  E0314 07:55:52.698767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:53.699724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:54.700566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-5298" for this suite. @ 03/14/24 07:55:54.946
• [9.606 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 03/14/24 07:55:54.949
  Mar 14 07:55:54.949: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename disruption @ 03/14/24 07:55:54.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:55:54.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:55:54.956
  STEP: Creating a pdb that targets all three pods in a test replica set @ 03/14/24 07:55:54.958
  STEP: Waiting for the pdb to be processed @ 03/14/24 07:55:54.96
  E0314 07:55:55.701650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:56.701719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 03/14/24 07:55:56.966
  STEP: Waiting for all pods to be running @ 03/14/24 07:55:56.966
  Mar 14 07:55:56.967: INFO: pods: 0 < 3
  E0314 07:55:57.701834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:55:58.701929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 03/14/24 07:55:58.968
  STEP: Updating the pdb to allow a pod to be evicted @ 03/14/24 07:55:58.972
  STEP: Waiting for the pdb to be processed @ 03/14/24 07:55:58.975
  E0314 07:55:59.702196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:00.702412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 03/14/24 07:56:00.977
  STEP: Waiting for all pods to be running @ 03/14/24 07:56:00.978
  STEP: Waiting for the pdb to observed all healthy pods @ 03/14/24 07:56:00.979
  STEP: Patching the pdb to disallow a pod to be evicted @ 03/14/24 07:56:00.992
  STEP: Waiting for the pdb to be processed @ 03/14/24 07:56:01.005
  E0314 07:56:01.702658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:02.702761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 03/14/24 07:56:03.012
  STEP: locating a running pod @ 03/14/24 07:56:03.014
  STEP: Deleting the pdb to allow a pod to be evicted @ 03/14/24 07:56:03.017
  STEP: Waiting for the pdb to be deleted @ 03/14/24 07:56:03.019
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 03/14/24 07:56:03.021
  STEP: Waiting for all pods to be running @ 03/14/24 07:56:03.021
  Mar 14 07:56:03.028: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5071" for this suite. @ 03/14/24 07:56:03.031
• [8.088 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 03/14/24 07:56:03.037
  Mar 14 07:56:03.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename kubectl @ 03/14/24 07:56:03.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:56:03.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:56:03.046
  STEP: running the image hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4 @ 03/14/24 07:56:03.047
  Mar 14 07:56:03.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-8718 run e2e-test-httpd-pod --image=hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Mar 14 07:56:03.099: INFO: stderr: ""
  Mar 14 07:56:03.099: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 03/14/24 07:56:03.099
  Mar 14 07:56:03.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-8718 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "hub.oepkgs.net/nestos/nestos-test/sonobuoy/busybox:1.29-4"}]}} --dry-run=server'
  Mar 14 07:56:03.146: INFO: stderr: ""
  Mar 14 07:56:03.146: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image hub.oepkgs.net/nestos/nestos-test/sonobuoy/httpd:2.4.38-4 @ 03/14/24 07:56:03.146
  Mar 14 07:56:03.149: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3142209970 --namespace=kubectl-8718 delete pods e2e-test-httpd-pod'
  E0314 07:56:03.703191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:04.703381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:56:04.869: INFO: stderr: ""
  Mar 14 07:56:04.869: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Mar 14 07:56:04.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8718" for this suite. @ 03/14/24 07:56:04.871
• [1.836 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 03/14/24 07:56:04.873
  Mar 14 07:56:04.873: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename resourcequota @ 03/14/24 07:56:04.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:56:04.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:56:04.879
  E0314 07:56:05.703666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:06.703949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:07.704867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:08.705545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:09.705629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:10.705950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:11.706419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:12.706995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:13.707521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:14.707585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:15.708659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:16.708736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:17.709290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:18.709415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:19.709495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:20.709676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:21.709862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 03/14/24 07:56:21.882
  E0314 07:56:22.709941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:23.710046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:24.710461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:25.711326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:26.711224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 03/14/24 07:56:26.884
  STEP: Ensuring resource quota status is calculated @ 03/14/24 07:56:26.887
  E0314 07:56:27.712110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:28.712337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 03/14/24 07:56:28.889
  STEP: Ensuring resource quota status captures configMap creation @ 03/14/24 07:56:28.893
  E0314 07:56:29.712429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:30.712818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 03/14/24 07:56:30.895
  STEP: Ensuring resource quota status released usage @ 03/14/24 07:56:30.897
  E0314 07:56:31.712901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:32.713041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:56:32.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1038" for this suite. @ 03/14/24 07:56:32.901
• [28.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 03/14/24 07:56:32.909
  Mar 14 07:56:32.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename svcaccounts @ 03/14/24 07:56:32.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:56:32.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:56:32.918
  STEP: Creating ServiceAccount "e2e-sa-m7nlq"  @ 03/14/24 07:56:32.919
  Mar 14 07:56:32.920: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-m7nlq"  @ 03/14/24 07:56:32.921
  Mar 14 07:56:32.923: INFO: AutomountServiceAccountToken: true
  Mar 14 07:56:32.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1163" for this suite. @ 03/14/24 07:56:32.925
• [0.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 03/14/24 07:56:32.929
  Mar 14 07:56:32.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename statefulset @ 03/14/24 07:56:32.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:56:32.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:56:32.935
  STEP: Creating service test in namespace statefulset-4758 @ 03/14/24 07:56:32.936
  Mar 14 07:56:32.942: INFO: Found 0 stateful pods, waiting for 1
  E0314 07:56:33.713706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:34.713826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:35.713932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:36.714133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:37.714761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:38.714869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:39.715181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:40.715222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:41.715304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:42.716284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:56:42.945: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 03/14/24 07:56:42.947
  W0314 07:56:42.952103      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Mar 14 07:56:42.954: INFO: Found 1 stateful pods, waiting for 2
  E0314 07:56:43.716375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:44.716861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:45.717364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:46.717452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:47.717549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:48.717680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:49.717808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:50.717905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:51.718038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:52.718299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:56:52.956: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Mar 14 07:56:52.956: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 03/14/24 07:56:52.959
  STEP: Delete all of the StatefulSets @ 03/14/24 07:56:52.96
  STEP: Verify that StatefulSets have been deleted @ 03/14/24 07:56:52.962
  Mar 14 07:56:52.964: INFO: Deleting all statefulset in ns statefulset-4758
  Mar 14 07:56:52.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4758" for this suite. @ 03/14/24 07:56:52.971
• [20.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 03/14/24 07:56:52.98
  Mar 14 07:56:52.980: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename var-expansion @ 03/14/24 07:56:52.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:56:52.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:56:52.988
  E0314 07:56:53.719277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:54.720031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Mar 14 07:56:54.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Mar 14 07:56:54.997: INFO: Deleting pod "var-expansion-a0e62f6b-ba34-4c53-8798-90b32f0f42a7" in namespace "var-expansion-3143"
  Mar 14 07:56:55.001: INFO: Wait up to 5m0s for pod "var-expansion-a0e62f6b-ba34-4c53-8798-90b32f0f42a7" to be fully deleted
  E0314 07:56:55.720118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:56.720194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-3143" for this suite. @ 03/14/24 07:56:57.004
• [4.027 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 03/14/24 07:56:57.007
  Mar 14 07:56:57.007: INFO: >>> kubeConfig: /tmp/kubeconfig-3142209970
  STEP: Building a namespace api object, basename secrets @ 03/14/24 07:56:57.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 03/14/24 07:56:57.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 03/14/24 07:56:57.013
  STEP: Creating secret with name secret-test-cd33859b-800b-4fda-af76-0d4688f87eb1 @ 03/14/24 07:56:57.014
  STEP: Creating a pod to test consume secrets @ 03/14/24 07:56:57.016
  E0314 07:56:57.720236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:58.720417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:56:59.720727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0314 07:57:00.720956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 03/14/24 07:57:01.023
  Mar 14 07:57:01.024: INFO: Trying to get logs from node k8s-worker02 pod pod-secrets-bfc7ee77-f4f1-4be4-ae84-e76db421e875 container secret-volume-test: <nil>
  STEP: delete the pod @ 03/14/24 07:57:01.027
  Mar 14 07:57:01.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9321" for this suite. @ 03/14/24 07:57:01.034
• [4.029 seconds]
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Mar 14 07:57:01.037: INFO: Running AfterSuite actions on node 1
  Mar 14 07:57:01.037: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.030 seconds]
------------------------------

Ran 378 of 7387 Specs in 5295.900 seconds
SUCCESS! -- 378 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h28m16.18380456s
Test Suite Passed
