I1031 09:00:06.290331      18 e2e.go:126] Starting e2e run "39bf49b0-9f32-40a3-abf5-1332f7c3fb9d" on Ginkgo node 1
Oct 31 09:00:06.305: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1698742806 - will randomize all specs

Will run 368 of 7069 specs
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Oct 31 09:00:06.502: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:00:06.505: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
E1031 09:00:06.505673      18 progress.go:80] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp [::1]:8099: connect: connection refused
Oct 31 09:00:06.682: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Oct 31 09:00:07.084: INFO: 8 / 8 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Oct 31 09:00:07.084: INFO: expected 2 pod replicas in namespace 'kube-system', 2 are Running and Ready.
Oct 31 09:00:07.084: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Oct 31 09:00:07.127: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'csi-bizflycloud-nodeplugin' (0 seconds elapsed)
Oct 31 09:00:07.127: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-router' (0 seconds elapsed)
Oct 31 09:00:07.127: INFO: e2e test version: v1.26.9
Oct 31 09:00:07.233: INFO: kube-apiserver version: v1.26.9
[SynchronizedBeforeSuite] TOP-LEVEL
  test/e2e/e2e.go:77
Oct 31 09:00:07.234: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:00:07.317: INFO: Cluster IP family: ipv4
------------------------------
[SynchronizedBeforeSuite] PASSED [0.816 seconds]
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77

  Begin Captured GinkgoWriter Output >>
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Oct 31 09:00:06.502: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:00:06.505: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
    E1031 09:00:06.505673      18 progress.go:80] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp [::1]:8099: connect: connection refused
    Oct 31 09:00:06.682: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
    Oct 31 09:00:07.084: INFO: 8 / 8 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
    Oct 31 09:00:07.084: INFO: expected 2 pod replicas in namespace 'kube-system', 2 are Running and Ready.
    Oct 31 09:00:07.084: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
    Oct 31 09:00:07.127: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'csi-bizflycloud-nodeplugin' (0 seconds elapsed)
    Oct 31 09:00:07.127: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-router' (0 seconds elapsed)
    Oct 31 09:00:07.127: INFO: e2e test version: v1.26.9
    Oct 31 09:00:07.233: INFO: kube-apiserver version: v1.26.9
    [SynchronizedBeforeSuite] TOP-LEVEL
      test/e2e/e2e.go:77
    Oct 31 09:00:07.234: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:00:07.317: INFO: Cluster IP family: ipv4
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:00:07.346
Oct 31 09:00:07.346: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename runtimeclass 10/31/23 09:00:07.347
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:00:07.544
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:00:07.65
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189
STEP: getting /apis 10/31/23 09:00:07.826
STEP: getting /apis/node.k8s.io 10/31/23 09:00:07.938
STEP: getting /apis/node.k8s.io/v1 10/31/23 09:00:07.991
STEP: creating 10/31/23 09:00:08.09
STEP: watching 10/31/23 09:00:08.305
Oct 31 09:00:08.306: INFO: starting watch
STEP: getting 10/31/23 09:00:08.481
STEP: listing 10/31/23 09:00:08.629
STEP: patching 10/31/23 09:00:08.782
STEP: updating 10/31/23 09:00:08.816
Oct 31 09:00:08.890: INFO: waiting for watch events with expected annotations
STEP: deleting 10/31/23 09:00:08.891
STEP: deleting a collection 10/31/23 09:00:09.252
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Oct 31 09:00:09.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-5833" for this suite. 10/31/23 09:00:09.462
------------------------------
â€¢ [2.177 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
   should support RuntimeClasses API operations [Conformance]
  test/e2e/common/node/runtimeclass.go:189

  Begin Captured GinkgoWriter Output >>
E1031 09:00:09.524494      18 progress.go:80] Failed to post progress update to http://localhost:8099/progress: Post "http://localhost:8099/progress": dial tcp [::1]:8099: connect: connection refused
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:00:07.346
    Oct 31 09:00:07.346: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename runtimeclass 10/31/23 09:00:07.347
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:00:07.544
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:00:07.65
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support RuntimeClasses API operations [Conformance]
      test/e2e/common/node/runtimeclass.go:189
    STEP: getting /apis 10/31/23 09:00:07.826
    STEP: getting /apis/node.k8s.io 10/31/23 09:00:07.938
    STEP: getting /apis/node.k8s.io/v1 10/31/23 09:00:07.991
    STEP: creating 10/31/23 09:00:08.09
    STEP: watching 10/31/23 09:00:08.305
    Oct 31 09:00:08.306: INFO: starting watch
    STEP: getting 10/31/23 09:00:08.481
    STEP: listing 10/31/23 09:00:08.629
    STEP: patching 10/31/23 09:00:08.782
    STEP: updating 10/31/23 09:00:08.816
    Oct 31 09:00:08.890: INFO: waiting for watch events with expected annotations
    STEP: deleting 10/31/23 09:00:08.891
    STEP: deleting a collection 10/31/23 09:00:09.252
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:00:09.384: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-5833" for this suite. 10/31/23 09:00:09.462
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:00:09.527
Oct 31 09:00:09.527: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:00:09.528
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:00:09.736
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:00:10.019
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207
STEP: Creating a pod to test emptydir 0666 on node default medium 10/31/23 09:00:10.134
Oct 31 09:00:10.208: INFO: Waiting up to 5m0s for pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302" in namespace "emptydir-9894" to be "Succeeded or Failed"
Oct 31 09:00:10.255: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 47.560575ms
Oct 31 09:00:12.269: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 2.06083396s
Oct 31 09:00:14.305: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 4.097394003s
Oct 31 09:00:16.263: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 6.055025589s
Oct 31 09:00:18.324: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 8.116478801s
Oct 31 09:00:20.268: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 10.060108141s
Oct 31 09:00:22.318: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 12.109760445s
Oct 31 09:00:24.264: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Running", Reason="", readiness=true. Elapsed: 14.056501006s
Oct 31 09:00:26.298: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Running", Reason="", readiness=false. Elapsed: 16.090203885s
Oct 31 09:00:28.263: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Succeeded", Reason="", readiness=false. Elapsed: 18.055098585s
STEP: Saw pod success 10/31/23 09:00:28.263
Oct 31 09:00:28.263: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302" satisfied condition "Succeeded or Failed"
Oct 31 09:00:28.291: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302 container test-container: <nil>
STEP: delete the pod 10/31/23 09:00:28.601
Oct 31 09:00:28.676: INFO: Waiting for pod pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302 to disappear
Oct 31 09:00:28.790: INFO: Pod pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:00:28.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-9894" for this suite. 10/31/23 09:00:28.804
------------------------------
â€¢ [SLOW TEST] [19.330 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:00:09.527
    Oct 31 09:00:09.527: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:00:09.528
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:00:09.736
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:00:10.019
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:207
    STEP: Creating a pod to test emptydir 0666 on node default medium 10/31/23 09:00:10.134
    Oct 31 09:00:10.208: INFO: Waiting up to 5m0s for pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302" in namespace "emptydir-9894" to be "Succeeded or Failed"
    Oct 31 09:00:10.255: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 47.560575ms
    Oct 31 09:00:12.269: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 2.06083396s
    Oct 31 09:00:14.305: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 4.097394003s
    Oct 31 09:00:16.263: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 6.055025589s
    Oct 31 09:00:18.324: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 8.116478801s
    Oct 31 09:00:20.268: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 10.060108141s
    Oct 31 09:00:22.318: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Pending", Reason="", readiness=false. Elapsed: 12.109760445s
    Oct 31 09:00:24.264: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Running", Reason="", readiness=true. Elapsed: 14.056501006s
    Oct 31 09:00:26.298: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Running", Reason="", readiness=false. Elapsed: 16.090203885s
    Oct 31 09:00:28.263: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302": Phase="Succeeded", Reason="", readiness=false. Elapsed: 18.055098585s
    STEP: Saw pod success 10/31/23 09:00:28.263
    Oct 31 09:00:28.263: INFO: Pod "pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302" satisfied condition "Succeeded or Failed"
    Oct 31 09:00:28.291: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302 container test-container: <nil>
    STEP: delete the pod 10/31/23 09:00:28.601
    Oct 31 09:00:28.676: INFO: Waiting for pod pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302 to disappear
    Oct 31 09:00:28.790: INFO: Pod pod-5c8bc8ea-fccd-4b90-a5ee-d29828f87302 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:00:28.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-9894" for this suite. 10/31/23 09:00:28.804
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:00:28.86
Oct 31 09:00:28.860: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubelet-test 10/31/23 09:00:28.861
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:00:29.123
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:00:29.266
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:184
Oct 31 09:00:29.418: INFO: Waiting up to 5m0s for pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7" in namespace "kubelet-test-8884" to be "running and ready"
Oct 31 09:00:29.446: INFO: Pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7": Phase="Pending", Reason="", readiness=false. Elapsed: 27.204592ms
Oct 31 09:00:29.446: INFO: The phase of Pod busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:00:31.454: INFO: Pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.035355073s
Oct 31 09:00:31.454: INFO: The phase of Pod busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:00:33.462: INFO: Pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7": Phase="Running", Reason="", readiness=true. Elapsed: 4.043112023s
Oct 31 09:00:33.462: INFO: The phase of Pod busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7 is Running (Ready = true)
Oct 31 09:00:33.462: INFO: Pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:00:33.650: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-8884" for this suite. 10/31/23 09:00:33.705
------------------------------
â€¢ [4.958 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a read only busybox container
  test/e2e/common/node/kubelet.go:175
    should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:00:28.86
    Oct 31 09:00:28.860: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubelet-test 10/31/23 09:00:28.861
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:00:29.123
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:00:29.266
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:184
    Oct 31 09:00:29.418: INFO: Waiting up to 5m0s for pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7" in namespace "kubelet-test-8884" to be "running and ready"
    Oct 31 09:00:29.446: INFO: Pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7": Phase="Pending", Reason="", readiness=false. Elapsed: 27.204592ms
    Oct 31 09:00:29.446: INFO: The phase of Pod busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:00:31.454: INFO: Pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.035355073s
    Oct 31 09:00:31.454: INFO: The phase of Pod busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:00:33.462: INFO: Pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7": Phase="Running", Reason="", readiness=true. Elapsed: 4.043112023s
    Oct 31 09:00:33.462: INFO: The phase of Pod busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7 is Running (Ready = true)
    Oct 31 09:00:33.462: INFO: Pod "busybox-readonly-fs787d03fb-e8e6-4537-a240-e47e2a6fe5f7" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:00:33.650: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-8884" for this suite. 10/31/23 09:00:33.705
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Probing container
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:00:33.819
Oct 31 09:00:33.819: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-probe 10/31/23 09:00:33.822
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:00:33.988
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:00:34.17
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Oct 31 09:01:34.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-666" for this suite. 10/31/23 09:01:34.381
------------------------------
â€¢ [SLOW TEST] [60.625 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:00:33.819
    Oct 31 09:00:33.819: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-probe 10/31/23 09:00:33.822
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:00:33.988
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:00:34.17
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:108
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:01:34.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-666" for this suite. 10/31/23 09:01:34.381
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] PreStop
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
[BeforeEach] [sig-node] PreStop
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:01:34.445
Oct 31 09:01:34.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename prestop 10/31/23 09:01:34.446
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:01:34.622
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:01:34.778
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168
STEP: Creating server pod server in namespace prestop-2594 10/31/23 09:01:34.928
STEP: Waiting for pods to come up. 10/31/23 09:01:34.982
Oct 31 09:01:34.983: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-2594" to be "running"
Oct 31 09:01:34.998: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 14.808342ms
Oct 31 09:01:37.237: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.253657234s
Oct 31 09:01:37.237: INFO: Pod "server" satisfied condition "running"
STEP: Creating tester pod tester in namespace prestop-2594 10/31/23 09:01:37.289
Oct 31 09:01:37.316: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-2594" to be "running"
Oct 31 09:01:37.358: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 42.197944ms
Oct 31 09:01:39.370: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 2.05372349s
Oct 31 09:01:41.383: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 4.066412011s
Oct 31 09:01:41.383: INFO: Pod "tester" satisfied condition "running"
STEP: Deleting pre-stop pod 10/31/23 09:01:41.383
Oct 31 09:01:46.644: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod 10/31/23 09:01:46.644
[AfterEach] [sig-node] PreStop
  test/e2e/framework/node/init/init.go:32
Oct 31 09:01:46.731: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PreStop
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PreStop
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PreStop
  tear down framework | framework.go:193
STEP: Destroying namespace "prestop-2594" for this suite. 10/31/23 09:01:46.748
------------------------------
â€¢ [SLOW TEST] [12.363 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/node/pre_stop.go:168

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PreStop
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:01:34.445
    Oct 31 09:01:34.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename prestop 10/31/23 09:01:34.446
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:01:34.622
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:01:34.778
    [BeforeEach] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] PreStop
      test/e2e/node/pre_stop.go:159
    [It] should call prestop when killing a pod  [Conformance]
      test/e2e/node/pre_stop.go:168
    STEP: Creating server pod server in namespace prestop-2594 10/31/23 09:01:34.928
    STEP: Waiting for pods to come up. 10/31/23 09:01:34.982
    Oct 31 09:01:34.983: INFO: Waiting up to 5m0s for pod "server" in namespace "prestop-2594" to be "running"
    Oct 31 09:01:34.998: INFO: Pod "server": Phase="Pending", Reason="", readiness=false. Elapsed: 14.808342ms
    Oct 31 09:01:37.237: INFO: Pod "server": Phase="Running", Reason="", readiness=true. Elapsed: 2.253657234s
    Oct 31 09:01:37.237: INFO: Pod "server" satisfied condition "running"
    STEP: Creating tester pod tester in namespace prestop-2594 10/31/23 09:01:37.289
    Oct 31 09:01:37.316: INFO: Waiting up to 5m0s for pod "tester" in namespace "prestop-2594" to be "running"
    Oct 31 09:01:37.358: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 42.197944ms
    Oct 31 09:01:39.370: INFO: Pod "tester": Phase="Pending", Reason="", readiness=false. Elapsed: 2.05372349s
    Oct 31 09:01:41.383: INFO: Pod "tester": Phase="Running", Reason="", readiness=true. Elapsed: 4.066412011s
    Oct 31 09:01:41.383: INFO: Pod "tester" satisfied condition "running"
    STEP: Deleting pre-stop pod 10/31/23 09:01:41.383
    Oct 31 09:01:46.644: INFO: Saw: {
    	"Hostname": "server",
    	"Sent": null,
    	"Received": {
    		"prestop": 1
    	},
    	"Errors": null,
    	"Log": [
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
    		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
    	],
    	"StillContactingPeers": true
    }
    STEP: Deleting the server pod 10/31/23 09:01:46.644
    [AfterEach] [sig-node] PreStop
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:01:46.731: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PreStop
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PreStop
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PreStop
      tear down framework | framework.go:193
    STEP: Destroying namespace "prestop-2594" for this suite. 10/31/23 09:01:46.748
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:01:46.809
Oct 31 09:01:46.809: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 09:01:46.81
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:01:46.963
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:01:47.145
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198
STEP: fetching the /apis discovery document 10/31/23 09:01:47.242
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 10/31/23 09:01:47.331
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 10/31/23 09:01:47.331
STEP: fetching the /apis/apiextensions.k8s.io discovery document 10/31/23 09:01:47.331
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 10/31/23 09:01:47.38
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 10/31/23 09:01:47.38
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 10/31/23 09:01:47.493
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:01:47.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-649" for this suite. 10/31/23 09:01:47.594
------------------------------
â€¢ [0.880 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:198

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:01:46.809
    Oct 31 09:01:46.809: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 09:01:46.81
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:01:46.963
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:01:47.145
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should include custom resource definition resources in discovery documents [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:198
    STEP: fetching the /apis discovery document 10/31/23 09:01:47.242
    STEP: finding the apiextensions.k8s.io API group in the /apis discovery document 10/31/23 09:01:47.331
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document 10/31/23 09:01:47.331
    STEP: fetching the /apis/apiextensions.k8s.io discovery document 10/31/23 09:01:47.331
    STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document 10/31/23 09:01:47.38
    STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document 10/31/23 09:01:47.38
    STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document 10/31/23 09:01:47.493
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:01:47.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-649" for this suite. 10/31/23 09:01:47.594
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:01:47.689
Oct 31 09:01:47.690: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename statefulset 10/31/23 09:01:47.694
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:01:47.955
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:01:48.114
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-9896 10/31/23 09:01:48.18
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/apps/statefulset.go:739
STEP: Looking for a node to schedule stateful set and pod 10/31/23 09:01:48.245
STEP: Creating pod with conflicting port in namespace statefulset-9896 10/31/23 09:01:48.35
STEP: Waiting until pod test-pod will start running in namespace statefulset-9896 10/31/23 09:01:48.398
Oct 31 09:01:48.399: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-9896" to be "running"
Oct 31 09:01:48.471: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 72.321333ms
Oct 31 09:01:50.483: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.083506478s
Oct 31 09:01:52.651: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.252180114s
Oct 31 09:01:54.777: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.377474919s
Oct 31 09:01:56.784: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.384905984s
Oct 31 09:01:58.482: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 10.083442153s
Oct 31 09:02:00.508: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 12.108937664s
Oct 31 09:02:02.524: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 14.124937894s
Oct 31 09:02:02.524: INFO: Pod "test-pod" satisfied condition "running"
STEP: Creating statefulset with conflicting port in namespace statefulset-9896 10/31/23 09:02:02.524
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9896 10/31/23 09:02:02.591
Oct 31 09:02:02.637: INFO: Observed stateful pod in namespace: statefulset-9896, name: ss-0, uid: 0728026c-b7c1-44dd-856a-710f428b388b, status phase: Pending. Waiting for statefulset controller to delete.
Oct 31 09:02:02.689: INFO: Observed stateful pod in namespace: statefulset-9896, name: ss-0, uid: 0728026c-b7c1-44dd-856a-710f428b388b, status phase: Failed. Waiting for statefulset controller to delete.
Oct 31 09:02:02.708: INFO: Observed stateful pod in namespace: statefulset-9896, name: ss-0, uid: 0728026c-b7c1-44dd-856a-710f428b388b, status phase: Failed. Waiting for statefulset controller to delete.
Oct 31 09:02:02.729: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9896
STEP: Removing pod with conflicting port in namespace statefulset-9896 10/31/23 09:02:02.729
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9896 and will be in running state 10/31/23 09:02:02.943
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Oct 31 09:02:05.037: INFO: Deleting all statefulset in ns statefulset-9896
Oct 31 09:02:05.095: INFO: Scaling statefulset ss to 0
Oct 31 09:02:15.333: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 09:02:15.474: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:02:15.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-9896" for this suite. 10/31/23 09:02:15.866
------------------------------
â€¢ [SLOW TEST] [28.230 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Should recreate evicted statefulset [Conformance]
    test/e2e/apps/statefulset.go:739

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:01:47.689
    Oct 31 09:01:47.690: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename statefulset 10/31/23 09:01:47.694
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:01:47.955
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:01:48.114
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-9896 10/31/23 09:01:48.18
    [It] Should recreate evicted statefulset [Conformance]
      test/e2e/apps/statefulset.go:739
    STEP: Looking for a node to schedule stateful set and pod 10/31/23 09:01:48.245
    STEP: Creating pod with conflicting port in namespace statefulset-9896 10/31/23 09:01:48.35
    STEP: Waiting until pod test-pod will start running in namespace statefulset-9896 10/31/23 09:01:48.398
    Oct 31 09:01:48.399: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "statefulset-9896" to be "running"
    Oct 31 09:01:48.471: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 72.321333ms
    Oct 31 09:01:50.483: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.083506478s
    Oct 31 09:01:52.651: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.252180114s
    Oct 31 09:01:54.777: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 6.377474919s
    Oct 31 09:01:56.784: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 8.384905984s
    Oct 31 09:01:58.482: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 10.083442153s
    Oct 31 09:02:00.508: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 12.108937664s
    Oct 31 09:02:02.524: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 14.124937894s
    Oct 31 09:02:02.524: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Creating statefulset with conflicting port in namespace statefulset-9896 10/31/23 09:02:02.524
    STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-9896 10/31/23 09:02:02.591
    Oct 31 09:02:02.637: INFO: Observed stateful pod in namespace: statefulset-9896, name: ss-0, uid: 0728026c-b7c1-44dd-856a-710f428b388b, status phase: Pending. Waiting for statefulset controller to delete.
    Oct 31 09:02:02.689: INFO: Observed stateful pod in namespace: statefulset-9896, name: ss-0, uid: 0728026c-b7c1-44dd-856a-710f428b388b, status phase: Failed. Waiting for statefulset controller to delete.
    Oct 31 09:02:02.708: INFO: Observed stateful pod in namespace: statefulset-9896, name: ss-0, uid: 0728026c-b7c1-44dd-856a-710f428b388b, status phase: Failed. Waiting for statefulset controller to delete.
    Oct 31 09:02:02.729: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-9896
    STEP: Removing pod with conflicting port in namespace statefulset-9896 10/31/23 09:02:02.729
    STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-9896 and will be in running state 10/31/23 09:02:02.943
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Oct 31 09:02:05.037: INFO: Deleting all statefulset in ns statefulset-9896
    Oct 31 09:02:05.095: INFO: Scaling statefulset ss to 0
    Oct 31 09:02:15.333: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 09:02:15.474: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:02:15.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-9896" for this suite. 10/31/23 09:02:15.866
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:02:15.92
Oct 31 09:02:15.920: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pod-network-test 10/31/23 09:02:15.922
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:02:16.132
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:02:16.478
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:82
STEP: Performing setup for networking test in namespace pod-network-test-9425 10/31/23 09:02:16.674
STEP: creating a selector 10/31/23 09:02:16.675
STEP: Creating the service pods in kubernetes 10/31/23 09:02:16.675
Oct 31 09:02:16.675: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Oct 31 09:02:17.056: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-9425" to be "running and ready"
Oct 31 09:02:17.137: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 81.467516ms
Oct 31 09:02:17.138: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:02:19.198: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.141838735s
Oct 31 09:02:19.198: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 09:02:21.272: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.216320643s
Oct 31 09:02:21.272: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 09:02:23.403: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.347440302s
Oct 31 09:02:23.403: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 09:02:25.151: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.09527661s
Oct 31 09:02:25.151: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 09:02:27.146: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.089657406s
Oct 31 09:02:27.146: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 09:02:29.193: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.137167307s
Oct 31 09:02:29.193: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Oct 31 09:02:29.193: INFO: Pod "netserver-0" satisfied condition "running and ready"
Oct 31 09:02:29.289: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-9425" to be "running and ready"
Oct 31 09:02:29.353: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 64.146625ms
Oct 31 09:02:29.353: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Oct 31 09:02:29.353: INFO: Pod "netserver-1" satisfied condition "running and ready"
Oct 31 09:02:29.404: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-9425" to be "running and ready"
Oct 31 09:02:29.460: INFO: Pod "netserver-2": Phase="Pending", Reason="", readiness=false. Elapsed: 55.357273ms
Oct 31 09:02:29.460: INFO: The phase of Pod netserver-2 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:02:31.513: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 2.108712871s
Oct 31 09:02:31.513: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Oct 31 09:02:33.483: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 4.078391393s
Oct 31 09:02:33.483: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Oct 31 09:02:35.511: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 6.105954722s
Oct 31 09:02:35.511: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Oct 31 09:02:37.524: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 8.119834324s
Oct 31 09:02:37.524: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Oct 31 09:02:39.498: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 10.093558406s
Oct 31 09:02:39.498: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Oct 31 09:02:41.699: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 12.294877814s
Oct 31 09:02:41.699: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Oct 31 09:02:43.502: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 14.097133284s
Oct 31 09:02:43.502: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Oct 31 09:02:45.688: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 16.283361218s
Oct 31 09:02:45.688: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Oct 31 09:02:47.469: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 18.064611226s
Oct 31 09:02:47.469: INFO: The phase of Pod netserver-2 is Running (Ready = false)
Oct 31 09:02:49.469: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 20.064308176s
Oct 31 09:02:49.469: INFO: The phase of Pod netserver-2 is Running (Ready = true)
Oct 31 09:02:49.469: INFO: Pod "netserver-2" satisfied condition "running and ready"
STEP: Creating test pods 10/31/23 09:02:49.565
Oct 31 09:02:49.622: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-9425" to be "running"
Oct 31 09:02:49.687: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 64.27394ms
Oct 31 09:02:51.694: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.071655935s
Oct 31 09:02:51.694: INFO: Pod "test-container-pod" satisfied condition "running"
Oct 31 09:02:51.743: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Oct 31 09:02:51.743: INFO: Breadth first check of 10.200.1.7 on host 10.20.4.137...
Oct 31 09:02:51.793: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.2.6:9080/dial?request=hostname&protocol=http&host=10.200.1.7&port=8083&tries=1'] Namespace:pod-network-test-9425 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:02:51.793: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:02:51.794: INFO: ExecWithOptions: Clientset creation
Oct 31 09:02:51.794: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-9425/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.2.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.1.7%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Oct 31 09:02:52.714: INFO: Waiting for responses: map[]
Oct 31 09:02:52.714: INFO: reached 10.200.1.7 after 0/1 tries
Oct 31 09:02:52.714: INFO: Breadth first check of 10.200.2.5 on host 10.20.4.182...
Oct 31 09:02:52.765: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.2.6:9080/dial?request=hostname&protocol=http&host=10.200.2.5&port=8083&tries=1'] Namespace:pod-network-test-9425 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:02:52.765: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:02:52.766: INFO: ExecWithOptions: Clientset creation
Oct 31 09:02:52.767: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-9425/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.2.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.2.5%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Oct 31 09:02:53.523: INFO: Waiting for responses: map[]
Oct 31 09:02:53.524: INFO: reached 10.200.2.5 after 0/1 tries
Oct 31 09:02:53.524: INFO: Breadth first check of 10.200.0.7 on host 10.20.4.183...
Oct 31 09:02:53.535: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.2.6:9080/dial?request=hostname&protocol=http&host=10.200.0.7&port=8083&tries=1'] Namespace:pod-network-test-9425 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:02:53.535: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:02:53.536: INFO: ExecWithOptions: Clientset creation
Oct 31 09:02:53.536: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-9425/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.2.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.0.7%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Oct 31 09:02:54.321: INFO: Waiting for responses: map[]
Oct 31 09:02:54.321: INFO: reached 10.200.0.7 after 0/1 tries
Oct 31 09:02:54.321: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Oct 31 09:02:54.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-9425" for this suite. 10/31/23 09:02:54.377
------------------------------
â€¢ [SLOW TEST] [38.509 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:82

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:02:15.92
    Oct 31 09:02:15.920: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pod-network-test 10/31/23 09:02:15.922
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:02:16.132
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:02:16.478
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: http [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:82
    STEP: Performing setup for networking test in namespace pod-network-test-9425 10/31/23 09:02:16.674
    STEP: creating a selector 10/31/23 09:02:16.675
    STEP: Creating the service pods in kubernetes 10/31/23 09:02:16.675
    Oct 31 09:02:16.675: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Oct 31 09:02:17.056: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-9425" to be "running and ready"
    Oct 31 09:02:17.137: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 81.467516ms
    Oct 31 09:02:17.138: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:02:19.198: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.141838735s
    Oct 31 09:02:19.198: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 09:02:21.272: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.216320643s
    Oct 31 09:02:21.272: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 09:02:23.403: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.347440302s
    Oct 31 09:02:23.403: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 09:02:25.151: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.09527661s
    Oct 31 09:02:25.151: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 09:02:27.146: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.089657406s
    Oct 31 09:02:27.146: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 09:02:29.193: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.137167307s
    Oct 31 09:02:29.193: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Oct 31 09:02:29.193: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Oct 31 09:02:29.289: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-9425" to be "running and ready"
    Oct 31 09:02:29.353: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 64.146625ms
    Oct 31 09:02:29.353: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Oct 31 09:02:29.353: INFO: Pod "netserver-1" satisfied condition "running and ready"
    Oct 31 09:02:29.404: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-9425" to be "running and ready"
    Oct 31 09:02:29.460: INFO: Pod "netserver-2": Phase="Pending", Reason="", readiness=false. Elapsed: 55.357273ms
    Oct 31 09:02:29.460: INFO: The phase of Pod netserver-2 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:02:31.513: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 2.108712871s
    Oct 31 09:02:31.513: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Oct 31 09:02:33.483: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 4.078391393s
    Oct 31 09:02:33.483: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Oct 31 09:02:35.511: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 6.105954722s
    Oct 31 09:02:35.511: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Oct 31 09:02:37.524: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 8.119834324s
    Oct 31 09:02:37.524: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Oct 31 09:02:39.498: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 10.093558406s
    Oct 31 09:02:39.498: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Oct 31 09:02:41.699: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 12.294877814s
    Oct 31 09:02:41.699: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Oct 31 09:02:43.502: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 14.097133284s
    Oct 31 09:02:43.502: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Oct 31 09:02:45.688: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 16.283361218s
    Oct 31 09:02:45.688: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Oct 31 09:02:47.469: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=false. Elapsed: 18.064611226s
    Oct 31 09:02:47.469: INFO: The phase of Pod netserver-2 is Running (Ready = false)
    Oct 31 09:02:49.469: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 20.064308176s
    Oct 31 09:02:49.469: INFO: The phase of Pod netserver-2 is Running (Ready = true)
    Oct 31 09:02:49.469: INFO: Pod "netserver-2" satisfied condition "running and ready"
    STEP: Creating test pods 10/31/23 09:02:49.565
    Oct 31 09:02:49.622: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-9425" to be "running"
    Oct 31 09:02:49.687: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 64.27394ms
    Oct 31 09:02:51.694: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.071655935s
    Oct 31 09:02:51.694: INFO: Pod "test-container-pod" satisfied condition "running"
    Oct 31 09:02:51.743: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
    Oct 31 09:02:51.743: INFO: Breadth first check of 10.200.1.7 on host 10.20.4.137...
    Oct 31 09:02:51.793: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.2.6:9080/dial?request=hostname&protocol=http&host=10.200.1.7&port=8083&tries=1'] Namespace:pod-network-test-9425 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:02:51.793: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:02:51.794: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:02:51.794: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-9425/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.2.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.1.7%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Oct 31 09:02:52.714: INFO: Waiting for responses: map[]
    Oct 31 09:02:52.714: INFO: reached 10.200.1.7 after 0/1 tries
    Oct 31 09:02:52.714: INFO: Breadth first check of 10.200.2.5 on host 10.20.4.182...
    Oct 31 09:02:52.765: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.2.6:9080/dial?request=hostname&protocol=http&host=10.200.2.5&port=8083&tries=1'] Namespace:pod-network-test-9425 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:02:52.765: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:02:52.766: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:02:52.767: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-9425/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.2.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.2.5%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Oct 31 09:02:53.523: INFO: Waiting for responses: map[]
    Oct 31 09:02:53.524: INFO: reached 10.200.2.5 after 0/1 tries
    Oct 31 09:02:53.524: INFO: Breadth first check of 10.200.0.7 on host 10.20.4.183...
    Oct 31 09:02:53.535: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.2.6:9080/dial?request=hostname&protocol=http&host=10.200.0.7&port=8083&tries=1'] Namespace:pod-network-test-9425 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:02:53.535: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:02:53.536: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:02:53.536: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-9425/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.2.6%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.200.0.7%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Oct 31 09:02:54.321: INFO: Waiting for responses: map[]
    Oct 31 09:02:54.321: INFO: reached 10.200.0.7 after 0/1 tries
    Oct 31 09:02:54.321: INFO: Going to retry 0 out of 3 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:02:54.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-9425" for this suite. 10/31/23 09:02:54.377
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:02:54.43
Oct 31 09:02:54.431: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replication-controller 10/31/23 09:02:54.432
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:02:54.631
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:02:54.773
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402
STEP: Creating ReplicationController "e2e-rc-svtgx" 10/31/23 09:02:54.916
Oct 31 09:02:54.954: INFO: Get Replication Controller "e2e-rc-svtgx" to confirm replicas
Oct 31 09:02:56.021: INFO: Get Replication Controller "e2e-rc-svtgx" to confirm replicas
Oct 31 09:02:56.032: INFO: Found 1 replicas for "e2e-rc-svtgx" replication controller
STEP: Getting scale subresource for ReplicationController "e2e-rc-svtgx" 10/31/23 09:02:56.033
STEP: Updating a scale subresource 10/31/23 09:02:56.121
STEP: Verifying replicas where modified for replication controller "e2e-rc-svtgx" 10/31/23 09:02:56.178
Oct 31 09:02:56.178: INFO: Get Replication Controller "e2e-rc-svtgx" to confirm replicas
Oct 31 09:02:57.209: INFO: Get Replication Controller "e2e-rc-svtgx" to confirm replicas
Oct 31 09:02:57.285: INFO: Found 2 replicas for "e2e-rc-svtgx" replication controller
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:02:57.286: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-196" for this suite. 10/31/23 09:02:57.413
------------------------------
â€¢ [3.036 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should get and update a ReplicationController scale [Conformance]
  test/e2e/apps/rc.go:402

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:02:54.43
    Oct 31 09:02:54.431: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replication-controller 10/31/23 09:02:54.432
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:02:54.631
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:02:54.773
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should get and update a ReplicationController scale [Conformance]
      test/e2e/apps/rc.go:402
    STEP: Creating ReplicationController "e2e-rc-svtgx" 10/31/23 09:02:54.916
    Oct 31 09:02:54.954: INFO: Get Replication Controller "e2e-rc-svtgx" to confirm replicas
    Oct 31 09:02:56.021: INFO: Get Replication Controller "e2e-rc-svtgx" to confirm replicas
    Oct 31 09:02:56.032: INFO: Found 1 replicas for "e2e-rc-svtgx" replication controller
    STEP: Getting scale subresource for ReplicationController "e2e-rc-svtgx" 10/31/23 09:02:56.033
    STEP: Updating a scale subresource 10/31/23 09:02:56.121
    STEP: Verifying replicas where modified for replication controller "e2e-rc-svtgx" 10/31/23 09:02:56.178
    Oct 31 09:02:56.178: INFO: Get Replication Controller "e2e-rc-svtgx" to confirm replicas
    Oct 31 09:02:57.209: INFO: Get Replication Controller "e2e-rc-svtgx" to confirm replicas
    Oct 31 09:02:57.285: INFO: Found 2 replicas for "e2e-rc-svtgx" replication controller
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:02:57.286: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-196" for this suite. 10/31/23 09:02:57.413
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:02:57.467
Oct 31 09:02:57.467: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 09:02:57.47
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:02:57.626
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:02:57.724
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 09:02:57.954
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:02:58.355
STEP: Deploying the webhook pod 10/31/23 09:02:58.411
STEP: Wait for the deployment to be ready 10/31/23 09:02:58.538
Oct 31 09:02:58.753: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 2, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 2, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 2, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 2, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:03:00.761
STEP: Verifying the service has paired with the endpoint 10/31/23 09:03:00.839
Oct 31 09:03:01.841: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381
STEP: Setting timeout (1s) shorter than webhook latency (5s) 10/31/23 09:03:01.849
STEP: Registering slow webhook via the AdmissionRegistration API 10/31/23 09:03:01.849
Oct 31 09:03:03.045: INFO: Waiting for webhook configuration to be ready...
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 10/31/23 09:03:03.386
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 10/31/23 09:03:04.53
STEP: Registering slow webhook via the AdmissionRegistration API 10/31/23 09:03:04.53
STEP: Having no error when timeout is longer than webhook latency 10/31/23 09:03:05.922
STEP: Registering slow webhook via the AdmissionRegistration API 10/31/23 09:03:05.922
STEP: Having no error when timeout is empty (defaulted to 10s in v1) 10/31/23 09:03:11.462
STEP: Registering slow webhook via the AdmissionRegistration API 10/31/23 09:03:11.462
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:03:16.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6504" for this suite. 10/31/23 09:03:17.222
STEP: Destroying namespace "webhook-6504-markers" for this suite. 10/31/23 09:03:17.281
------------------------------
â€¢ [SLOW TEST] [19.831 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/apimachinery/webhook.go:381

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:02:57.467
    Oct 31 09:02:57.467: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 09:02:57.47
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:02:57.626
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:02:57.724
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 09:02:57.954
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:02:58.355
    STEP: Deploying the webhook pod 10/31/23 09:02:58.411
    STEP: Wait for the deployment to be ready 10/31/23 09:02:58.538
    Oct 31 09:02:58.753: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 2, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 2, 58, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 2, 58, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 2, 58, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:03:00.761
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:03:00.839
    Oct 31 09:03:01.841: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should honor timeout [Conformance]
      test/e2e/apimachinery/webhook.go:381
    STEP: Setting timeout (1s) shorter than webhook latency (5s) 10/31/23 09:03:01.849
    STEP: Registering slow webhook via the AdmissionRegistration API 10/31/23 09:03:01.849
    Oct 31 09:03:03.045: INFO: Waiting for webhook configuration to be ready...
    STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) 10/31/23 09:03:03.386
    STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore 10/31/23 09:03:04.53
    STEP: Registering slow webhook via the AdmissionRegistration API 10/31/23 09:03:04.53
    STEP: Having no error when timeout is longer than webhook latency 10/31/23 09:03:05.922
    STEP: Registering slow webhook via the AdmissionRegistration API 10/31/23 09:03:05.922
    STEP: Having no error when timeout is empty (defaulted to 10s in v1) 10/31/23 09:03:11.462
    STEP: Registering slow webhook via the AdmissionRegistration API 10/31/23 09:03:11.462
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:03:16.806: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6504" for this suite. 10/31/23 09:03:17.222
    STEP: Destroying namespace "webhook-6504-markers" for this suite. 10/31/23 09:03:17.281
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:03:17.302
Oct 31 09:03:17.302: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:03:17.303
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:03:17.492
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:03:17.701
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848
STEP: creating service multi-endpoint-test in namespace services-7327 10/31/23 09:03:17.801
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[] 10/31/23 09:03:17.875
Oct 31 09:03:18.097: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-7327 10/31/23 09:03:18.097
Oct 31 09:03:18.156: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-7327" to be "running and ready"
Oct 31 09:03:18.175: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 18.520448ms
Oct 31 09:03:18.175: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:03:20.184: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.027337117s
Oct 31 09:03:20.184: INFO: The phase of Pod pod1 is Running (Ready = true)
Oct 31 09:03:20.184: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[pod1:[100]] 10/31/23 09:03:20.277
Oct 31 09:03:20.537: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-7327 10/31/23 09:03:20.537
Oct 31 09:03:20.594: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-7327" to be "running and ready"
Oct 31 09:03:20.623: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 28.386825ms
Oct 31 09:03:20.623: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:03:22.685: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.090024214s
Oct 31 09:03:22.685: INFO: The phase of Pod pod2 is Running (Ready = true)
Oct 31 09:03:22.685: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[pod1:[100] pod2:[101]] 10/31/23 09:03:22.745
Oct 31 09:03:22.981: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods 10/31/23 09:03:22.981
Oct 31 09:03:22.982: INFO: Creating new exec pod
Oct 31 09:03:23.012: INFO: Waiting up to 5m0s for pod "execpodgtcbx" in namespace "services-7327" to be "running"
Oct 31 09:03:23.019: INFO: Pod "execpodgtcbx": Phase="Pending", Reason="", readiness=false. Elapsed: 7.165871ms
Oct 31 09:03:25.029: INFO: Pod "execpodgtcbx": Phase="Running", Reason="", readiness=true. Elapsed: 2.016971765s
Oct 31 09:03:25.029: INFO: Pod "execpodgtcbx" satisfied condition "running"
Oct 31 09:03:26.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7327 exec execpodgtcbx -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
Oct 31 09:03:27.167: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Oct 31 09:03:27.167: INFO: stdout: ""
Oct 31 09:03:27.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7327 exec execpodgtcbx -- /bin/sh -x -c nc -v -z -w 2 10.93.77.230 80'
Oct 31 09:03:28.170: INFO: stderr: "+ nc -v -z -w 2 10.93.77.230 80\nConnection to 10.93.77.230 80 port [tcp/http] succeeded!\n"
Oct 31 09:03:28.170: INFO: stdout: ""
Oct 31 09:03:28.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7327 exec execpodgtcbx -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
Oct 31 09:03:28.960: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Oct 31 09:03:28.960: INFO: stdout: ""
Oct 31 09:03:28.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7327 exec execpodgtcbx -- /bin/sh -x -c nc -v -z -w 2 10.93.77.230 81'
Oct 31 09:03:29.910: INFO: stderr: "+ nc -v -z -w 2 10.93.77.230 81\nConnection to 10.93.77.230 81 port [tcp/*] succeeded!\n"
Oct 31 09:03:29.910: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-7327 10/31/23 09:03:29.91
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[pod2:[101]] 10/31/23 09:03:29.994
Oct 31 09:03:30.308: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-7327 10/31/23 09:03:30.308
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[] 10/31/23 09:03:30.385
Oct 31 09:03:30.645: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:03:30.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7327" for this suite. 10/31/23 09:03:30.836
------------------------------
â€¢ [SLOW TEST] [13.588 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/network/service.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:03:17.302
    Oct 31 09:03:17.302: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:03:17.303
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:03:17.492
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:03:17.701
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve multiport endpoints from pods  [Conformance]
      test/e2e/network/service.go:848
    STEP: creating service multi-endpoint-test in namespace services-7327 10/31/23 09:03:17.801
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[] 10/31/23 09:03:17.875
    Oct 31 09:03:18.097: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-7327 10/31/23 09:03:18.097
    Oct 31 09:03:18.156: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-7327" to be "running and ready"
    Oct 31 09:03:18.175: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 18.520448ms
    Oct 31 09:03:18.175: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:03:20.184: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.027337117s
    Oct 31 09:03:20.184: INFO: The phase of Pod pod1 is Running (Ready = true)
    Oct 31 09:03:20.184: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[pod1:[100]] 10/31/23 09:03:20.277
    Oct 31 09:03:20.537: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[pod1:[100]]
    STEP: Creating pod pod2 in namespace services-7327 10/31/23 09:03:20.537
    Oct 31 09:03:20.594: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-7327" to be "running and ready"
    Oct 31 09:03:20.623: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 28.386825ms
    Oct 31 09:03:20.623: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:03:22.685: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.090024214s
    Oct 31 09:03:22.685: INFO: The phase of Pod pod2 is Running (Ready = true)
    Oct 31 09:03:22.685: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[pod1:[100] pod2:[101]] 10/31/23 09:03:22.745
    Oct 31 09:03:22.981: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[pod1:[100] pod2:[101]]
    STEP: Checking if the Service forwards traffic to pods 10/31/23 09:03:22.981
    Oct 31 09:03:22.982: INFO: Creating new exec pod
    Oct 31 09:03:23.012: INFO: Waiting up to 5m0s for pod "execpodgtcbx" in namespace "services-7327" to be "running"
    Oct 31 09:03:23.019: INFO: Pod "execpodgtcbx": Phase="Pending", Reason="", readiness=false. Elapsed: 7.165871ms
    Oct 31 09:03:25.029: INFO: Pod "execpodgtcbx": Phase="Running", Reason="", readiness=true. Elapsed: 2.016971765s
    Oct 31 09:03:25.029: INFO: Pod "execpodgtcbx" satisfied condition "running"
    Oct 31 09:03:26.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7327 exec execpodgtcbx -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 80'
    Oct 31 09:03:27.167: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
    Oct 31 09:03:27.167: INFO: stdout: ""
    Oct 31 09:03:27.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7327 exec execpodgtcbx -- /bin/sh -x -c nc -v -z -w 2 10.93.77.230 80'
    Oct 31 09:03:28.170: INFO: stderr: "+ nc -v -z -w 2 10.93.77.230 80\nConnection to 10.93.77.230 80 port [tcp/http] succeeded!\n"
    Oct 31 09:03:28.170: INFO: stdout: ""
    Oct 31 09:03:28.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7327 exec execpodgtcbx -- /bin/sh -x -c nc -v -z -w 2 multi-endpoint-test 81'
    Oct 31 09:03:28.960: INFO: stderr: "+ nc -v -z -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
    Oct 31 09:03:28.960: INFO: stdout: ""
    Oct 31 09:03:28.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7327 exec execpodgtcbx -- /bin/sh -x -c nc -v -z -w 2 10.93.77.230 81'
    Oct 31 09:03:29.910: INFO: stderr: "+ nc -v -z -w 2 10.93.77.230 81\nConnection to 10.93.77.230 81 port [tcp/*] succeeded!\n"
    Oct 31 09:03:29.910: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-7327 10/31/23 09:03:29.91
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[pod2:[101]] 10/31/23 09:03:29.994
    Oct 31 09:03:30.308: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[pod2:[101]]
    STEP: Deleting pod pod2 in namespace services-7327 10/31/23 09:03:30.308
    STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7327 to expose endpoints map[] 10/31/23 09:03:30.385
    Oct 31 09:03:30.645: INFO: successfully validated that service multi-endpoint-test in namespace services-7327 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:03:30.777: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7327" for this suite. 10/31/23 09:03:30.836
  << End Captured GinkgoWriter Output
------------------------------
[sig-cli] Kubectl client Guestbook application
  should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:03:30.894
Oct 31 09:03:30.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 09:03:30.897
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:03:31.09
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:03:31.269
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create and stop a working application  [Conformance]
  test/e2e/kubectl/kubectl.go:394
STEP: creating all guestbook components 10/31/23 09:03:31.373
Oct 31 09:03:31.373: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Oct 31 09:03:31.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
Oct 31 09:03:32.871: INFO: stderr: ""
Oct 31 09:03:32.871: INFO: stdout: "service/agnhost-replica created\n"
Oct 31 09:03:32.872: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Oct 31 09:03:32.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
Oct 31 09:03:34.476: INFO: stderr: ""
Oct 31 09:03:34.476: INFO: stdout: "service/agnhost-primary created\n"
Oct 31 09:03:34.476: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Oct 31 09:03:34.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
Oct 31 09:03:34.868: INFO: stderr: ""
Oct 31 09:03:34.868: INFO: stdout: "service/frontend created\n"
Oct 31 09:03:34.868: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Oct 31 09:03:34.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
Oct 31 09:03:35.235: INFO: stderr: ""
Oct 31 09:03:35.235: INFO: stdout: "deployment.apps/frontend created\n"
Oct 31 09:03:35.235: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Oct 31 09:03:35.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
Oct 31 09:03:35.709: INFO: stderr: ""
Oct 31 09:03:35.709: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Oct 31 09:03:35.709: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: registry.k8s.io/e2e-test-images/agnhost:2.43
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Oct 31 09:03:35.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
Oct 31 09:03:36.203: INFO: stderr: ""
Oct 31 09:03:36.203: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app 10/31/23 09:03:36.203
Oct 31 09:03:36.204: INFO: Waiting for all frontend pods to be Running.
Oct 31 09:03:41.254: INFO: Waiting for frontend to serve content.
Oct 31 09:03:41.409: INFO: Trying to add a new entry to the guestbook.
Oct 31 09:03:41.605: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources 10/31/23 09:03:41.848
Oct 31 09:03:41.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
Oct 31 09:03:42.103: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Oct 31 09:03:42.103: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources 10/31/23 09:03:42.103
Oct 31 09:03:42.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
Oct 31 09:03:42.415: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Oct 31 09:03:42.415: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 10/31/23 09:03:42.415
Oct 31 09:03:42.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
Oct 31 09:03:42.672: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Oct 31 09:03:42.672: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources 10/31/23 09:03:42.672
Oct 31 09:03:42.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
Oct 31 09:03:42.894: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Oct 31 09:03:42.894: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources 10/31/23 09:03:42.894
Oct 31 09:03:42.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
Oct 31 09:03:43.108: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Oct 31 09:03:43.108: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources 10/31/23 09:03:43.108
Oct 31 09:03:43.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
Oct 31 09:03:43.345: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Oct 31 09:03:43.345: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 09:03:43.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-3902" for this suite. 10/31/23 09:03:43.383
------------------------------
â€¢ [SLOW TEST] [12.518 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:369
    should create and stop a working application  [Conformance]
    test/e2e/kubectl/kubectl.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:03:30.894
    Oct 31 09:03:30.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 09:03:30.897
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:03:31.09
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:03:31.269
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create and stop a working application  [Conformance]
      test/e2e/kubectl/kubectl.go:394
    STEP: creating all guestbook components 10/31/23 09:03:31.373
    Oct 31 09:03:31.373: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-replica
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      ports:
      - port: 6379
      selector:
        app: agnhost
        role: replica
        tier: backend

    Oct 31 09:03:31.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
    Oct 31 09:03:32.871: INFO: stderr: ""
    Oct 31 09:03:32.871: INFO: stdout: "service/agnhost-replica created\n"
    Oct 31 09:03:32.872: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: agnhost-primary
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      ports:
      - port: 6379
        targetPort: 6379
      selector:
        app: agnhost
        role: primary
        tier: backend

    Oct 31 09:03:32.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
    Oct 31 09:03:34.476: INFO: stderr: ""
    Oct 31 09:03:34.476: INFO: stdout: "service/agnhost-primary created\n"
    Oct 31 09:03:34.476: INFO: apiVersion: v1
    kind: Service
    metadata:
      name: frontend
      labels:
        app: guestbook
        tier: frontend
    spec:
      # if your cluster supports it, uncomment the following to automatically create
      # an external load-balanced IP for the frontend service.
      # type: LoadBalancer
      ports:
      - port: 80
      selector:
        app: guestbook
        tier: frontend

    Oct 31 09:03:34.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
    Oct 31 09:03:34.868: INFO: stderr: ""
    Oct 31 09:03:34.868: INFO: stdout: "service/frontend created\n"
    Oct 31 09:03:34.868: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: frontend
    spec:
      replicas: 3
      selector:
        matchLabels:
          app: guestbook
          tier: frontend
      template:
        metadata:
          labels:
            app: guestbook
            tier: frontend
        spec:
          containers:
          - name: guestbook-frontend
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--backend-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 80

    Oct 31 09:03:34.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
    Oct 31 09:03:35.235: INFO: stderr: ""
    Oct 31 09:03:35.235: INFO: stdout: "deployment.apps/frontend created\n"
    Oct 31 09:03:35.235: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-primary
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: agnhost
          role: primary
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: primary
            tier: backend
        spec:
          containers:
          - name: primary
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Oct 31 09:03:35.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
    Oct 31 09:03:35.709: INFO: stderr: ""
    Oct 31 09:03:35.709: INFO: stdout: "deployment.apps/agnhost-primary created\n"
    Oct 31 09:03:35.709: INFO: apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: agnhost-replica
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: agnhost
          role: replica
          tier: backend
      template:
        metadata:
          labels:
            app: agnhost
            role: replica
            tier: backend
        spec:
          containers:
          - name: replica
            image: registry.k8s.io/e2e-test-images/agnhost:2.43
            args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 6379

    Oct 31 09:03:35.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 create -f -'
    Oct 31 09:03:36.203: INFO: stderr: ""
    Oct 31 09:03:36.203: INFO: stdout: "deployment.apps/agnhost-replica created\n"
    STEP: validating guestbook app 10/31/23 09:03:36.203
    Oct 31 09:03:36.204: INFO: Waiting for all frontend pods to be Running.
    Oct 31 09:03:41.254: INFO: Waiting for frontend to serve content.
    Oct 31 09:03:41.409: INFO: Trying to add a new entry to the guestbook.
    Oct 31 09:03:41.605: INFO: Verifying that added entry can be retrieved.
    STEP: using delete to clean up resources 10/31/23 09:03:41.848
    Oct 31 09:03:41.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
    Oct 31 09:03:42.103: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Oct 31 09:03:42.103: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
    STEP: using delete to clean up resources 10/31/23 09:03:42.103
    Oct 31 09:03:42.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
    Oct 31 09:03:42.415: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Oct 31 09:03:42.415: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 10/31/23 09:03:42.415
    Oct 31 09:03:42.416: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
    Oct 31 09:03:42.672: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Oct 31 09:03:42.672: INFO: stdout: "service \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 10/31/23 09:03:42.672
    Oct 31 09:03:42.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
    Oct 31 09:03:42.894: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Oct 31 09:03:42.894: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
    STEP: using delete to clean up resources 10/31/23 09:03:42.894
    Oct 31 09:03:42.894: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
    Oct 31 09:03:43.108: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Oct 31 09:03:43.108: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
    STEP: using delete to clean up resources 10/31/23 09:03:43.108
    Oct 31 09:03:43.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3902 delete --grace-period=0 --force -f -'
    Oct 31 09:03:43.345: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Oct 31 09:03:43.345: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:03:43.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-3902" for this suite. 10/31/23 09:03:43.383
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:03:43.412
Oct 31 09:03:43.413: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 09:03:43.413
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:03:43.602
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:03:43.743
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 09:03:43.968
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:03:44.499
STEP: Deploying the webhook pod 10/31/23 09:03:44.585
STEP: Wait for the deployment to be ready 10/31/23 09:03:44.663
Oct 31 09:03:44.850: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 3, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 3, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:03:46.86
STEP: Verifying the service has paired with the endpoint 10/31/23 09:03:46.927
Oct 31 09:03:47.928: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291
Oct 31 09:03:47.977: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-128-crds.webhook.example.com via the AdmissionRegistration API 10/31/23 09:03:53.141
STEP: Creating a custom resource that should be mutated by the webhook 10/31/23 09:03:53.392
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:03:56.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-2180" for this suite. 10/31/23 09:03:56.607
STEP: Destroying namespace "webhook-2180-markers" for this suite. 10/31/23 09:03:56.665
------------------------------
â€¢ [SLOW TEST] [13.275 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/apimachinery/webhook.go:291

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:03:43.412
    Oct 31 09:03:43.413: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 09:03:43.413
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:03:43.602
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:03:43.743
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 09:03:43.968
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:03:44.499
    STEP: Deploying the webhook pod 10/31/23 09:03:44.585
    STEP: Wait for the deployment to be ready 10/31/23 09:03:44.663
    Oct 31 09:03:44.850: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 3, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 3, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 3, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:03:46.86
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:03:46.927
    Oct 31 09:03:47.928: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource [Conformance]
      test/e2e/apimachinery/webhook.go:291
    Oct 31 09:03:47.977: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-128-crds.webhook.example.com via the AdmissionRegistration API 10/31/23 09:03:53.141
    STEP: Creating a custom resource that should be mutated by the webhook 10/31/23 09:03:53.392
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:03:56.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-2180" for this suite. 10/31/23 09:03:56.607
    STEP: Destroying namespace "webhook-2180-markers" for this suite. 10/31/23 09:03:56.665
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:03:56.688
Oct 31 09:03:56.689: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:03:56.69
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:03:56.798
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:03:56.975
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88
STEP: Creating projection with secret that has name projected-secret-test-map-1a8faf81-8c92-4a95-b0d7-be1dad44b2a8 10/31/23 09:03:57.034
STEP: Creating a pod to test consume secrets 10/31/23 09:03:57.12
Oct 31 09:03:57.185: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a" in namespace "projected-9504" to be "Succeeded or Failed"
Oct 31 09:03:57.211: INFO: Pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a": Phase="Pending", Reason="", readiness=false. Elapsed: 25.822019ms
Oct 31 09:03:59.275: INFO: Pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.089948212s
Oct 31 09:04:01.257: INFO: Pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.07200162s
STEP: Saw pod success 10/31/23 09:04:01.257
Oct 31 09:04:01.257: INFO: Pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a" satisfied condition "Succeeded or Failed"
Oct 31 09:04:01.349: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a container projected-secret-volume-test: <nil>
STEP: delete the pod 10/31/23 09:04:01.561
Oct 31 09:04:01.627: INFO: Waiting for pod pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a to disappear
Oct 31 09:04:01.684: INFO: Pod pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:01.684: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-9504" for this suite. 10/31/23 09:04:01.79
------------------------------
â€¢ [SLOW TEST] [5.199 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:88

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:03:56.688
    Oct 31 09:03:56.689: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:03:56.69
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:03:56.798
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:03:56.975
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:88
    STEP: Creating projection with secret that has name projected-secret-test-map-1a8faf81-8c92-4a95-b0d7-be1dad44b2a8 10/31/23 09:03:57.034
    STEP: Creating a pod to test consume secrets 10/31/23 09:03:57.12
    Oct 31 09:03:57.185: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a" in namespace "projected-9504" to be "Succeeded or Failed"
    Oct 31 09:03:57.211: INFO: Pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a": Phase="Pending", Reason="", readiness=false. Elapsed: 25.822019ms
    Oct 31 09:03:59.275: INFO: Pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.089948212s
    Oct 31 09:04:01.257: INFO: Pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.07200162s
    STEP: Saw pod success 10/31/23 09:04:01.257
    Oct 31 09:04:01.257: INFO: Pod "pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a" satisfied condition "Succeeded or Failed"
    Oct 31 09:04:01.349: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a container projected-secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 09:04:01.561
    Oct 31 09:04:01.627: INFO: Waiting for pod pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a to disappear
    Oct 31 09:04:01.684: INFO: Pod pod-projected-secrets-b1e0902b-f132-440d-b176-a3d24c77141a no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:01.684: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-9504" for this suite. 10/31/23 09:04:01.79
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:01.889
Oct 31 09:04:01.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename limitrange 10/31/23 09:04:01.892
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:02.074
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:02.274
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61
STEP: Creating a LimitRange 10/31/23 09:04:02.387
STEP: Setting up watch 10/31/23 09:04:02.388
STEP: Submitting a LimitRange 10/31/23 09:04:02.587
STEP: Verifying LimitRange creation was observed 10/31/23 09:04:02.625
STEP: Fetching the LimitRange to ensure it has proper values 10/31/23 09:04:02.627
Oct 31 09:04:02.732: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Oct 31 09:04:02.732: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements 10/31/23 09:04:02.732
STEP: Ensuring Pod has resource requirements applied from LimitRange 10/31/23 09:04:02.805
Oct 31 09:04:02.917: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Oct 31 09:04:02.918: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements 10/31/23 09:04:02.918
STEP: Ensuring Pod has merged resource requirements applied from LimitRange 10/31/23 09:04:02.971
Oct 31 09:04:02.996: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Oct 31 09:04:02.996: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources 10/31/23 09:04:02.996
STEP: Failing to create a Pod with more than max resources 10/31/23 09:04:03.087
STEP: Updating a LimitRange 10/31/23 09:04:03.175
STEP: Verifying LimitRange updating is effective 10/31/23 09:04:03.235
STEP: Creating a Pod with less than former min resources 10/31/23 09:04:05.245
STEP: Failing to create a Pod with more than max resources 10/31/23 09:04:05.301
STEP: Deleting a LimitRange 10/31/23 09:04:05.33
STEP: Verifying the LimitRange was deleted 10/31/23 09:04:05.423
Oct 31 09:04:10.470: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources 10/31/23 09:04:10.47
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:10.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-9442" for this suite. 10/31/23 09:04:10.56
------------------------------
â€¢ [SLOW TEST] [8.765 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/scheduling/limit_range.go:61

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:01.889
    Oct 31 09:04:01.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename limitrange 10/31/23 09:04:01.892
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:02.074
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:02.274
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
      test/e2e/scheduling/limit_range.go:61
    STEP: Creating a LimitRange 10/31/23 09:04:02.387
    STEP: Setting up watch 10/31/23 09:04:02.388
    STEP: Submitting a LimitRange 10/31/23 09:04:02.587
    STEP: Verifying LimitRange creation was observed 10/31/23 09:04:02.625
    STEP: Fetching the LimitRange to ensure it has proper values 10/31/23 09:04:02.627
    Oct 31 09:04:02.732: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Oct 31 09:04:02.732: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with no resource requirements 10/31/23 09:04:02.732
    STEP: Ensuring Pod has resource requirements applied from LimitRange 10/31/23 09:04:02.805
    Oct 31 09:04:02.917: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
    Oct 31 09:04:02.918: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Creating a Pod with partial resource requirements 10/31/23 09:04:02.918
    STEP: Ensuring Pod has merged resource requirements applied from LimitRange 10/31/23 09:04:02.971
    Oct 31 09:04:02.996: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
    Oct 31 09:04:02.996: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
    STEP: Failing to create a Pod with less than min resources 10/31/23 09:04:02.996
    STEP: Failing to create a Pod with more than max resources 10/31/23 09:04:03.087
    STEP: Updating a LimitRange 10/31/23 09:04:03.175
    STEP: Verifying LimitRange updating is effective 10/31/23 09:04:03.235
    STEP: Creating a Pod with less than former min resources 10/31/23 09:04:05.245
    STEP: Failing to create a Pod with more than max resources 10/31/23 09:04:05.301
    STEP: Deleting a LimitRange 10/31/23 09:04:05.33
    STEP: Verifying the LimitRange was deleted 10/31/23 09:04:05.423
    Oct 31 09:04:10.470: INFO: limitRange is already deleted
    STEP: Creating a Pod with more than former max resources 10/31/23 09:04:10.47
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:10.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-9442" for this suite. 10/31/23 09:04:10.56
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions
  should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:10.659
Oct 31 09:04:10.659: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 09:04:10.661
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:10.815
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:10.948
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/kubectl/kubectl.go:824
STEP: validating api versions 10/31/23 09:04:11.081
Oct 31 09:04:11.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-5649 api-versions'
Oct 31 09:04:11.397: INFO: stderr: ""
Oct 31 09:04:11.397: INFO: stdout: "admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1alpha1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\ninternal.apiserver.k8s.io/v1alpha1\nnetworking.k8s.io/v1\nnetworking.k8s.io/v1alpha1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1alpha1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:11.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-5649" for this suite. 10/31/23 09:04:11.479
------------------------------
â€¢ [0.839 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl api-versions
  test/e2e/kubectl/kubectl.go:818
    should check if v1 is in available api versions  [Conformance]
    test/e2e/kubectl/kubectl.go:824

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:10.659
    Oct 31 09:04:10.659: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 09:04:10.661
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:10.815
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:10.948
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if v1 is in available api versions  [Conformance]
      test/e2e/kubectl/kubectl.go:824
    STEP: validating api versions 10/31/23 09:04:11.081
    Oct 31 09:04:11.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-5649 api-versions'
    Oct 31 09:04:11.397: INFO: stderr: ""
    Oct 31 09:04:11.397: INFO: stdout: "admissionregistration.k8s.io/v1\nadmissionregistration.k8s.io/v1alpha1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\ninternal.apiserver.k8s.io/v1alpha1\nnetworking.k8s.io/v1\nnetworking.k8s.io/v1alpha1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nresource.k8s.io/v1alpha1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:11.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-5649" for this suite. 10/31/23 09:04:11.479
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
[BeforeEach] [sig-scheduling] LimitRange
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:11.501
Oct 31 09:04:11.501: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename limitrange 10/31/23 09:04:11.502
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:11.672
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:11.791
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:31
[It] should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239
STEP: Creating LimitRange "e2e-limitrange-9jvp8" in namespace "limitrange-6223" 10/31/23 09:04:11.935
STEP: Creating another limitRange in another namespace 10/31/23 09:04:12.023
Oct 31 09:04:12.205: INFO: Namespace "e2e-limitrange-9jvp8-636" created
Oct 31 09:04:12.205: INFO: Creating LimitRange "e2e-limitrange-9jvp8" in namespace "e2e-limitrange-9jvp8-636"
STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-9jvp8" 10/31/23 09:04:12.363
Oct 31 09:04:12.374: INFO: Found 2 limitRanges
STEP: Patching LimitRange "e2e-limitrange-9jvp8" in "limitrange-6223" namespace 10/31/23 09:04:12.375
Oct 31 09:04:12.459: INFO: LimitRange "e2e-limitrange-9jvp8" has been patched
STEP: Delete LimitRange "e2e-limitrange-9jvp8" by Collection with labelSelector: "e2e-limitrange-9jvp8=patched" 10/31/23 09:04:12.46
STEP: Confirm that the limitRange "e2e-limitrange-9jvp8" has been deleted 10/31/23 09:04:12.595
Oct 31 09:04:12.595: INFO: Requesting list of LimitRange to confirm quantity
Oct 31 09:04:12.694: INFO: Found 0 LimitRange with label "e2e-limitrange-9jvp8=patched"
Oct 31 09:04:12.694: INFO: LimitRange "e2e-limitrange-9jvp8" has been deleted.
STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-9jvp8" 10/31/23 09:04:12.695
Oct 31 09:04:12.800: INFO: Found 1 limitRange
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:12.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] LimitRange
  tear down framework | framework.go:193
STEP: Destroying namespace "limitrange-6223" for this suite. 10/31/23 09:04:12.865
STEP: Destroying namespace "e2e-limitrange-9jvp8-636" for this suite. 10/31/23 09:04:12.957
------------------------------
â€¢ [1.544 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should list, patch and delete a LimitRange by collection [Conformance]
  test/e2e/scheduling/limit_range.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] LimitRange
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:11.501
    Oct 31 09:04:11.501: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename limitrange 10/31/23 09:04:11.502
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:11.672
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:11.791
    [BeforeEach] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:31
    [It] should list, patch and delete a LimitRange by collection [Conformance]
      test/e2e/scheduling/limit_range.go:239
    STEP: Creating LimitRange "e2e-limitrange-9jvp8" in namespace "limitrange-6223" 10/31/23 09:04:11.935
    STEP: Creating another limitRange in another namespace 10/31/23 09:04:12.023
    Oct 31 09:04:12.205: INFO: Namespace "e2e-limitrange-9jvp8-636" created
    Oct 31 09:04:12.205: INFO: Creating LimitRange "e2e-limitrange-9jvp8" in namespace "e2e-limitrange-9jvp8-636"
    STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-9jvp8" 10/31/23 09:04:12.363
    Oct 31 09:04:12.374: INFO: Found 2 limitRanges
    STEP: Patching LimitRange "e2e-limitrange-9jvp8" in "limitrange-6223" namespace 10/31/23 09:04:12.375
    Oct 31 09:04:12.459: INFO: LimitRange "e2e-limitrange-9jvp8" has been patched
    STEP: Delete LimitRange "e2e-limitrange-9jvp8" by Collection with labelSelector: "e2e-limitrange-9jvp8=patched" 10/31/23 09:04:12.46
    STEP: Confirm that the limitRange "e2e-limitrange-9jvp8" has been deleted 10/31/23 09:04:12.595
    Oct 31 09:04:12.595: INFO: Requesting list of LimitRange to confirm quantity
    Oct 31 09:04:12.694: INFO: Found 0 LimitRange with label "e2e-limitrange-9jvp8=patched"
    Oct 31 09:04:12.694: INFO: LimitRange "e2e-limitrange-9jvp8" has been deleted.
    STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-9jvp8" 10/31/23 09:04:12.695
    Oct 31 09:04:12.800: INFO: Found 1 limitRange
    [AfterEach] [sig-scheduling] LimitRange
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:12.801: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] LimitRange
      tear down framework | framework.go:193
    STEP: Destroying namespace "limitrange-6223" for this suite. 10/31/23 09:04:12.865
    STEP: Destroying namespace "e2e-limitrange-9jvp8-636" for this suite. 10/31/23 09:04:12.957
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
[BeforeEach] [sig-api-machinery] server version
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:13.05
Oct 31 09:04:13.050: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename server-version 10/31/23 09:04:13.052
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:13.361
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:13.594
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:31
[It] should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39
STEP: Request ServerVersion 10/31/23 09:04:13.658
STEP: Confirm major version 10/31/23 09:04:13.747
Oct 31 09:04:13.747: INFO: Major version: 1
STEP: Confirm minor version 10/31/23 09:04:13.747
Oct 31 09:04:13.747: INFO: cleanMinorVersion: 26
Oct 31 09:04:13.747: INFO: Minor version: 26
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:13.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] server version
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] server version
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] server version
  tear down framework | framework.go:193
STEP: Destroying namespace "server-version-4567" for this suite. 10/31/23 09:04:13.791
------------------------------
â€¢ [0.751 seconds]
[sig-api-machinery] server version
test/e2e/apimachinery/framework.go:23
  should find the server version [Conformance]
  test/e2e/apimachinery/server_version.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] server version
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:13.05
    Oct 31 09:04:13.050: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename server-version 10/31/23 09:04:13.052
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:13.361
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:13.594
    [BeforeEach] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:31
    [It] should find the server version [Conformance]
      test/e2e/apimachinery/server_version.go:39
    STEP: Request ServerVersion 10/31/23 09:04:13.658
    STEP: Confirm major version 10/31/23 09:04:13.747
    Oct 31 09:04:13.747: INFO: Major version: 1
    STEP: Confirm minor version 10/31/23 09:04:13.747
    Oct 31 09:04:13.747: INFO: cleanMinorVersion: 26
    Oct 31 09:04:13.747: INFO: Minor version: 26
    [AfterEach] [sig-api-machinery] server version
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:13.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] server version
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] server version
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] server version
      tear down framework | framework.go:193
    STEP: Destroying namespace "server-version-4567" for this suite. 10/31/23 09:04:13.791
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:13.809
Oct 31 09:04:13.809: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sysctl 10/31/23 09:04:13.81
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:13.993
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:14.112
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123
STEP: Creating a pod with one valid and two invalid sysctls 10/31/23 09:04:14.207
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:14.293: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-6730" for this suite. 10/31/23 09:04:14.303
------------------------------
â€¢ [0.506 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:123

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:13.809
    Oct 31 09:04:13.809: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sysctl 10/31/23 09:04:13.81
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:13.993
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:14.112
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:123
    STEP: Creating a pod with one valid and two invalid sysctls 10/31/23 09:04:14.207
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:14.293: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-6730" for this suite. 10/31/23 09:04:14.303
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:14.316
Oct 31 09:04:14.316: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 09:04:14.318
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:14.46
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:14.592
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 09:04:14.822
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:04:15.028
STEP: Deploying the webhook pod 10/31/23 09:04:15.042
STEP: Wait for the deployment to be ready 10/31/23 09:04:15.138
Oct 31 09:04:15.252: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 09:04:17.276: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:04:19.26
STEP: Verifying the service has paired with the endpoint 10/31/23 09:04:19.418
Oct 31 09:04:20.419: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413
STEP: Creating a validating webhook configuration 10/31/23 09:04:20.482
Oct 31 09:04:21.658: INFO: Waiting for webhook configuration to be ready...
STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:04:22.946
STEP: Updating a validating webhook configuration's rules to not include the create operation 10/31/23 09:04:23.133
STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:04:23.199
STEP: Patching a validating webhook configuration's rules to include the create operation 10/31/23 09:04:23.39
STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:04:23.489
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:23.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-9389" for this suite. 10/31/23 09:04:24.323
STEP: Destroying namespace "webhook-9389-markers" for this suite. 10/31/23 09:04:24.34
------------------------------
â€¢ [SLOW TEST] [10.079 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a validating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:413

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:14.316
    Oct 31 09:04:14.316: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 09:04:14.318
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:14.46
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:14.592
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 09:04:14.822
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:04:15.028
    STEP: Deploying the webhook pod 10/31/23 09:04:15.042
    STEP: Wait for the deployment to be ready 10/31/23 09:04:15.138
    Oct 31 09:04:15.252: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 09:04:17.276: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:04:19.26
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:04:19.418
    Oct 31 09:04:20.419: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a validating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:413
    STEP: Creating a validating webhook configuration 10/31/23 09:04:20.482
    Oct 31 09:04:21.658: INFO: Waiting for webhook configuration to be ready...
    STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:04:22.946
    STEP: Updating a validating webhook configuration's rules to not include the create operation 10/31/23 09:04:23.133
    STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:04:23.199
    STEP: Patching a validating webhook configuration's rules to include the create operation 10/31/23 09:04:23.39
    STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:04:23.489
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:23.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-9389" for this suite. 10/31/23 09:04:24.323
    STEP: Destroying namespace "webhook-9389-markers" for this suite. 10/31/23 09:04:24.34
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:24.405
Oct 31 09:04:24.406: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename runtimeclass 10/31/23 09:04:24.406
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:24.579
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:24.712
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104
Oct 31 09:04:24.951: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-8132 to be scheduled
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:25.057: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-8132" for this suite. 10/31/23 09:04:25.109
------------------------------
â€¢ [0.758 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:104

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:24.405
    Oct 31 09:04:24.406: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename runtimeclass 10/31/23 09:04:24.406
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:24.579
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:24.712
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:104
    Oct 31 09:04:24.951: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-8132 to be scheduled
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:25.057: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-8132" for this suite. 10/31/23 09:04:25.109
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:25.167
Oct 31 09:04:25.167: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:04:25.168
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:25.398
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:25.533
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109
STEP: Creating configMap with name projected-configmap-test-volume-map-02ecf950-120a-45b3-a789-ef28784a5602 10/31/23 09:04:25.674
STEP: Creating a pod to test consume configMaps 10/31/23 09:04:25.762
Oct 31 09:04:25.816: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186" in namespace "projected-3183" to be "Succeeded or Failed"
Oct 31 09:04:25.842: INFO: Pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186": Phase="Pending", Reason="", readiness=false. Elapsed: 25.637058ms
Oct 31 09:04:27.893: INFO: Pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186": Phase="Pending", Reason="", readiness=false. Elapsed: 2.076800982s
Oct 31 09:04:29.873: INFO: Pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.056097187s
STEP: Saw pod success 10/31/23 09:04:29.873
Oct 31 09:04:29.873: INFO: Pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186" satisfied condition "Succeeded or Failed"
Oct 31 09:04:29.931: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:04:30.369
Oct 31 09:04:30.391: INFO: Waiting for pod pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186 to disappear
Oct 31 09:04:30.482: INFO: Pod pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:30.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3183" for this suite. 10/31/23 09:04:30.512
------------------------------
â€¢ [SLOW TEST] [5.412 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:25.167
    Oct 31 09:04:25.167: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:04:25.168
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:25.398
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:25.533
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:109
    STEP: Creating configMap with name projected-configmap-test-volume-map-02ecf950-120a-45b3-a789-ef28784a5602 10/31/23 09:04:25.674
    STEP: Creating a pod to test consume configMaps 10/31/23 09:04:25.762
    Oct 31 09:04:25.816: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186" in namespace "projected-3183" to be "Succeeded or Failed"
    Oct 31 09:04:25.842: INFO: Pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186": Phase="Pending", Reason="", readiness=false. Elapsed: 25.637058ms
    Oct 31 09:04:27.893: INFO: Pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186": Phase="Pending", Reason="", readiness=false. Elapsed: 2.076800982s
    Oct 31 09:04:29.873: INFO: Pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.056097187s
    STEP: Saw pod success 10/31/23 09:04:29.873
    Oct 31 09:04:29.873: INFO: Pod "pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186" satisfied condition "Succeeded or Failed"
    Oct 31 09:04:29.931: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:04:30.369
    Oct 31 09:04:30.391: INFO: Waiting for pod pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186 to disappear
    Oct 31 09:04:30.482: INFO: Pod pod-projected-configmaps-5d5aa461-aacb-47be-9f68-2176d9b80186 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:30.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3183" for this suite. 10/31/23 09:04:30.512
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:30.578
Oct 31 09:04:30.579: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-lifecycle-hook 10/31/23 09:04:30.58
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:30.775
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:30.909
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 10/31/23 09:04:31.065
Oct 31 09:04:31.185: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-4043" to be "running and ready"
Oct 31 09:04:31.244: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 58.846326ms
Oct 31 09:04:31.244: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:04:33.254: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.068895295s
Oct 31 09:04:33.254: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Oct 31 09:04:33.254: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:134
STEP: create the pod with lifecycle hook 10/31/23 09:04:33.303
Oct 31 09:04:33.354: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-4043" to be "running and ready"
Oct 31 09:04:33.416: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 62.2909ms
Oct 31 09:04:33.416: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:04:35.429: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.075467765s
Oct 31 09:04:35.430: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
Oct 31 09:04:35.430: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
STEP: check poststart hook 10/31/23 09:04:35.479
STEP: delete the pod with lifecycle hook 10/31/23 09:04:35.617
Oct 31 09:04:35.676: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Oct 31 09:04:35.692: INFO: Pod pod-with-poststart-exec-hook still exists
Oct 31 09:04:37.693: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Oct 31 09:04:37.703: INFO: Pod pod-with-poststart-exec-hook still exists
Oct 31 09:04:39.693: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Oct 31 09:04:39.700: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:39.700: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-4043" for this suite. 10/31/23 09:04:39.754
------------------------------
â€¢ [SLOW TEST] [9.213 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:134

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:30.578
    Oct 31 09:04:30.579: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-lifecycle-hook 10/31/23 09:04:30.58
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:30.775
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:30.909
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 10/31/23 09:04:31.065
    Oct 31 09:04:31.185: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-4043" to be "running and ready"
    Oct 31 09:04:31.244: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 58.846326ms
    Oct 31 09:04:31.244: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:04:33.254: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.068895295s
    Oct 31 09:04:33.254: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Oct 31 09:04:33.254: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:134
    STEP: create the pod with lifecycle hook 10/31/23 09:04:33.303
    Oct 31 09:04:33.354: INFO: Waiting up to 5m0s for pod "pod-with-poststart-exec-hook" in namespace "container-lifecycle-hook-4043" to be "running and ready"
    Oct 31 09:04:33.416: INFO: Pod "pod-with-poststart-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 62.2909ms
    Oct 31 09:04:33.416: INFO: The phase of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:04:35.429: INFO: Pod "pod-with-poststart-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.075467765s
    Oct 31 09:04:35.430: INFO: The phase of Pod pod-with-poststart-exec-hook is Running (Ready = true)
    Oct 31 09:04:35.430: INFO: Pod "pod-with-poststart-exec-hook" satisfied condition "running and ready"
    STEP: check poststart hook 10/31/23 09:04:35.479
    STEP: delete the pod with lifecycle hook 10/31/23 09:04:35.617
    Oct 31 09:04:35.676: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Oct 31 09:04:35.692: INFO: Pod pod-with-poststart-exec-hook still exists
    Oct 31 09:04:37.693: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Oct 31 09:04:37.703: INFO: Pod pod-with-poststart-exec-hook still exists
    Oct 31 09:04:39.693: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
    Oct 31 09:04:39.700: INFO: Pod pod-with-poststart-exec-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:39.700: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-4043" for this suite. 10/31/23 09:04:39.754
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:39.802
Oct 31 09:04:39.802: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 09:04:39.803
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:39.965
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:40.1
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47
STEP: Creating configMap with name configmap-test-volume-5c801292-15f2-4cd4-ad61-d7eea0073124 10/31/23 09:04:40.237
STEP: Creating a pod to test consume configMaps 10/31/23 09:04:40.289
Oct 31 09:04:40.346: INFO: Waiting up to 5m0s for pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140" in namespace "configmap-3133" to be "Succeeded or Failed"
Oct 31 09:04:40.412: INFO: Pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140": Phase="Pending", Reason="", readiness=false. Elapsed: 65.678697ms
Oct 31 09:04:42.477: INFO: Pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140": Phase="Running", Reason="", readiness=false. Elapsed: 2.130849915s
Oct 31 09:04:44.424: INFO: Pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.077833408s
STEP: Saw pod success 10/31/23 09:04:44.424
Oct 31 09:04:44.425: INFO: Pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140" satisfied condition "Succeeded or Failed"
Oct 31 09:04:44.474: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:04:44.625
Oct 31 09:04:44.649: INFO: Waiting for pod pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140 to disappear
Oct 31 09:04:44.741: INFO: Pod pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:44.741: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-3133" for this suite. 10/31/23 09:04:44.798
------------------------------
â€¢ [SLOW TEST] [5.038 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:39.802
    Oct 31 09:04:39.802: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 09:04:39.803
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:39.965
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:40.1
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:47
    STEP: Creating configMap with name configmap-test-volume-5c801292-15f2-4cd4-ad61-d7eea0073124 10/31/23 09:04:40.237
    STEP: Creating a pod to test consume configMaps 10/31/23 09:04:40.289
    Oct 31 09:04:40.346: INFO: Waiting up to 5m0s for pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140" in namespace "configmap-3133" to be "Succeeded or Failed"
    Oct 31 09:04:40.412: INFO: Pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140": Phase="Pending", Reason="", readiness=false. Elapsed: 65.678697ms
    Oct 31 09:04:42.477: INFO: Pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140": Phase="Running", Reason="", readiness=false. Elapsed: 2.130849915s
    Oct 31 09:04:44.424: INFO: Pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.077833408s
    STEP: Saw pod success 10/31/23 09:04:44.424
    Oct 31 09:04:44.425: INFO: Pod "pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140" satisfied condition "Succeeded or Failed"
    Oct 31 09:04:44.474: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:04:44.625
    Oct 31 09:04:44.649: INFO: Waiting for pod pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140 to disappear
    Oct 31 09:04:44.741: INFO: Pod pod-configmaps-0ea3f801-e334-4a55-8084-2b4d60488140 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:44.741: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-3133" for this suite. 10/31/23 09:04:44.798
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:44.849
Oct 31 09:04:44.849: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 09:04:44.851
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:45.077
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:45.175
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 09:04:45.376
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:04:46.148
STEP: Deploying the webhook pod 10/31/23 09:04:46.197
STEP: Wait for the deployment to be ready 10/31/23 09:04:46.308
Oct 31 09:04:46.518: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:04:48.53
STEP: Verifying the service has paired with the endpoint 10/31/23 09:04:48.602
Oct 31 09:04:49.603: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117
STEP: fetching the /apis discovery document 10/31/23 09:04:49.615
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 10/31/23 09:04:49.672
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 10/31/23 09:04:49.672
STEP: fetching the /apis/admissionregistration.k8s.io discovery document 10/31/23 09:04:49.672
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 10/31/23 09:04:49.765
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 10/31/23 09:04:49.765
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 10/31/23 09:04:49.853
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:49.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-954" for this suite. 10/31/23 09:04:50.338
STEP: Destroying namespace "webhook-954-markers" for this suite. 10/31/23 09:04:50.384
------------------------------
â€¢ [SLOW TEST] [5.589 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should include webhook resources in discovery documents [Conformance]
  test/e2e/apimachinery/webhook.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:44.849
    Oct 31 09:04:44.849: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 09:04:44.851
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:45.077
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:45.175
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 09:04:45.376
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:04:46.148
    STEP: Deploying the webhook pod 10/31/23 09:04:46.197
    STEP: Wait for the deployment to be ready 10/31/23 09:04:46.308
    Oct 31 09:04:46.518: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 4, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 4, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:04:48.53
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:04:48.602
    Oct 31 09:04:49.603: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should include webhook resources in discovery documents [Conformance]
      test/e2e/apimachinery/webhook.go:117
    STEP: fetching the /apis discovery document 10/31/23 09:04:49.615
    STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document 10/31/23 09:04:49.672
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document 10/31/23 09:04:49.672
    STEP: fetching the /apis/admissionregistration.k8s.io discovery document 10/31/23 09:04:49.672
    STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document 10/31/23 09:04:49.765
    STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document 10/31/23 09:04:49.765
    STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document 10/31/23 09:04:49.853
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:49.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-954" for this suite. 10/31/23 09:04:50.338
    STEP: Destroying namespace "webhook-954-markers" for this suite. 10/31/23 09:04:50.384
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:50.443
Oct 31 09:04:50.443: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:04:50.444
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:50.602
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:50.709
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:04:50.85
Oct 31 09:04:50.868: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d" in namespace "downward-api-3581" to be "Succeeded or Failed"
Oct 31 09:04:50.931: INFO: Pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d": Phase="Pending", Reason="", readiness=false. Elapsed: 62.017916ms
Oct 31 09:04:52.952: INFO: Pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.083356512s
Oct 31 09:04:54.939: INFO: Pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.070178106s
STEP: Saw pod success 10/31/23 09:04:54.939
Oct 31 09:04:54.939: INFO: Pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d" satisfied condition "Succeeded or Failed"
Oct 31 09:04:54.989: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d container client-container: <nil>
STEP: delete the pod 10/31/23 09:04:55.168
Oct 31 09:04:55.236: INFO: Waiting for pod downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d to disappear
Oct 31 09:04:55.321: INFO: Pod downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 09:04:55.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3581" for this suite. 10/31/23 09:04:55.377
------------------------------
â€¢ [4.948 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:50.443
    Oct 31 09:04:50.443: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:04:50.444
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:50.602
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:50.709
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:207
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:04:50.85
    Oct 31 09:04:50.868: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d" in namespace "downward-api-3581" to be "Succeeded or Failed"
    Oct 31 09:04:50.931: INFO: Pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d": Phase="Pending", Reason="", readiness=false. Elapsed: 62.017916ms
    Oct 31 09:04:52.952: INFO: Pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.083356512s
    Oct 31 09:04:54.939: INFO: Pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.070178106s
    STEP: Saw pod success 10/31/23 09:04:54.939
    Oct 31 09:04:54.939: INFO: Pod "downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d" satisfied condition "Succeeded or Failed"
    Oct 31 09:04:54.989: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d container client-container: <nil>
    STEP: delete the pod 10/31/23 09:04:55.168
    Oct 31 09:04:55.236: INFO: Waiting for pod downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d to disappear
    Oct 31 09:04:55.321: INFO: Pod downwardapi-volume-d0ab3105-184c-4988-867c-1791a1cd7b3d no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:04:55.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3581" for this suite. 10/31/23 09:04:55.377
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-network] DNS
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:04:55.394
Oct 31 09:04:55.394: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename dns 10/31/23 09:04:55.396
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:55.593
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:55.738
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290
STEP: Creating a test headless service 10/31/23 09:04:55.881
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5101.svc.cluster.local;sleep 1; done
 10/31/23 09:04:55.892
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5101.svc.cluster.local;sleep 1; done
 10/31/23 09:04:55.892
STEP: creating a pod to probe DNS 10/31/23 09:04:55.893
STEP: submitting the pod to kubernetes 10/31/23 09:04:55.893
Oct 31 09:04:55.911: INFO: Waiting up to 15m0s for pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118" in namespace "dns-5101" to be "running"
Oct 31 09:04:55.971: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 59.804328ms
Oct 31 09:04:57.985: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 2.073232543s
Oct 31 09:04:59.992: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 4.080658491s
Oct 31 09:05:01.978: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 6.067061235s
Oct 31 09:05:03.983: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 8.072028645s
Oct 31 09:05:05.985: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 10.073211439s
Oct 31 09:05:07.991: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 12.079229607s
Oct 31 09:05:09.980: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 14.068158319s
Oct 31 09:05:11.978: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 16.066643762s
Oct 31 09:05:13.981: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 18.069464058s
Oct 31 09:05:15.985: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Running", Reason="", readiness=true. Elapsed: 20.073173984s
Oct 31 09:05:15.985: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118" satisfied condition "running"
STEP: retrieving the pod 10/31/23 09:05:15.985
STEP: looking for the results for each expected name from probers 10/31/23 09:05:16.033
Oct 31 09:05:16.213: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
Oct 31 09:05:16.385: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
Oct 31 09:05:16.497: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
Oct 31 09:05:16.588: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
Oct 31 09:05:16.721: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
Oct 31 09:05:16.885: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
Oct 31 09:05:17.032: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
Oct 31 09:05:17.157: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
Oct 31 09:05:17.157: INFO: Lookups using dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5101.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5101.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local jessie_udp@dns-test-service-2.dns-5101.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5101.svc.cluster.local]

Oct 31 09:05:23.143: INFO: DNS probes using dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118 succeeded

STEP: deleting the pod 10/31/23 09:05:23.143
STEP: deleting the test headless service 10/31/23 09:05:23.216
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Oct 31 09:05:23.276: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-5101" for this suite. 10/31/23 09:05:23.332
------------------------------
â€¢ [SLOW TEST] [27.968 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/network/dns.go:290

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:04:55.394
    Oct 31 09:04:55.394: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename dns 10/31/23 09:04:55.396
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:04:55.593
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:04:55.738
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Subdomain [Conformance]
      test/e2e/network/dns.go:290
    STEP: Creating a test headless service 10/31/23 09:04:55.881
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5101.svc.cluster.local;sleep 1; done
     10/31/23 09:04:55.892
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5101.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5101.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5101.svc.cluster.local;sleep 1; done
     10/31/23 09:04:55.892
    STEP: creating a pod to probe DNS 10/31/23 09:04:55.893
    STEP: submitting the pod to kubernetes 10/31/23 09:04:55.893
    Oct 31 09:04:55.911: INFO: Waiting up to 15m0s for pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118" in namespace "dns-5101" to be "running"
    Oct 31 09:04:55.971: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 59.804328ms
    Oct 31 09:04:57.985: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 2.073232543s
    Oct 31 09:04:59.992: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 4.080658491s
    Oct 31 09:05:01.978: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 6.067061235s
    Oct 31 09:05:03.983: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 8.072028645s
    Oct 31 09:05:05.985: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 10.073211439s
    Oct 31 09:05:07.991: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 12.079229607s
    Oct 31 09:05:09.980: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 14.068158319s
    Oct 31 09:05:11.978: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 16.066643762s
    Oct 31 09:05:13.981: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Pending", Reason="", readiness=false. Elapsed: 18.069464058s
    Oct 31 09:05:15.985: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118": Phase="Running", Reason="", readiness=true. Elapsed: 20.073173984s
    Oct 31 09:05:15.985: INFO: Pod "dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118" satisfied condition "running"
    STEP: retrieving the pod 10/31/23 09:05:15.985
    STEP: looking for the results for each expected name from probers 10/31/23 09:05:16.033
    Oct 31 09:05:16.213: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
    Oct 31 09:05:16.385: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
    Oct 31 09:05:16.497: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
    Oct 31 09:05:16.588: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
    Oct 31 09:05:16.721: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
    Oct 31 09:05:16.885: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
    Oct 31 09:05:17.032: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
    Oct 31 09:05:17.157: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5101.svc.cluster.local from pod dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118: the server could not find the requested resource (get pods dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118)
    Oct 31 09:05:17.157: INFO: Lookups using dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5101.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5101.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5101.svc.cluster.local jessie_udp@dns-test-service-2.dns-5101.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5101.svc.cluster.local]

    Oct 31 09:05:23.143: INFO: DNS probes using dns-5101/dns-test-c9b3c9ed-a886-47aa-b9b4-fc994ac85118 succeeded

    STEP: deleting the pod 10/31/23 09:05:23.143
    STEP: deleting the test headless service 10/31/23 09:05:23.216
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:05:23.276: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-5101" for this suite. 10/31/23 09:05:23.332
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:05:23.374
Oct 31 09:05:23.374: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 09:05:23.378
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:23.633
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:23.687
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423
STEP: Creating configMap with name configmap-test-volume-907ac3fe-a4c6-4d3a-b4df-b98efbe6e0dd 10/31/23 09:05:23.841
STEP: Creating a pod to test consume configMaps 10/31/23 09:05:23.89
Oct 31 09:05:23.948: INFO: Waiting up to 5m0s for pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32" in namespace "configmap-4279" to be "Succeeded or Failed"
Oct 31 09:05:24.005: INFO: Pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32": Phase="Pending", Reason="", readiness=false. Elapsed: 57.283466ms
Oct 31 09:05:26.014: INFO: Pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32": Phase="Pending", Reason="", readiness=false. Elapsed: 2.065690939s
Oct 31 09:05:28.014: INFO: Pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.065835554s
STEP: Saw pod success 10/31/23 09:05:28.014
Oct 31 09:05:28.014: INFO: Pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32" satisfied condition "Succeeded or Failed"
Oct 31 09:05:28.081: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32 container configmap-volume-test: <nil>
STEP: delete the pod 10/31/23 09:05:28.261
Oct 31 09:05:28.332: INFO: Waiting for pod pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32 to disappear
Oct 31 09:05:28.386: INFO: Pod pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:05:28.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-4279" for this suite. 10/31/23 09:05:28.437
------------------------------
â€¢ [SLOW TEST] [5.144 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:423

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:05:23.374
    Oct 31 09:05:23.374: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 09:05:23.378
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:23.633
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:23.687
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:423
    STEP: Creating configMap with name configmap-test-volume-907ac3fe-a4c6-4d3a-b4df-b98efbe6e0dd 10/31/23 09:05:23.841
    STEP: Creating a pod to test consume configMaps 10/31/23 09:05:23.89
    Oct 31 09:05:23.948: INFO: Waiting up to 5m0s for pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32" in namespace "configmap-4279" to be "Succeeded or Failed"
    Oct 31 09:05:24.005: INFO: Pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32": Phase="Pending", Reason="", readiness=false. Elapsed: 57.283466ms
    Oct 31 09:05:26.014: INFO: Pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32": Phase="Pending", Reason="", readiness=false. Elapsed: 2.065690939s
    Oct 31 09:05:28.014: INFO: Pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.065835554s
    STEP: Saw pod success 10/31/23 09:05:28.014
    Oct 31 09:05:28.014: INFO: Pod "pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32" satisfied condition "Succeeded or Failed"
    Oct 31 09:05:28.081: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32 container configmap-volume-test: <nil>
    STEP: delete the pod 10/31/23 09:05:28.261
    Oct 31 09:05:28.332: INFO: Waiting for pod pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32 to disappear
    Oct 31 09:05:28.386: INFO: Pod pod-configmaps-68fa4d29-5e5d-437e-91a1-365230729f32 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:05:28.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-4279" for this suite. 10/31/23 09:05:28.437
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:05:28.518
Oct 31 09:05:28.519: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replication-controller 10/31/23 09:05:28.52
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:28.695
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:28.796
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101
STEP: Given a ReplicationController is created 10/31/23 09:05:28.925
STEP: When the matched label of one of its pods change 10/31/23 09:05:28.985
Oct 31 09:05:29.001: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released 10/31/23 09:05:29.049
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:05:29.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-6503" for this suite. 10/31/23 09:05:29.119
------------------------------
â€¢ [0.635 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/apps/rc.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:05:28.518
    Oct 31 09:05:28.519: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replication-controller 10/31/23 09:05:28.52
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:28.695
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:28.796
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should release no longer matching pods [Conformance]
      test/e2e/apps/rc.go:101
    STEP: Given a ReplicationController is created 10/31/23 09:05:28.925
    STEP: When the matched label of one of its pods change 10/31/23 09:05:28.985
    Oct 31 09:05:29.001: INFO: Pod name pod-release: Found 1 pods out of 1
    STEP: Then the pod is released 10/31/23 09:05:29.049
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:05:29.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-6503" for this suite. 10/31/23 09:05:29.119
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:05:29.16
Oct 31 09:05:29.161: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename disruption 10/31/23 09:05:29.164
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:29.312
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:29.468
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141
STEP: Waiting for the pdb to be processed 10/31/23 09:05:29.69
STEP: Waiting for all pods to be running 10/31/23 09:05:29.905
Oct 31 09:05:29.927: INFO: running pods: 0 < 3
Oct 31 09:05:31.937: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:05:34.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-1501" for this suite. 10/31/23 09:05:34.105
------------------------------
â€¢ [5.000 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/apps/disruption.go:141

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:05:29.16
    Oct 31 09:05:29.161: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename disruption 10/31/23 09:05:29.164
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:29.312
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:29.468
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should observe PodDisruptionBudget status updated [Conformance]
      test/e2e/apps/disruption.go:141
    STEP: Waiting for the pdb to be processed 10/31/23 09:05:29.69
    STEP: Waiting for all pods to be running 10/31/23 09:05:29.905
    Oct 31 09:05:29.927: INFO: running pods: 0 < 3
    Oct 31 09:05:31.937: INFO: running pods: 0 < 3
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:05:34.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-1501" for this suite. 10/31/23 09:05:34.105
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:05:34.16
Oct 31 09:05:34.160: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:05:34.161
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:34.317
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:34.379
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:05:34.394
Oct 31 09:05:34.478: INFO: Waiting up to 5m0s for pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e" in namespace "projected-3689" to be "Succeeded or Failed"
Oct 31 09:05:34.495: INFO: Pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e": Phase="Pending", Reason="", readiness=false. Elapsed: 16.48747ms
Oct 31 09:05:36.505: INFO: Pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e": Phase="Running", Reason="", readiness=false. Elapsed: 2.026114553s
Oct 31 09:05:38.504: INFO: Pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024976961s
STEP: Saw pod success 10/31/23 09:05:38.504
Oct 31 09:05:38.504: INFO: Pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e" satisfied condition "Succeeded or Failed"
Oct 31 09:05:38.558: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e container client-container: <nil>
STEP: delete the pod 10/31/23 09:05:38.83
Oct 31 09:05:38.895: INFO: Waiting for pod downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e to disappear
Oct 31 09:05:38.955: INFO: Pod downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 09:05:38.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3689" for this suite. 10/31/23 09:05:39.008
------------------------------
â€¢ [4.942 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:05:34.16
    Oct 31 09:05:34.160: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:05:34.161
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:34.317
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:34.379
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:221
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:05:34.394
    Oct 31 09:05:34.478: INFO: Waiting up to 5m0s for pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e" in namespace "projected-3689" to be "Succeeded or Failed"
    Oct 31 09:05:34.495: INFO: Pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e": Phase="Pending", Reason="", readiness=false. Elapsed: 16.48747ms
    Oct 31 09:05:36.505: INFO: Pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e": Phase="Running", Reason="", readiness=false. Elapsed: 2.026114553s
    Oct 31 09:05:38.504: INFO: Pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024976961s
    STEP: Saw pod success 10/31/23 09:05:38.504
    Oct 31 09:05:38.504: INFO: Pod "downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e" satisfied condition "Succeeded or Failed"
    Oct 31 09:05:38.558: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e container client-container: <nil>
    STEP: delete the pod 10/31/23 09:05:38.83
    Oct 31 09:05:38.895: INFO: Waiting for pod downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e to disappear
    Oct 31 09:05:38.955: INFO: Pod downwardapi-volume-5e4a768a-bb4a-45f2-9cda-40082be9209e no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:05:38.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3689" for this suite. 10/31/23 09:05:39.008
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:05:39.102
Oct 31 09:05:39.103: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename gc 10/31/23 09:05:39.105
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:39.276
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:39.422
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312
STEP: create the rc 10/31/23 09:05:39.514
STEP: delete the rc 10/31/23 09:05:44.609
STEP: wait for all pods to be garbage collected 10/31/23 09:05:44.701
STEP: Gathering metrics 10/31/23 09:05:49.821
W1031 09:05:49.901686      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Oct 31 09:05:49.902: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Oct 31 09:05:49.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-4303" for this suite. 10/31/23 09:05:49.926
------------------------------
â€¢ [SLOW TEST] [10.848 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:312

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:05:39.102
    Oct 31 09:05:39.103: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename gc 10/31/23 09:05:39.105
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:39.276
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:39.422
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete pods created by rc when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:312
    STEP: create the rc 10/31/23 09:05:39.514
    STEP: delete the rc 10/31/23 09:05:44.609
    STEP: wait for all pods to be garbage collected 10/31/23 09:05:44.701
    STEP: Gathering metrics 10/31/23 09:05:49.821
    W1031 09:05:49.901686      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Oct 31 09:05:49.902: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:05:49.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-4303" for this suite. 10/31/23 09:05:49.926
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Pods Extended Pods Set QOS Class
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
[BeforeEach] [sig-node] Pods Extended
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:05:49.954
Oct 31 09:05:49.955: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 09:05:49.956
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:50.374
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:50.513
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/node/pods.go:161
STEP: creating the pod 10/31/23 09:05:50.654
STEP: submitting the pod to kubernetes 10/31/23 09:05:50.655
STEP: verifying QOS class is set on the pod 10/31/23 09:05:50.712
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/node/init/init.go:32
Oct 31 09:05:50.759: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods Extended
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods Extended
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods Extended
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-7321" for this suite. 10/31/23 09:05:50.828
------------------------------
â€¢ [0.939 seconds]
[sig-node] Pods Extended
test/e2e/node/framework.go:23
  Pods Set QOS Class
  test/e2e/node/pods.go:150
    should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
    test/e2e/node/pods.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods Extended
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:05:49.954
    Oct 31 09:05:49.955: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 09:05:49.956
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:50.374
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:50.513
    [BeforeEach] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Pods Set QOS Class
      test/e2e/node/pods.go:152
    [It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
      test/e2e/node/pods.go:161
    STEP: creating the pod 10/31/23 09:05:50.654
    STEP: submitting the pod to kubernetes 10/31/23 09:05:50.655
    STEP: verifying QOS class is set on the pod 10/31/23 09:05:50.712
    [AfterEach] [sig-node] Pods Extended
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:05:50.759: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods Extended
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods Extended
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods Extended
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-7321" for this suite. 10/31/23 09:05:50.828
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:05:50.909
Oct 31 09:05:50.909: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename deployment 10/31/23 09:05:50.91
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:51.093
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:51.243
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150
Oct 31 09:05:51.406: INFO: Creating simple deployment test-new-deployment
Oct 31 09:05:51.533: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 5, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 5, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 5, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 5, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-7f5969cbc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: getting scale subresource 10/31/23 09:05:53.621
STEP: updating a scale subresource 10/31/23 09:05:53.691
STEP: verifying the deployment Spec.Replicas was modified 10/31/23 09:05:53.777
STEP: Patch a scale subresource 10/31/23 09:05:53.795
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Oct 31 09:05:53.924: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-7896  6b38bab6-2b00-4940-b153-d7b74b6216a5 4068 3 2023-10-31 09:05:51 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-10-31 09:05:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004ff0d18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:2,UpdatedReplicas:2,AvailableReplicas:1,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-10-31 09:05:52 +0000 UTC,LastTransitionTime:2023-10-31 09:05:51 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-10-31 09:05:53 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Oct 31 09:05:53.952: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-7896  2f68796e-04c7-4fd3-95f7-31d1e58673a9 4079 3 2023-10-31 09:05:51 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 6b38bab6-2b00-4940-b153-d7b74b6216a5 0xc004ff1150 0xc004ff1151}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6b38bab6-2b00-4940-b153-d7b74b6216a5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004ff11d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:4,FullyLabeledReplicas:4,ObservedGeneration:3,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Oct 31 09:05:53.963: INFO: Pod "test-new-deployment-7f5969cbc7-5d9zh" is available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-5d9zh test-new-deployment-7f5969cbc7- deployment-7896  702cb066-c248-4405-9d85-d9d298075194 4047 0 2023-10-31 09:05:51 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 2f68796e-04c7-4fd3-95f7-31d1e58673a9 0xc004ff1590 0xc004ff1591}] [] [{kube-controller-manager Update v1 2023-10-31 09:05:51 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f68796e-04c7-4fd3-95f7-31d1e58673a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:05:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.18\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6ccsp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6ccsp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:51 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:51 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.18,StartTime:2023-10-31 09:05:51 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 09:05:52 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://4c46d1c41c48b61aa3443166c0d2fee5d9ca85c372a85caab0f3db9593e51e9c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.18,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 09:05:53.963: INFO: Pod "test-new-deployment-7f5969cbc7-6s7gk" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-6s7gk test-new-deployment-7f5969cbc7- deployment-7896  9d003aef-cac9-4093-97cf-a95ca0fefa91 4073 0 2023-10-31 09:05:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 2f68796e-04c7-4fd3-95f7-31d1e58673a9 0xc004ff1770 0xc004ff1771}] [] [{kube-controller-manager Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f68796e-04c7-4fd3-95f7-31d1e58673a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qv9zc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qv9zc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 09:05:53.964: INFO: Pod "test-new-deployment-7f5969cbc7-9cb5c" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-9cb5c test-new-deployment-7f5969cbc7- deployment-7896  452ea696-4da4-4df0-8c45-4154438bb8e4 4081 0 2023-10-31 09:05:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 2f68796e-04c7-4fd3-95f7-31d1e58673a9 0xc004ff18e0 0xc004ff18e1}] [] [{kube-controller-manager Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f68796e-04c7-4fd3-95f7-31d1e58673a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4sfch,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4sfch,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 09:05:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 09:05:53.964: INFO: Pod "test-new-deployment-7f5969cbc7-r5hb2" is not available:
&Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-r5hb2 test-new-deployment-7f5969cbc7- deployment-7896  627aa4b2-bde9-4d5e-849b-63ba7f263856 4071 0 2023-10-31 09:05:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 2f68796e-04c7-4fd3-95f7-31d1e58673a9 0xc004ff1aa0 0xc004ff1aa1}] [] [{kube-controller-manager Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f68796e-04c7-4fd3-95f7-31d1e58673a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hk5bt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hk5bt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 09:05:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Oct 31 09:05:53.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-7896" for this suite. 10/31/23 09:05:54.015
------------------------------
â€¢ [3.164 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  Deployment should have a working scale subresource [Conformance]
  test/e2e/apps/deployment.go:150

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:05:50.909
    Oct 31 09:05:50.909: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename deployment 10/31/23 09:05:50.91
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:51.093
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:51.243
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] Deployment should have a working scale subresource [Conformance]
      test/e2e/apps/deployment.go:150
    Oct 31 09:05:51.406: INFO: Creating simple deployment test-new-deployment
    Oct 31 09:05:51.533: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 5, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 5, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 5, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 5, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-7f5969cbc7\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: getting scale subresource 10/31/23 09:05:53.621
    STEP: updating a scale subresource 10/31/23 09:05:53.691
    STEP: verifying the deployment Spec.Replicas was modified 10/31/23 09:05:53.777
    STEP: Patch a scale subresource 10/31/23 09:05:53.795
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Oct 31 09:05:53.924: INFO: Deployment "test-new-deployment":
    &Deployment{ObjectMeta:{test-new-deployment  deployment-7896  6b38bab6-2b00-4940-b153-d7b74b6216a5 4068 3 2023-10-31 09:05:51 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2023-10-31 09:05:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004ff0d18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:2,UpdatedReplicas:2,AvailableReplicas:1,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-7f5969cbc7" has successfully progressed.,LastUpdateTime:2023-10-31 09:05:52 +0000 UTC,LastTransitionTime:2023-10-31 09:05:51 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-10-31 09:05:53 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Oct 31 09:05:53.952: INFO: New ReplicaSet "test-new-deployment-7f5969cbc7" of Deployment "test-new-deployment":
    &ReplicaSet{ObjectMeta:{test-new-deployment-7f5969cbc7  deployment-7896  2f68796e-04c7-4fd3-95f7-31d1e58673a9 4079 3 2023-10-31 09:05:51 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 6b38bab6-2b00-4940-b153-d7b74b6216a5 0xc004ff1150 0xc004ff1151}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6b38bab6-2b00-4940-b153-d7b74b6216a5\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004ff11d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:4,FullyLabeledReplicas:4,ObservedGeneration:3,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 09:05:53.963: INFO: Pod "test-new-deployment-7f5969cbc7-5d9zh" is available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-5d9zh test-new-deployment-7f5969cbc7- deployment-7896  702cb066-c248-4405-9d85-d9d298075194 4047 0 2023-10-31 09:05:51 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 2f68796e-04c7-4fd3-95f7-31d1e58673a9 0xc004ff1590 0xc004ff1591}] [] [{kube-controller-manager Update v1 2023-10-31 09:05:51 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f68796e-04c7-4fd3-95f7-31d1e58673a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:05:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.18\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6ccsp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6ccsp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:51 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:51 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.18,StartTime:2023-10-31 09:05:51 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 09:05:52 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://4c46d1c41c48b61aa3443166c0d2fee5d9ca85c372a85caab0f3db9593e51e9c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.18,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 09:05:53.963: INFO: Pod "test-new-deployment-7f5969cbc7-6s7gk" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-6s7gk test-new-deployment-7f5969cbc7- deployment-7896  9d003aef-cac9-4093-97cf-a95ca0fefa91 4073 0 2023-10-31 09:05:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 2f68796e-04c7-4fd3-95f7-31d1e58673a9 0xc004ff1770 0xc004ff1771}] [] [{kube-controller-manager Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f68796e-04c7-4fd3-95f7-31d1e58673a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qv9zc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qv9zc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 09:05:53.964: INFO: Pod "test-new-deployment-7f5969cbc7-9cb5c" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-9cb5c test-new-deployment-7f5969cbc7- deployment-7896  452ea696-4da4-4df0-8c45-4154438bb8e4 4081 0 2023-10-31 09:05:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 2f68796e-04c7-4fd3-95f7-31d1e58673a9 0xc004ff18e0 0xc004ff18e1}] [] [{kube-controller-manager Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f68796e-04c7-4fd3-95f7-31d1e58673a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-4sfch,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-4sfch,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 09:05:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 09:05:53.964: INFO: Pod "test-new-deployment-7f5969cbc7-r5hb2" is not available:
    &Pod{ObjectMeta:{test-new-deployment-7f5969cbc7-r5hb2 test-new-deployment-7f5969cbc7- deployment-7896  627aa4b2-bde9-4d5e-849b-63ba7f263856 4071 0 2023-10-31 09:05:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet test-new-deployment-7f5969cbc7 2f68796e-04c7-4fd3-95f7-31d1e58673a9 0xc004ff1aa0 0xc004ff1aa1}] [] [{kube-controller-manager Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2f68796e-04c7-4fd3-95f7-31d1e58673a9\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:05:53 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hk5bt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hk5bt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:05:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 09:05:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:05:53.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-7896" for this suite. 10/31/23 09:05:54.015
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Containers
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:05:54.073
Oct 31 09:05:54.074: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename containers 10/31/23 09:05:54.078
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:54.309
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:54.41
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73
STEP: Creating a pod to test override command 10/31/23 09:05:54.67
Oct 31 09:05:54.688: INFO: Waiting up to 5m0s for pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43" in namespace "containers-9391" to be "Succeeded or Failed"
Oct 31 09:05:54.705: INFO: Pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43": Phase="Pending", Reason="", readiness=false. Elapsed: 16.896586ms
Oct 31 09:05:56.714: INFO: Pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025211067s
Oct 31 09:05:58.714: INFO: Pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025807993s
STEP: Saw pod success 10/31/23 09:05:58.714
Oct 31 09:05:58.715: INFO: Pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43" satisfied condition "Succeeded or Failed"
Oct 31 09:05:58.764: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod client-containers-0f403478-f256-4553-aa2a-267560df4d43 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:05:58.842
Oct 31 09:05:58.912: INFO: Waiting for pod client-containers-0f403478-f256-4553-aa2a-267560df4d43 to disappear
Oct 31 09:05:59.007: INFO: Pod client-containers-0f403478-f256-4553-aa2a-267560df4d43 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Oct 31 09:05:59.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-9391" for this suite. 10/31/23 09:05:59.058
------------------------------
â€¢ [4.996 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:05:54.073
    Oct 31 09:05:54.074: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename containers 10/31/23 09:05:54.078
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:54.309
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:54.41
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:73
    STEP: Creating a pod to test override command 10/31/23 09:05:54.67
    Oct 31 09:05:54.688: INFO: Waiting up to 5m0s for pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43" in namespace "containers-9391" to be "Succeeded or Failed"
    Oct 31 09:05:54.705: INFO: Pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43": Phase="Pending", Reason="", readiness=false. Elapsed: 16.896586ms
    Oct 31 09:05:56.714: INFO: Pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025211067s
    Oct 31 09:05:58.714: INFO: Pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025807993s
    STEP: Saw pod success 10/31/23 09:05:58.714
    Oct 31 09:05:58.715: INFO: Pod "client-containers-0f403478-f256-4553-aa2a-267560df4d43" satisfied condition "Succeeded or Failed"
    Oct 31 09:05:58.764: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod client-containers-0f403478-f256-4553-aa2a-267560df4d43 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:05:58.842
    Oct 31 09:05:58.912: INFO: Waiting for pod client-containers-0f403478-f256-4553-aa2a-267560df4d43 to disappear
    Oct 31 09:05:59.007: INFO: Pod client-containers-0f403478-f256-4553-aa2a-267560df4d43 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:05:59.007: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-9391" for this suite. 10/31/23 09:05:59.058
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:05:59.074
Oct 31 09:05:59.074: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 09:05:59.075
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:59.249
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:59.334
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444
Oct 31 09:05:59.505: INFO: Waiting up to 5m0s for pod "server-envvars-174599f4-2367-49a9-9b93-a628674cf95b" in namespace "pods-9198" to be "running and ready"
Oct 31 09:05:59.520: INFO: Pod "server-envvars-174599f4-2367-49a9-9b93-a628674cf95b": Phase="Pending", Reason="", readiness=false. Elapsed: 15.061076ms
Oct 31 09:05:59.520: INFO: The phase of Pod server-envvars-174599f4-2367-49a9-9b93-a628674cf95b is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:06:01.673: INFO: Pod "server-envvars-174599f4-2367-49a9-9b93-a628674cf95b": Phase="Running", Reason="", readiness=true. Elapsed: 2.167765625s
Oct 31 09:06:01.673: INFO: The phase of Pod server-envvars-174599f4-2367-49a9-9b93-a628674cf95b is Running (Ready = true)
Oct 31 09:06:01.673: INFO: Pod "server-envvars-174599f4-2367-49a9-9b93-a628674cf95b" satisfied condition "running and ready"
Oct 31 09:06:01.798: INFO: Waiting up to 5m0s for pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c" in namespace "pods-9198" to be "Succeeded or Failed"
Oct 31 09:06:01.810: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c": Phase="Pending", Reason="", readiness=false. Elapsed: 11.855032ms
Oct 31 09:06:03.841: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.042262297s
Oct 31 09:06:05.819: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020951246s
Oct 31 09:06:07.821: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022967997s
STEP: Saw pod success 10/31/23 09:06:07.821
Oct 31 09:06:07.822: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c" satisfied condition "Succeeded or Failed"
Oct 31 09:06:07.873: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c container env3cont: <nil>
STEP: delete the pod 10/31/23 09:06:07.998
Oct 31 09:06:08.070: INFO: Waiting for pod client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c to disappear
Oct 31 09:06:08.081: INFO: Pod client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 09:06:08.081: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-9198" for this suite. 10/31/23 09:06:08.182
------------------------------
â€¢ [SLOW TEST] [9.149 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:444

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:05:59.074
    Oct 31 09:05:59.074: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 09:05:59.075
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:05:59.249
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:05:59.334
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should contain environment variables for services [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:444
    Oct 31 09:05:59.505: INFO: Waiting up to 5m0s for pod "server-envvars-174599f4-2367-49a9-9b93-a628674cf95b" in namespace "pods-9198" to be "running and ready"
    Oct 31 09:05:59.520: INFO: Pod "server-envvars-174599f4-2367-49a9-9b93-a628674cf95b": Phase="Pending", Reason="", readiness=false. Elapsed: 15.061076ms
    Oct 31 09:05:59.520: INFO: The phase of Pod server-envvars-174599f4-2367-49a9-9b93-a628674cf95b is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:06:01.673: INFO: Pod "server-envvars-174599f4-2367-49a9-9b93-a628674cf95b": Phase="Running", Reason="", readiness=true. Elapsed: 2.167765625s
    Oct 31 09:06:01.673: INFO: The phase of Pod server-envvars-174599f4-2367-49a9-9b93-a628674cf95b is Running (Ready = true)
    Oct 31 09:06:01.673: INFO: Pod "server-envvars-174599f4-2367-49a9-9b93-a628674cf95b" satisfied condition "running and ready"
    Oct 31 09:06:01.798: INFO: Waiting up to 5m0s for pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c" in namespace "pods-9198" to be "Succeeded or Failed"
    Oct 31 09:06:01.810: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c": Phase="Pending", Reason="", readiness=false. Elapsed: 11.855032ms
    Oct 31 09:06:03.841: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.042262297s
    Oct 31 09:06:05.819: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020951246s
    Oct 31 09:06:07.821: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.022967997s
    STEP: Saw pod success 10/31/23 09:06:07.821
    Oct 31 09:06:07.822: INFO: Pod "client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c" satisfied condition "Succeeded or Failed"
    Oct 31 09:06:07.873: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c container env3cont: <nil>
    STEP: delete the pod 10/31/23 09:06:07.998
    Oct 31 09:06:08.070: INFO: Waiting for pod client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c to disappear
    Oct 31 09:06:08.081: INFO: Pod client-envvars-709076bc-9b07-484b-80ff-9cdf7994473c no longer exists
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:06:08.081: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-9198" for this suite. 10/31/23 09:06:08.182
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
[BeforeEach] [sig-network] EndpointSliceMirroring
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:06:08.225
Oct 31 09:06:08.225: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename endpointslicemirroring 10/31/23 09:06:08.227
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:08.417
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:08.557
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53
STEP: mirroring a new custom Endpoint 10/31/23 09:06:08.752
STEP: mirroring an update to a custom Endpoint 10/31/23 09:06:08.905
STEP: mirroring deletion of a custom Endpoint 10/31/23 09:06:09.037
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/node/init/init.go:32
Oct 31 09:06:09.365: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslicemirroring-9656" for this suite. 10/31/23 09:06:09.462
------------------------------
â€¢ [1.254 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/network/endpointslicemirroring.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSliceMirroring
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:06:08.225
    Oct 31 09:06:08.225: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename endpointslicemirroring 10/31/23 09:06:08.227
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:08.417
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:08.557
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSliceMirroring
      test/e2e/network/endpointslicemirroring.go:41
    [It] should mirror a custom Endpoints resource through create update and delete [Conformance]
      test/e2e/network/endpointslicemirroring.go:53
    STEP: mirroring a new custom Endpoint 10/31/23 09:06:08.752
    STEP: mirroring an update to a custom Endpoint 10/31/23 09:06:08.905
    STEP: mirroring deletion of a custom Endpoint 10/31/23 09:06:09.037
    [AfterEach] [sig-network] EndpointSliceMirroring
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:06:09.365: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSliceMirroring
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslicemirroring-9656" for this suite. 10/31/23 09:06:09.462
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:06:09.486
Oct 31 09:06:09.487: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename security-context 10/31/23 09:06:09.488
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:09.653
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:09.831
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 10/31/23 09:06:09.885
Oct 31 09:06:09.949: INFO: Waiting up to 5m0s for pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14" in namespace "security-context-5257" to be "Succeeded or Failed"
Oct 31 09:06:09.965: INFO: Pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14": Phase="Pending", Reason="", readiness=false. Elapsed: 16.617713ms
Oct 31 09:06:11.973: INFO: Pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024243844s
Oct 31 09:06:14.017: INFO: Pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.068746004s
STEP: Saw pod success 10/31/23 09:06:14.017
Oct 31 09:06:14.018: INFO: Pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14" satisfied condition "Succeeded or Failed"
Oct 31 09:06:14.033: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod security-context-8e6305c7-a002-4197-8224-ecc05a56ea14 container test-container: <nil>
STEP: delete the pod 10/31/23 09:06:14.167
Oct 31 09:06:14.230: INFO: Waiting for pod security-context-8e6305c7-a002-4197-8224-ecc05a56ea14 to disappear
Oct 31 09:06:14.366: INFO: Pod security-context-8e6305c7-a002-4197-8224-ecc05a56ea14 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Oct 31 09:06:14.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-5257" for this suite. 10/31/23 09:06:14.398
------------------------------
â€¢ [4.996 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:06:09.486
    Oct 31 09:06:09.487: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename security-context 10/31/23 09:06:09.488
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:09.653
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:09.831
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:129
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 10/31/23 09:06:09.885
    Oct 31 09:06:09.949: INFO: Waiting up to 5m0s for pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14" in namespace "security-context-5257" to be "Succeeded or Failed"
    Oct 31 09:06:09.965: INFO: Pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14": Phase="Pending", Reason="", readiness=false. Elapsed: 16.617713ms
    Oct 31 09:06:11.973: INFO: Pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024243844s
    Oct 31 09:06:14.017: INFO: Pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.068746004s
    STEP: Saw pod success 10/31/23 09:06:14.017
    Oct 31 09:06:14.018: INFO: Pod "security-context-8e6305c7-a002-4197-8224-ecc05a56ea14" satisfied condition "Succeeded or Failed"
    Oct 31 09:06:14.033: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod security-context-8e6305c7-a002-4197-8224-ecc05a56ea14 container test-container: <nil>
    STEP: delete the pod 10/31/23 09:06:14.167
    Oct 31 09:06:14.230: INFO: Waiting for pod security-context-8e6305c7-a002-4197-8224-ecc05a56ea14 to disappear
    Oct 31 09:06:14.366: INFO: Pod security-context-8e6305c7-a002-4197-8224-ecc05a56ea14 no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:06:14.366: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-5257" for this suite. 10/31/23 09:06:14.398
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:06:14.483
Oct 31 09:06:14.484: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename gc 10/31/23 09:06:14.485
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:14.65
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:14.83
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550
STEP: create the deployment 10/31/23 09:06:14.898
STEP: Wait for the Deployment to create new ReplicaSet 10/31/23 09:06:14.936
STEP: delete the deployment 10/31/23 09:06:15.15
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 10/31/23 09:06:15.23
STEP: Gathering metrics 10/31/23 09:06:16.284
W1031 09:06:16.343645      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Oct 31 09:06:16.343: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Oct 31 09:06:16.343: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-1070" for this suite. 10/31/23 09:06:16.394
------------------------------
â€¢ [1.944 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/apimachinery/garbage_collector.go:550

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:06:14.483
    Oct 31 09:06:14.484: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename gc 10/31/23 09:06:14.485
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:14.65
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:14.83
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
      test/e2e/apimachinery/garbage_collector.go:550
    STEP: create the deployment 10/31/23 09:06:14.898
    STEP: Wait for the Deployment to create new ReplicaSet 10/31/23 09:06:14.936
    STEP: delete the deployment 10/31/23 09:06:15.15
    STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs 10/31/23 09:06:15.23
    STEP: Gathering metrics 10/31/23 09:06:16.284
    W1031 09:06:16.343645      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Oct 31 09:06:16.343: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:06:16.343: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-1070" for this suite. 10/31/23 09:06:16.394
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:06:16.428
Oct 31 09:06:16.428: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:06:16.43
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:16.558
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:16.694
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:06:16.79
Oct 31 09:06:16.854: INFO: Waiting up to 5m0s for pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132" in namespace "downward-api-5613" to be "Succeeded or Failed"
Oct 31 09:06:16.878: INFO: Pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132": Phase="Pending", Reason="", readiness=false. Elapsed: 24.455593ms
Oct 31 09:06:18.929: INFO: Pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132": Phase="Pending", Reason="", readiness=false. Elapsed: 2.075568637s
Oct 31 09:06:20.887: INFO: Pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032795099s
STEP: Saw pod success 10/31/23 09:06:20.887
Oct 31 09:06:20.887: INFO: Pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132" satisfied condition "Succeeded or Failed"
Oct 31 09:06:20.937: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132 container client-container: <nil>
STEP: delete the pod 10/31/23 09:06:21.075
Oct 31 09:06:21.160: INFO: Waiting for pod downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132 to disappear
Oct 31 09:06:21.202: INFO: Pod downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 09:06:21.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-5613" for this suite. 10/31/23 09:06:21.267
------------------------------
â€¢ [4.851 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:06:16.428
    Oct 31 09:06:16.428: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:06:16.43
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:16.558
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:16.694
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:53
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:06:16.79
    Oct 31 09:06:16.854: INFO: Waiting up to 5m0s for pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132" in namespace "downward-api-5613" to be "Succeeded or Failed"
    Oct 31 09:06:16.878: INFO: Pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132": Phase="Pending", Reason="", readiness=false. Elapsed: 24.455593ms
    Oct 31 09:06:18.929: INFO: Pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132": Phase="Pending", Reason="", readiness=false. Elapsed: 2.075568637s
    Oct 31 09:06:20.887: INFO: Pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032795099s
    STEP: Saw pod success 10/31/23 09:06:20.887
    Oct 31 09:06:20.887: INFO: Pod "downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132" satisfied condition "Succeeded or Failed"
    Oct 31 09:06:20.937: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132 container client-container: <nil>
    STEP: delete the pod 10/31/23 09:06:21.075
    Oct 31 09:06:21.160: INFO: Waiting for pod downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132 to disappear
    Oct 31 09:06:21.202: INFO: Pod downwardapi-volume-eb68babf-2133-4ab3-84ed-8dce4d423132 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:06:21.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-5613" for this suite. 10/31/23 09:06:21.267
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should delete a job [Conformance]
  test/e2e/apps/job.go:481
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:06:21.285
Oct 31 09:06:21.285: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename job 10/31/23 09:06:21.286
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:21.47
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:21.613
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a job [Conformance]
  test/e2e/apps/job.go:481
STEP: Creating a job 10/31/23 09:06:21.674
STEP: Ensuring active pods == parallelism 10/31/23 09:06:21.743
STEP: delete a job 10/31/23 09:06:23.791
STEP: deleting Job.batch foo in namespace job-1808, will wait for the garbage collector to delete the pods 10/31/23 09:06:23.791
Oct 31 09:06:23.934: INFO: Deleting Job.batch foo took: 31.154542ms
Oct 31 09:06:24.035: INFO: Terminating Job.batch foo pods took: 101.258113ms
STEP: Ensuring job was deleted 10/31/23 09:06:56.836
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Oct 31 09:06:56.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-1808" for this suite. 10/31/23 09:06:56.939
------------------------------
â€¢ [SLOW TEST] [35.709 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/apps/job.go:481

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:06:21.285
    Oct 31 09:06:21.285: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename job 10/31/23 09:06:21.286
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:21.47
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:21.613
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a job [Conformance]
      test/e2e/apps/job.go:481
    STEP: Creating a job 10/31/23 09:06:21.674
    STEP: Ensuring active pods == parallelism 10/31/23 09:06:21.743
    STEP: delete a job 10/31/23 09:06:23.791
    STEP: deleting Job.batch foo in namespace job-1808, will wait for the garbage collector to delete the pods 10/31/23 09:06:23.791
    Oct 31 09:06:23.934: INFO: Deleting Job.batch foo took: 31.154542ms
    Oct 31 09:06:24.035: INFO: Terminating Job.batch foo pods took: 101.258113ms
    STEP: Ensuring job was deleted 10/31/23 09:06:56.836
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:06:56.881: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-1808" for this suite. 10/31/23 09:06:56.939
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:06:56.995
Oct 31 09:06:56.995: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename cronjob 10/31/23 09:06:56.997
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:57.122
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:57.287
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69
STEP: Creating a cronjob 10/31/23 09:06:57.339
STEP: Ensuring more than one job is running at a time 10/31/23 09:06:57.454
STEP: Ensuring at least two running jobs exists by listing jobs explicitly 10/31/23 09:08:01.485
STEP: Removing cronjob 10/31/23 09:08:01.589
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Oct 31 09:08:01.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-1786" for this suite. 10/31/23 09:08:01.762
------------------------------
â€¢ [SLOW TEST] [64.870 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/apps/cronjob.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:06:56.995
    Oct 31 09:06:56.995: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename cronjob 10/31/23 09:06:56.997
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:06:57.122
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:06:57.287
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule multiple jobs concurrently [Conformance]
      test/e2e/apps/cronjob.go:69
    STEP: Creating a cronjob 10/31/23 09:06:57.339
    STEP: Ensuring more than one job is running at a time 10/31/23 09:06:57.454
    STEP: Ensuring at least two running jobs exists by listing jobs explicitly 10/31/23 09:08:01.485
    STEP: Removing cronjob 10/31/23 09:08:01.589
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:08:01.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-1786" for this suite. 10/31/23 09:08:01.762
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:08:01.873
Oct 31 09:08:01.873: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename svcaccounts 10/31/23 09:08:01.874
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:08:02.082
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:08:02.262
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531
Oct 31 09:08:02.524: INFO: created pod
Oct 31 09:08:02.524: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-7152" to be "Succeeded or Failed"
Oct 31 09:08:02.581: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 56.987864ms
Oct 31 09:08:04.589: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.065303867s
Oct 31 09:08:06.598: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.073397707s
STEP: Saw pod success 10/31/23 09:08:06.598
Oct 31 09:08:06.598: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Oct 31 09:08:36.598: INFO: polling logs
Oct 31 09:08:36.719: INFO: Pod logs: 
I1031 09:08:03.446973       1 log.go:198] OK: Got token
I1031 09:08:03.448218       1 log.go:198] validating with in-cluster discovery
I1031 09:08:03.448994       1 log.go:198] OK: got issuer https://hvylrntrzm4xjw3t.api.hn.bke.bfcplatform.vn
I1031 09:08:03.449217       1 log.go:198] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://hvylrntrzm4xjw3t.api.hn.bke.bfcplatform.vn", Subject:"system:serviceaccount:svcaccounts-7152:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1698743882, NotBefore:1698743282, IssuedAt:1698743282, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7152", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"cd096973-9fb0-4e99-b6dc-6d4c6e188c0e"}}}
I1031 09:08:03.554797       1 log.go:198] OK: Constructed OIDC provider for issuer https://hvylrntrzm4xjw3t.api.hn.bke.bfcplatform.vn
I1031 09:08:03.670064       1 log.go:198] OK: Validated signature on JWT
I1031 09:08:03.670353       1 log.go:198] OK: Got valid claims from token!
I1031 09:08:03.670388       1 log.go:198] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://hvylrntrzm4xjw3t.api.hn.bke.bfcplatform.vn", Subject:"system:serviceaccount:svcaccounts-7152:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1698743882, NotBefore:1698743282, IssuedAt:1698743282, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7152", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"cd096973-9fb0-4e99-b6dc-6d4c6e188c0e"}}}

Oct 31 09:08:36.719: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Oct 31 09:08:36.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-7152" for this suite. 10/31/23 09:08:36.899
------------------------------
â€¢ [SLOW TEST] [35.037 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/auth/service_accounts.go:531

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:08:01.873
    Oct 31 09:08:01.873: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename svcaccounts 10/31/23 09:08:01.874
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:08:02.082
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:08:02.262
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
      test/e2e/auth/service_accounts.go:531
    Oct 31 09:08:02.524: INFO: created pod
    Oct 31 09:08:02.524: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-7152" to be "Succeeded or Failed"
    Oct 31 09:08:02.581: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 56.987864ms
    Oct 31 09:08:04.589: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.065303867s
    Oct 31 09:08:06.598: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.073397707s
    STEP: Saw pod success 10/31/23 09:08:06.598
    Oct 31 09:08:06.598: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
    Oct 31 09:08:36.598: INFO: polling logs
    Oct 31 09:08:36.719: INFO: Pod logs: 
    I1031 09:08:03.446973       1 log.go:198] OK: Got token
    I1031 09:08:03.448218       1 log.go:198] validating with in-cluster discovery
    I1031 09:08:03.448994       1 log.go:198] OK: got issuer https://hvylrntrzm4xjw3t.api.hn.bke.bfcplatform.vn
    I1031 09:08:03.449217       1 log.go:198] Full, not-validated claims: 
    openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://hvylrntrzm4xjw3t.api.hn.bke.bfcplatform.vn", Subject:"system:serviceaccount:svcaccounts-7152:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1698743882, NotBefore:1698743282, IssuedAt:1698743282, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7152", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"cd096973-9fb0-4e99-b6dc-6d4c6e188c0e"}}}
    I1031 09:08:03.554797       1 log.go:198] OK: Constructed OIDC provider for issuer https://hvylrntrzm4xjw3t.api.hn.bke.bfcplatform.vn
    I1031 09:08:03.670064       1 log.go:198] OK: Validated signature on JWT
    I1031 09:08:03.670353       1 log.go:198] OK: Got valid claims from token!
    I1031 09:08:03.670388       1 log.go:198] Full, validated claims: 
    &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://hvylrntrzm4xjw3t.api.hn.bke.bfcplatform.vn", Subject:"system:serviceaccount:svcaccounts-7152:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1698743882, NotBefore:1698743282, IssuedAt:1698743282, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7152", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"cd096973-9fb0-4e99-b6dc-6d4c6e188c0e"}}}

    Oct 31 09:08:36.719: INFO: completed pod
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:08:36.812: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-7152" for this suite. 10/31/23 09:08:36.899
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:08:36.911
Oct 31 09:08:36.911: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 09:08:36.912
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:08:37.111
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:08:37.299
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392
STEP: Counting existing ResourceQuota 10/31/23 09:08:37.357
STEP: Creating a ResourceQuota 10/31/23 09:08:42.368
STEP: Ensuring resource quota status is calculated 10/31/23 09:08:42.424
STEP: Creating a ReplicationController 10/31/23 09:08:44.434
STEP: Ensuring resource quota status captures replication controller creation 10/31/23 09:08:44.524
STEP: Deleting a ReplicationController 10/31/23 09:08:46.548
STEP: Ensuring resource quota status released usage 10/31/23 09:08:46.636
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 09:08:48.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-2020" for this suite. 10/31/23 09:08:48.703
------------------------------
â€¢ [SLOW TEST] [11.849 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/apimachinery/resource_quota.go:392

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:08:36.911
    Oct 31 09:08:36.911: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 09:08:36.912
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:08:37.111
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:08:37.299
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
      test/e2e/apimachinery/resource_quota.go:392
    STEP: Counting existing ResourceQuota 10/31/23 09:08:37.357
    STEP: Creating a ResourceQuota 10/31/23 09:08:42.368
    STEP: Ensuring resource quota status is calculated 10/31/23 09:08:42.424
    STEP: Creating a ReplicationController 10/31/23 09:08:44.434
    STEP: Ensuring resource quota status captures replication controller creation 10/31/23 09:08:44.524
    STEP: Deleting a ReplicationController 10/31/23 09:08:46.548
    STEP: Ensuring resource quota status released usage 10/31/23 09:08:46.636
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:08:48.645: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-2020" for this suite. 10/31/23 09:08:48.703
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:08:48.765
Oct 31 09:08:48.765: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename var-expansion 10/31/23 09:08:48.766
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:08:48.934
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:08:49.121
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297
STEP: creating the pod 10/31/23 09:08:49.272
STEP: waiting for pod running 10/31/23 09:08:49.294
Oct 31 09:08:49.294: INFO: Waiting up to 2m0s for pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" in namespace "var-expansion-5016" to be "running"
Oct 31 09:08:49.352: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520": Phase="Pending", Reason="", readiness=false. Elapsed: 56.953516ms
Oct 31 09:08:51.359: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520": Phase="Running", Reason="", readiness=true. Elapsed: 2.064029261s
Oct 31 09:08:51.359: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" satisfied condition "running"
STEP: creating a file in subpath 10/31/23 09:08:51.359
Oct 31 09:08:51.410: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5016 PodName:var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:08:51.410: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:08:51.411: INFO: ExecWithOptions: Clientset creation
Oct 31 09:08:51.411: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/var-expansion-5016/pods/var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path 10/31/23 09:08:52.3
Oct 31 09:08:52.356: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5016 PodName:var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:08:52.356: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:08:52.357: INFO: ExecWithOptions: Clientset creation
Oct 31 09:08:52.357: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/var-expansion-5016/pods/var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value 10/31/23 09:08:53.083
Oct 31 09:08:53.616: INFO: Successfully updated pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520"
STEP: waiting for annotated pod running 10/31/23 09:08:53.617
Oct 31 09:08:53.617: INFO: Waiting up to 2m0s for pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" in namespace "var-expansion-5016" to be "running"
Oct 31 09:08:53.674: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520": Phase="Running", Reason="", readiness=true. Elapsed: 57.079611ms
Oct 31 09:08:53.675: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" satisfied condition "running"
STEP: deleting the pod gracefully 10/31/23 09:08:53.675
Oct 31 09:08:53.675: INFO: Deleting pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" in namespace "var-expansion-5016"
Oct 31 09:08:53.691: INFO: Wait up to 5m0s for pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Oct 31 09:09:25.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-5016" for this suite. 10/31/23 09:09:25.839
------------------------------
â€¢ [SLOW TEST] [37.122 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:297

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:08:48.765
    Oct 31 09:08:48.765: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename var-expansion 10/31/23 09:08:48.766
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:08:48.934
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:08:49.121
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should succeed in writing subpaths in container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:297
    STEP: creating the pod 10/31/23 09:08:49.272
    STEP: waiting for pod running 10/31/23 09:08:49.294
    Oct 31 09:08:49.294: INFO: Waiting up to 2m0s for pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" in namespace "var-expansion-5016" to be "running"
    Oct 31 09:08:49.352: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520": Phase="Pending", Reason="", readiness=false. Elapsed: 56.953516ms
    Oct 31 09:08:51.359: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520": Phase="Running", Reason="", readiness=true. Elapsed: 2.064029261s
    Oct 31 09:08:51.359: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" satisfied condition "running"
    STEP: creating a file in subpath 10/31/23 09:08:51.359
    Oct 31 09:08:51.410: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5016 PodName:var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:08:51.410: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:08:51.411: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:08:51.411: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/var-expansion-5016/pods/var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: test for file in mounted path 10/31/23 09:08:52.3
    Oct 31 09:08:52.356: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5016 PodName:var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:08:52.356: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:08:52.357: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:08:52.357: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/var-expansion-5016/pods/var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
    STEP: updating the annotation value 10/31/23 09:08:53.083
    Oct 31 09:08:53.616: INFO: Successfully updated pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520"
    STEP: waiting for annotated pod running 10/31/23 09:08:53.617
    Oct 31 09:08:53.617: INFO: Waiting up to 2m0s for pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" in namespace "var-expansion-5016" to be "running"
    Oct 31 09:08:53.674: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520": Phase="Running", Reason="", readiness=true. Elapsed: 57.079611ms
    Oct 31 09:08:53.675: INFO: Pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" satisfied condition "running"
    STEP: deleting the pod gracefully 10/31/23 09:08:53.675
    Oct 31 09:08:53.675: INFO: Deleting pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" in namespace "var-expansion-5016"
    Oct 31 09:08:53.691: INFO: Wait up to 5m0s for pod "var-expansion-b518e57d-476e-464b-a90e-0b6ca28ed520" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:09:25.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-5016" for this suite. 10/31/23 09:09:25.839
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:09:25.89
Oct 31 09:09:25.891: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 09:09:25.891
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:26.087
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:26.229
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344
STEP: creating the pod 10/31/23 09:09:26.355
STEP: submitting the pod to kubernetes 10/31/23 09:09:26.355
Oct 31 09:09:26.409: INFO: Waiting up to 5m0s for pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd" in namespace "pods-4688" to be "running and ready"
Oct 31 09:09:26.427: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd": Phase="Pending", Reason="", readiness=false. Elapsed: 17.106412ms
Oct 31 09:09:26.427: INFO: The phase of Pod pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:09:28.435: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd": Phase="Running", Reason="", readiness=true. Elapsed: 2.025439933s
Oct 31 09:09:28.435: INFO: The phase of Pod pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd is Running (Ready = true)
Oct 31 09:09:28.436: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 10/31/23 09:09:28.484
STEP: updating the pod 10/31/23 09:09:28.532
Oct 31 09:09:29.055: INFO: Successfully updated pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd"
Oct 31 09:09:29.055: INFO: Waiting up to 5m0s for pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd" in namespace "pods-4688" to be "running"
Oct 31 09:09:29.149: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd": Phase="Running", Reason="", readiness=true. Elapsed: 94.396336ms
Oct 31 09:09:29.150: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd" satisfied condition "running"
STEP: verifying the updated pod is in kubernetes 10/31/23 09:09:29.15
Oct 31 09:09:29.241: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 09:09:29.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-4688" for this suite. 10/31/23 09:09:29.298
------------------------------
â€¢ [3.460 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:344

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:09:25.89
    Oct 31 09:09:25.891: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 09:09:25.891
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:26.087
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:26.229
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:344
    STEP: creating the pod 10/31/23 09:09:26.355
    STEP: submitting the pod to kubernetes 10/31/23 09:09:26.355
    Oct 31 09:09:26.409: INFO: Waiting up to 5m0s for pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd" in namespace "pods-4688" to be "running and ready"
    Oct 31 09:09:26.427: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd": Phase="Pending", Reason="", readiness=false. Elapsed: 17.106412ms
    Oct 31 09:09:26.427: INFO: The phase of Pod pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:09:28.435: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd": Phase="Running", Reason="", readiness=true. Elapsed: 2.025439933s
    Oct 31 09:09:28.435: INFO: The phase of Pod pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd is Running (Ready = true)
    Oct 31 09:09:28.436: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 10/31/23 09:09:28.484
    STEP: updating the pod 10/31/23 09:09:28.532
    Oct 31 09:09:29.055: INFO: Successfully updated pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd"
    Oct 31 09:09:29.055: INFO: Waiting up to 5m0s for pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd" in namespace "pods-4688" to be "running"
    Oct 31 09:09:29.149: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd": Phase="Running", Reason="", readiness=true. Elapsed: 94.396336ms
    Oct 31 09:09:29.150: INFO: Pod "pod-update-6e6e84b0-8e05-4a32-9ca9-2189156db9dd" satisfied condition "running"
    STEP: verifying the updated pod is in kubernetes 10/31/23 09:09:29.15
    Oct 31 09:09:29.241: INFO: Pod update OK
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:09:29.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-4688" for this suite. 10/31/23 09:09:29.298
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:09:29.355
Oct 31 09:09:29.355: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir-wrapper 10/31/23 09:09:29.356
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:29.498
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:29.64
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67
Oct 31 09:09:30.004: INFO: Waiting up to 5m0s for pod "pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76" in namespace "emptydir-wrapper-4979" to be "running and ready"
Oct 31 09:09:30.046: INFO: Pod "pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76": Phase="Pending", Reason="", readiness=false. Elapsed: 42.311097ms
Oct 31 09:09:30.047: INFO: The phase of Pod pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:09:32.056: INFO: Pod "pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76": Phase="Running", Reason="", readiness=true. Elapsed: 2.052066091s
Oct 31 09:09:32.057: INFO: The phase of Pod pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76 is Running (Ready = true)
Oct 31 09:09:32.057: INFO: Pod "pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76" satisfied condition "running and ready"
STEP: Cleaning up the secret 10/31/23 09:09:32.162
STEP: Cleaning up the configmap 10/31/23 09:09:32.217
STEP: Cleaning up the pod 10/31/23 09:09:32.307
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:09:32.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-4979" for this suite. 10/31/23 09:09:32.436
------------------------------
â€¢ [3.131 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not conflict [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:09:29.355
    Oct 31 09:09:29.355: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir-wrapper 10/31/23 09:09:29.356
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:29.498
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:29.64
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not conflict [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:67
    Oct 31 09:09:30.004: INFO: Waiting up to 5m0s for pod "pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76" in namespace "emptydir-wrapper-4979" to be "running and ready"
    Oct 31 09:09:30.046: INFO: Pod "pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76": Phase="Pending", Reason="", readiness=false. Elapsed: 42.311097ms
    Oct 31 09:09:30.047: INFO: The phase of Pod pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:09:32.056: INFO: Pod "pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76": Phase="Running", Reason="", readiness=true. Elapsed: 2.052066091s
    Oct 31 09:09:32.057: INFO: The phase of Pod pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76 is Running (Ready = true)
    Oct 31 09:09:32.057: INFO: Pod "pod-secrets-6ba25af0-545c-44eb-b4c8-c126b3b8cf76" satisfied condition "running and ready"
    STEP: Cleaning up the secret 10/31/23 09:09:32.162
    STEP: Cleaning up the configmap 10/31/23 09:09:32.217
    STEP: Cleaning up the pod 10/31/23 09:09:32.307
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:09:32.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-4979" for this suite. 10/31/23 09:09:32.436
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] Job
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:09:32.492
Oct 31 09:09:32.493: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename job 10/31/23 09:09:32.494
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:32.725
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:32.861
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426
STEP: Creating a job 10/31/23 09:09:32.998
STEP: Ensuring job reaches completions 10/31/23 09:09:33.014
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Oct 31 09:09:45.021: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-1822" for this suite. 10/31/23 09:09:45.073
------------------------------
â€¢ [SLOW TEST] [12.689 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/apps/job.go:426

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:09:32.492
    Oct 31 09:09:32.493: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename job 10/31/23 09:09:32.494
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:32.725
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:32.861
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
      test/e2e/apps/job.go:426
    STEP: Creating a job 10/31/23 09:09:32.998
    STEP: Ensuring job reaches completions 10/31/23 09:09:33.014
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:09:45.021: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-1822" for this suite. 10/31/23 09:09:45.073
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:205
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:09:45.182
Oct 31 09:09:45.182: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename daemonsets 10/31/23 09:09:45.183
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:45.377
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:45.464
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:157
[It] should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:205
Oct 31 09:09:45.837: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes. 10/31/23 09:09:45.937
Oct 31 09:09:45.950: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:09:45.950: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched. 10/31/23 09:09:45.95
Oct 31 09:09:46.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:09:46.188: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:09:47.245: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:09:47.246: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:09:48.196: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Oct 31 09:09:48.196: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled 10/31/23 09:09:48.248
Oct 31 09:09:48.335: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Oct 31 09:09:48.335: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Oct 31 09:09:49.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:09:49.358: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 10/31/23 09:09:49.358
Oct 31 09:09:49.569: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:09:49.569: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:09:50.653: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:09:50.653: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:09:51.578: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:09:51.578: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:09:52.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:09:52.578: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:09:53.621: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Oct 31 09:09:53.621: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:122
STEP: Deleting DaemonSet "daemon-set" 10/31/23 09:09:53.702
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3598, will wait for the garbage collector to delete the pods 10/31/23 09:09:53.703
Oct 31 09:09:53.849: INFO: Deleting DaemonSet.extensions daemon-set took: 46.209227ms
Oct 31 09:09:53.950: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.674748ms
Oct 31 09:09:55.813: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:09:55.814: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Oct 31 09:09:55.905: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5534"},"items":null}

Oct 31 09:09:55.990: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5534"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:09:56.353: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-3598" for this suite. 10/31/23 09:09:56.405
------------------------------
â€¢ [SLOW TEST] [11.233 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/apps/daemon_set.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:09:45.182
    Oct 31 09:09:45.182: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename daemonsets 10/31/23 09:09:45.183
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:45.377
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:45.464
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:157
    [It] should run and stop complex daemon [Conformance]
      test/e2e/apps/daemon_set.go:205
    Oct 31 09:09:45.837: INFO: Creating daemon "daemon-set" with a node selector
    STEP: Initially, daemon pods should not be running on any nodes. 10/31/23 09:09:45.937
    Oct 31 09:09:45.950: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:09:45.950: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Change node label to blue, check that daemon pod is launched. 10/31/23 09:09:45.95
    Oct 31 09:09:46.188: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:09:46.188: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:09:47.245: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:09:47.246: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:09:48.196: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Oct 31 09:09:48.196: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    STEP: Update the node label to green, and wait for daemons to be unscheduled 10/31/23 09:09:48.248
    Oct 31 09:09:48.335: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Oct 31 09:09:48.335: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
    Oct 31 09:09:49.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:09:49.358: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate 10/31/23 09:09:49.358
    Oct 31 09:09:49.569: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:09:49.569: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:09:50.653: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:09:50.653: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:09:51.578: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:09:51.578: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:09:52.577: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:09:52.578: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:09:53.621: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Oct 31 09:09:53.621: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:122
    STEP: Deleting DaemonSet "daemon-set" 10/31/23 09:09:53.702
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3598, will wait for the garbage collector to delete the pods 10/31/23 09:09:53.703
    Oct 31 09:09:53.849: INFO: Deleting DaemonSet.extensions daemon-set took: 46.209227ms
    Oct 31 09:09:53.950: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.674748ms
    Oct 31 09:09:55.813: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:09:55.814: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Oct 31 09:09:55.905: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5534"},"items":null}

    Oct 31 09:09:55.990: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5534"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:09:56.353: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-3598" for this suite. 10/31/23 09:09:56.405
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:09:56.417
Oct 31 09:09:56.417: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replication-controller 10/31/23 09:09:56.418
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:56.576
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:56.758
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67
STEP: Creating replication controller my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754 10/31/23 09:09:56.819
Oct 31 09:09:56.893: INFO: Pod name my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754: Found 1 pods out of 1
Oct 31 09:09:56.893: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754" are running
Oct 31 09:09:56.893: INFO: Waiting up to 5m0s for pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv" in namespace "replication-controller-2055" to be "running"
Oct 31 09:09:56.944: INFO: Pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv": Phase="Pending", Reason="", readiness=false. Elapsed: 50.807123ms
Oct 31 09:09:58.993: INFO: Pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv": Phase="Running", Reason="", readiness=true. Elapsed: 2.10030947s
Oct 31 09:09:58.993: INFO: Pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv" satisfied condition "running"
Oct 31 09:09:58.993: INFO: Pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv" is running (conditions: [{Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:09:56 +0000 UTC Reason: Message:}])
Oct 31 09:09:58.993: INFO: Trying to dial the pod
Oct 31 09:10:04.321: INFO: Controller my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754: Got expected result from replica 1 [my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv]: "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:10:04.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-2055" for this suite. 10/31/23 09:10:04.37
------------------------------
â€¢ [SLOW TEST] [7.965 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/rc.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:09:56.417
    Oct 31 09:09:56.417: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replication-controller 10/31/23 09:09:56.418
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:09:56.576
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:09:56.758
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/rc.go:67
    STEP: Creating replication controller my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754 10/31/23 09:09:56.819
    Oct 31 09:09:56.893: INFO: Pod name my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754: Found 1 pods out of 1
    Oct 31 09:09:56.893: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754" are running
    Oct 31 09:09:56.893: INFO: Waiting up to 5m0s for pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv" in namespace "replication-controller-2055" to be "running"
    Oct 31 09:09:56.944: INFO: Pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv": Phase="Pending", Reason="", readiness=false. Elapsed: 50.807123ms
    Oct 31 09:09:58.993: INFO: Pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv": Phase="Running", Reason="", readiness=true. Elapsed: 2.10030947s
    Oct 31 09:09:58.993: INFO: Pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv" satisfied condition "running"
    Oct 31 09:09:58.993: INFO: Pod "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv" is running (conditions: [{Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:09:56 +0000 UTC Reason: Message:}])
    Oct 31 09:09:58.993: INFO: Trying to dial the pod
    Oct 31 09:10:04.321: INFO: Controller my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754: Got expected result from replica 1 [my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv]: "my-hostname-basic-efdca2bb-df19-4ba5-8572-16411e1a5754-kfllv", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:10:04.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-2055" for this suite. 10/31/23 09:10:04.37
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:10:04.384
Oct 31 09:10:04.384: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 09:10:04.385
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:04.596
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:04.748
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230
STEP: Counting existing ResourceQuota 10/31/23 09:10:05.061
STEP: Creating a ResourceQuota 10/31/23 09:10:10.072
STEP: Ensuring resource quota status is calculated 10/31/23 09:10:10.138
STEP: Creating a Pod that fits quota 10/31/23 09:10:12.148
STEP: Ensuring ResourceQuota status captures the pod usage 10/31/23 09:10:12.22
STEP: Not allowing a pod to be created that exceeds remaining quota 10/31/23 09:10:14.255
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 10/31/23 09:10:14.304
STEP: Ensuring a pod cannot update its resource requirements 10/31/23 09:10:14.402
STEP: Ensuring attempts to update pod resource requirements did not change quota usage 10/31/23 09:10:14.471
STEP: Deleting the pod 10/31/23 09:10:16.49
STEP: Ensuring resource quota status released the pod usage 10/31/23 09:10:16.582
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 09:10:18.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-6838" for this suite. 10/31/23 09:10:18.689
------------------------------
â€¢ [SLOW TEST] [14.544 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/apimachinery/resource_quota.go:230

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:10:04.384
    Oct 31 09:10:04.384: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 09:10:04.385
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:04.596
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:04.748
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a pod. [Conformance]
      test/e2e/apimachinery/resource_quota.go:230
    STEP: Counting existing ResourceQuota 10/31/23 09:10:05.061
    STEP: Creating a ResourceQuota 10/31/23 09:10:10.072
    STEP: Ensuring resource quota status is calculated 10/31/23 09:10:10.138
    STEP: Creating a Pod that fits quota 10/31/23 09:10:12.148
    STEP: Ensuring ResourceQuota status captures the pod usage 10/31/23 09:10:12.22
    STEP: Not allowing a pod to be created that exceeds remaining quota 10/31/23 09:10:14.255
    STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) 10/31/23 09:10:14.304
    STEP: Ensuring a pod cannot update its resource requirements 10/31/23 09:10:14.402
    STEP: Ensuring attempts to update pod resource requirements did not change quota usage 10/31/23 09:10:14.471
    STEP: Deleting the pod 10/31/23 09:10:16.49
    STEP: Ensuring resource quota status released the pod usage 10/31/23 09:10:16.582
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:10:18.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-6838" for this suite. 10/31/23 09:10:18.689
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:10:18.928
Oct 31 09:10:18.928: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename job 10/31/23 09:10:18.929
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:19.157
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:19.291
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703
STEP: Creating a suspended job 10/31/23 09:10:19.485
STEP: Patching the Job 10/31/23 09:10:19.551
STEP: Watching for Job to be patched 10/31/23 09:10:19.626
Oct 31 09:10:19.686: INFO: Event ADDED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn] and annotations: map[batch.kubernetes.io/job-tracking:]
Oct 31 09:10:19.686: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn] and annotations: map[batch.kubernetes.io/job-tracking:]
Oct 31 09:10:19.725: INFO: Event MODIFIED found for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking:]
STEP: Updating the job 10/31/23 09:10:19.725
STEP: Watching for Job to be updated 10/31/23 09:10:19.779
Oct 31 09:10:19.806: INFO: Event MODIFIED found for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Oct 31 09:10:19.806: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
STEP: Listing all Jobs with LabelSelector 10/31/23 09:10:19.806
Oct 31 09:10:19.842: INFO: Job: e2e-k29kn as labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched]
STEP: Waiting for job to complete 10/31/23 09:10:19.842
STEP: Delete a job collection with a labelselector 10/31/23 09:10:29.854
STEP: Watching for Job to be deleted 10/31/23 09:10:29.93
Oct 31 09:10:29.981: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Oct 31 09:10:29.981: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Oct 31 09:10:29.983: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Oct 31 09:10:29.983: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Oct 31 09:10:29.986: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Oct 31 09:10:29.986: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Oct 31 09:10:29.992: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
Oct 31 09:10:29.992: INFO: Event DELETED found for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
STEP: Relist jobs to confirm deletion 10/31/23 09:10:29.993
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Oct 31 09:10:30.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-3405" for this suite. 10/31/23 09:10:30.082
------------------------------
â€¢ [SLOW TEST] [11.233 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should manage the lifecycle of a job [Conformance]
  test/e2e/apps/job.go:703

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:10:18.928
    Oct 31 09:10:18.928: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename job 10/31/23 09:10:18.929
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:19.157
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:19.291
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a job [Conformance]
      test/e2e/apps/job.go:703
    STEP: Creating a suspended job 10/31/23 09:10:19.485
    STEP: Patching the Job 10/31/23 09:10:19.551
    STEP: Watching for Job to be patched 10/31/23 09:10:19.626
    Oct 31 09:10:19.686: INFO: Event ADDED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn] and annotations: map[batch.kubernetes.io/job-tracking:]
    Oct 31 09:10:19.686: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn] and annotations: map[batch.kubernetes.io/job-tracking:]
    Oct 31 09:10:19.725: INFO: Event MODIFIED found for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking:]
    STEP: Updating the job 10/31/23 09:10:19.725
    STEP: Watching for Job to be updated 10/31/23 09:10:19.779
    Oct 31 09:10:19.806: INFO: Event MODIFIED found for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Oct 31 09:10:19.806: INFO: Found Job annotations: map[string]string{"batch.kubernetes.io/job-tracking":"", "updated":"true"}
    STEP: Listing all Jobs with LabelSelector 10/31/23 09:10:19.806
    Oct 31 09:10:19.842: INFO: Job: e2e-k29kn as labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched]
    STEP: Waiting for job to complete 10/31/23 09:10:19.842
    STEP: Delete a job collection with a labelselector 10/31/23 09:10:29.854
    STEP: Watching for Job to be deleted 10/31/23 09:10:29.93
    Oct 31 09:10:29.981: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Oct 31 09:10:29.981: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Oct 31 09:10:29.983: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Oct 31 09:10:29.983: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Oct 31 09:10:29.986: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Oct 31 09:10:29.986: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Oct 31 09:10:29.992: INFO: Event MODIFIED observed for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    Oct 31 09:10:29.992: INFO: Event DELETED found for Job e2e-k29kn in namespace job-3405 with labels: map[e2e-job-label:e2e-k29kn e2e-k29kn:patched] and annotations: map[batch.kubernetes.io/job-tracking: updated:true]
    STEP: Relist jobs to confirm deletion 10/31/23 09:10:29.993
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:10:30.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-3405" for this suite. 10/31/23 09:10:30.082
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:10:30.166
Oct 31 09:10:30.166: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:10:30.167
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:30.418
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:30.585
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:10:30.75
Oct 31 09:10:30.772: INFO: Waiting up to 5m0s for pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12" in namespace "projected-654" to be "Succeeded or Failed"
Oct 31 09:10:30.836: INFO: Pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12": Phase="Pending", Reason="", readiness=false. Elapsed: 63.933031ms
Oct 31 09:10:32.888: INFO: Pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12": Phase="Pending", Reason="", readiness=false. Elapsed: 2.116185873s
Oct 31 09:10:34.845: INFO: Pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.072595009s
STEP: Saw pod success 10/31/23 09:10:34.845
Oct 31 09:10:34.845: INFO: Pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12" satisfied condition "Succeeded or Failed"
Oct 31 09:10:34.894: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12 container client-container: <nil>
STEP: delete the pod 10/31/23 09:10:35.148
Oct 31 09:10:35.218: INFO: Waiting for pod downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12 to disappear
Oct 31 09:10:35.309: INFO: Pod downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 09:10:35.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-654" for this suite. 10/31/23 09:10:35.373
------------------------------
â€¢ [SLOW TEST] [5.260 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:10:30.166
    Oct 31 09:10:30.166: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:10:30.167
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:30.418
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:30.585
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:207
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:10:30.75
    Oct 31 09:10:30.772: INFO: Waiting up to 5m0s for pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12" in namespace "projected-654" to be "Succeeded or Failed"
    Oct 31 09:10:30.836: INFO: Pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12": Phase="Pending", Reason="", readiness=false. Elapsed: 63.933031ms
    Oct 31 09:10:32.888: INFO: Pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12": Phase="Pending", Reason="", readiness=false. Elapsed: 2.116185873s
    Oct 31 09:10:34.845: INFO: Pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.072595009s
    STEP: Saw pod success 10/31/23 09:10:34.845
    Oct 31 09:10:34.845: INFO: Pod "downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12" satisfied condition "Succeeded or Failed"
    Oct 31 09:10:34.894: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12 container client-container: <nil>
    STEP: delete the pod 10/31/23 09:10:35.148
    Oct 31 09:10:35.218: INFO: Waiting for pod downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12 to disappear
    Oct 31 09:10:35.309: INFO: Pod downwardapi-volume-197196c1-392e-4354-898e-318ed7eb0e12 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:10:35.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-654" for this suite. 10/31/23 09:10:35.373
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:10:35.427
Oct 31 09:10:35.427: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:10:35.428
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:35.63
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:35.771
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57
STEP: Creating configMap with name projected-configmap-test-volume-179bc2b9-186f-42a8-bcd9-268eeabe8c5c 10/31/23 09:10:35.858
STEP: Creating a pod to test consume configMaps 10/31/23 09:10:35.88
Oct 31 09:10:35.939: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214" in namespace "projected-7676" to be "Succeeded or Failed"
Oct 31 09:10:35.966: INFO: Pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214": Phase="Pending", Reason="", readiness=false. Elapsed: 26.714737ms
Oct 31 09:10:37.974: INFO: Pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034245474s
Oct 31 09:10:39.981: INFO: Pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.041271169s
STEP: Saw pod success 10/31/23 09:10:39.981
Oct 31 09:10:39.981: INFO: Pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214" satisfied condition "Succeeded or Failed"
Oct 31 09:10:40.047: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:10:40.421
Oct 31 09:10:40.553: INFO: Waiting for pod pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214 to disappear
Oct 31 09:10:40.627: INFO: Pod pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:10:40.628: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7676" for this suite. 10/31/23 09:10:40.656
------------------------------
â€¢ [SLOW TEST] [5.281 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:10:35.427
    Oct 31 09:10:35.427: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:10:35.428
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:35.63
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:35.771
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:57
    STEP: Creating configMap with name projected-configmap-test-volume-179bc2b9-186f-42a8-bcd9-268eeabe8c5c 10/31/23 09:10:35.858
    STEP: Creating a pod to test consume configMaps 10/31/23 09:10:35.88
    Oct 31 09:10:35.939: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214" in namespace "projected-7676" to be "Succeeded or Failed"
    Oct 31 09:10:35.966: INFO: Pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214": Phase="Pending", Reason="", readiness=false. Elapsed: 26.714737ms
    Oct 31 09:10:37.974: INFO: Pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034245474s
    Oct 31 09:10:39.981: INFO: Pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.041271169s
    STEP: Saw pod success 10/31/23 09:10:39.981
    Oct 31 09:10:39.981: INFO: Pod "pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214" satisfied condition "Succeeded or Failed"
    Oct 31 09:10:40.047: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:10:40.421
    Oct 31 09:10:40.553: INFO: Waiting for pod pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214 to disappear
    Oct 31 09:10:40.627: INFO: Pod pod-projected-configmaps-cb85d35f-75d4-49cc-83e6-dcde45d19214 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:10:40.628: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7676" for this suite. 10/31/23 09:10:40.656
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] Services
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:10:40.713
Oct 31 09:10:40.713: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:10:40.714
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:40.87
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:41.011
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244
STEP: creating an Endpoint 10/31/23 09:10:41.272
STEP: waiting for available Endpoint 10/31/23 09:10:41.31
STEP: listing all Endpoints 10/31/23 09:10:41.36
STEP: updating the Endpoint 10/31/23 09:10:41.444
STEP: fetching the Endpoint 10/31/23 09:10:41.61
STEP: patching the Endpoint 10/31/23 09:10:41.704
STEP: fetching the Endpoint 10/31/23 09:10:41.852
STEP: deleting the Endpoint by Collection 10/31/23 09:10:41.953
STEP: waiting for Endpoint deletion 10/31/23 09:10:42.014
STEP: fetching the Endpoint 10/31/23 09:10:42.104
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:10:42.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-8945" for this suite. 10/31/23 09:10:42.189
------------------------------
â€¢ [1.585 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/network/service.go:3244

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:10:40.713
    Oct 31 09:10:40.713: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:10:40.714
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:40.87
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:41.011
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should test the lifecycle of an Endpoint [Conformance]
      test/e2e/network/service.go:3244
    STEP: creating an Endpoint 10/31/23 09:10:41.272
    STEP: waiting for available Endpoint 10/31/23 09:10:41.31
    STEP: listing all Endpoints 10/31/23 09:10:41.36
    STEP: updating the Endpoint 10/31/23 09:10:41.444
    STEP: fetching the Endpoint 10/31/23 09:10:41.61
    STEP: patching the Endpoint 10/31/23 09:10:41.704
    STEP: fetching the Endpoint 10/31/23 09:10:41.852
    STEP: deleting the Endpoint by Collection 10/31/23 09:10:41.953
    STEP: waiting for Endpoint deletion 10/31/23 09:10:42.014
    STEP: fetching the Endpoint 10/31/23 09:10:42.104
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:10:42.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-8945" for this suite. 10/31/23 09:10:42.189
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Pods
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:10:42.298
Oct 31 09:10:42.299: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 09:10:42.301
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:42.556
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:42.655
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398
STEP: creating the pod 10/31/23 09:10:42.827
STEP: submitting the pod to kubernetes 10/31/23 09:10:42.827
Oct 31 09:10:42.846: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d" in namespace "pods-1196" to be "running and ready"
Oct 31 09:10:42.889: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Pending", Reason="", readiness=false. Elapsed: 43.302209ms
Oct 31 09:10:42.890: INFO: The phase of Pod pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:10:44.897: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Running", Reason="", readiness=true. Elapsed: 2.050957516s
Oct 31 09:10:44.897: INFO: The phase of Pod pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d is Running (Ready = true)
Oct 31 09:10:44.897: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d" satisfied condition "running and ready"
STEP: verifying the pod is in kubernetes 10/31/23 09:10:44.906
STEP: updating the pod 10/31/23 09:10:44.969
Oct 31 09:10:45.492: INFO: Successfully updated pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d"
Oct 31 09:10:45.492: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d" in namespace "pods-1196" to be "terminated with reason DeadlineExceeded"
Oct 31 09:10:45.540: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Running", Reason="", readiness=true. Elapsed: 47.454201ms
Oct 31 09:10:47.592: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Running", Reason="", readiness=true. Elapsed: 2.099180866s
Oct 31 09:10:49.557: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.064303516s
Oct 31 09:10:49.557: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d" satisfied condition "terminated with reason DeadlineExceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 09:10:49.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-1196" for this suite. 10/31/23 09:10:49.614
------------------------------
â€¢ [SLOW TEST] [7.330 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:398

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:10:42.298
    Oct 31 09:10:42.299: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 09:10:42.301
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:42.556
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:42.655
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:398
    STEP: creating the pod 10/31/23 09:10:42.827
    STEP: submitting the pod to kubernetes 10/31/23 09:10:42.827
    Oct 31 09:10:42.846: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d" in namespace "pods-1196" to be "running and ready"
    Oct 31 09:10:42.889: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Pending", Reason="", readiness=false. Elapsed: 43.302209ms
    Oct 31 09:10:42.890: INFO: The phase of Pod pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:10:44.897: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Running", Reason="", readiness=true. Elapsed: 2.050957516s
    Oct 31 09:10:44.897: INFO: The phase of Pod pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d is Running (Ready = true)
    Oct 31 09:10:44.897: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d" satisfied condition "running and ready"
    STEP: verifying the pod is in kubernetes 10/31/23 09:10:44.906
    STEP: updating the pod 10/31/23 09:10:44.969
    Oct 31 09:10:45.492: INFO: Successfully updated pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d"
    Oct 31 09:10:45.492: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d" in namespace "pods-1196" to be "terminated with reason DeadlineExceeded"
    Oct 31 09:10:45.540: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Running", Reason="", readiness=true. Elapsed: 47.454201ms
    Oct 31 09:10:47.592: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Running", Reason="", readiness=true. Elapsed: 2.099180866s
    Oct 31 09:10:49.557: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.064303516s
    Oct 31 09:10:49.557: INFO: Pod "pod-update-activedeadlineseconds-717ca212-319d-4264-adf4-d675aa03075d" satisfied condition "terminated with reason DeadlineExceeded"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:10:49.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-1196" for this suite. 10/31/23 09:10:49.614
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:10:49.632
Oct 31 09:10:49.632: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 09:10:49.633
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:49.943
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:50.12
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240
STEP: Creating configMap with name cm-test-opt-del-ce29337c-1d9d-40a0-8245-93fc477be780 10/31/23 09:10:50.265
STEP: Creating configMap with name cm-test-opt-upd-22b3d7e1-e233-4c5e-a005-d7dba830980e 10/31/23 09:10:50.352
STEP: Creating the pod 10/31/23 09:10:50.446
Oct 31 09:10:50.466: INFO: Waiting up to 5m0s for pod "pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca" in namespace "configmap-6663" to be "running and ready"
Oct 31 09:10:50.478: INFO: Pod "pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca": Phase="Pending", Reason="", readiness=false. Elapsed: 11.513715ms
Oct 31 09:10:50.478: INFO: The phase of Pod pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:10:52.485: INFO: Pod "pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca": Phase="Running", Reason="", readiness=true. Elapsed: 2.018968886s
Oct 31 09:10:52.485: INFO: The phase of Pod pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca is Running (Ready = true)
Oct 31 09:10:52.486: INFO: Pod "pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-ce29337c-1d9d-40a0-8245-93fc477be780 10/31/23 09:10:53.086
STEP: Updating configmap cm-test-opt-upd-22b3d7e1-e233-4c5e-a005-d7dba830980e 10/31/23 09:10:53.173
STEP: Creating configMap with name cm-test-opt-create-12670c8a-ce74-40fd-902d-a12174502d15 10/31/23 09:10:53.267
STEP: waiting to observe update in volume 10/31/23 09:10:53.359
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:12:07.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6663" for this suite. 10/31/23 09:12:07.946
------------------------------
â€¢ [SLOW TEST] [78.390 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:240

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:10:49.632
    Oct 31 09:10:49.632: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 09:10:49.633
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:10:49.943
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:10:50.12
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:240
    STEP: Creating configMap with name cm-test-opt-del-ce29337c-1d9d-40a0-8245-93fc477be780 10/31/23 09:10:50.265
    STEP: Creating configMap with name cm-test-opt-upd-22b3d7e1-e233-4c5e-a005-d7dba830980e 10/31/23 09:10:50.352
    STEP: Creating the pod 10/31/23 09:10:50.446
    Oct 31 09:10:50.466: INFO: Waiting up to 5m0s for pod "pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca" in namespace "configmap-6663" to be "running and ready"
    Oct 31 09:10:50.478: INFO: Pod "pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca": Phase="Pending", Reason="", readiness=false. Elapsed: 11.513715ms
    Oct 31 09:10:50.478: INFO: The phase of Pod pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:10:52.485: INFO: Pod "pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca": Phase="Running", Reason="", readiness=true. Elapsed: 2.018968886s
    Oct 31 09:10:52.485: INFO: The phase of Pod pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca is Running (Ready = true)
    Oct 31 09:10:52.486: INFO: Pod "pod-configmaps-ca3904a8-137a-4c05-a5c5-c78da85ec3ca" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-ce29337c-1d9d-40a0-8245-93fc477be780 10/31/23 09:10:53.086
    STEP: Updating configmap cm-test-opt-upd-22b3d7e1-e233-4c5e-a005-d7dba830980e 10/31/23 09:10:53.173
    STEP: Creating configMap with name cm-test-opt-create-12670c8a-ce74-40fd-902d-a12174502d15 10/31/23 09:10:53.267
    STEP: waiting to observe update in volume 10/31/23 09:10:53.359
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:12:07.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6663" for this suite. 10/31/23 09:12:07.946
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:12:08.022
Oct 31 09:12:08.023: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:12:08.024
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:08.214
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:08.4
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227
STEP: Creating Pod 10/31/23 09:12:08.544
Oct 31 09:12:08.577: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8" in namespace "emptydir-7716" to be "running"
Oct 31 09:12:08.629: INFO: Pod "pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8": Phase="Pending", Reason="", readiness=false. Elapsed: 51.75096ms
Oct 31 09:12:10.642: INFO: Pod "pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8": Phase="Running", Reason="", readiness=false. Elapsed: 2.064823187s
Oct 31 09:12:10.643: INFO: Pod "pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8" satisfied condition "running"
STEP: Reading file content from the nginx-container 10/31/23 09:12:10.643
Oct 31 09:12:10.643: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7716 PodName:pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:12:10.643: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:12:10.644: INFO: ExecWithOptions: Clientset creation
Oct 31 09:12:10.644: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/emptydir-7716/pods/pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Oct 31 09:12:11.466: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:12:11.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7716" for this suite. 10/31/23 09:12:11.537
------------------------------
â€¢ [3.594 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  pod should support shared volumes between containers [Conformance]
  test/e2e/common/storage/empty_dir.go:227

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:12:08.022
    Oct 31 09:12:08.023: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:12:08.024
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:08.214
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:08.4
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] pod should support shared volumes between containers [Conformance]
      test/e2e/common/storage/empty_dir.go:227
    STEP: Creating Pod 10/31/23 09:12:08.544
    Oct 31 09:12:08.577: INFO: Waiting up to 5m0s for pod "pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8" in namespace "emptydir-7716" to be "running"
    Oct 31 09:12:08.629: INFO: Pod "pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8": Phase="Pending", Reason="", readiness=false. Elapsed: 51.75096ms
    Oct 31 09:12:10.642: INFO: Pod "pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8": Phase="Running", Reason="", readiness=false. Elapsed: 2.064823187s
    Oct 31 09:12:10.643: INFO: Pod "pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8" satisfied condition "running"
    STEP: Reading file content from the nginx-container 10/31/23 09:12:10.643
    Oct 31 09:12:10.643: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7716 PodName:pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:12:10.643: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:12:10.644: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:12:10.644: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/emptydir-7716/pods/pod-sharedvolume-bf6e02fb-4587-43c7-9ae9-874ba720ffe8/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
    Oct 31 09:12:11.466: INFO: Exec stderr: ""
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:12:11.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7716" for this suite. 10/31/23 09:12:11.537
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:12:11.617
Oct 31 09:12:11.617: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename security-context 10/31/23 09:12:11.618
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:11.829
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:11.929
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 10/31/23 09:12:12.028
Oct 31 09:12:12.084: INFO: Waiting up to 5m0s for pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712" in namespace "security-context-8530" to be "Succeeded or Failed"
Oct 31 09:12:12.104: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712": Phase="Pending", Reason="", readiness=false. Elapsed: 19.328933ms
Oct 31 09:12:14.128: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712": Phase="Pending", Reason="", readiness=false. Elapsed: 2.043652957s
Oct 31 09:12:16.120: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712": Phase="Pending", Reason="", readiness=false. Elapsed: 4.035563078s
Oct 31 09:12:18.169: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.084544113s
STEP: Saw pod success 10/31/23 09:12:18.169
Oct 31 09:12:18.170: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712" satisfied condition "Succeeded or Failed"
Oct 31 09:12:18.244: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 pod security-context-eae27d1d-5bcb-492a-b419-0f16acb33712 container test-container: <nil>
STEP: delete the pod 10/31/23 09:12:18.722
Oct 31 09:12:18.788: INFO: Waiting for pod security-context-eae27d1d-5bcb-492a-b419-0f16acb33712 to disappear
Oct 31 09:12:18.864: INFO: Pod security-context-eae27d1d-5bcb-492a-b419-0f16acb33712 no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Oct 31 09:12:18.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-8530" for this suite. 10/31/23 09:12:18.963
------------------------------
â€¢ [SLOW TEST] [7.452 seconds]
[sig-node] Security Context
test/e2e/node/framework.go:23
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/node/security_context.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:12:11.617
    Oct 31 09:12:11.617: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename security-context 10/31/23 09:12:11.618
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:11.829
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:11.929
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
      test/e2e/node/security_context.go:164
    STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser 10/31/23 09:12:12.028
    Oct 31 09:12:12.084: INFO: Waiting up to 5m0s for pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712" in namespace "security-context-8530" to be "Succeeded or Failed"
    Oct 31 09:12:12.104: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712": Phase="Pending", Reason="", readiness=false. Elapsed: 19.328933ms
    Oct 31 09:12:14.128: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712": Phase="Pending", Reason="", readiness=false. Elapsed: 2.043652957s
    Oct 31 09:12:16.120: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712": Phase="Pending", Reason="", readiness=false. Elapsed: 4.035563078s
    Oct 31 09:12:18.169: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.084544113s
    STEP: Saw pod success 10/31/23 09:12:18.169
    Oct 31 09:12:18.170: INFO: Pod "security-context-eae27d1d-5bcb-492a-b419-0f16acb33712" satisfied condition "Succeeded or Failed"
    Oct 31 09:12:18.244: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 pod security-context-eae27d1d-5bcb-492a-b419-0f16acb33712 container test-container: <nil>
    STEP: delete the pod 10/31/23 09:12:18.722
    Oct 31 09:12:18.788: INFO: Waiting for pod security-context-eae27d1d-5bcb-492a-b419-0f16acb33712 to disappear
    Oct 31 09:12:18.864: INFO: Pod security-context-eae27d1d-5bcb-492a-b419-0f16acb33712 no longer exists
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:12:18.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-8530" for this suite. 10/31/23 09:12:18.963
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:12:19.077
Oct 31 09:12:19.078: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename var-expansion 10/31/23 09:12:19.079
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:19.306
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:19.448
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73
STEP: Creating a pod to test substitution in container's command 10/31/23 09:12:19.586
Oct 31 09:12:19.604: INFO: Waiting up to 5m0s for pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4" in namespace "var-expansion-1938" to be "Succeeded or Failed"
Oct 31 09:12:19.627: INFO: Pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4": Phase="Pending", Reason="", readiness=false. Elapsed: 23.095739ms
Oct 31 09:12:21.636: INFO: Pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.032022099s
Oct 31 09:12:23.650: INFO: Pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.046789239s
STEP: Saw pod success 10/31/23 09:12:23.651
Oct 31 09:12:23.651: INFO: Pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4" satisfied condition "Succeeded or Failed"
Oct 31 09:12:23.765: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4 container dapi-container: <nil>
STEP: delete the pod 10/31/23 09:12:23.961
Oct 31 09:12:24.070: INFO: Waiting for pod var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4 to disappear
Oct 31 09:12:24.118: INFO: Pod var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Oct 31 09:12:24.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-1938" for this suite. 10/31/23 09:12:24.171
------------------------------
â€¢ [SLOW TEST] [5.184 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:73

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:12:19.077
    Oct 31 09:12:19.078: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename var-expansion 10/31/23 09:12:19.079
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:19.306
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:19.448
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's command [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:73
    STEP: Creating a pod to test substitution in container's command 10/31/23 09:12:19.586
    Oct 31 09:12:19.604: INFO: Waiting up to 5m0s for pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4" in namespace "var-expansion-1938" to be "Succeeded or Failed"
    Oct 31 09:12:19.627: INFO: Pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4": Phase="Pending", Reason="", readiness=false. Elapsed: 23.095739ms
    Oct 31 09:12:21.636: INFO: Pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.032022099s
    Oct 31 09:12:23.650: INFO: Pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.046789239s
    STEP: Saw pod success 10/31/23 09:12:23.651
    Oct 31 09:12:23.651: INFO: Pod "var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4" satisfied condition "Succeeded or Failed"
    Oct 31 09:12:23.765: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4 container dapi-container: <nil>
    STEP: delete the pod 10/31/23 09:12:23.961
    Oct 31 09:12:24.070: INFO: Waiting for pod var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4 to disappear
    Oct 31 09:12:24.118: INFO: Pod var-expansion-5e1206a1-cad8-4d0d-a3a4-409d0591bcc4 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:12:24.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-1938" for this suite. 10/31/23 09:12:24.171
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-network] Proxy version v1
  should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:12:24.263
Oct 31 09:12:24.263: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename proxy 10/31/23 09:12:24.264
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:24.473
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:24.658
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/network/proxy.go:101
STEP: starting an echo server on multiple ports 10/31/23 09:12:24.852
STEP: creating replication controller proxy-service-8dgdj in namespace proxy-3851 10/31/23 09:12:24.853
I1031 09:12:24.909870      18 runners.go:193] Created replication controller with name: proxy-service-8dgdj, namespace: proxy-3851, replica count: 1
I1031 09:12:26.060538      18 runners.go:193] proxy-service-8dgdj Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I1031 09:12:27.061017      18 runners.go:193] proxy-service-8dgdj Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Oct 31 09:12:27.136: INFO: setup took 2.347672905s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts 10/31/23 09:12:27.136
Oct 31 09:12:27.226: INFO: (0) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 88.877575ms)
Oct 31 09:12:27.228: INFO: (0) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 91.150678ms)
Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 91.226893ms)
Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 91.567096ms)
Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 91.314604ms)
Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 91.978157ms)
Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 91.544409ms)
Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 92.340038ms)
Oct 31 09:12:27.231: INFO: (0) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 93.762453ms)
Oct 31 09:12:27.231: INFO: (0) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 93.734116ms)
Oct 31 09:12:27.231: INFO: (0) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 93.971876ms)
Oct 31 09:12:27.234: INFO: (0) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 97.197417ms)
Oct 31 09:12:27.234: INFO: (0) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 96.912825ms)
Oct 31 09:12:27.234: INFO: (0) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 97.197979ms)
Oct 31 09:12:27.235: INFO: (0) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 97.928703ms)
Oct 31 09:12:27.235: INFO: (0) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 98.147494ms)
Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 79.121187ms)
Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 79.246789ms)
Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 79.374243ms)
Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 79.50939ms)
Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 79.214622ms)
Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 79.760237ms)
Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 79.795197ms)
Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 79.430882ms)
Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 79.707428ms)
Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 79.62617ms)
Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 79.562808ms)
Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 121.652008ms)
Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 121.748263ms)
Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 122.155764ms)
Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 121.78956ms)
Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 121.453407ms)
Oct 31 09:12:27.376: INFO: (2) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.9341ms)
Oct 31 09:12:27.376: INFO: (2) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.884276ms)
Oct 31 09:12:27.376: INFO: (2) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 17.525491ms)
Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 23.279607ms)
Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 23.668241ms)
Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 23.697802ms)
Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 24.218504ms)
Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 24.72164ms)
Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 24.349847ms)
Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 24.328437ms)
Oct 31 09:12:27.384: INFO: (2) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 24.957651ms)
Oct 31 09:12:27.384: INFO: (2) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 25.108135ms)
Oct 31 09:12:27.385: INFO: (2) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 25.809946ms)
Oct 31 09:12:27.385: INFO: (2) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 26.209604ms)
Oct 31 09:12:27.511: INFO: (2) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 152.187465ms)
Oct 31 09:12:27.512: INFO: (2) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 152.774558ms)
Oct 31 09:12:27.536: INFO: (3) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 23.819976ms)
Oct 31 09:12:27.536: INFO: (3) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 23.579281ms)
Oct 31 09:12:27.536: INFO: (3) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 23.807081ms)
Oct 31 09:12:27.537: INFO: (3) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 24.064508ms)
Oct 31 09:12:27.537: INFO: (3) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 24.092056ms)
Oct 31 09:12:27.537: INFO: (3) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 24.596522ms)
Oct 31 09:12:27.536: INFO: (3) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 23.88785ms)
Oct 31 09:12:27.537: INFO: (3) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 24.212088ms)
Oct 31 09:12:27.539: INFO: (3) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 26.366926ms)
Oct 31 09:12:27.539: INFO: (3) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 26.281886ms)
Oct 31 09:12:27.539: INFO: (3) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 26.587939ms)
Oct 31 09:12:27.539: INFO: (3) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 26.945479ms)
Oct 31 09:12:27.540: INFO: (3) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 26.763854ms)
Oct 31 09:12:27.540: INFO: (3) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 27.561978ms)
Oct 31 09:12:27.540: INFO: (3) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 27.529315ms)
Oct 31 09:12:27.540: INFO: (3) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 27.784444ms)
Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 12.740044ms)
Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 13.070232ms)
Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 13.429642ms)
Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 14.00047ms)
Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 13.980822ms)
Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 14.527625ms)
Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 13.872373ms)
Oct 31 09:12:27.559: INFO: (4) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 17.494998ms)
Oct 31 09:12:27.559: INFO: (4) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 16.957029ms)
Oct 31 09:12:27.559: INFO: (4) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 17.274074ms)
Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 19.196068ms)
Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 17.17086ms)
Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 18.791861ms)
Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 17.3775ms)
Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 18.054062ms)
Oct 31 09:12:27.561: INFO: (4) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 18.24686ms)
Oct 31 09:12:27.620: INFO: (5) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 58.321686ms)
Oct 31 09:12:27.620: INFO: (5) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 58.336379ms)
Oct 31 09:12:27.620: INFO: (5) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 58.512193ms)
Oct 31 09:12:27.620: INFO: (5) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 58.719271ms)
Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 58.899185ms)
Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 59.308544ms)
Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 59.511102ms)
Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 59.662067ms)
Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 59.188564ms)
Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 59.376072ms)
Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 59.720897ms)
Oct 31 09:12:27.665: INFO: (5) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 103.382471ms)
Oct 31 09:12:27.665: INFO: (5) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 103.571596ms)
Oct 31 09:12:27.665: INFO: (5) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 103.553456ms)
Oct 31 09:12:27.666: INFO: (5) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 104.163496ms)
Oct 31 09:12:27.666: INFO: (5) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 104.301312ms)
Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 62.940678ms)
Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 63.295961ms)
Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 62.956765ms)
Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 62.669506ms)
Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 62.973572ms)
Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 62.747871ms)
Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 62.931416ms)
Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 62.849373ms)
Oct 31 09:12:27.737: INFO: (6) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 70.497264ms)
Oct 31 09:12:27.737: INFO: (6) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 70.676967ms)
Oct 31 09:12:27.737: INFO: (6) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 70.733802ms)
Oct 31 09:12:27.738: INFO: (6) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 70.914623ms)
Oct 31 09:12:27.781: INFO: (6) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 114.839296ms)
Oct 31 09:12:27.781: INFO: (6) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 114.686531ms)
Oct 31 09:12:27.781: INFO: (6) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 114.64244ms)
Oct 31 09:12:27.786: INFO: (6) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 118.968386ms)
Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 29.329233ms)
Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 29.626119ms)
Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 29.659072ms)
Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 30.0713ms)
Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 29.941326ms)
Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 30.437162ms)
Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 30.13246ms)
Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 30.533147ms)
Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 30.335912ms)
Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 31.058943ms)
Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 30.794372ms)
Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 30.892517ms)
Oct 31 09:12:27.857: INFO: (7) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 70.750397ms)
Oct 31 09:12:27.857: INFO: (7) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 71.343118ms)
Oct 31 09:12:27.862: INFO: (7) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 76.375384ms)
Oct 31 09:12:27.862: INFO: (7) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 75.855784ms)
Oct 31 09:12:27.879: INFO: (8) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 14.77072ms)
Oct 31 09:12:27.879: INFO: (8) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 15.781852ms)
Oct 31 09:12:27.881: INFO: (8) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.909568ms)
Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 17.547993ms)
Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 18.76525ms)
Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.588145ms)
Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 17.91301ms)
Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 18.376125ms)
Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 16.959331ms)
Oct 31 09:12:27.883: INFO: (8) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 18.261097ms)
Oct 31 09:12:27.883: INFO: (8) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 19.410817ms)
Oct 31 09:12:27.883: INFO: (8) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 17.655635ms)
Oct 31 09:12:27.884: INFO: (8) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 18.944865ms)
Oct 31 09:12:27.884: INFO: (8) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 21.67802ms)
Oct 31 09:12:27.884: INFO: (8) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 21.149294ms)
Oct 31 09:12:27.885: INFO: (8) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 19.770233ms)
Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 28.624006ms)
Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 28.620365ms)
Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 28.742249ms)
Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 28.86835ms)
Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 28.821883ms)
Oct 31 09:12:27.915: INFO: (9) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 29.463041ms)
Oct 31 09:12:27.915: INFO: (9) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 29.866221ms)
Oct 31 09:12:27.915: INFO: (9) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 29.664669ms)
Oct 31 09:12:27.919: INFO: (9) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 33.86746ms)
Oct 31 09:12:27.919: INFO: (9) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 34.408483ms)
Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 33.607787ms)
Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 33.805869ms)
Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 33.805034ms)
Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 33.948142ms)
Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 34.479672ms)
Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 34.951328ms)
Oct 31 09:12:27.937: INFO: (10) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 16.911034ms)
Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 17.100046ms)
Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 17.195062ms)
Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.984305ms)
Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 17.477167ms)
Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 17.363608ms)
Oct 31 09:12:27.968: INFO: (10) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 47.467684ms)
Oct 31 09:12:27.968: INFO: (10) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 48.304969ms)
Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 47.917253ms)
Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 47.998679ms)
Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 48.199624ms)
Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 48.45932ms)
Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 48.616458ms)
Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 48.503548ms)
Oct 31 09:12:28.013: INFO: (10) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 92.249944ms)
Oct 31 09:12:28.014: INFO: (10) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 93.971935ms)
Oct 31 09:12:28.031: INFO: (11) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 15.107775ms)
Oct 31 09:12:28.031: INFO: (11) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 15.373257ms)
Oct 31 09:12:28.031: INFO: (11) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.281208ms)
Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 16.541324ms)
Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 16.764922ms)
Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.017601ms)
Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 16.587881ms)
Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 16.677644ms)
Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.400244ms)
Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 16.514ms)
Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 17.910834ms)
Oct 31 09:12:28.034: INFO: (11) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 17.867083ms)
Oct 31 09:12:28.077: INFO: (11) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 62.125139ms)
Oct 31 09:12:28.077: INFO: (11) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 62.352679ms)
Oct 31 09:12:28.077: INFO: (11) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 61.630432ms)
Oct 31 09:12:28.077: INFO: (11) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 61.839533ms)
Oct 31 09:12:28.093: INFO: (12) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 14.680543ms)
Oct 31 09:12:28.093: INFO: (12) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 14.92414ms)
Oct 31 09:12:28.093: INFO: (12) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 15.503826ms)
Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 15.126259ms)
Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 15.920824ms)
Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 16.155637ms)
Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.438904ms)
Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.296035ms)
Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 16.008919ms)
Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.822955ms)
Oct 31 09:12:28.099: INFO: (12) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 20.399768ms)
Oct 31 09:12:28.099: INFO: (12) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 20.59544ms)
Oct 31 09:12:28.189: INFO: (12) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 111.311643ms)
Oct 31 09:12:28.189: INFO: (12) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 111.088591ms)
Oct 31 09:12:28.189: INFO: (12) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 111.664998ms)
Oct 31 09:12:28.189: INFO: (12) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 111.425679ms)
Oct 31 09:12:28.201: INFO: (13) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 10.884906ms)
Oct 31 09:12:28.206: INFO: (13) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 15.432205ms)
Oct 31 09:12:28.206: INFO: (13) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 15.929604ms)
Oct 31 09:12:28.206: INFO: (13) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 16.18843ms)
Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.1632ms)
Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 15.961325ms)
Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 16.289842ms)
Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 16.251392ms)
Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 17.306245ms)
Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 17.500893ms)
Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 16.541321ms)
Oct 31 09:12:28.208: INFO: (13) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 17.519991ms)
Oct 31 09:12:28.208: INFO: (13) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 17.620128ms)
Oct 31 09:12:28.208: INFO: (13) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 17.190979ms)
Oct 31 09:12:28.208: INFO: (13) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 17.304537ms)
Oct 31 09:12:28.209: INFO: (13) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 18.046059ms)
Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 24.784823ms)
Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 24.051451ms)
Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 23.897324ms)
Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 24.440907ms)
Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 24.029667ms)
Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 23.845486ms)
Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 24.807104ms)
Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 25.003044ms)
Oct 31 09:12:28.235: INFO: (14) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 24.153206ms)
Oct 31 09:12:28.277: INFO: (14) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 66.851964ms)
Oct 31 09:12:28.280: INFO: (14) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 69.783136ms)
Oct 31 09:12:28.280: INFO: (14) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 71.458304ms)
Oct 31 09:12:28.281: INFO: (14) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 70.769162ms)
Oct 31 09:12:28.281: INFO: (14) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 70.29693ms)
Oct 31 09:12:28.281: INFO: (14) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 71.705141ms)
Oct 31 09:12:28.281: INFO: (14) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 71.668235ms)
Oct 31 09:12:28.313: INFO: (15) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 30.77107ms)
Oct 31 09:12:28.313: INFO: (15) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 30.972928ms)
Oct 31 09:12:28.314: INFO: (15) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 31.3647ms)
Oct 31 09:12:28.354: INFO: (15) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 72.098659ms)
Oct 31 09:12:28.354: INFO: (15) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 71.924006ms)
Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 72.013532ms)
Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 73.198674ms)
Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 72.710465ms)
Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 72.906953ms)
Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 71.772291ms)
Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 73.084729ms)
Oct 31 09:12:28.364: INFO: (15) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 81.40034ms)
Oct 31 09:12:28.364: INFO: (15) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 81.664423ms)
Oct 31 09:12:28.365: INFO: (15) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 82.040834ms)
Oct 31 09:12:28.365: INFO: (15) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 83.311404ms)
Oct 31 09:12:28.365: INFO: (15) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 82.658283ms)
Oct 31 09:12:28.398: INFO: (16) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 31.666277ms)
Oct 31 09:12:28.398: INFO: (16) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 31.946101ms)
Oct 31 09:12:28.419: INFO: (16) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 53.047439ms)
Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 53.824322ms)
Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 54.478183ms)
Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 54.664193ms)
Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 54.724721ms)
Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 54.041356ms)
Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 54.613481ms)
Oct 31 09:12:28.421: INFO: (16) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 55.441129ms)
Oct 31 09:12:28.423: INFO: (16) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 57.242503ms)
Oct 31 09:12:28.427: INFO: (16) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 60.768167ms)
Oct 31 09:12:28.427: INFO: (16) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 61.178276ms)
Oct 31 09:12:28.427: INFO: (16) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 60.984718ms)
Oct 31 09:12:28.427: INFO: (16) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 62.013142ms)
Oct 31 09:12:28.428: INFO: (16) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 62.250442ms)
Oct 31 09:12:28.441: INFO: (17) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 12.527153ms)
Oct 31 09:12:28.441: INFO: (17) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 12.341177ms)
Oct 31 09:12:28.441: INFO: (17) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 11.931826ms)
Oct 31 09:12:28.441: INFO: (17) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 12.516992ms)
Oct 31 09:12:28.485: INFO: (17) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 56.364239ms)
Oct 31 09:12:28.485: INFO: (17) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 56.881921ms)
Oct 31 09:12:28.486: INFO: (17) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 56.982101ms)
Oct 31 09:12:28.486: INFO: (17) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 56.954182ms)
Oct 31 09:12:28.486: INFO: (17) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 57.078562ms)
Oct 31 09:12:28.531: INFO: (17) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 102.454836ms)
Oct 31 09:12:28.567: INFO: (17) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 138.064233ms)
Oct 31 09:12:28.567: INFO: (17) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 138.398775ms)
Oct 31 09:12:28.567: INFO: (17) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 138.27804ms)
Oct 31 09:12:28.567: INFO: (17) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 137.965291ms)
Oct 31 09:12:28.568: INFO: (17) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 140.056122ms)
Oct 31 09:12:28.568: INFO: (17) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 139.792863ms)
Oct 31 09:12:28.666: INFO: (18) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 96.933601ms)
Oct 31 09:12:28.666: INFO: (18) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 97.106638ms)
Oct 31 09:12:28.677: INFO: (18) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 106.684142ms)
Oct 31 09:12:28.677: INFO: (18) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 108.237531ms)
Oct 31 09:12:28.677: INFO: (18) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 107.489723ms)
Oct 31 09:12:28.677: INFO: (18) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 108.012039ms)
Oct 31 09:12:28.678: INFO: (18) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 108.698938ms)
Oct 31 09:12:28.678: INFO: (18) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 107.55892ms)
Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 108.45078ms)
Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 108.428738ms)
Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 109.004423ms)
Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 110.714298ms)
Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 109.380609ms)
Oct 31 09:12:28.682: INFO: (18) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 112.020507ms)
Oct 31 09:12:28.682: INFO: (18) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 112.293379ms)
Oct 31 09:12:28.682: INFO: (18) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 111.555112ms)
Oct 31 09:12:28.735: INFO: (19) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 52.921658ms)
Oct 31 09:12:28.735: INFO: (19) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 52.757178ms)
Oct 31 09:12:28.735: INFO: (19) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 52.440046ms)
Oct 31 09:12:28.735: INFO: (19) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 52.742535ms)
Oct 31 09:12:28.746: INFO: (19) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 63.675751ms)
Oct 31 09:12:28.746: INFO: (19) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 63.486722ms)
Oct 31 09:12:28.746: INFO: (19) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 63.814053ms)
Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 63.877888ms)
Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 64.214691ms)
Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 64.140661ms)
Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 64.480127ms)
Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 64.595675ms)
Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 64.012514ms)
Oct 31 09:12:28.748: INFO: (19) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 65.068042ms)
Oct 31 09:12:28.752: INFO: (19) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 68.814665ms)
Oct 31 09:12:28.752: INFO: (19) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 69.742051ms)
STEP: deleting ReplicationController proxy-service-8dgdj in namespace proxy-3851, will wait for the garbage collector to delete the pods 10/31/23 09:12:28.753
Oct 31 09:12:28.936: INFO: Deleting ReplicationController proxy-service-8dgdj took: 83.65231ms
Oct 31 09:12:29.036: INFO: Terminating ReplicationController proxy-service-8dgdj pods took: 100.694695ms
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Oct 31 09:12:30.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-3851" for this suite. 10/31/23 09:12:30.664
------------------------------
â€¢ [SLOW TEST] [6.516 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/network/proxy.go:101

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:12:24.263
    Oct 31 09:12:24.263: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename proxy 10/31/23 09:12:24.264
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:24.473
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:24.658
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] should proxy through a service and a pod  [Conformance]
      test/e2e/network/proxy.go:101
    STEP: starting an echo server on multiple ports 10/31/23 09:12:24.852
    STEP: creating replication controller proxy-service-8dgdj in namespace proxy-3851 10/31/23 09:12:24.853
    I1031 09:12:24.909870      18 runners.go:193] Created replication controller with name: proxy-service-8dgdj, namespace: proxy-3851, replica count: 1
    I1031 09:12:26.060538      18 runners.go:193] proxy-service-8dgdj Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I1031 09:12:27.061017      18 runners.go:193] proxy-service-8dgdj Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Oct 31 09:12:27.136: INFO: setup took 2.347672905s, starting test cases
    STEP: running 16 cases, 20 attempts per case, 320 total attempts 10/31/23 09:12:27.136
    Oct 31 09:12:27.226: INFO: (0) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 88.877575ms)
    Oct 31 09:12:27.228: INFO: (0) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 91.150678ms)
    Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 91.226893ms)
    Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 91.567096ms)
    Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 91.314604ms)
    Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 91.978157ms)
    Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 91.544409ms)
    Oct 31 09:12:27.229: INFO: (0) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 92.340038ms)
    Oct 31 09:12:27.231: INFO: (0) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 93.762453ms)
    Oct 31 09:12:27.231: INFO: (0) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 93.734116ms)
    Oct 31 09:12:27.231: INFO: (0) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 93.971876ms)
    Oct 31 09:12:27.234: INFO: (0) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 97.197417ms)
    Oct 31 09:12:27.234: INFO: (0) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 96.912825ms)
    Oct 31 09:12:27.234: INFO: (0) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 97.197979ms)
    Oct 31 09:12:27.235: INFO: (0) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 97.928703ms)
    Oct 31 09:12:27.235: INFO: (0) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 98.147494ms)
    Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 79.121187ms)
    Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 79.246789ms)
    Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 79.374243ms)
    Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 79.50939ms)
    Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 79.214622ms)
    Oct 31 09:12:27.315: INFO: (1) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 79.760237ms)
    Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 79.795197ms)
    Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 79.430882ms)
    Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 79.707428ms)
    Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 79.62617ms)
    Oct 31 09:12:27.316: INFO: (1) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 79.562808ms)
    Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 121.652008ms)
    Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 121.748263ms)
    Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 122.155764ms)
    Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 121.78956ms)
    Oct 31 09:12:27.358: INFO: (1) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 121.453407ms)
    Oct 31 09:12:27.376: INFO: (2) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.9341ms)
    Oct 31 09:12:27.376: INFO: (2) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.884276ms)
    Oct 31 09:12:27.376: INFO: (2) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 17.525491ms)
    Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 23.279607ms)
    Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 23.668241ms)
    Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 23.697802ms)
    Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 24.218504ms)
    Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 24.72164ms)
    Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 24.349847ms)
    Oct 31 09:12:27.383: INFO: (2) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 24.328437ms)
    Oct 31 09:12:27.384: INFO: (2) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 24.957651ms)
    Oct 31 09:12:27.384: INFO: (2) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 25.108135ms)
    Oct 31 09:12:27.385: INFO: (2) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 25.809946ms)
    Oct 31 09:12:27.385: INFO: (2) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 26.209604ms)
    Oct 31 09:12:27.511: INFO: (2) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 152.187465ms)
    Oct 31 09:12:27.512: INFO: (2) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 152.774558ms)
    Oct 31 09:12:27.536: INFO: (3) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 23.819976ms)
    Oct 31 09:12:27.536: INFO: (3) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 23.579281ms)
    Oct 31 09:12:27.536: INFO: (3) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 23.807081ms)
    Oct 31 09:12:27.537: INFO: (3) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 24.064508ms)
    Oct 31 09:12:27.537: INFO: (3) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 24.092056ms)
    Oct 31 09:12:27.537: INFO: (3) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 24.596522ms)
    Oct 31 09:12:27.536: INFO: (3) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 23.88785ms)
    Oct 31 09:12:27.537: INFO: (3) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 24.212088ms)
    Oct 31 09:12:27.539: INFO: (3) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 26.366926ms)
    Oct 31 09:12:27.539: INFO: (3) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 26.281886ms)
    Oct 31 09:12:27.539: INFO: (3) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 26.587939ms)
    Oct 31 09:12:27.539: INFO: (3) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 26.945479ms)
    Oct 31 09:12:27.540: INFO: (3) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 26.763854ms)
    Oct 31 09:12:27.540: INFO: (3) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 27.561978ms)
    Oct 31 09:12:27.540: INFO: (3) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 27.529315ms)
    Oct 31 09:12:27.540: INFO: (3) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 27.784444ms)
    Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 12.740044ms)
    Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 13.070232ms)
    Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 13.429642ms)
    Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 14.00047ms)
    Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 13.980822ms)
    Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 14.527625ms)
    Oct 31 09:12:27.555: INFO: (4) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 13.872373ms)
    Oct 31 09:12:27.559: INFO: (4) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 17.494998ms)
    Oct 31 09:12:27.559: INFO: (4) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 16.957029ms)
    Oct 31 09:12:27.559: INFO: (4) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 17.274074ms)
    Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 19.196068ms)
    Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 17.17086ms)
    Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 18.791861ms)
    Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 17.3775ms)
    Oct 31 09:12:27.560: INFO: (4) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 18.054062ms)
    Oct 31 09:12:27.561: INFO: (4) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 18.24686ms)
    Oct 31 09:12:27.620: INFO: (5) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 58.321686ms)
    Oct 31 09:12:27.620: INFO: (5) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 58.336379ms)
    Oct 31 09:12:27.620: INFO: (5) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 58.512193ms)
    Oct 31 09:12:27.620: INFO: (5) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 58.719271ms)
    Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 58.899185ms)
    Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 59.308544ms)
    Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 59.511102ms)
    Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 59.662067ms)
    Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 59.188564ms)
    Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 59.376072ms)
    Oct 31 09:12:27.621: INFO: (5) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 59.720897ms)
    Oct 31 09:12:27.665: INFO: (5) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 103.382471ms)
    Oct 31 09:12:27.665: INFO: (5) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 103.571596ms)
    Oct 31 09:12:27.665: INFO: (5) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 103.553456ms)
    Oct 31 09:12:27.666: INFO: (5) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 104.163496ms)
    Oct 31 09:12:27.666: INFO: (5) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 104.301312ms)
    Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 62.940678ms)
    Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 63.295961ms)
    Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 62.956765ms)
    Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 62.669506ms)
    Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 62.973572ms)
    Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 62.747871ms)
    Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 62.931416ms)
    Oct 31 09:12:27.729: INFO: (6) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 62.849373ms)
    Oct 31 09:12:27.737: INFO: (6) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 70.497264ms)
    Oct 31 09:12:27.737: INFO: (6) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 70.676967ms)
    Oct 31 09:12:27.737: INFO: (6) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 70.733802ms)
    Oct 31 09:12:27.738: INFO: (6) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 70.914623ms)
    Oct 31 09:12:27.781: INFO: (6) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 114.839296ms)
    Oct 31 09:12:27.781: INFO: (6) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 114.686531ms)
    Oct 31 09:12:27.781: INFO: (6) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 114.64244ms)
    Oct 31 09:12:27.786: INFO: (6) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 118.968386ms)
    Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 29.329233ms)
    Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 29.626119ms)
    Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 29.659072ms)
    Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 30.0713ms)
    Oct 31 09:12:27.816: INFO: (7) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 29.941326ms)
    Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 30.437162ms)
    Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 30.13246ms)
    Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 30.533147ms)
    Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 30.335912ms)
    Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 31.058943ms)
    Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 30.794372ms)
    Oct 31 09:12:27.817: INFO: (7) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 30.892517ms)
    Oct 31 09:12:27.857: INFO: (7) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 70.750397ms)
    Oct 31 09:12:27.857: INFO: (7) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 71.343118ms)
    Oct 31 09:12:27.862: INFO: (7) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 76.375384ms)
    Oct 31 09:12:27.862: INFO: (7) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 75.855784ms)
    Oct 31 09:12:27.879: INFO: (8) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 14.77072ms)
    Oct 31 09:12:27.879: INFO: (8) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 15.781852ms)
    Oct 31 09:12:27.881: INFO: (8) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.909568ms)
    Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 17.547993ms)
    Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 18.76525ms)
    Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.588145ms)
    Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 17.91301ms)
    Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 18.376125ms)
    Oct 31 09:12:27.882: INFO: (8) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 16.959331ms)
    Oct 31 09:12:27.883: INFO: (8) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 18.261097ms)
    Oct 31 09:12:27.883: INFO: (8) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 19.410817ms)
    Oct 31 09:12:27.883: INFO: (8) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 17.655635ms)
    Oct 31 09:12:27.884: INFO: (8) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 18.944865ms)
    Oct 31 09:12:27.884: INFO: (8) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 21.67802ms)
    Oct 31 09:12:27.884: INFO: (8) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 21.149294ms)
    Oct 31 09:12:27.885: INFO: (8) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 19.770233ms)
    Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 28.624006ms)
    Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 28.620365ms)
    Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 28.742249ms)
    Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 28.86835ms)
    Oct 31 09:12:27.914: INFO: (9) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 28.821883ms)
    Oct 31 09:12:27.915: INFO: (9) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 29.463041ms)
    Oct 31 09:12:27.915: INFO: (9) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 29.866221ms)
    Oct 31 09:12:27.915: INFO: (9) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 29.664669ms)
    Oct 31 09:12:27.919: INFO: (9) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 33.86746ms)
    Oct 31 09:12:27.919: INFO: (9) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 34.408483ms)
    Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 33.607787ms)
    Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 33.805869ms)
    Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 33.805034ms)
    Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 33.948142ms)
    Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 34.479672ms)
    Oct 31 09:12:27.920: INFO: (9) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 34.951328ms)
    Oct 31 09:12:27.937: INFO: (10) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 16.911034ms)
    Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 17.100046ms)
    Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 17.195062ms)
    Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.984305ms)
    Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 17.477167ms)
    Oct 31 09:12:27.938: INFO: (10) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 17.363608ms)
    Oct 31 09:12:27.968: INFO: (10) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 47.467684ms)
    Oct 31 09:12:27.968: INFO: (10) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 48.304969ms)
    Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 47.917253ms)
    Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 47.998679ms)
    Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 48.199624ms)
    Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 48.45932ms)
    Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 48.616458ms)
    Oct 31 09:12:27.969: INFO: (10) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 48.503548ms)
    Oct 31 09:12:28.013: INFO: (10) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 92.249944ms)
    Oct 31 09:12:28.014: INFO: (10) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 93.971935ms)
    Oct 31 09:12:28.031: INFO: (11) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 15.107775ms)
    Oct 31 09:12:28.031: INFO: (11) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 15.373257ms)
    Oct 31 09:12:28.031: INFO: (11) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.281208ms)
    Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 16.541324ms)
    Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 16.764922ms)
    Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.017601ms)
    Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 16.587881ms)
    Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 16.677644ms)
    Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.400244ms)
    Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 16.514ms)
    Oct 31 09:12:28.032: INFO: (11) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 17.910834ms)
    Oct 31 09:12:28.034: INFO: (11) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 17.867083ms)
    Oct 31 09:12:28.077: INFO: (11) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 62.125139ms)
    Oct 31 09:12:28.077: INFO: (11) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 62.352679ms)
    Oct 31 09:12:28.077: INFO: (11) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 61.630432ms)
    Oct 31 09:12:28.077: INFO: (11) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 61.839533ms)
    Oct 31 09:12:28.093: INFO: (12) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 14.680543ms)
    Oct 31 09:12:28.093: INFO: (12) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 14.92414ms)
    Oct 31 09:12:28.093: INFO: (12) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 15.503826ms)
    Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 15.126259ms)
    Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 15.920824ms)
    Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 16.155637ms)
    Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.438904ms)
    Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.296035ms)
    Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 16.008919ms)
    Oct 31 09:12:28.094: INFO: (12) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 16.822955ms)
    Oct 31 09:12:28.099: INFO: (12) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 20.399768ms)
    Oct 31 09:12:28.099: INFO: (12) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 20.59544ms)
    Oct 31 09:12:28.189: INFO: (12) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 111.311643ms)
    Oct 31 09:12:28.189: INFO: (12) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 111.088591ms)
    Oct 31 09:12:28.189: INFO: (12) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 111.664998ms)
    Oct 31 09:12:28.189: INFO: (12) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 111.425679ms)
    Oct 31 09:12:28.201: INFO: (13) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 10.884906ms)
    Oct 31 09:12:28.206: INFO: (13) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 15.432205ms)
    Oct 31 09:12:28.206: INFO: (13) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 15.929604ms)
    Oct 31 09:12:28.206: INFO: (13) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 16.18843ms)
    Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 16.1632ms)
    Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 15.961325ms)
    Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 16.289842ms)
    Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 16.251392ms)
    Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 17.306245ms)
    Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 17.500893ms)
    Oct 31 09:12:28.207: INFO: (13) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 16.541321ms)
    Oct 31 09:12:28.208: INFO: (13) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 17.519991ms)
    Oct 31 09:12:28.208: INFO: (13) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 17.620128ms)
    Oct 31 09:12:28.208: INFO: (13) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 17.190979ms)
    Oct 31 09:12:28.208: INFO: (13) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 17.304537ms)
    Oct 31 09:12:28.209: INFO: (13) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 18.046059ms)
    Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 24.784823ms)
    Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 24.051451ms)
    Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 23.897324ms)
    Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 24.440907ms)
    Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 24.029667ms)
    Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 23.845486ms)
    Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 24.807104ms)
    Oct 31 09:12:28.234: INFO: (14) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 25.003044ms)
    Oct 31 09:12:28.235: INFO: (14) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 24.153206ms)
    Oct 31 09:12:28.277: INFO: (14) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 66.851964ms)
    Oct 31 09:12:28.280: INFO: (14) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 69.783136ms)
    Oct 31 09:12:28.280: INFO: (14) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 71.458304ms)
    Oct 31 09:12:28.281: INFO: (14) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 70.769162ms)
    Oct 31 09:12:28.281: INFO: (14) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 70.29693ms)
    Oct 31 09:12:28.281: INFO: (14) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 71.705141ms)
    Oct 31 09:12:28.281: INFO: (14) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 71.668235ms)
    Oct 31 09:12:28.313: INFO: (15) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 30.77107ms)
    Oct 31 09:12:28.313: INFO: (15) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 30.972928ms)
    Oct 31 09:12:28.314: INFO: (15) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 31.3647ms)
    Oct 31 09:12:28.354: INFO: (15) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 72.098659ms)
    Oct 31 09:12:28.354: INFO: (15) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 71.924006ms)
    Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 72.013532ms)
    Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 73.198674ms)
    Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 72.710465ms)
    Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 72.906953ms)
    Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 71.772291ms)
    Oct 31 09:12:28.355: INFO: (15) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 73.084729ms)
    Oct 31 09:12:28.364: INFO: (15) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 81.40034ms)
    Oct 31 09:12:28.364: INFO: (15) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 81.664423ms)
    Oct 31 09:12:28.365: INFO: (15) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 82.040834ms)
    Oct 31 09:12:28.365: INFO: (15) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 83.311404ms)
    Oct 31 09:12:28.365: INFO: (15) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 82.658283ms)
    Oct 31 09:12:28.398: INFO: (16) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 31.666277ms)
    Oct 31 09:12:28.398: INFO: (16) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 31.946101ms)
    Oct 31 09:12:28.419: INFO: (16) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 53.047439ms)
    Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 53.824322ms)
    Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 54.478183ms)
    Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 54.664193ms)
    Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 54.724721ms)
    Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 54.041356ms)
    Oct 31 09:12:28.420: INFO: (16) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 54.613481ms)
    Oct 31 09:12:28.421: INFO: (16) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 55.441129ms)
    Oct 31 09:12:28.423: INFO: (16) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 57.242503ms)
    Oct 31 09:12:28.427: INFO: (16) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 60.768167ms)
    Oct 31 09:12:28.427: INFO: (16) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 61.178276ms)
    Oct 31 09:12:28.427: INFO: (16) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 60.984718ms)
    Oct 31 09:12:28.427: INFO: (16) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 62.013142ms)
    Oct 31 09:12:28.428: INFO: (16) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 62.250442ms)
    Oct 31 09:12:28.441: INFO: (17) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 12.527153ms)
    Oct 31 09:12:28.441: INFO: (17) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 12.341177ms)
    Oct 31 09:12:28.441: INFO: (17) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 11.931826ms)
    Oct 31 09:12:28.441: INFO: (17) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 12.516992ms)
    Oct 31 09:12:28.485: INFO: (17) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 56.364239ms)
    Oct 31 09:12:28.485: INFO: (17) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 56.881921ms)
    Oct 31 09:12:28.486: INFO: (17) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 56.982101ms)
    Oct 31 09:12:28.486: INFO: (17) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 56.954182ms)
    Oct 31 09:12:28.486: INFO: (17) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 57.078562ms)
    Oct 31 09:12:28.531: INFO: (17) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 102.454836ms)
    Oct 31 09:12:28.567: INFO: (17) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 138.064233ms)
    Oct 31 09:12:28.567: INFO: (17) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 138.398775ms)
    Oct 31 09:12:28.567: INFO: (17) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 138.27804ms)
    Oct 31 09:12:28.567: INFO: (17) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 137.965291ms)
    Oct 31 09:12:28.568: INFO: (17) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 140.056122ms)
    Oct 31 09:12:28.568: INFO: (17) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 139.792863ms)
    Oct 31 09:12:28.666: INFO: (18) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 96.933601ms)
    Oct 31 09:12:28.666: INFO: (18) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 97.106638ms)
    Oct 31 09:12:28.677: INFO: (18) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 106.684142ms)
    Oct 31 09:12:28.677: INFO: (18) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 108.237531ms)
    Oct 31 09:12:28.677: INFO: (18) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 107.489723ms)
    Oct 31 09:12:28.677: INFO: (18) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 108.012039ms)
    Oct 31 09:12:28.678: INFO: (18) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 108.698938ms)
    Oct 31 09:12:28.678: INFO: (18) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 107.55892ms)
    Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 108.45078ms)
    Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 108.428738ms)
    Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 109.004423ms)
    Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 110.714298ms)
    Oct 31 09:12:28.679: INFO: (18) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 109.380609ms)
    Oct 31 09:12:28.682: INFO: (18) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 112.020507ms)
    Oct 31 09:12:28.682: INFO: (18) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 112.293379ms)
    Oct 31 09:12:28.682: INFO: (18) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 111.555112ms)
    Oct 31 09:12:28.735: INFO: (19) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname1/proxy/: foo (200; 52.921658ms)
    Oct 31 09:12:28.735: INFO: (19) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg/proxy/rewriteme">test</a> (200; 52.757178ms)
    Oct 31 09:12:28.735: INFO: (19) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">test<... (200; 52.440046ms)
    Oct 31 09:12:28.735: INFO: (19) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 52.742535ms)
    Oct 31 09:12:28.746: INFO: (19) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:162/proxy/: bar (200; 63.675751ms)
    Oct 31 09:12:28.746: INFO: (19) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:443/proxy/tlsrewritem... (200; 63.486722ms)
    Oct 31 09:12:28.746: INFO: (19) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/: <a href="/api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:1080/proxy/rewriteme">... (200; 63.814053ms)
    Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:460/proxy/: tls baz (200; 63.877888ms)
    Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname2/proxy/: tls qux (200; 64.214691ms)
    Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/services/https:proxy-service-8dgdj:tlsportname1/proxy/: tls baz (200; 64.140661ms)
    Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname2/proxy/: bar (200; 64.480127ms)
    Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/pods/https:proxy-service-8dgdj-v6cgg:462/proxy/: tls qux (200; 64.595675ms)
    Oct 31 09:12:28.747: INFO: (19) /api/v1/namespaces/proxy-3851/pods/proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 64.012514ms)
    Oct 31 09:12:28.748: INFO: (19) /api/v1/namespaces/proxy-3851/pods/http:proxy-service-8dgdj-v6cgg:160/proxy/: foo (200; 65.068042ms)
    Oct 31 09:12:28.752: INFO: (19) /api/v1/namespaces/proxy-3851/services/proxy-service-8dgdj:portname1/proxy/: foo (200; 68.814665ms)
    Oct 31 09:12:28.752: INFO: (19) /api/v1/namespaces/proxy-3851/services/http:proxy-service-8dgdj:portname2/proxy/: bar (200; 69.742051ms)
    STEP: deleting ReplicationController proxy-service-8dgdj in namespace proxy-3851, will wait for the garbage collector to delete the pods 10/31/23 09:12:28.753
    Oct 31 09:12:28.936: INFO: Deleting ReplicationController proxy-service-8dgdj took: 83.65231ms
    Oct 31 09:12:29.036: INFO: Terminating ReplicationController proxy-service-8dgdj pods took: 100.694695ms
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:12:30.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-3851" for this suite. 10/31/23 09:12:30.664
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:12:30.788
Oct 31 09:12:30.788: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename namespaces 10/31/23 09:12:30.789
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:31.038
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:31.227
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299
STEP: Read namespace status 10/31/23 09:12:31.329
Oct 31 09:12:31.426: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
STEP: Patch namespace status 10/31/23 09:12:31.426
Oct 31 09:12:31.481: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
STEP: Update namespace status 10/31/23 09:12:31.481
Oct 31 09:12:31.605: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:12:31.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-1794" for this suite. 10/31/23 09:12:31.639
------------------------------
â€¢ [0.918 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply changes to a namespace status [Conformance]
  test/e2e/apimachinery/namespace.go:299

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:12:30.788
    Oct 31 09:12:30.788: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename namespaces 10/31/23 09:12:30.789
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:31.038
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:31.227
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a namespace status [Conformance]
      test/e2e/apimachinery/namespace.go:299
    STEP: Read namespace status 10/31/23 09:12:31.329
    Oct 31 09:12:31.426: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
    STEP: Patch namespace status 10/31/23 09:12:31.426
    Oct 31 09:12:31.481: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
    STEP: Update namespace status 10/31/23 09:12:31.481
    Oct 31 09:12:31.605: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:12:31.605: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-1794" for this suite. 10/31/23 09:12:31.639
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:12:31.708
Oct 31 09:12:31.709: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename dns 10/31/23 09:12:31.71
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:31.879
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:32.068
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137
STEP: Creating a test headless service 10/31/23 09:12:32.124
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 200.106.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.106.200_udp@PTR;check="$$(dig +tcp +noall +answer +search 200.106.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.106.200_tcp@PTR;sleep 1; done
 10/31/23 09:12:32.213
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 200.106.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.106.200_udp@PTR;check="$$(dig +tcp +noall +answer +search 200.106.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.106.200_tcp@PTR;sleep 1; done
 10/31/23 09:12:32.214
STEP: creating a pod to probe DNS 10/31/23 09:12:32.214
STEP: submitting the pod to kubernetes 10/31/23 09:12:32.214
Oct 31 09:12:32.283: INFO: Waiting up to 15m0s for pod "dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c" in namespace "dns-7778" to be "running"
Oct 31 09:12:32.306: INFO: Pod "dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c": Phase="Pending", Reason="", readiness=false. Elapsed: 22.73048ms
Oct 31 09:12:34.320: INFO: Pod "dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c": Phase="Running", Reason="", readiness=true. Elapsed: 2.037437189s
Oct 31 09:12:34.320: INFO: Pod "dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c" satisfied condition "running"
STEP: retrieving the pod 10/31/23 09:12:34.32
STEP: looking for the results for each expected name from probers 10/31/23 09:12:34.383
Oct 31 09:12:34.575: INFO: Unable to read wheezy_udp@dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
Oct 31 09:12:34.731: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
Oct 31 09:12:34.786: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
Oct 31 09:12:34.920: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
Oct 31 09:12:35.755: INFO: Unable to read jessie_tcp@dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
Oct 31 09:12:36.487: INFO: Lookups using dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c failed for: [wheezy_udp@dns-test-service.dns-7778.svc.cluster.local wheezy_tcp@dns-test-service.dns-7778.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local jessie_tcp@dns-test-service.dns-7778.svc.cluster.local]

Oct 31 09:12:42.964: INFO: DNS probes using dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c succeeded

STEP: deleting the pod 10/31/23 09:12:42.964
STEP: deleting the test service 10/31/23 09:12:43.001
STEP: deleting the test headless service 10/31/23 09:12:43.075
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Oct 31 09:12:43.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-7778" for this suite. 10/31/23 09:12:43.157
------------------------------
â€¢ [SLOW TEST] [11.519 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/network/dns.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:12:31.708
    Oct 31 09:12:31.709: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename dns 10/31/23 09:12:31.71
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:31.879
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:32.068
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for services  [Conformance]
      test/e2e/network/dns.go:137
    STEP: Creating a test headless service 10/31/23 09:12:32.124
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 200.106.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.106.200_udp@PTR;check="$$(dig +tcp +noall +answer +search 200.106.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.106.200_tcp@PTR;sleep 1; done
     10/31/23 09:12:32.213
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7778.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7778.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7778.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7778.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7778.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 200.106.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.106.200_udp@PTR;check="$$(dig +tcp +noall +answer +search 200.106.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.106.200_tcp@PTR;sleep 1; done
     10/31/23 09:12:32.214
    STEP: creating a pod to probe DNS 10/31/23 09:12:32.214
    STEP: submitting the pod to kubernetes 10/31/23 09:12:32.214
    Oct 31 09:12:32.283: INFO: Waiting up to 15m0s for pod "dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c" in namespace "dns-7778" to be "running"
    Oct 31 09:12:32.306: INFO: Pod "dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c": Phase="Pending", Reason="", readiness=false. Elapsed: 22.73048ms
    Oct 31 09:12:34.320: INFO: Pod "dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c": Phase="Running", Reason="", readiness=true. Elapsed: 2.037437189s
    Oct 31 09:12:34.320: INFO: Pod "dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c" satisfied condition "running"
    STEP: retrieving the pod 10/31/23 09:12:34.32
    STEP: looking for the results for each expected name from probers 10/31/23 09:12:34.383
    Oct 31 09:12:34.575: INFO: Unable to read wheezy_udp@dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
    Oct 31 09:12:34.731: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
    Oct 31 09:12:34.786: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
    Oct 31 09:12:34.920: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
    Oct 31 09:12:35.755: INFO: Unable to read jessie_tcp@dns-test-service.dns-7778.svc.cluster.local from pod dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c: the server could not find the requested resource (get pods dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c)
    Oct 31 09:12:36.487: INFO: Lookups using dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c failed for: [wheezy_udp@dns-test-service.dns-7778.svc.cluster.local wheezy_tcp@dns-test-service.dns-7778.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7778.svc.cluster.local jessie_tcp@dns-test-service.dns-7778.svc.cluster.local]

    Oct 31 09:12:42.964: INFO: DNS probes using dns-7778/dns-test-d6d0883b-ee81-4a7d-9406-d82411dae36c succeeded

    STEP: deleting the pod 10/31/23 09:12:42.964
    STEP: deleting the test service 10/31/23 09:12:43.001
    STEP: deleting the test headless service 10/31/23 09:12:43.075
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:12:43.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-7778" for this suite. 10/31/23 09:12:43.157
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:12:43.228
Oct 31 09:12:43.228: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename runtimeclass 10/31/23 09:12:43.23
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:43.422
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:43.599
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129
Oct 31 09:12:43.789: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-5510 to be scheduled
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Oct 31 09:12:43.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-5510" for this suite. 10/31/23 09:12:44.015
------------------------------
â€¢ [0.842 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:129

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:12:43.228
    Oct 31 09:12:43.228: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename runtimeclass 10/31/23 09:12:43.23
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:43.422
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:43.599
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:129
    Oct 31 09:12:43.789: INFO: Waiting up to 1m20s for at least 1 pods in namespace runtimeclass-5510 to be scheduled
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:12:43.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-5510" for this suite. 10/31/23 09:12:44.015
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:12:44.076
Oct 31 09:12:44.076: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:12:44.078
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:44.275
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:44.369
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442
STEP: set up a multi version CRD 10/31/23 09:12:44.51
Oct 31 09:12:44.510: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: mark a version not serverd 10/31/23 09:12:59.71
STEP: check the unserved version gets removed 10/31/23 09:12:59.799
STEP: check the other version is not changed 10/31/23 09:13:02.937
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:13:09.825: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-5515" for this suite. 10/31/23 09:13:09.895
------------------------------
â€¢ [SLOW TEST] [25.889 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:442

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:12:44.076
    Oct 31 09:12:44.076: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:12:44.078
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:12:44.275
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:12:44.369
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] removes definition from spec when one version gets changed to not be served [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:442
    STEP: set up a multi version CRD 10/31/23 09:12:44.51
    Oct 31 09:12:44.510: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: mark a version not serverd 10/31/23 09:12:59.71
    STEP: check the unserved version gets removed 10/31/23 09:12:59.799
    STEP: check the other version is not changed 10/31/23 09:13:02.937
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:13:09.825: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-5515" for this suite. 10/31/23 09:13:09.895
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:13:09.973
Oct 31 09:13:09.974: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 09:13:09.976
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:10.153
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:10.249
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138
STEP: Creating configMap that has name configmap-test-emptyKey-8461a40b-14f9-414b-9ca3-b1e5bef04430 10/31/23 09:13:10.394
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:13:10.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-8772" for this suite. 10/31/23 09:13:10.53
------------------------------
â€¢ [0.623 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/common/node/configmap.go:138

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:13:09.973
    Oct 31 09:13:09.974: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 09:13:09.976
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:10.153
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:10.249
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create ConfigMap with empty key [Conformance]
      test/e2e/common/node/configmap.go:138
    STEP: Creating configMap that has name configmap-test-emptyKey-8461a40b-14f9-414b-9ca3-b1e5bef04430 10/31/23 09:13:10.394
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:13:10.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-8772" for this suite. 10/31/23 09:13:10.53
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:13:10.602
Oct 31 09:13:10.602: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-pred 10/31/23 09:13:10.603
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:10.826
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:10.964
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Oct 31 09:13:11.060: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Oct 31 09:13:11.169: INFO: Waiting for terminating namespaces to be deleted...
Oct 31 09:13:11.177: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz before test
Oct 31 09:13:11.245: INFO: coredns-7d6446f647-hz5j8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 09:13:11.245: INFO: 	Container coredns ready: true, restart count 0
Oct 31 09:13:11.245: INFO: csi-bizflycloud-nodeplugin-xkt2t from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 09:13:11.245: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 09:13:11.245: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 09:13:11.245: INFO: kube-router-jdd2v from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 09:13:11.246: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 09:13:11.246: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 09:13:11.246: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 09:13:11.246: INFO: 	Container systemd-logs ready: true, restart count 0
Oct 31 09:13:11.246: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n before test
Oct 31 09:13:11.294: INFO: csi-bizflycloud-nodeplugin-x6sjq from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 09:13:11.294: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 09:13:11.294: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 09:13:11.294: INFO: kube-router-p6g8s from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 09:13:11.294: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 09:13:11.294: INFO: sonobuoy from sonobuoy started at 2023-10-31 08:59:15 +0000 UTC (1 container statuses recorded)
Oct 31 09:13:11.294: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Oct 31 09:13:11.294: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 09:13:11.294: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 09:13:11.294: INFO: 	Container systemd-logs ready: true, restart count 0
Oct 31 09:13:11.294: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 before test
Oct 31 09:13:11.365: INFO: coredns-7d6446f647-bmrzn from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 09:13:11.365: INFO: 	Container coredns ready: true, restart count 0
Oct 31 09:13:11.365: INFO: csi-bizflycloud-nodeplugin-flvf8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 09:13:11.365: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 09:13:11.365: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 09:13:11.365: INFO: kube-router-9x529 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 09:13:11.365: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 09:13:11.365: INFO: sonobuoy-e2e-job-5096458fae614ffb from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 09:13:11.365: INFO: 	Container e2e ready: true, restart count 0
Oct 31 09:13:11.365: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 09:13:11.365: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 09:13:11.365: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 09:13:11.365: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443
STEP: Trying to schedule Pod with nonempty NodeSelector. 10/31/23 09:13:11.365
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.1793264bdd9295dc], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] 10/31/23 09:13:11.75
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:13:12.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-5443" for this suite. 10/31/23 09:13:12.761
------------------------------
â€¢ [2.215 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/scheduling/predicates.go:443

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:13:10.602
    Oct 31 09:13:10.602: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-pred 10/31/23 09:13:10.603
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:10.826
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:10.964
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Oct 31 09:13:11.060: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Oct 31 09:13:11.169: INFO: Waiting for terminating namespaces to be deleted...
    Oct 31 09:13:11.177: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz before test
    Oct 31 09:13:11.245: INFO: coredns-7d6446f647-hz5j8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 09:13:11.245: INFO: 	Container coredns ready: true, restart count 0
    Oct 31 09:13:11.245: INFO: csi-bizflycloud-nodeplugin-xkt2t from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 09:13:11.245: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 09:13:11.245: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 09:13:11.245: INFO: kube-router-jdd2v from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 09:13:11.246: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 09:13:11.246: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 09:13:11.246: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 09:13:11.246: INFO: 	Container systemd-logs ready: true, restart count 0
    Oct 31 09:13:11.246: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n before test
    Oct 31 09:13:11.294: INFO: csi-bizflycloud-nodeplugin-x6sjq from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 09:13:11.294: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 09:13:11.294: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 09:13:11.294: INFO: kube-router-p6g8s from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 09:13:11.294: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 09:13:11.294: INFO: sonobuoy from sonobuoy started at 2023-10-31 08:59:15 +0000 UTC (1 container statuses recorded)
    Oct 31 09:13:11.294: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Oct 31 09:13:11.294: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 09:13:11.294: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 09:13:11.294: INFO: 	Container systemd-logs ready: true, restart count 0
    Oct 31 09:13:11.294: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 before test
    Oct 31 09:13:11.365: INFO: coredns-7d6446f647-bmrzn from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 09:13:11.365: INFO: 	Container coredns ready: true, restart count 0
    Oct 31 09:13:11.365: INFO: csi-bizflycloud-nodeplugin-flvf8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 09:13:11.365: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 09:13:11.365: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 09:13:11.365: INFO: kube-router-9x529 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 09:13:11.365: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 09:13:11.365: INFO: sonobuoy-e2e-job-5096458fae614ffb from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 09:13:11.365: INFO: 	Container e2e ready: true, restart count 0
    Oct 31 09:13:11.365: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 09:13:11.365: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 09:13:11.365: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 09:13:11.365: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that NodeSelector is respected if not matching  [Conformance]
      test/e2e/scheduling/predicates.go:443
    STEP: Trying to schedule Pod with nonempty NodeSelector. 10/31/23 09:13:11.365
    STEP: Considering event: 
    Type = [Warning], Name = [restricted-pod.1793264bdd9295dc], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] 10/31/23 09:13:11.75
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:13:12.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-5443" for this suite. 10/31/23 09:13:12.761
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:13:12.819
Oct 31 09:13:12.820: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-webhook 10/31/23 09:13:12.821
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:13.065
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:13.2
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 10/31/23 09:13:13.334
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 10/31/23 09:13:13.817
STEP: Deploying the custom resource conversion webhook pod 10/31/23 09:13:13.851
STEP: Wait for the deployment to be ready 10/31/23 09:13:13.881
Oct 31 09:13:14.095: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 13, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 13, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 13, 14, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 13, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-74ff66dd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:13:16.107
STEP: Verifying the service has paired with the endpoint 10/31/23 09:13:16.179
Oct 31 09:13:17.180: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184
Oct 31 09:13:17.253: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Creating a v1 custom resource 10/31/23 09:13:25.049
STEP: Create a v2 custom resource 10/31/23 09:13:25.176
STEP: List CRs in v1 10/31/23 09:13:25.713
STEP: List CRs in v2 10/31/23 09:13:25.893
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:13:26.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-7571" for this suite. 10/31/23 09:13:27.218
------------------------------
â€¢ [SLOW TEST] [14.427 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:13:12.819
    Oct 31 09:13:12.820: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-webhook 10/31/23 09:13:12.821
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:13.065
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:13.2
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 10/31/23 09:13:13.334
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 10/31/23 09:13:13.817
    STEP: Deploying the custom resource conversion webhook pod 10/31/23 09:13:13.851
    STEP: Wait for the deployment to be ready 10/31/23 09:13:13.881
    Oct 31 09:13:14.095: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 13, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 13, 13, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 13, 14, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 13, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-74ff66dd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:13:16.107
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:13:16.179
    Oct 31 09:13:17.180: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert a non homogeneous list of CRs [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:184
    Oct 31 09:13:17.253: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Creating a v1 custom resource 10/31/23 09:13:25.049
    STEP: Create a v2 custom resource 10/31/23 09:13:25.176
    STEP: List CRs in v1 10/31/23 09:13:25.713
    STEP: List CRs in v2 10/31/23 09:13:25.893
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:13:26.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-7571" for this suite. 10/31/23 09:13:27.218
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:13:27.254
Oct 31 09:13:27.254: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:13:27.255
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:27.421
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:27.597
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47
STEP: Creating configMap with name projected-configmap-test-volume-c0cc9180-4144-4500-a185-2d9e3a45ff45 10/31/23 09:13:27.709
STEP: Creating a pod to test consume configMaps 10/31/23 09:13:27.801
Oct 31 09:13:27.941: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774" in namespace "projected-2927" to be "Succeeded or Failed"
Oct 31 09:13:27.997: INFO: Pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774": Phase="Pending", Reason="", readiness=false. Elapsed: 55.440594ms
Oct 31 09:13:30.007: INFO: Pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774": Phase="Pending", Reason="", readiness=false. Elapsed: 2.066199887s
Oct 31 09:13:32.004: INFO: Pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.063285157s
STEP: Saw pod success 10/31/23 09:13:32.005
Oct 31 09:13:32.005: INFO: Pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774" satisfied condition "Succeeded or Failed"
Oct 31 09:13:32.055: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:13:32.182
Oct 31 09:13:32.207: INFO: Waiting for pod pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774 to disappear
Oct 31 09:13:32.261: INFO: Pod pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:13:32.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-2927" for this suite. 10/31/23 09:13:32.323
------------------------------
â€¢ [SLOW TEST] [5.172 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:13:27.254
    Oct 31 09:13:27.254: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:13:27.255
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:27.421
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:27.597
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:47
    STEP: Creating configMap with name projected-configmap-test-volume-c0cc9180-4144-4500-a185-2d9e3a45ff45 10/31/23 09:13:27.709
    STEP: Creating a pod to test consume configMaps 10/31/23 09:13:27.801
    Oct 31 09:13:27.941: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774" in namespace "projected-2927" to be "Succeeded or Failed"
    Oct 31 09:13:27.997: INFO: Pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774": Phase="Pending", Reason="", readiness=false. Elapsed: 55.440594ms
    Oct 31 09:13:30.007: INFO: Pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774": Phase="Pending", Reason="", readiness=false. Elapsed: 2.066199887s
    Oct 31 09:13:32.004: INFO: Pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.063285157s
    STEP: Saw pod success 10/31/23 09:13:32.005
    Oct 31 09:13:32.005: INFO: Pod "pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774" satisfied condition "Succeeded or Failed"
    Oct 31 09:13:32.055: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:13:32.182
    Oct 31 09:13:32.207: INFO: Waiting for pod pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774 to disappear
    Oct 31 09:13:32.261: INFO: Pod pod-projected-configmaps-5f9b2416-29c6-47c9-9c10-627196631774 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:13:32.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-2927" for this suite. 10/31/23 09:13:32.323
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] Job
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:13:32.426
Oct 31 09:13:32.427: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename job 10/31/23 09:13:32.428
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:32.547
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:32.689
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636
STEP: Creating a job 10/31/23 09:13:33.003
STEP: Ensure pods equal to parallelism count is attached to the job 10/31/23 09:13:33.053
STEP: patching /status 10/31/23 09:13:35.063
STEP: updating /status 10/31/23 09:13:35.117
STEP: get /status 10/31/23 09:13:35.178
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Oct 31 09:13:35.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-6785" for this suite. 10/31/23 09:13:35.284
------------------------------
â€¢ [2.911 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should apply changes to a job status [Conformance]
  test/e2e/apps/job.go:636

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:13:32.426
    Oct 31 09:13:32.427: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename job 10/31/23 09:13:32.428
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:32.547
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:32.689
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a job status [Conformance]
      test/e2e/apps/job.go:636
    STEP: Creating a job 10/31/23 09:13:33.003
    STEP: Ensure pods equal to parallelism count is attached to the job 10/31/23 09:13:33.053
    STEP: patching /status 10/31/23 09:13:35.063
    STEP: updating /status 10/31/23 09:13:35.117
    STEP: get /status 10/31/23 09:13:35.178
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:13:35.231: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-6785" for this suite. 10/31/23 09:13:35.284
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:13:35.338
Oct 31 09:13:35.338: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:13:35.34
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:35.533
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:35.718
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:13:35.777
Oct 31 09:13:35.838: INFO: Waiting up to 5m0s for pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad" in namespace "downward-api-8481" to be "Succeeded or Failed"
Oct 31 09:13:35.852: INFO: Pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad": Phase="Pending", Reason="", readiness=false. Elapsed: 13.440692ms
Oct 31 09:13:37.876: INFO: Pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad": Phase="Running", Reason="", readiness=false. Elapsed: 2.037971927s
Oct 31 09:13:39.870: INFO: Pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031383207s
STEP: Saw pod success 10/31/23 09:13:39.87
Oct 31 09:13:39.871: INFO: Pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad" satisfied condition "Succeeded or Failed"
Oct 31 09:13:39.925: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad container client-container: <nil>
STEP: delete the pod 10/31/23 09:13:40.025
Oct 31 09:13:40.102: INFO: Waiting for pod downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad to disappear
Oct 31 09:13:40.194: INFO: Pod downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 09:13:40.194: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-8481" for this suite. 10/31/23 09:13:40.284
------------------------------
â€¢ [4.959 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:13:35.338
    Oct 31 09:13:35.338: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:13:35.34
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:35.533
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:35.718
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:221
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:13:35.777
    Oct 31 09:13:35.838: INFO: Waiting up to 5m0s for pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad" in namespace "downward-api-8481" to be "Succeeded or Failed"
    Oct 31 09:13:35.852: INFO: Pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad": Phase="Pending", Reason="", readiness=false. Elapsed: 13.440692ms
    Oct 31 09:13:37.876: INFO: Pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad": Phase="Running", Reason="", readiness=false. Elapsed: 2.037971927s
    Oct 31 09:13:39.870: INFO: Pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031383207s
    STEP: Saw pod success 10/31/23 09:13:39.87
    Oct 31 09:13:39.871: INFO: Pod "downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad" satisfied condition "Succeeded or Failed"
    Oct 31 09:13:39.925: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad container client-container: <nil>
    STEP: delete the pod 10/31/23 09:13:40.025
    Oct 31 09:13:40.102: INFO: Waiting for pod downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad to disappear
    Oct 31 09:13:40.194: INFO: Pod downwardapi-volume-244f5559-ff16-407b-bb87-a12b7c3045ad no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:13:40.194: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-8481" for this suite. 10/31/23 09:13:40.284
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:13:40.301
Oct 31 09:13:40.301: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename events 10/31/23 09:13:40.303
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:40.496
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:40.651
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175
STEP: Create set of events 10/31/23 09:13:40.793
Oct 31 09:13:40.850: INFO: created test-event-1
Oct 31 09:13:40.904: INFO: created test-event-2
Oct 31 09:13:41.017: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace 10/31/23 09:13:41.018
STEP: delete collection of events 10/31/23 09:13:41.055
Oct 31 09:13:41.055: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 10/31/23 09:13:41.093
Oct 31 09:13:41.093: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Oct 31 09:13:41.238: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-8071" for this suite. 10/31/23 09:13:41.29
------------------------------
â€¢ [1.053 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/core_events.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:13:40.301
    Oct 31 09:13:40.301: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename events 10/31/23 09:13:40.303
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:40.496
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:40.651
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/core_events.go:175
    STEP: Create set of events 10/31/23 09:13:40.793
    Oct 31 09:13:40.850: INFO: created test-event-1
    Oct 31 09:13:40.904: INFO: created test-event-2
    Oct 31 09:13:41.017: INFO: created test-event-3
    STEP: get a list of Events with a label in the current namespace 10/31/23 09:13:41.018
    STEP: delete collection of events 10/31/23 09:13:41.055
    Oct 31 09:13:41.055: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 10/31/23 09:13:41.093
    Oct 31 09:13:41.093: INFO: requesting list of events to confirm quantity
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:13:41.238: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-8071" for this suite. 10/31/23 09:13:41.29
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:13:41.359
Oct 31 09:13:41.359: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replication-controller 10/31/23 09:13:41.36
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:41.653
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:41.779
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83
Oct 31 09:13:41.934: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 10/31/23 09:13:42.081
STEP: Checking rc "condition-test" has the desired failure condition set 10/31/23 09:13:42.155
STEP: Scaling down rc "condition-test" to satisfy pod quota 10/31/23 09:13:43.199
Oct 31 09:13:43.274: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set 10/31/23 09:13:43.274
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:13:43.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-63" for this suite. 10/31/23 09:13:43.354
------------------------------
â€¢ [2.019 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/apps/rc.go:83

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:13:41.359
    Oct 31 09:13:41.359: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replication-controller 10/31/23 09:13:41.36
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:41.653
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:41.779
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should surface a failure condition on a common issue like exceeded quota [Conformance]
      test/e2e/apps/rc.go:83
    Oct 31 09:13:41.934: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
    STEP: Creating rc "condition-test" that asks for more than the allowed pod quota 10/31/23 09:13:42.081
    STEP: Checking rc "condition-test" has the desired failure condition set 10/31/23 09:13:42.155
    STEP: Scaling down rc "condition-test" to satisfy pod quota 10/31/23 09:13:43.199
    Oct 31 09:13:43.274: INFO: Updating replication controller "condition-test"
    STEP: Checking rc "condition-test" has no failure condition set 10/31/23 09:13:43.274
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:13:43.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-63" for this suite. 10/31/23 09:13:43.354
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:13:43.387
Oct 31 09:13:43.388: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:13:43.389
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:43.577
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:43.721
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 10/31/23 09:13:43.826
Oct 31 09:13:43.827: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:13:52.399: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:14:11.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-699" for this suite. 10/31/23 09:14:11.869
------------------------------
â€¢ [SLOW TEST] [28.594 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:357

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:13:43.387
    Oct 31 09:13:43.388: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:13:43.389
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:13:43.577
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:13:43.721
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group and version but different kinds [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:357
    STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation 10/31/23 09:13:43.826
    Oct 31 09:13:43.827: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:13:52.399: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:14:11.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-699" for this suite. 10/31/23 09:14:11.869
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:14:11.983
Oct 31 09:14:11.984: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 09:14:11.984
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:14:12.173
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:14:12.32
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74
STEP: Creating configMap with name configmap-test-volume-97fabf3c-ce63-4e59-b40d-67f8ce70ab7e 10/31/23 09:14:12.462
STEP: Creating a pod to test consume configMaps 10/31/23 09:14:12.552
Oct 31 09:14:12.709: INFO: Waiting up to 5m0s for pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270" in namespace "configmap-9774" to be "Succeeded or Failed"
Oct 31 09:14:12.720: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270": Phase="Pending", Reason="", readiness=false. Elapsed: 10.064462ms
Oct 31 09:14:14.734: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270": Phase="Running", Reason="", readiness=true. Elapsed: 2.024000875s
Oct 31 09:14:16.729: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270": Phase="Running", Reason="", readiness=false. Elapsed: 4.0193842s
Oct 31 09:14:18.729: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019566729s
STEP: Saw pod success 10/31/23 09:14:18.73
Oct 31 09:14:18.730: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270" satisfied condition "Succeeded or Failed"
Oct 31 09:14:18.778: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:14:18.936
Oct 31 09:14:19.027: INFO: Waiting for pod pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270 to disappear
Oct 31 09:14:19.038: INFO: Pod pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:14:19.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-9774" for this suite. 10/31/23 09:14:19.096
------------------------------
â€¢ [SLOW TEST] [7.162 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:14:11.983
    Oct 31 09:14:11.984: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 09:14:11.984
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:14:12.173
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:14:12.32
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:74
    STEP: Creating configMap with name configmap-test-volume-97fabf3c-ce63-4e59-b40d-67f8ce70ab7e 10/31/23 09:14:12.462
    STEP: Creating a pod to test consume configMaps 10/31/23 09:14:12.552
    Oct 31 09:14:12.709: INFO: Waiting up to 5m0s for pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270" in namespace "configmap-9774" to be "Succeeded or Failed"
    Oct 31 09:14:12.720: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270": Phase="Pending", Reason="", readiness=false. Elapsed: 10.064462ms
    Oct 31 09:14:14.734: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270": Phase="Running", Reason="", readiness=true. Elapsed: 2.024000875s
    Oct 31 09:14:16.729: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270": Phase="Running", Reason="", readiness=false. Elapsed: 4.0193842s
    Oct 31 09:14:18.729: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019566729s
    STEP: Saw pod success 10/31/23 09:14:18.73
    Oct 31 09:14:18.730: INFO: Pod "pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270" satisfied condition "Succeeded or Failed"
    Oct 31 09:14:18.778: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:14:18.936
    Oct 31 09:14:19.027: INFO: Waiting for pod pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270 to disappear
    Oct 31 09:14:19.038: INFO: Pod pod-configmaps-3baaad94-812f-4d83-94e7-41e2cf8e4270 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:14:19.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-9774" for this suite. 10/31/23 09:14:19.096
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:14:19.148
Oct 31 09:14:19.148: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename gc 10/31/23 09:14:19.15
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:14:19.359
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:14:19.497
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491
STEP: create the deployment 10/31/23 09:14:19.595
STEP: Wait for the Deployment to create new ReplicaSet 10/31/23 09:14:19.667
STEP: delete the deployment 10/31/23 09:14:19.72
STEP: wait for all rs to be garbage collected 10/31/23 09:14:19.805
STEP: Gathering metrics 10/31/23 09:14:19.936
W1031 09:14:19.995558      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Oct 31 09:14:19.995: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Oct 31 09:14:19.996: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-9566" for this suite. 10/31/23 09:14:20.09
------------------------------
â€¢ [0.954 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/apimachinery/garbage_collector.go:491

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:14:19.148
    Oct 31 09:14:19.148: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename gc 10/31/23 09:14:19.15
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:14:19.359
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:14:19.497
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete RS created by deployment when not orphaning [Conformance]
      test/e2e/apimachinery/garbage_collector.go:491
    STEP: create the deployment 10/31/23 09:14:19.595
    STEP: Wait for the Deployment to create new ReplicaSet 10/31/23 09:14:19.667
    STEP: delete the deployment 10/31/23 09:14:19.72
    STEP: wait for all rs to be garbage collected 10/31/23 09:14:19.805
    STEP: Gathering metrics 10/31/23 09:14:19.936
    W1031 09:14:19.995558      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Oct 31 09:14:19.995: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:14:19.996: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-9566" for this suite. 10/31/23 09:14:20.09
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:14:20.11
Oct 31 09:14:20.110: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename deployment 10/31/23 09:14:20.111
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:14:20.257
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:14:20.395
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105
Oct 31 09:14:20.541: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Oct 31 09:14:20.612: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 10/31/23 09:14:20.612
Oct 31 09:14:20.612: INFO: Waiting up to 5m0s for pod "test-rolling-update-controller-5vgkm" in namespace "deployment-404" to be "running"
Oct 31 09:14:20.666: INFO: Pod "test-rolling-update-controller-5vgkm": Phase="Pending", Reason="", readiness=false. Elapsed: 53.422271ms
Oct 31 09:14:22.674: INFO: Pod "test-rolling-update-controller-5vgkm": Phase="Running", Reason="", readiness=true. Elapsed: 2.061304661s
Oct 31 09:14:22.674: INFO: Pod "test-rolling-update-controller-5vgkm" satisfied condition "running"
Oct 31 09:14:22.674: INFO: Creating deployment "test-rolling-update-deployment"
Oct 31 09:14:22.684: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Oct 31 09:14:22.786: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Oct 31 09:14:22.838: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 14, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 14, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 14, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 14, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7549d9f46d\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 09:14:24.846: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Oct 31 09:14:24.994: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-404  0bc6ea20-2fb3-44e0-9d34-b57842b543dc 7375 1 2023-10-31 09:14:22 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-10-31 09:14:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0082cda68 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-10-31 09:14:22 +0000 UTC,LastTransitionTime:2023-10-31 09:14:22 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-10-31 09:14:24 +0000 UTC,LastTransitionTime:2023-10-31 09:14:22 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Oct 31 09:14:25.085: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-404  1d84c64c-2959-4d4d-9872-386326f6d27a 7363 1 2023-10-31 09:14:22 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 0bc6ea20-2fb3-44e0-9d34-b57842b543dc 0xc004af4217 0xc004af4218}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:14:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0bc6ea20-2fb3-44e0-9d34-b57842b543dc\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004af42c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Oct 31 09:14:25.085: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Oct 31 09:14:25.085: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-404  026896e9-41c3-42cb-ba86-e109a180936e 7374 2 2023-10-31 09:14:20 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 0bc6ea20-2fb3-44e0-9d34-b57842b543dc 0xc004af40df 0xc004af40f0}] [] [{e2e.test Update apps/v1 2023-10-31 09:14:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0bc6ea20-2fb3-44e0-9d34-b57842b543dc\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc004af41a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Oct 31 09:14:25.135: INFO: Pod "test-rolling-update-deployment-7549d9f46d-9jqfc" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-9jqfc test-rolling-update-deployment-7549d9f46d- deployment-404  44a27979-98b5-4b67-82c4-30933b261a1d 7362 0 2023-10-31 09:14:22 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 1d84c64c-2959-4d4d-9872-386326f6d27a 0xc004af4727 0xc004af4728}] [] [{kube-controller-manager Update v1 2023-10-31 09:14:22 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1d84c64c-2959-4d4d-9872-386326f6d27a\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.36\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6j9cz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6j9cz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:14:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:14:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:14:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:14:22 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.36,StartTime:2023-10-31 09:14:22 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 09:14:23 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://69c4bef71fd9b9523d82e1b4f41a576f1da055220f30216f47b7dbc8a7a3a50e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.36,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Oct 31 09:14:25.136: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-404" for this suite. 10/31/23 09:14:25.207
------------------------------
â€¢ [SLOW TEST] [5.209 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:14:20.11
    Oct 31 09:14:20.110: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename deployment 10/31/23 09:14:20.111
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:14:20.257
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:14:20.395
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:105
    Oct 31 09:14:20.541: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
    Oct 31 09:14:20.612: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 10/31/23 09:14:20.612
    Oct 31 09:14:20.612: INFO: Waiting up to 5m0s for pod "test-rolling-update-controller-5vgkm" in namespace "deployment-404" to be "running"
    Oct 31 09:14:20.666: INFO: Pod "test-rolling-update-controller-5vgkm": Phase="Pending", Reason="", readiness=false. Elapsed: 53.422271ms
    Oct 31 09:14:22.674: INFO: Pod "test-rolling-update-controller-5vgkm": Phase="Running", Reason="", readiness=true. Elapsed: 2.061304661s
    Oct 31 09:14:22.674: INFO: Pod "test-rolling-update-controller-5vgkm" satisfied condition "running"
    Oct 31 09:14:22.674: INFO: Creating deployment "test-rolling-update-deployment"
    Oct 31 09:14:22.684: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
    Oct 31 09:14:22.786: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
    Oct 31 09:14:22.838: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 14, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 14, 22, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 14, 22, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 14, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-7549d9f46d\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 09:14:24.846: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Oct 31 09:14:24.994: INFO: Deployment "test-rolling-update-deployment":
    &Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-404  0bc6ea20-2fb3-44e0-9d34-b57842b543dc 7375 1 2023-10-31 09:14:22 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] [] [{e2e.test Update apps/v1 2023-10-31 09:14:22 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0082cda68 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-10-31 09:14:22 +0000 UTC,LastTransitionTime:2023-10-31 09:14:22 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-7549d9f46d" has successfully progressed.,LastUpdateTime:2023-10-31 09:14:24 +0000 UTC,LastTransitionTime:2023-10-31 09:14:22 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Oct 31 09:14:25.085: INFO: New ReplicaSet "test-rolling-update-deployment-7549d9f46d" of Deployment "test-rolling-update-deployment":
    &ReplicaSet{ObjectMeta:{test-rolling-update-deployment-7549d9f46d  deployment-404  1d84c64c-2959-4d4d-9872-386326f6d27a 7363 1 2023-10-31 09:14:22 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 0bc6ea20-2fb3-44e0-9d34-b57842b543dc 0xc004af4217 0xc004af4218}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:14:22 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0bc6ea20-2fb3-44e0-9d34-b57842b543dc\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 7549d9f46d,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004af42c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 09:14:25.085: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
    Oct 31 09:14:25.085: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-404  026896e9-41c3-42cb-ba86-e109a180936e 7374 2 2023-10-31 09:14:20 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 0bc6ea20-2fb3-44e0-9d34-b57842b543dc 0xc004af40df 0xc004af40f0}] [] [{e2e.test Update apps/v1 2023-10-31 09:14:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0bc6ea20-2fb3-44e0-9d34-b57842b543dc\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc004af41a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 09:14:25.135: INFO: Pod "test-rolling-update-deployment-7549d9f46d-9jqfc" is available:
    &Pod{ObjectMeta:{test-rolling-update-deployment-7549d9f46d-9jqfc test-rolling-update-deployment-7549d9f46d- deployment-404  44a27979-98b5-4b67-82c4-30933b261a1d 7362 0 2023-10-31 09:14:22 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:7549d9f46d] map[] [{apps/v1 ReplicaSet test-rolling-update-deployment-7549d9f46d 1d84c64c-2959-4d4d-9872-386326f6d27a 0xc004af4727 0xc004af4728}] [] [{kube-controller-manager Update v1 2023-10-31 09:14:22 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1d84c64c-2959-4d4d-9872-386326f6d27a\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:14:24 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.36\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6j9cz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6j9cz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:14:22 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:14:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:14:24 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:14:22 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.36,StartTime:2023-10-31 09:14:22 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 09:14:23 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://69c4bef71fd9b9523d82e1b4f41a576f1da055220f30216f47b7dbc8a7a3a50e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.36,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:14:25.136: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-404" for this suite. 10/31/23 09:14:25.207
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:814
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:14:25.322
Oct 31 09:14:25.323: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-preemption 10/31/23 09:14:25.324
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:14:25.524
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:14:25.658
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Oct 31 09:14:26.033: INFO: Waiting up to 1m0s for all nodes to be ready
Oct 31 09:15:26.298: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:15:26.337
Oct 31 09:15:26.337: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-preemption-path 10/31/23 09:15:26.339
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:15:26.492
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:15:26.672
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:771
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/scheduling/preemption.go:814
Oct 31 09:15:26.996: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
Oct 31 09:15:27.105: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/node/init/init.go:32
Oct 31 09:15:27.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:787
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:15:27.754: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PriorityClass endpoints
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PriorityClass endpoints
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PriorityClass endpoints
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-731" for this suite. 10/31/23 09:15:28.249
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-4220" for this suite. 10/31/23 09:15:28.35
------------------------------
â€¢ [SLOW TEST] [63.080 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:764
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/scheduling/preemption.go:814

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:14:25.322
    Oct 31 09:14:25.323: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-preemption 10/31/23 09:14:25.324
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:14:25.524
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:14:25.658
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Oct 31 09:14:26.033: INFO: Waiting up to 1m0s for all nodes to be ready
    Oct 31 09:15:26.298: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PriorityClass endpoints
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:15:26.337
    Oct 31 09:15:26.337: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-preemption-path 10/31/23 09:15:26.339
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:15:26.492
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:15:26.672
    [BeforeEach] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:771
    [It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
      test/e2e/scheduling/preemption.go:814
    Oct 31 09:15:26.996: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
    Oct 31 09:15:27.105: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
    [AfterEach] PriorityClass endpoints
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:15:27.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PriorityClass endpoints
      test/e2e/scheduling/preemption.go:787
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:15:27.754: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PriorityClass endpoints
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PriorityClass endpoints
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PriorityClass endpoints
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-731" for this suite. 10/31/23 09:15:28.249
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-4220" for this suite. 10/31/23 09:15:28.35
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:15:28.404
Oct 31 09:15:28.404: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:15:28.405
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:15:28.594
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:15:28.725
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:15:28.795
Oct 31 09:15:28.847: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165" in namespace "projected-3910" to be "Succeeded or Failed"
Oct 31 09:15:28.898: INFO: Pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165": Phase="Pending", Reason="", readiness=false. Elapsed: 50.295169ms
Oct 31 09:15:30.907: INFO: Pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165": Phase="Pending", Reason="", readiness=false. Elapsed: 2.059931327s
Oct 31 09:15:32.910: INFO: Pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.062287474s
STEP: Saw pod success 10/31/23 09:15:32.91
Oct 31 09:15:32.910: INFO: Pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165" satisfied condition "Succeeded or Failed"
Oct 31 09:15:32.959: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165 container client-container: <nil>
STEP: delete the pod 10/31/23 09:15:33.182
Oct 31 09:15:33.249: INFO: Waiting for pod downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165 to disappear
Oct 31 09:15:33.298: INFO: Pod downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 09:15:33.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-3910" for this suite. 10/31/23 09:15:33.316
------------------------------
â€¢ [4.970 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:15:28.404
    Oct 31 09:15:28.404: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:15:28.405
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:15:28.594
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:15:28.725
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide podname only [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:53
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:15:28.795
    Oct 31 09:15:28.847: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165" in namespace "projected-3910" to be "Succeeded or Failed"
    Oct 31 09:15:28.898: INFO: Pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165": Phase="Pending", Reason="", readiness=false. Elapsed: 50.295169ms
    Oct 31 09:15:30.907: INFO: Pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165": Phase="Pending", Reason="", readiness=false. Elapsed: 2.059931327s
    Oct 31 09:15:32.910: INFO: Pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.062287474s
    STEP: Saw pod success 10/31/23 09:15:32.91
    Oct 31 09:15:32.910: INFO: Pod "downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165" satisfied condition "Succeeded or Failed"
    Oct 31 09:15:32.959: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165 container client-container: <nil>
    STEP: delete the pod 10/31/23 09:15:33.182
    Oct 31 09:15:33.249: INFO: Waiting for pod downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165 to disappear
    Oct 31 09:15:33.298: INFO: Pod downwardapi-volume-1f213192-b51f-4984-b0d8-be5e040aa165 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:15:33.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-3910" for this suite. 10/31/23 09:15:33.316
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:15:33.375
Oct 31 09:15:33.375: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename subpath 10/31/23 09:15:33.378
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:15:33.785
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:15:33.837
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 10/31/23 09:15:33.897
[It] should support subpaths with downward pod [Conformance]
  test/e2e/storage/subpath.go:92
STEP: Creating pod pod-subpath-test-downwardapi-bnbp 10/31/23 09:15:33.999
STEP: Creating a pod to test atomic-volume-subpath 10/31/23 09:15:33.999
Oct 31 09:15:34.025: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-bnbp" in namespace "subpath-7155" to be "Succeeded or Failed"
Oct 31 09:15:34.091: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Pending", Reason="", readiness=false. Elapsed: 64.603862ms
Oct 31 09:15:36.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 2.072703935s
Oct 31 09:15:38.141: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 4.114920744s
Oct 31 09:15:40.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 6.07229634s
Oct 31 09:15:42.098: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 8.071253531s
Oct 31 09:15:44.098: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 10.071912761s
Oct 31 09:15:46.153: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 12.126935111s
Oct 31 09:15:48.100: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 14.073807023s
Oct 31 09:15:50.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 16.072671402s
Oct 31 09:15:52.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 18.072642076s
Oct 31 09:15:54.109: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 20.082854271s
Oct 31 09:15:56.234: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 22.208060213s
Oct 31 09:15:58.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=false. Elapsed: 24.072454091s
Oct 31 09:16:00.100: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.073721203s
STEP: Saw pod success 10/31/23 09:16:00.1
Oct 31 09:16:00.101: INFO: Pod "pod-subpath-test-downwardapi-bnbp" satisfied condition "Succeeded or Failed"
Oct 31 09:16:00.154: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-subpath-test-downwardapi-bnbp container test-container-subpath-downwardapi-bnbp: <nil>
STEP: delete the pod 10/31/23 09:16:00.321
Oct 31 09:16:00.399: INFO: Waiting for pod pod-subpath-test-downwardapi-bnbp to disappear
Oct 31 09:16:00.450: INFO: Pod pod-subpath-test-downwardapi-bnbp no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-bnbp 10/31/23 09:16:00.451
Oct 31 09:16:00.451: INFO: Deleting pod "pod-subpath-test-downwardapi-bnbp" in namespace "subpath-7155"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Oct 31 09:16:00.532: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-7155" for this suite. 10/31/23 09:16:00.586
------------------------------
â€¢ [SLOW TEST] [27.224 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/storage/subpath.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:15:33.375
    Oct 31 09:15:33.375: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename subpath 10/31/23 09:15:33.378
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:15:33.785
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:15:33.837
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 10/31/23 09:15:33.897
    [It] should support subpaths with downward pod [Conformance]
      test/e2e/storage/subpath.go:92
    STEP: Creating pod pod-subpath-test-downwardapi-bnbp 10/31/23 09:15:33.999
    STEP: Creating a pod to test atomic-volume-subpath 10/31/23 09:15:33.999
    Oct 31 09:15:34.025: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-bnbp" in namespace "subpath-7155" to be "Succeeded or Failed"
    Oct 31 09:15:34.091: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Pending", Reason="", readiness=false. Elapsed: 64.603862ms
    Oct 31 09:15:36.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 2.072703935s
    Oct 31 09:15:38.141: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 4.114920744s
    Oct 31 09:15:40.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 6.07229634s
    Oct 31 09:15:42.098: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 8.071253531s
    Oct 31 09:15:44.098: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 10.071912761s
    Oct 31 09:15:46.153: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 12.126935111s
    Oct 31 09:15:48.100: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 14.073807023s
    Oct 31 09:15:50.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 16.072671402s
    Oct 31 09:15:52.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 18.072642076s
    Oct 31 09:15:54.109: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 20.082854271s
    Oct 31 09:15:56.234: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=true. Elapsed: 22.208060213s
    Oct 31 09:15:58.099: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Running", Reason="", readiness=false. Elapsed: 24.072454091s
    Oct 31 09:16:00.100: INFO: Pod "pod-subpath-test-downwardapi-bnbp": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.073721203s
    STEP: Saw pod success 10/31/23 09:16:00.1
    Oct 31 09:16:00.101: INFO: Pod "pod-subpath-test-downwardapi-bnbp" satisfied condition "Succeeded or Failed"
    Oct 31 09:16:00.154: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-subpath-test-downwardapi-bnbp container test-container-subpath-downwardapi-bnbp: <nil>
    STEP: delete the pod 10/31/23 09:16:00.321
    Oct 31 09:16:00.399: INFO: Waiting for pod pod-subpath-test-downwardapi-bnbp to disappear
    Oct 31 09:16:00.450: INFO: Pod pod-subpath-test-downwardapi-bnbp no longer exists
    STEP: Deleting pod pod-subpath-test-downwardapi-bnbp 10/31/23 09:16:00.451
    Oct 31 09:16:00.451: INFO: Deleting pod "pod-subpath-test-downwardapi-bnbp" in namespace "subpath-7155"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:16:00.532: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-7155" for this suite. 10/31/23 09:16:00.586
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:16:00.616
Oct 31 09:16:00.616: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename deployment 10/31/23 09:16:00.617
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:16:00.888
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:16:01.046
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479
STEP: creating a Deployment 10/31/23 09:16:01.186
Oct 31 09:16:01.186: INFO: Creating simple deployment test-deployment-zzmw6
Oct 31 09:16:01.379: INFO: deployment "test-deployment-zzmw6" doesn't have the required revision set
STEP: Getting /status 10/31/23 09:16:03.568
Oct 31 09:16:03.618: INFO: Deployment test-deployment-zzmw6 has Conditions: [{Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}]
STEP: updating Deployment Status 10/31/23 09:16:03.619
Oct 31 09:16:03.705: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 16, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 16, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 16, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 16, 1, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-zzmw6-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated 10/31/23 09:16:03.705
Oct 31 09:16:03.711: INFO: Observed &Deployment event: ADDED
Oct 31 09:16:03.711: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zzmw6-54bc444df"}
Oct 31 09:16:03.711: INFO: Observed &Deployment event: MODIFIED
Oct 31 09:16:03.712: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zzmw6-54bc444df"}
Oct 31 09:16:03.712: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Oct 31 09:16:03.712: INFO: Observed &Deployment event: MODIFIED
Oct 31 09:16:03.712: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Oct 31 09:16:03.712: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-zzmw6-54bc444df" is progressing.}
Oct 31 09:16:03.712: INFO: Observed &Deployment event: MODIFIED
Oct 31 09:16:03.720: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Oct 31 09:16:03.720: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}
Oct 31 09:16:03.720: INFO: Observed &Deployment event: MODIFIED
Oct 31 09:16:03.720: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Oct 31 09:16:03.720: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}
Oct 31 09:16:03.721: INFO: Found Deployment test-deployment-zzmw6 in namespace deployment-5080 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Oct 31 09:16:03.721: INFO: Deployment test-deployment-zzmw6 has an updated status
STEP: patching the Statefulset Status 10/31/23 09:16:03.721
Oct 31 09:16:03.721: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Oct 31 09:16:03.781: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched 10/31/23 09:16:03.781
Oct 31 09:16:03.787: INFO: Observed &Deployment event: ADDED
Oct 31 09:16:03.787: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zzmw6-54bc444df"}
Oct 31 09:16:03.787: INFO: Observed &Deployment event: MODIFIED
Oct 31 09:16:03.788: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zzmw6-54bc444df"}
Oct 31 09:16:03.788: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Oct 31 09:16:03.789: INFO: Observed &Deployment event: MODIFIED
Oct 31 09:16:03.789: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Oct 31 09:16:03.789: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-zzmw6-54bc444df" is progressing.}
Oct 31 09:16:03.789: INFO: Observed &Deployment event: MODIFIED
Oct 31 09:16:03.790: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Oct 31 09:16:03.790: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}
Oct 31 09:16:03.791: INFO: Observed &Deployment event: MODIFIED
Oct 31 09:16:03.791: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Oct 31 09:16:03.791: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}
Oct 31 09:16:03.791: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Oct 31 09:16:03.791: INFO: Observed &Deployment event: MODIFIED
Oct 31 09:16:03.792: INFO: Found deployment test-deployment-zzmw6 in namespace deployment-5080 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Oct 31 09:16:03.792: INFO: Deployment test-deployment-zzmw6 has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Oct 31 09:16:03.815: INFO: Deployment "test-deployment-zzmw6":
&Deployment{ObjectMeta:{test-deployment-zzmw6  deployment-5080  e3d2c84a-39c7-4edc-a00d-06d04ea5a53a 7831 1 2023-10-31 09:16:01 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-10-31 09:16:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-10-31 09:16:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-10-31 09:16:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004ff0608 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-10-31 09:16:03 +0000 UTC,LastTransitionTime:2023-10-31 09:16:03 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.,LastUpdateTime:2023-10-31 09:16:03 +0000 UTC,LastTransitionTime:2023-10-31 09:16:03 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Oct 31 09:16:03.868: INFO: New ReplicaSet "test-deployment-zzmw6-54bc444df" of Deployment "test-deployment-zzmw6":
&ReplicaSet{ObjectMeta:{test-deployment-zzmw6-54bc444df  deployment-5080  7d103c4d-9a56-4cc1-a206-0ddd6e32caaa 7821 1 2023-10-31 09:16:01 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-zzmw6 e3d2c84a-39c7-4edc-a00d-06d04ea5a53a 0xc004ff0ba7 0xc004ff0ba8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:16:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e3d2c84a-39c7-4edc-a00d-06d04ea5a53a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:16:02 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004ff0c58 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Oct 31 09:16:03.922: INFO: Pod "test-deployment-zzmw6-54bc444df-zbl4x" is available:
&Pod{ObjectMeta:{test-deployment-zzmw6-54bc444df-zbl4x test-deployment-zzmw6-54bc444df- deployment-5080  fc4647d0-4acd-473a-8be6-3174f279e539 7820 0 2023-10-31 09:16:01 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [{apps/v1 ReplicaSet test-deployment-zzmw6-54bc444df 7d103c4d-9a56-4cc1-a206-0ddd6e32caaa 0xc004ff0ff7 0xc004ff0ff8}] [] [{kube-controller-manager Update v1 2023-10-31 09:16:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7d103c4d-9a56-4cc1-a206-0ddd6e32caaa\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:16:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.53\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x2nhl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x2nhl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:16:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:16:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:16:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:16:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.53,StartTime:2023-10-31 09:16:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 09:16:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://b017f38e60fef9ad9adfa526e5a3ff97ba9e8beb61f1905bb43ccf6dc3464457,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.53,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Oct 31 09:16:03.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-5080" for this suite. 10/31/23 09:16:03.975
------------------------------
â€¢ [3.461 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should validate Deployment Status endpoints [Conformance]
  test/e2e/apps/deployment.go:479

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:16:00.616
    Oct 31 09:16:00.616: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename deployment 10/31/23 09:16:00.617
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:16:00.888
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:16:01.046
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should validate Deployment Status endpoints [Conformance]
      test/e2e/apps/deployment.go:479
    STEP: creating a Deployment 10/31/23 09:16:01.186
    Oct 31 09:16:01.186: INFO: Creating simple deployment test-deployment-zzmw6
    Oct 31 09:16:01.379: INFO: deployment "test-deployment-zzmw6" doesn't have the required revision set
    STEP: Getting /status 10/31/23 09:16:03.568
    Oct 31 09:16:03.618: INFO: Deployment test-deployment-zzmw6 has Conditions: [{Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}]
    STEP: updating Deployment Status 10/31/23 09:16:03.619
    Oct 31 09:16:03.705: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 16, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 16, 2, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 16, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 16, 1, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-zzmw6-54bc444df\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Deployment status to be updated 10/31/23 09:16:03.705
    Oct 31 09:16:03.711: INFO: Observed &Deployment event: ADDED
    Oct 31 09:16:03.711: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zzmw6-54bc444df"}
    Oct 31 09:16:03.711: INFO: Observed &Deployment event: MODIFIED
    Oct 31 09:16:03.712: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zzmw6-54bc444df"}
    Oct 31 09:16:03.712: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Oct 31 09:16:03.712: INFO: Observed &Deployment event: MODIFIED
    Oct 31 09:16:03.712: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Oct 31 09:16:03.712: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-zzmw6-54bc444df" is progressing.}
    Oct 31 09:16:03.712: INFO: Observed &Deployment event: MODIFIED
    Oct 31 09:16:03.720: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Oct 31 09:16:03.720: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}
    Oct 31 09:16:03.720: INFO: Observed &Deployment event: MODIFIED
    Oct 31 09:16:03.720: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Oct 31 09:16:03.720: INFO: Observed Deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}
    Oct 31 09:16:03.721: INFO: Found Deployment test-deployment-zzmw6 in namespace deployment-5080 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Oct 31 09:16:03.721: INFO: Deployment test-deployment-zzmw6 has an updated status
    STEP: patching the Statefulset Status 10/31/23 09:16:03.721
    Oct 31 09:16:03.721: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Oct 31 09:16:03.781: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Deployment status to be patched 10/31/23 09:16:03.781
    Oct 31 09:16:03.787: INFO: Observed &Deployment event: ADDED
    Oct 31 09:16:03.787: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zzmw6-54bc444df"}
    Oct 31 09:16:03.787: INFO: Observed &Deployment event: MODIFIED
    Oct 31 09:16:03.788: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-zzmw6-54bc444df"}
    Oct 31 09:16:03.788: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Oct 31 09:16:03.789: INFO: Observed &Deployment event: MODIFIED
    Oct 31 09:16:03.789: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
    Oct 31 09:16:03.789: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:01 +0000 UTC 2023-10-31 09:16:01 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-zzmw6-54bc444df" is progressing.}
    Oct 31 09:16:03.789: INFO: Observed &Deployment event: MODIFIED
    Oct 31 09:16:03.790: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Oct 31 09:16:03.790: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}
    Oct 31 09:16:03.791: INFO: Observed &Deployment event: MODIFIED
    Oct 31 09:16:03.791: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:02 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
    Oct 31 09:16:03.791: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-10-31 09:16:02 +0000 UTC 2023-10-31 09:16:01 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.}
    Oct 31 09:16:03.791: INFO: Observed deployment test-deployment-zzmw6 in namespace deployment-5080 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Oct 31 09:16:03.791: INFO: Observed &Deployment event: MODIFIED
    Oct 31 09:16:03.792: INFO: Found deployment test-deployment-zzmw6 in namespace deployment-5080 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
    Oct 31 09:16:03.792: INFO: Deployment test-deployment-zzmw6 has a patched status
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Oct 31 09:16:03.815: INFO: Deployment "test-deployment-zzmw6":
    &Deployment{ObjectMeta:{test-deployment-zzmw6  deployment-5080  e3d2c84a-39c7-4edc-a00d-06d04ea5a53a 7831 1 2023-10-31 09:16:01 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-10-31 09:16:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2023-10-31 09:16:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2023-10-31 09:16:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004ff0608 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-10-31 09:16:03 +0000 UTC,LastTransitionTime:2023-10-31 09:16:03 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-deployment-zzmw6-54bc444df" has successfully progressed.,LastUpdateTime:2023-10-31 09:16:03 +0000 UTC,LastTransitionTime:2023-10-31 09:16:03 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Oct 31 09:16:03.868: INFO: New ReplicaSet "test-deployment-zzmw6-54bc444df" of Deployment "test-deployment-zzmw6":
    &ReplicaSet{ObjectMeta:{test-deployment-zzmw6-54bc444df  deployment-5080  7d103c4d-9a56-4cc1-a206-0ddd6e32caaa 7821 1 2023-10-31 09:16:01 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-zzmw6 e3d2c84a-39c7-4edc-a00d-06d04ea5a53a 0xc004ff0ba7 0xc004ff0ba8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:16:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e3d2c84a-39c7-4edc-a00d-06d04ea5a53a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:16:02 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 54bc444df,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004ff0c58 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 09:16:03.922: INFO: Pod "test-deployment-zzmw6-54bc444df-zbl4x" is available:
    &Pod{ObjectMeta:{test-deployment-zzmw6-54bc444df-zbl4x test-deployment-zzmw6-54bc444df- deployment-5080  fc4647d0-4acd-473a-8be6-3174f279e539 7820 0 2023-10-31 09:16:01 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:54bc444df] map[] [{apps/v1 ReplicaSet test-deployment-zzmw6-54bc444df 7d103c4d-9a56-4cc1-a206-0ddd6e32caaa 0xc004ff0ff7 0xc004ff0ff8}] [] [{kube-controller-manager Update v1 2023-10-31 09:16:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7d103c4d-9a56-4cc1-a206-0ddd6e32caaa\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:16:02 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.53\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x2nhl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x2nhl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:16:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:16:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:16:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:16:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.53,StartTime:2023-10-31 09:16:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 09:16:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://b017f38e60fef9ad9adfa526e5a3ff97ba9e8beb61f1905bb43ccf6dc3464457,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.53,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:16:03.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-5080" for this suite. 10/31/23 09:16:03.975
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:16:04.081
Oct 31 09:16:04.082: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-probe 10/31/23 09:16:04.083
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:16:04.229
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:16:04.366
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135
STEP: Creating pod busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9 in namespace container-probe-6353 10/31/23 09:16:04.606
Oct 31 09:16:04.645: INFO: Waiting up to 5m0s for pod "busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9" in namespace "container-probe-6353" to be "not pending"
Oct 31 09:16:04.656: INFO: Pod "busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9": Phase="Pending", Reason="", readiness=false. Elapsed: 10.911343ms
Oct 31 09:16:06.663: INFO: Pod "busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9": Phase="Running", Reason="", readiness=true. Elapsed: 2.017928721s
Oct 31 09:16:06.663: INFO: Pod "busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9" satisfied condition "not pending"
Oct 31 09:16:06.663: INFO: Started pod busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9 in namespace container-probe-6353
STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 09:16:06.663
Oct 31 09:16:06.713: INFO: Initial restart count of pod busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9 is 0
Oct 31 09:16:57.467: INFO: Restart count of pod container-probe-6353/busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9 is now 1 (50.753135936s elapsed)
STEP: deleting the pod 10/31/23 09:16:57.467
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Oct 31 09:16:57.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-6353" for this suite. 10/31/23 09:16:57.555
------------------------------
â€¢ [SLOW TEST] [53.534 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:16:04.081
    Oct 31 09:16:04.082: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-probe 10/31/23 09:16:04.083
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:16:04.229
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:16:04.366
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:135
    STEP: Creating pod busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9 in namespace container-probe-6353 10/31/23 09:16:04.606
    Oct 31 09:16:04.645: INFO: Waiting up to 5m0s for pod "busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9" in namespace "container-probe-6353" to be "not pending"
    Oct 31 09:16:04.656: INFO: Pod "busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9": Phase="Pending", Reason="", readiness=false. Elapsed: 10.911343ms
    Oct 31 09:16:06.663: INFO: Pod "busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9": Phase="Running", Reason="", readiness=true. Elapsed: 2.017928721s
    Oct 31 09:16:06.663: INFO: Pod "busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9" satisfied condition "not pending"
    Oct 31 09:16:06.663: INFO: Started pod busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9 in namespace container-probe-6353
    STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 09:16:06.663
    Oct 31 09:16:06.713: INFO: Initial restart count of pod busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9 is 0
    Oct 31 09:16:57.467: INFO: Restart count of pod container-probe-6353/busybox-a41cdcef-e5a5-4419-9690-cdb731497ae9 is now 1 (50.753135936s elapsed)
    STEP: deleting the pod 10/31/23 09:16:57.467
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:16:57.534: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-6353" for this suite. 10/31/23 09:16:57.555
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:624
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:16:57.619
Oct 31 09:16:57.619: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-preemption 10/31/23 09:16:57.62
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:16:57.815
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:16:58.004
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Oct 31 09:16:58.332: INFO: Waiting up to 1m0s for all nodes to be ready
Oct 31 09:17:58.612: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:17:58.683
Oct 31 09:17:58.684: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-preemption-path 10/31/23 09:17:58.685
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:17:58.804
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:17:58.939
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:576
STEP: Finding an available node 10/31/23 09:17:59.035
STEP: Trying to launch a pod without a label to get a node which can launch it. 10/31/23 09:17:59.035
Oct 31 09:17:59.093: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-7705" to be "running"
Oct 31 09:17:59.145: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 52.403569ms
Oct 31 09:18:01.153: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.060417303s
Oct 31 09:18:01.153: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 10/31/23 09:18:01.204
Oct 31 09:18:01.272: INFO: found a healthy node: pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/scheduling/preemption.go:624
Oct 31 09:18:08.149: INFO: pods created so far: [1 1 1]
Oct 31 09:18:08.150: INFO: length of pods created so far: 3
Oct 31 09:18:12.256: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/node/init/init.go:32
Oct 31 09:18:19.257: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:549
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:18:19.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] PreemptionExecutionPath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] PreemptionExecutionPath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] PreemptionExecutionPath
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-path-7705" for this suite. 10/31/23 09:18:20.229
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-4003" for this suite. 10/31/23 09:18:20.286
------------------------------
â€¢ [SLOW TEST] [82.720 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:537
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/scheduling/preemption.go:624

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:16:57.619
    Oct 31 09:16:57.619: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-preemption 10/31/23 09:16:57.62
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:16:57.815
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:16:58.004
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Oct 31 09:16:58.332: INFO: Waiting up to 1m0s for all nodes to be ready
    Oct 31 09:17:58.612: INFO: Waiting for terminating namespaces to be deleted...
    [BeforeEach] PreemptionExecutionPath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:17:58.683
    Oct 31 09:17:58.684: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-preemption-path 10/31/23 09:17:58.685
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:17:58.804
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:17:58.939
    [BeforeEach] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:576
    STEP: Finding an available node 10/31/23 09:17:59.035
    STEP: Trying to launch a pod without a label to get a node which can launch it. 10/31/23 09:17:59.035
    Oct 31 09:17:59.093: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-preemption-path-7705" to be "running"
    Oct 31 09:17:59.145: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 52.403569ms
    Oct 31 09:18:01.153: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.060417303s
    Oct 31 09:18:01.153: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 10/31/23 09:18:01.204
    Oct 31 09:18:01.272: INFO: found a healthy node: pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
    [It] runs ReplicaSets to verify preemption running path [Conformance]
      test/e2e/scheduling/preemption.go:624
    Oct 31 09:18:08.149: INFO: pods created so far: [1 1 1]
    Oct 31 09:18:08.150: INFO: length of pods created so far: 3
    Oct 31 09:18:12.256: INFO: pods created so far: [2 2 1]
    [AfterEach] PreemptionExecutionPath
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:18:19.257: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] PreemptionExecutionPath
      test/e2e/scheduling/preemption.go:549
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:18:19.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] PreemptionExecutionPath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] PreemptionExecutionPath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] PreemptionExecutionPath
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-path-7705" for this suite. 10/31/23 09:18:20.229
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-4003" for this suite. 10/31/23 09:18:20.286
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Services
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:18:20.34
Oct 31 09:18:20.340: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:18:20.341
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:18:20.62
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:18:20.757
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428
STEP: creating a Service 10/31/23 09:18:20.953
STEP: watching for the Service to be added 10/31/23 09:18:21.021
Oct 31 09:18:21.074: INFO: Found Service test-service-rf8xz in namespace services-6552 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Oct 31 09:18:21.074: INFO: Service test-service-rf8xz created
STEP: Getting /status 10/31/23 09:18:21.074
Oct 31 09:18:21.170: INFO: Service test-service-rf8xz has LoadBalancer: {[]}
STEP: patching the ServiceStatus 10/31/23 09:18:21.17
STEP: watching for the Service to be patched 10/31/23 09:18:21.229
Oct 31 09:18:21.278: INFO: observed Service test-service-rf8xz in namespace services-6552 with annotations: map[] & LoadBalancer: {[]}
Oct 31 09:18:21.278: INFO: Found Service test-service-rf8xz in namespace services-6552 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Oct 31 09:18:21.278: INFO: Service test-service-rf8xz has service status patched
STEP: updating the ServiceStatus 10/31/23 09:18:21.278
Oct 31 09:18:21.488: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated 10/31/23 09:18:21.488
Oct 31 09:18:21.602: INFO: Observed Service test-service-rf8xz in namespace services-6552 with annotations: map[] & Conditions: {[]}
Oct 31 09:18:21.602: INFO: Observed event: &Service{ObjectMeta:{test-service-rf8xz  services-6552  3be7a771-7681-4b59-9248-ddfff1d1a1ab 8456 0 2023-10-31 09:18:21 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-10-31 09:18:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-10-31 09:18:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.93.148.108,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.93.148.108],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Oct 31 09:18:21.603: INFO: Found Service test-service-rf8xz in namespace services-6552 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Oct 31 09:18:21.603: INFO: Service test-service-rf8xz has service status updated
STEP: patching the service 10/31/23 09:18:21.603
STEP: watching for the Service to be patched 10/31/23 09:18:21.675
Oct 31 09:18:21.710: INFO: observed Service test-service-rf8xz in namespace services-6552 with labels: map[test-service-static:true]
Oct 31 09:18:21.710: INFO: observed Service test-service-rf8xz in namespace services-6552 with labels: map[test-service-static:true]
Oct 31 09:18:21.710: INFO: observed Service test-service-rf8xz in namespace services-6552 with labels: map[test-service-static:true]
Oct 31 09:18:21.757: INFO: Found Service test-service-rf8xz in namespace services-6552 with labels: map[test-service:patched test-service-static:true]
Oct 31 09:18:21.758: INFO: Service test-service-rf8xz patched
STEP: deleting the service 10/31/23 09:18:21.758
STEP: watching for the Service to be deleted 10/31/23 09:18:21.823
Oct 31 09:18:21.875: INFO: Observed event: ADDED
Oct 31 09:18:21.876: INFO: Observed event: MODIFIED
Oct 31 09:18:21.876: INFO: Observed event: MODIFIED
Oct 31 09:18:21.876: INFO: Observed event: MODIFIED
Oct 31 09:18:21.916: INFO: Found Service test-service-rf8xz in namespace services-6552 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Oct 31 09:18:21.916: INFO: Service test-service-rf8xz deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:18:21.916: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6552" for this suite. 10/31/23 09:18:21.929
------------------------------
â€¢ [1.644 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should complete a service status lifecycle [Conformance]
  test/e2e/network/service.go:3428

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:18:20.34
    Oct 31 09:18:20.340: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:18:20.341
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:18:20.62
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:18:20.757
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should complete a service status lifecycle [Conformance]
      test/e2e/network/service.go:3428
    STEP: creating a Service 10/31/23 09:18:20.953
    STEP: watching for the Service to be added 10/31/23 09:18:21.021
    Oct 31 09:18:21.074: INFO: Found Service test-service-rf8xz in namespace services-6552 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
    Oct 31 09:18:21.074: INFO: Service test-service-rf8xz created
    STEP: Getting /status 10/31/23 09:18:21.074
    Oct 31 09:18:21.170: INFO: Service test-service-rf8xz has LoadBalancer: {[]}
    STEP: patching the ServiceStatus 10/31/23 09:18:21.17
    STEP: watching for the Service to be patched 10/31/23 09:18:21.229
    Oct 31 09:18:21.278: INFO: observed Service test-service-rf8xz in namespace services-6552 with annotations: map[] & LoadBalancer: {[]}
    Oct 31 09:18:21.278: INFO: Found Service test-service-rf8xz in namespace services-6552 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
    Oct 31 09:18:21.278: INFO: Service test-service-rf8xz has service status patched
    STEP: updating the ServiceStatus 10/31/23 09:18:21.278
    Oct 31 09:18:21.488: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the Service to be updated 10/31/23 09:18:21.488
    Oct 31 09:18:21.602: INFO: Observed Service test-service-rf8xz in namespace services-6552 with annotations: map[] & Conditions: {[]}
    Oct 31 09:18:21.602: INFO: Observed event: &Service{ObjectMeta:{test-service-rf8xz  services-6552  3be7a771-7681-4b59-9248-ddfff1d1a1ab 8456 0 2023-10-31 09:18:21 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-10-31 09:18:21 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-10-31 09:18:21 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.93.148.108,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.93.148.108],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
    Oct 31 09:18:21.603: INFO: Found Service test-service-rf8xz in namespace services-6552 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Oct 31 09:18:21.603: INFO: Service test-service-rf8xz has service status updated
    STEP: patching the service 10/31/23 09:18:21.603
    STEP: watching for the Service to be patched 10/31/23 09:18:21.675
    Oct 31 09:18:21.710: INFO: observed Service test-service-rf8xz in namespace services-6552 with labels: map[test-service-static:true]
    Oct 31 09:18:21.710: INFO: observed Service test-service-rf8xz in namespace services-6552 with labels: map[test-service-static:true]
    Oct 31 09:18:21.710: INFO: observed Service test-service-rf8xz in namespace services-6552 with labels: map[test-service-static:true]
    Oct 31 09:18:21.757: INFO: Found Service test-service-rf8xz in namespace services-6552 with labels: map[test-service:patched test-service-static:true]
    Oct 31 09:18:21.758: INFO: Service test-service-rf8xz patched
    STEP: deleting the service 10/31/23 09:18:21.758
    STEP: watching for the Service to be deleted 10/31/23 09:18:21.823
    Oct 31 09:18:21.875: INFO: Observed event: ADDED
    Oct 31 09:18:21.876: INFO: Observed event: MODIFIED
    Oct 31 09:18:21.876: INFO: Observed event: MODIFIED
    Oct 31 09:18:21.876: INFO: Observed event: MODIFIED
    Oct 31 09:18:21.916: INFO: Found Service test-service-rf8xz in namespace services-6552 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
    Oct 31 09:18:21.916: INFO: Service test-service-rf8xz deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:18:21.916: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6552" for this suite. 10/31/23 09:18:21.929
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] EmptyDir wrapper volumes
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:18:21.986
Oct 31 09:18:21.986: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir-wrapper 10/31/23 09:18:21.988
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:18:22.139
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:18:22.317
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189
STEP: Creating 50 configmaps 10/31/23 09:18:22.376
STEP: Creating RC which spawns configmap-volume pods 10/31/23 09:18:27.089
Oct 31 09:18:27.168: INFO: Pod name wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f: Found 1 pods out of 5
Oct 31 09:18:32.190: INFO: Pod name wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f: Found 5 pods out of 5
STEP: Ensuring each pod is running 10/31/23 09:18:32.191
Oct 31 09:18:32.191: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:18:32.330: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 138.89117ms
Oct 31 09:18:34.409: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 2.218594322s
Oct 31 09:18:36.347: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 4.155958632s
Oct 31 09:18:38.367: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 6.176195459s
Oct 31 09:18:40.342: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 8.150839563s
Oct 31 09:18:42.342: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Running", Reason="", readiness=true. Elapsed: 10.151508451s
Oct 31 09:18:42.342: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59" satisfied condition "running"
Oct 31 09:18:42.342: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-jxx4q" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:18:42.437: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-jxx4q": Phase="Running", Reason="", readiness=true. Elapsed: 94.48031ms
Oct 31 09:18:42.437: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-jxx4q" satisfied condition "running"
Oct 31 09:18:42.437: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-k65xk" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:18:42.502: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-k65xk": Phase="Running", Reason="", readiness=true. Elapsed: 65.386259ms
Oct 31 09:18:42.503: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-k65xk" satisfied condition "running"
Oct 31 09:18:42.503: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-kjctj" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:18:42.577: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-kjctj": Phase="Running", Reason="", readiness=true. Elapsed: 73.954899ms
Oct 31 09:18:42.577: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-kjctj" satisfied condition "running"
Oct 31 09:18:42.578: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-rxntd" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:18:42.629: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-rxntd": Phase="Running", Reason="", readiness=true. Elapsed: 50.713118ms
Oct 31 09:18:42.629: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-rxntd" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f in namespace emptydir-wrapper-6707, will wait for the garbage collector to delete the pods 10/31/23 09:18:42.629
Oct 31 09:18:42.838: INFO: Deleting ReplicationController wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f took: 55.45615ms
Oct 31 09:18:42.939: INFO: Terminating ReplicationController wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f pods took: 100.989432ms
STEP: Creating RC which spawns configmap-volume pods 10/31/23 09:18:46.121
Oct 31 09:18:46.187: INFO: Pod name wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c: Found 1 pods out of 5
Oct 31 09:18:51.225: INFO: Pod name wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c: Found 5 pods out of 5
STEP: Ensuring each pod is running 10/31/23 09:18:51.226
Oct 31 09:18:51.226: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:18:51.235: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 9.35294ms
Oct 31 09:18:53.247: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020692561s
Oct 31 09:18:55.247: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020880656s
Oct 31 09:18:57.251: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 6.024882557s
Oct 31 09:18:59.248: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 8.021997603s
Oct 31 09:19:01.257: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Running", Reason="", readiness=true. Elapsed: 10.031058298s
Oct 31 09:19:01.257: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l" satisfied condition "running"
Oct 31 09:19:01.257: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dqpgg" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:19:01.325: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dqpgg": Phase="Running", Reason="", readiness=true. Elapsed: 67.668083ms
Oct 31 09:19:01.325: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dqpgg" satisfied condition "running"
Oct 31 09:19:01.325: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-gvntf" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:19:01.338: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-gvntf": Phase="Running", Reason="", readiness=true. Elapsed: 12.790062ms
Oct 31 09:19:01.338: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-gvntf" satisfied condition "running"
Oct 31 09:19:01.338: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-smjdt" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:19:01.352: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-smjdt": Phase="Running", Reason="", readiness=true. Elapsed: 13.463374ms
Oct 31 09:19:01.352: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-smjdt" satisfied condition "running"
Oct 31 09:19:01.352: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-zcd5z" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:19:01.387: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-zcd5z": Phase="Running", Reason="", readiness=true. Elapsed: 34.875634ms
Oct 31 09:19:01.387: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-zcd5z" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c in namespace emptydir-wrapper-6707, will wait for the garbage collector to delete the pods 10/31/23 09:19:01.387
Oct 31 09:19:01.678: INFO: Deleting ReplicationController wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c took: 85.776892ms
Oct 31 09:19:01.778: INFO: Terminating ReplicationController wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c pods took: 100.716203ms
STEP: Creating RC which spawns configmap-volume pods 10/31/23 09:19:05.892
Oct 31 09:19:05.969: INFO: Pod name wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436: Found 1 pods out of 5
Oct 31 09:19:11.016: INFO: Pod name wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436: Found 5 pods out of 5
STEP: Ensuring each pod is running 10/31/23 09:19:11.016
Oct 31 09:19:11.017: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:19:11.027: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 10.003854ms
Oct 31 09:19:13.046: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 2.029055884s
Oct 31 09:19:15.080: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 4.06278666s
Oct 31 09:19:17.057: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 6.039922488s
Oct 31 09:19:19.049: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 8.032207563s
Oct 31 09:19:21.055: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 10.037749043s
Oct 31 09:19:23.041: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Running", Reason="", readiness=true. Elapsed: 12.024266369s
Oct 31 09:19:23.041: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h" satisfied condition "running"
Oct 31 09:19:23.041: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qhtnh" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:19:23.078: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qhtnh": Phase="Running", Reason="", readiness=true. Elapsed: 36.98953ms
Oct 31 09:19:23.078: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qhtnh" satisfied condition "running"
Oct 31 09:19:23.078: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qk5mg" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:19:23.127: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qk5mg": Phase="Running", Reason="", readiness=true. Elapsed: 48.36679ms
Oct 31 09:19:23.127: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qk5mg" satisfied condition "running"
Oct 31 09:19:23.127: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qwhg7" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:19:23.140: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qwhg7": Phase="Running", Reason="", readiness=true. Elapsed: 13.067035ms
Oct 31 09:19:23.140: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qwhg7" satisfied condition "running"
Oct 31 09:19:23.140: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-vpmck" in namespace "emptydir-wrapper-6707" to be "running"
Oct 31 09:19:23.259: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-vpmck": Phase="Running", Reason="", readiness=true. Elapsed: 119.031305ms
Oct 31 09:19:23.259: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-vpmck" satisfied condition "running"
STEP: deleting ReplicationController wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436 in namespace emptydir-wrapper-6707, will wait for the garbage collector to delete the pods 10/31/23 09:19:23.259
Oct 31 09:19:23.496: INFO: Deleting ReplicationController wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436 took: 65.699592ms
Oct 31 09:19:23.599: INFO: Terminating ReplicationController wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436 pods took: 102.449296ms
STEP: Cleaning up the configMaps 10/31/23 09:19:26.999
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:19:31.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-wrapper-6707" for this suite. 10/31/23 09:19:31.485
------------------------------
â€¢ [SLOW TEST] [69.557 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/storage/empty_dir_wrapper.go:189

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:18:21.986
    Oct 31 09:18:21.986: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir-wrapper 10/31/23 09:18:21.988
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:18:22.139
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:18:22.317
    [BeforeEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should not cause race condition when used for configmaps [Serial] [Conformance]
      test/e2e/storage/empty_dir_wrapper.go:189
    STEP: Creating 50 configmaps 10/31/23 09:18:22.376
    STEP: Creating RC which spawns configmap-volume pods 10/31/23 09:18:27.089
    Oct 31 09:18:27.168: INFO: Pod name wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f: Found 1 pods out of 5
    Oct 31 09:18:32.190: INFO: Pod name wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f: Found 5 pods out of 5
    STEP: Ensuring each pod is running 10/31/23 09:18:32.191
    Oct 31 09:18:32.191: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:18:32.330: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 138.89117ms
    Oct 31 09:18:34.409: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 2.218594322s
    Oct 31 09:18:36.347: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 4.155958632s
    Oct 31 09:18:38.367: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 6.176195459s
    Oct 31 09:18:40.342: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Pending", Reason="", readiness=false. Elapsed: 8.150839563s
    Oct 31 09:18:42.342: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59": Phase="Running", Reason="", readiness=true. Elapsed: 10.151508451s
    Oct 31 09:18:42.342: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-hfv59" satisfied condition "running"
    Oct 31 09:18:42.342: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-jxx4q" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:18:42.437: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-jxx4q": Phase="Running", Reason="", readiness=true. Elapsed: 94.48031ms
    Oct 31 09:18:42.437: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-jxx4q" satisfied condition "running"
    Oct 31 09:18:42.437: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-k65xk" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:18:42.502: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-k65xk": Phase="Running", Reason="", readiness=true. Elapsed: 65.386259ms
    Oct 31 09:18:42.503: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-k65xk" satisfied condition "running"
    Oct 31 09:18:42.503: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-kjctj" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:18:42.577: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-kjctj": Phase="Running", Reason="", readiness=true. Elapsed: 73.954899ms
    Oct 31 09:18:42.577: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-kjctj" satisfied condition "running"
    Oct 31 09:18:42.578: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-rxntd" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:18:42.629: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-rxntd": Phase="Running", Reason="", readiness=true. Elapsed: 50.713118ms
    Oct 31 09:18:42.629: INFO: Pod "wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f-rxntd" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f in namespace emptydir-wrapper-6707, will wait for the garbage collector to delete the pods 10/31/23 09:18:42.629
    Oct 31 09:18:42.838: INFO: Deleting ReplicationController wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f took: 55.45615ms
    Oct 31 09:18:42.939: INFO: Terminating ReplicationController wrapped-volume-race-0162a24d-772f-4830-ac81-8ba5f80af27f pods took: 100.989432ms
    STEP: Creating RC which spawns configmap-volume pods 10/31/23 09:18:46.121
    Oct 31 09:18:46.187: INFO: Pod name wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c: Found 1 pods out of 5
    Oct 31 09:18:51.225: INFO: Pod name wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c: Found 5 pods out of 5
    STEP: Ensuring each pod is running 10/31/23 09:18:51.226
    Oct 31 09:18:51.226: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:18:51.235: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 9.35294ms
    Oct 31 09:18:53.247: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020692561s
    Oct 31 09:18:55.247: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020880656s
    Oct 31 09:18:57.251: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 6.024882557s
    Oct 31 09:18:59.248: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Pending", Reason="", readiness=false. Elapsed: 8.021997603s
    Oct 31 09:19:01.257: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l": Phase="Running", Reason="", readiness=true. Elapsed: 10.031058298s
    Oct 31 09:19:01.257: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dnq7l" satisfied condition "running"
    Oct 31 09:19:01.257: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dqpgg" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:19:01.325: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dqpgg": Phase="Running", Reason="", readiness=true. Elapsed: 67.668083ms
    Oct 31 09:19:01.325: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-dqpgg" satisfied condition "running"
    Oct 31 09:19:01.325: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-gvntf" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:19:01.338: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-gvntf": Phase="Running", Reason="", readiness=true. Elapsed: 12.790062ms
    Oct 31 09:19:01.338: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-gvntf" satisfied condition "running"
    Oct 31 09:19:01.338: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-smjdt" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:19:01.352: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-smjdt": Phase="Running", Reason="", readiness=true. Elapsed: 13.463374ms
    Oct 31 09:19:01.352: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-smjdt" satisfied condition "running"
    Oct 31 09:19:01.352: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-zcd5z" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:19:01.387: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-zcd5z": Phase="Running", Reason="", readiness=true. Elapsed: 34.875634ms
    Oct 31 09:19:01.387: INFO: Pod "wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c-zcd5z" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c in namespace emptydir-wrapper-6707, will wait for the garbage collector to delete the pods 10/31/23 09:19:01.387
    Oct 31 09:19:01.678: INFO: Deleting ReplicationController wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c took: 85.776892ms
    Oct 31 09:19:01.778: INFO: Terminating ReplicationController wrapped-volume-race-be1781bb-8608-4a68-97a1-3b0e8541119c pods took: 100.716203ms
    STEP: Creating RC which spawns configmap-volume pods 10/31/23 09:19:05.892
    Oct 31 09:19:05.969: INFO: Pod name wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436: Found 1 pods out of 5
    Oct 31 09:19:11.016: INFO: Pod name wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436: Found 5 pods out of 5
    STEP: Ensuring each pod is running 10/31/23 09:19:11.016
    Oct 31 09:19:11.017: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:19:11.027: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 10.003854ms
    Oct 31 09:19:13.046: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 2.029055884s
    Oct 31 09:19:15.080: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 4.06278666s
    Oct 31 09:19:17.057: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 6.039922488s
    Oct 31 09:19:19.049: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 8.032207563s
    Oct 31 09:19:21.055: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Pending", Reason="", readiness=false. Elapsed: 10.037749043s
    Oct 31 09:19:23.041: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h": Phase="Running", Reason="", readiness=true. Elapsed: 12.024266369s
    Oct 31 09:19:23.041: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-bn45h" satisfied condition "running"
    Oct 31 09:19:23.041: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qhtnh" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:19:23.078: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qhtnh": Phase="Running", Reason="", readiness=true. Elapsed: 36.98953ms
    Oct 31 09:19:23.078: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qhtnh" satisfied condition "running"
    Oct 31 09:19:23.078: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qk5mg" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:19:23.127: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qk5mg": Phase="Running", Reason="", readiness=true. Elapsed: 48.36679ms
    Oct 31 09:19:23.127: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qk5mg" satisfied condition "running"
    Oct 31 09:19:23.127: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qwhg7" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:19:23.140: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qwhg7": Phase="Running", Reason="", readiness=true. Elapsed: 13.067035ms
    Oct 31 09:19:23.140: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-qwhg7" satisfied condition "running"
    Oct 31 09:19:23.140: INFO: Waiting up to 5m0s for pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-vpmck" in namespace "emptydir-wrapper-6707" to be "running"
    Oct 31 09:19:23.259: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-vpmck": Phase="Running", Reason="", readiness=true. Elapsed: 119.031305ms
    Oct 31 09:19:23.259: INFO: Pod "wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436-vpmck" satisfied condition "running"
    STEP: deleting ReplicationController wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436 in namespace emptydir-wrapper-6707, will wait for the garbage collector to delete the pods 10/31/23 09:19:23.259
    Oct 31 09:19:23.496: INFO: Deleting ReplicationController wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436 took: 65.699592ms
    Oct 31 09:19:23.599: INFO: Terminating ReplicationController wrapped-volume-race-d5a167e4-9d5a-4dad-a895-628a215aa436 pods took: 102.449296ms
    STEP: Cleaning up the configMaps 10/31/23 09:19:26.999
    [AfterEach] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:19:31.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir wrapper volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-wrapper-6707" for this suite. 10/31/23 09:19:31.485
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:19:31.549
Oct 31 09:19:31.549: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:19:31.55
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:19:31.79
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:19:31.933
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:19:32.029
Oct 31 09:19:32.049: INFO: Waiting up to 5m0s for pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec" in namespace "projected-7179" to be "Succeeded or Failed"
Oct 31 09:19:32.104: INFO: Pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec": Phase="Pending", Reason="", readiness=false. Elapsed: 55.048608ms
Oct 31 09:19:34.113: INFO: Pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec": Phase="Running", Reason="", readiness=false. Elapsed: 2.064045247s
Oct 31 09:19:36.114: INFO: Pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.06492919s
STEP: Saw pod success 10/31/23 09:19:36.114
Oct 31 09:19:36.114: INFO: Pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec" satisfied condition "Succeeded or Failed"
Oct 31 09:19:36.205: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec container client-container: <nil>
STEP: delete the pod 10/31/23 09:19:36.39
Oct 31 09:19:36.457: INFO: Waiting for pod downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec to disappear
Oct 31 09:19:36.505: INFO: Pod downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 09:19:36.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7179" for this suite. 10/31/23 09:19:36.561
------------------------------
â€¢ [SLOW TEST] [5.070 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:19:31.549
    Oct 31 09:19:31.549: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:19:31.55
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:19:31.79
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:19:31.933
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:68
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:19:32.029
    Oct 31 09:19:32.049: INFO: Waiting up to 5m0s for pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec" in namespace "projected-7179" to be "Succeeded or Failed"
    Oct 31 09:19:32.104: INFO: Pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec": Phase="Pending", Reason="", readiness=false. Elapsed: 55.048608ms
    Oct 31 09:19:34.113: INFO: Pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec": Phase="Running", Reason="", readiness=false. Elapsed: 2.064045247s
    Oct 31 09:19:36.114: INFO: Pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.06492919s
    STEP: Saw pod success 10/31/23 09:19:36.114
    Oct 31 09:19:36.114: INFO: Pod "downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec" satisfied condition "Succeeded or Failed"
    Oct 31 09:19:36.205: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec container client-container: <nil>
    STEP: delete the pod 10/31/23 09:19:36.39
    Oct 31 09:19:36.457: INFO: Waiting for pod downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec to disappear
    Oct 31 09:19:36.505: INFO: Pod downwardapi-volume-36293e3b-8473-4cb6-9c6b-fee3d49a3fec no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:19:36.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7179" for this suite. 10/31/23 09:19:36.561
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:19:36.631
Oct 31 09:19:36.632: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename gc 10/31/23 09:19:36.633
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:19:36.817
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:19:36.953
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650
STEP: create the rc 10/31/23 09:19:37.106
STEP: delete the rc 10/31/23 09:19:42.269
STEP: wait for the rc to be deleted 10/31/23 09:19:42.334
Oct 31 09:19:43.564: INFO: 80 pods remaining
Oct 31 09:19:43.564: INFO: 80 pods has nil DeletionTimestamp
Oct 31 09:19:43.564: INFO: 
Oct 31 09:19:44.519: INFO: 69 pods remaining
Oct 31 09:19:44.519: INFO: 68 pods has nil DeletionTimestamp
Oct 31 09:19:44.519: INFO: 
Oct 31 09:19:45.557: INFO: 60 pods remaining
Oct 31 09:19:45.557: INFO: 60 pods has nil DeletionTimestamp
Oct 31 09:19:45.557: INFO: 
Oct 31 09:19:46.527: INFO: 40 pods remaining
Oct 31 09:19:46.527: INFO: 40 pods has nil DeletionTimestamp
Oct 31 09:19:46.527: INFO: 
Oct 31 09:19:47.489: INFO: 33 pods remaining
Oct 31 09:19:47.489: INFO: 28 pods has nil DeletionTimestamp
Oct 31 09:19:47.489: INFO: 
Oct 31 09:19:48.369: INFO: 20 pods remaining
Oct 31 09:19:48.369: INFO: 20 pods has nil DeletionTimestamp
Oct 31 09:19:48.369: INFO: 
STEP: Gathering metrics 10/31/23 09:19:49.441
W1031 09:19:49.477786      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Oct 31 09:19:49.477: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Oct 31 09:19:49.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-9675" for this suite. 10/31/23 09:19:49.522
------------------------------
â€¢ [SLOW TEST] [12.963 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:650

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:19:36.631
    Oct 31 09:19:36.632: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename gc 10/31/23 09:19:36.633
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:19:36.817
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:19:36.953
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:650
    STEP: create the rc 10/31/23 09:19:37.106
    STEP: delete the rc 10/31/23 09:19:42.269
    STEP: wait for the rc to be deleted 10/31/23 09:19:42.334
    Oct 31 09:19:43.564: INFO: 80 pods remaining
    Oct 31 09:19:43.564: INFO: 80 pods has nil DeletionTimestamp
    Oct 31 09:19:43.564: INFO: 
    Oct 31 09:19:44.519: INFO: 69 pods remaining
    Oct 31 09:19:44.519: INFO: 68 pods has nil DeletionTimestamp
    Oct 31 09:19:44.519: INFO: 
    Oct 31 09:19:45.557: INFO: 60 pods remaining
    Oct 31 09:19:45.557: INFO: 60 pods has nil DeletionTimestamp
    Oct 31 09:19:45.557: INFO: 
    Oct 31 09:19:46.527: INFO: 40 pods remaining
    Oct 31 09:19:46.527: INFO: 40 pods has nil DeletionTimestamp
    Oct 31 09:19:46.527: INFO: 
    Oct 31 09:19:47.489: INFO: 33 pods remaining
    Oct 31 09:19:47.489: INFO: 28 pods has nil DeletionTimestamp
    Oct 31 09:19:47.489: INFO: 
    Oct 31 09:19:48.369: INFO: 20 pods remaining
    Oct 31 09:19:48.369: INFO: 20 pods has nil DeletionTimestamp
    Oct 31 09:19:48.369: INFO: 
    STEP: Gathering metrics 10/31/23 09:19:49.441
    W1031 09:19:49.477786      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Oct 31 09:19:49.477: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:19:49.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-9675" for this suite. 10/31/23 09:19:49.522
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:19:49.596
Oct 31 09:19:49.596: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 09:19:49.597
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:19:49.741
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:19:49.866
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109
STEP: Creating configMap with name configmap-test-volume-map-6560f27b-d3c5-4bf2-9894-fc58571e8baf 10/31/23 09:19:50.026
STEP: Creating a pod to test consume configMaps 10/31/23 09:19:50.109
Oct 31 09:19:50.171: INFO: Waiting up to 5m0s for pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575" in namespace "configmap-3275" to be "Succeeded or Failed"
Oct 31 09:19:50.261: INFO: Pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575": Phase="Pending", Reason="", readiness=false. Elapsed: 90.150636ms
Oct 31 09:19:52.270: INFO: Pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575": Phase="Pending", Reason="", readiness=false. Elapsed: 2.098837482s
Oct 31 09:19:54.272: INFO: Pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.100660741s
STEP: Saw pod success 10/31/23 09:19:54.272
Oct 31 09:19:54.272: INFO: Pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575" satisfied condition "Succeeded or Failed"
Oct 31 09:19:54.353: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:19:54.545
Oct 31 09:19:54.587: INFO: Waiting for pod pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575 to disappear
Oct 31 09:19:54.682: INFO: Pod pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:19:54.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-3275" for this suite. 10/31/23 09:19:54.692
------------------------------
â€¢ [SLOW TEST] [5.183 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:109

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:19:49.596
    Oct 31 09:19:49.596: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 09:19:49.597
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:19:49.741
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:19:49.866
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:109
    STEP: Creating configMap with name configmap-test-volume-map-6560f27b-d3c5-4bf2-9894-fc58571e8baf 10/31/23 09:19:50.026
    STEP: Creating a pod to test consume configMaps 10/31/23 09:19:50.109
    Oct 31 09:19:50.171: INFO: Waiting up to 5m0s for pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575" in namespace "configmap-3275" to be "Succeeded or Failed"
    Oct 31 09:19:50.261: INFO: Pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575": Phase="Pending", Reason="", readiness=false. Elapsed: 90.150636ms
    Oct 31 09:19:52.270: INFO: Pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575": Phase="Pending", Reason="", readiness=false. Elapsed: 2.098837482s
    Oct 31 09:19:54.272: INFO: Pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.100660741s
    STEP: Saw pod success 10/31/23 09:19:54.272
    Oct 31 09:19:54.272: INFO: Pod "pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575" satisfied condition "Succeeded or Failed"
    Oct 31 09:19:54.353: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:19:54.545
    Oct 31 09:19:54.587: INFO: Waiting for pod pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575 to disappear
    Oct 31 09:19:54.682: INFO: Pod pod-configmaps-495ba884-b0ff-4ac3-8cfa-e858dcdbe575 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:19:54.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-3275" for this suite. 10/31/23 09:19:54.692
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:19:54.781
Oct 31 09:19:54.781: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename dns 10/31/23 09:19:54.783
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:19:55.033
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:19:55.133
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193
STEP: Creating a test headless service 10/31/23 09:19:55.231
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8669 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8669;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8669 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8669;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8669.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8669.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8669.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8669.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8669.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8669.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8669.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8669.svc;check="$$(dig +notcp +noall +answer +search 169.254.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.254.169_udp@PTR;check="$$(dig +tcp +noall +answer +search 169.254.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.254.169_tcp@PTR;sleep 1; done
 10/31/23 09:19:55.386
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8669 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8669;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8669 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8669;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8669.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8669.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8669.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8669.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8669.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8669.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8669.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8669.svc;check="$$(dig +notcp +noall +answer +search 169.254.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.254.169_udp@PTR;check="$$(dig +tcp +noall +answer +search 169.254.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.254.169_tcp@PTR;sleep 1; done
 10/31/23 09:19:55.386
STEP: creating a pod to probe DNS 10/31/23 09:19:55.386
STEP: submitting the pod to kubernetes 10/31/23 09:19:55.386
Oct 31 09:19:55.404: INFO: Waiting up to 15m0s for pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57" in namespace "dns-8669" to be "running"
Oct 31 09:19:55.425: INFO: Pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57": Phase="Pending", Reason="", readiness=false. Elapsed: 20.905277ms
Oct 31 09:19:57.584: INFO: Pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57": Phase="Pending", Reason="", readiness=false. Elapsed: 2.180424148s
Oct 31 09:19:59.474: INFO: Pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57": Phase="Running", Reason="", readiness=true. Elapsed: 4.070382645s
Oct 31 09:19:59.475: INFO: Pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57" satisfied condition "running"
STEP: retrieving the pod 10/31/23 09:19:59.475
STEP: looking for the results for each expected name from probers 10/31/23 09:19:59.486
Oct 31 09:19:59.630: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:19:59.770: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:19:59.953: INFO: Unable to read wheezy_udp@dns-test-service.dns-8669 from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:00.034: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8669 from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:00.166: INFO: Unable to read wheezy_udp@dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:00.286: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:00.429: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:00.578: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:01.190: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:01.317: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:01.460: INFO: Unable to read jessie_udp@dns-test-service.dns-8669 from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:01.509: INFO: Unable to read jessie_tcp@dns-test-service.dns-8669 from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:01.674: INFO: Unable to read jessie_udp@dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:01.853: INFO: Unable to read jessie_tcp@dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:02.029: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:02.154: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
Oct 31 09:20:02.822: INFO: Lookups using dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8669 wheezy_tcp@dns-test-service.dns-8669 wheezy_udp@dns-test-service.dns-8669.svc wheezy_tcp@dns-test-service.dns-8669.svc wheezy_udp@_http._tcp.dns-test-service.dns-8669.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8669.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8669 jessie_tcp@dns-test-service.dns-8669 jessie_udp@dns-test-service.dns-8669.svc jessie_tcp@dns-test-service.dns-8669.svc jessie_udp@_http._tcp.dns-test-service.dns-8669.svc jessie_tcp@_http._tcp.dns-test-service.dns-8669.svc]

Oct 31 09:20:10.694: INFO: DNS probes using dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57 succeeded

STEP: deleting the pod 10/31/23 09:20:10.694
STEP: deleting the test service 10/31/23 09:20:10.762
STEP: deleting the test headless service 10/31/23 09:20:10.871
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Oct 31 09:20:10.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-8669" for this suite. 10/31/23 09:20:10.942
------------------------------
â€¢ [SLOW TEST] [16.216 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/network/dns.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:19:54.781
    Oct 31 09:19:54.781: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename dns 10/31/23 09:19:54.783
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:19:55.033
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:19:55.133
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
      test/e2e/network/dns.go:193
    STEP: Creating a test headless service 10/31/23 09:19:55.231
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8669 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8669;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8669 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8669;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8669.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8669.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8669.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8669.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8669.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8669.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8669.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8669.svc;check="$$(dig +notcp +noall +answer +search 169.254.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.254.169_udp@PTR;check="$$(dig +tcp +noall +answer +search 169.254.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.254.169_tcp@PTR;sleep 1; done
     10/31/23 09:19:55.386
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8669 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8669;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8669 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8669;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8669.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8669.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8669.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8669.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8669.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8669.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8669.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8669.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8669.svc;check="$$(dig +notcp +noall +answer +search 169.254.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.254.169_udp@PTR;check="$$(dig +tcp +noall +answer +search 169.254.93.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.93.254.169_tcp@PTR;sleep 1; done
     10/31/23 09:19:55.386
    STEP: creating a pod to probe DNS 10/31/23 09:19:55.386
    STEP: submitting the pod to kubernetes 10/31/23 09:19:55.386
    Oct 31 09:19:55.404: INFO: Waiting up to 15m0s for pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57" in namespace "dns-8669" to be "running"
    Oct 31 09:19:55.425: INFO: Pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57": Phase="Pending", Reason="", readiness=false. Elapsed: 20.905277ms
    Oct 31 09:19:57.584: INFO: Pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57": Phase="Pending", Reason="", readiness=false. Elapsed: 2.180424148s
    Oct 31 09:19:59.474: INFO: Pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57": Phase="Running", Reason="", readiness=true. Elapsed: 4.070382645s
    Oct 31 09:19:59.475: INFO: Pod "dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57" satisfied condition "running"
    STEP: retrieving the pod 10/31/23 09:19:59.475
    STEP: looking for the results for each expected name from probers 10/31/23 09:19:59.486
    Oct 31 09:19:59.630: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:19:59.770: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:19:59.953: INFO: Unable to read wheezy_udp@dns-test-service.dns-8669 from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:00.034: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8669 from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:00.166: INFO: Unable to read wheezy_udp@dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:00.286: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:00.429: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:00.578: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:01.190: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:01.317: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:01.460: INFO: Unable to read jessie_udp@dns-test-service.dns-8669 from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:01.509: INFO: Unable to read jessie_tcp@dns-test-service.dns-8669 from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:01.674: INFO: Unable to read jessie_udp@dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:01.853: INFO: Unable to read jessie_tcp@dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:02.029: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:02.154: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8669.svc from pod dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57: the server could not find the requested resource (get pods dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57)
    Oct 31 09:20:02.822: INFO: Lookups using dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8669 wheezy_tcp@dns-test-service.dns-8669 wheezy_udp@dns-test-service.dns-8669.svc wheezy_tcp@dns-test-service.dns-8669.svc wheezy_udp@_http._tcp.dns-test-service.dns-8669.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8669.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8669 jessie_tcp@dns-test-service.dns-8669 jessie_udp@dns-test-service.dns-8669.svc jessie_tcp@dns-test-service.dns-8669.svc jessie_udp@_http._tcp.dns-test-service.dns-8669.svc jessie_tcp@_http._tcp.dns-test-service.dns-8669.svc]

    Oct 31 09:20:10.694: INFO: DNS probes using dns-8669/dns-test-d19278ea-de30-4174-91a3-2f2cf3300a57 succeeded

    STEP: deleting the pod 10/31/23 09:20:10.694
    STEP: deleting the test service 10/31/23 09:20:10.762
    STEP: deleting the test headless service 10/31/23 09:20:10.871
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:20:10.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-8669" for this suite. 10/31/23 09:20:10.942
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:20:11
Oct 31 09:20:11.000: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 09:20:11.001
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:11.222
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:11.372
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 09:20:11.68
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:20:12.204
STEP: Deploying the webhook pod 10/31/23 09:20:12.249
STEP: Wait for the deployment to be ready 10/31/23 09:20:12.326
Oct 31 09:20:12.489: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 20, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 20, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 20, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 20, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:20:14.537
STEP: Verifying the service has paired with the endpoint 10/31/23 09:20:14.597
Oct 31 09:20:15.599: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209
STEP: Registering the webhook via the AdmissionRegistration API 10/31/23 09:20:15.606
STEP: create a pod 10/31/23 09:20:16.878
Oct 31 09:20:16.942: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-7982" to be "running"
Oct 31 09:20:16.991: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 48.182441ms
Oct 31 09:20:18.999: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.056683931s
Oct 31 09:20:18.999: INFO: Pod "to-be-attached-pod" satisfied condition "running"
STEP: 'kubectl attach' the pod, should be denied by the webhook 10/31/23 09:20:18.999
Oct 31 09:20:18.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=webhook-7982 attach --namespace=webhook-7982 to-be-attached-pod -i -c=container1'
Oct 31 09:20:19.480: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:20:19.573: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7982" for this suite. 10/31/23 09:20:19.898
STEP: Destroying namespace "webhook-7982-markers" for this suite. 10/31/23 09:20:19.956
------------------------------
â€¢ [SLOW TEST] [9.018 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/apimachinery/webhook.go:209

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:20:11
    Oct 31 09:20:11.000: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 09:20:11.001
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:11.222
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:11.372
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 09:20:11.68
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:20:12.204
    STEP: Deploying the webhook pod 10/31/23 09:20:12.249
    STEP: Wait for the deployment to be ready 10/31/23 09:20:12.326
    Oct 31 09:20:12.489: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 20, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 20, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 20, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 20, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:20:14.537
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:20:14.597
    Oct 31 09:20:15.599: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny attaching pod [Conformance]
      test/e2e/apimachinery/webhook.go:209
    STEP: Registering the webhook via the AdmissionRegistration API 10/31/23 09:20:15.606
    STEP: create a pod 10/31/23 09:20:16.878
    Oct 31 09:20:16.942: INFO: Waiting up to 5m0s for pod "to-be-attached-pod" in namespace "webhook-7982" to be "running"
    Oct 31 09:20:16.991: INFO: Pod "to-be-attached-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 48.182441ms
    Oct 31 09:20:18.999: INFO: Pod "to-be-attached-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.056683931s
    Oct 31 09:20:18.999: INFO: Pod "to-be-attached-pod" satisfied condition "running"
    STEP: 'kubectl attach' the pod, should be denied by the webhook 10/31/23 09:20:18.999
    Oct 31 09:20:18.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=webhook-7982 attach --namespace=webhook-7982 to-be-attached-pod -i -c=container1'
    Oct 31 09:20:19.480: INFO: rc: 1
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:20:19.573: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7982" for this suite. 10/31/23 09:20:19.898
    STEP: Destroying namespace "webhook-7982-markers" for this suite. 10/31/23 09:20:19.956
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:20:20.024
Oct 31 09:20:20.024: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 09:20:20.025
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:20.223
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:20.36
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204
STEP: creating pod 10/31/23 09:20:20.502
Oct 31 09:20:20.623: INFO: Waiting up to 5m0s for pod "pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e" in namespace "pods-8456" to be "running and ready"
Oct 31 09:20:20.692: INFO: Pod "pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e": Phase="Pending", Reason="", readiness=false. Elapsed: 68.92883ms
Oct 31 09:20:20.692: INFO: The phase of Pod pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:20:22.700: INFO: Pod "pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e": Phase="Running", Reason="", readiness=true. Elapsed: 2.076411577s
Oct 31 09:20:22.700: INFO: The phase of Pod pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e is Running (Ready = true)
Oct 31 09:20:22.700: INFO: Pod "pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e" satisfied condition "running and ready"
Oct 31 09:20:22.802: INFO: Pod pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e has hostIP: 10.20.4.137
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 09:20:22.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-8456" for this suite. 10/31/23 09:20:22.86
------------------------------
â€¢ [2.934 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:204

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:20:20.024
    Oct 31 09:20:20.024: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 09:20:20.025
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:20.223
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:20.36
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should get a host IP [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:204
    STEP: creating pod 10/31/23 09:20:20.502
    Oct 31 09:20:20.623: INFO: Waiting up to 5m0s for pod "pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e" in namespace "pods-8456" to be "running and ready"
    Oct 31 09:20:20.692: INFO: Pod "pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e": Phase="Pending", Reason="", readiness=false. Elapsed: 68.92883ms
    Oct 31 09:20:20.692: INFO: The phase of Pod pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:20:22.700: INFO: Pod "pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e": Phase="Running", Reason="", readiness=true. Elapsed: 2.076411577s
    Oct 31 09:20:22.700: INFO: The phase of Pod pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e is Running (Ready = true)
    Oct 31 09:20:22.700: INFO: Pod "pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e" satisfied condition "running and ready"
    Oct 31 09:20:22.802: INFO: Pod pod-hostip-c7426a79-b670-4659-b4c6-bd315f57140e has hostIP: 10.20.4.137
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:20:22.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-8456" for this suite. 10/31/23 09:20:22.86
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:20:22.959
Oct 31 09:20:22.959: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 09:20:22.96
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:23.158
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:23.279
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884
STEP: Creating a ResourceQuota 10/31/23 09:20:23.382
STEP: Getting a ResourceQuota 10/31/23 09:20:23.474
STEP: Updating a ResourceQuota 10/31/23 09:20:23.573
STEP: Verifying a ResourceQuota was modified 10/31/23 09:20:23.661
STEP: Deleting a ResourceQuota 10/31/23 09:20:23.754
STEP: Verifying the deleted ResourceQuota 10/31/23 09:20:23.85
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 09:20:23.963: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-9881" for this suite. 10/31/23 09:20:24.013
------------------------------
â€¢ [1.112 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/apimachinery/resource_quota.go:884

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:20:22.959
    Oct 31 09:20:22.959: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 09:20:22.96
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:23.158
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:23.279
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to update and delete ResourceQuota. [Conformance]
      test/e2e/apimachinery/resource_quota.go:884
    STEP: Creating a ResourceQuota 10/31/23 09:20:23.382
    STEP: Getting a ResourceQuota 10/31/23 09:20:23.474
    STEP: Updating a ResourceQuota 10/31/23 09:20:23.573
    STEP: Verifying a ResourceQuota was modified 10/31/23 09:20:23.661
    STEP: Deleting a ResourceQuota 10/31/23 09:20:23.754
    STEP: Verifying the deleted ResourceQuota 10/31/23 09:20:23.85
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:20:23.963: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-9881" for this suite. 10/31/23 09:20:24.013
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:20:24.077
Oct 31 09:20:24.077: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:20:24.078
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:24.335
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:24.472
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213
STEP: creating service in namespace services-2166 10/31/23 09:20:24.615
STEP: creating service affinity-clusterip-transition in namespace services-2166 10/31/23 09:20:24.616
STEP: creating replication controller affinity-clusterip-transition in namespace services-2166 10/31/23 09:20:24.645
I1031 09:20:24.665092      18 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2166, replica count: 3
I1031 09:20:27.766667      18 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Oct 31 09:20:27.906: INFO: Creating new exec pod
Oct 31 09:20:27.961: INFO: Waiting up to 5m0s for pod "execpod-affinityqlgsf" in namespace "services-2166" to be "running"
Oct 31 09:20:27.973: INFO: Pod "execpod-affinityqlgsf": Phase="Pending", Reason="", readiness=false. Elapsed: 12.270324ms
Oct 31 09:20:29.986: INFO: Pod "execpod-affinityqlgsf": Phase="Running", Reason="", readiness=true. Elapsed: 2.024823663s
Oct 31 09:20:29.986: INFO: Pod "execpod-affinityqlgsf" satisfied condition "running"
Oct 31 09:20:30.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2166 exec execpod-affinityqlgsf -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
Oct 31 09:20:31.838: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Oct 31 09:20:31.838: INFO: stdout: ""
Oct 31 09:20:31.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2166 exec execpod-affinityqlgsf -- /bin/sh -x -c nc -v -z -w 2 10.93.166.116 80'
Oct 31 09:20:32.715: INFO: stderr: "+ nc -v -z -w 2 10.93.166.116 80\nConnection to 10.93.166.116 80 port [tcp/http] succeeded!\n"
Oct 31 09:20:32.715: INFO: stdout: ""
Oct 31 09:20:32.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2166 exec execpod-affinityqlgsf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.93.166.116:80/ ; done'
Oct 31 09:20:33.835: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n"
Oct 31 09:20:33.835: INFO: stdout: "\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh"
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
Oct 31 09:20:33.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2166 exec execpod-affinityqlgsf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.93.166.116:80/ ; done'
Oct 31 09:20:34.949: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n"
Oct 31 09:20:34.949: INFO: stdout: "\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn"
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
Oct 31 09:20:34.949: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2166, will wait for the garbage collector to delete the pods 10/31/23 09:20:35.034
Oct 31 09:20:35.215: INFO: Deleting ReplicationController affinity-clusterip-transition took: 73.093918ms
Oct 31 09:20:35.316: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.106754ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:20:37.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2166" for this suite. 10/31/23 09:20:37.747
------------------------------
â€¢ [SLOW TEST] [13.773 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2213

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:20:24.077
    Oct 31 09:20:24.077: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:20:24.078
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:24.335
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:24.472
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2213
    STEP: creating service in namespace services-2166 10/31/23 09:20:24.615
    STEP: creating service affinity-clusterip-transition in namespace services-2166 10/31/23 09:20:24.616
    STEP: creating replication controller affinity-clusterip-transition in namespace services-2166 10/31/23 09:20:24.645
    I1031 09:20:24.665092      18 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-2166, replica count: 3
    I1031 09:20:27.766667      18 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Oct 31 09:20:27.906: INFO: Creating new exec pod
    Oct 31 09:20:27.961: INFO: Waiting up to 5m0s for pod "execpod-affinityqlgsf" in namespace "services-2166" to be "running"
    Oct 31 09:20:27.973: INFO: Pod "execpod-affinityqlgsf": Phase="Pending", Reason="", readiness=false. Elapsed: 12.270324ms
    Oct 31 09:20:29.986: INFO: Pod "execpod-affinityqlgsf": Phase="Running", Reason="", readiness=true. Elapsed: 2.024823663s
    Oct 31 09:20:29.986: INFO: Pod "execpod-affinityqlgsf" satisfied condition "running"
    Oct 31 09:20:30.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2166 exec execpod-affinityqlgsf -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip-transition 80'
    Oct 31 09:20:31.838: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
    Oct 31 09:20:31.838: INFO: stdout: ""
    Oct 31 09:20:31.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2166 exec execpod-affinityqlgsf -- /bin/sh -x -c nc -v -z -w 2 10.93.166.116 80'
    Oct 31 09:20:32.715: INFO: stderr: "+ nc -v -z -w 2 10.93.166.116 80\nConnection to 10.93.166.116 80 port [tcp/http] succeeded!\n"
    Oct 31 09:20:32.715: INFO: stdout: ""
    Oct 31 09:20:32.867: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2166 exec execpod-affinityqlgsf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.93.166.116:80/ ; done'
    Oct 31 09:20:33.835: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n"
    Oct 31 09:20:33.835: INFO: stdout: "\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh\naffinity-clusterip-transition-gssmn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-tv9vh"
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-gssmn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:33.835: INFO: Received response from host: affinity-clusterip-transition-tv9vh
    Oct 31 09:20:33.972: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2166 exec execpod-affinityqlgsf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.93.166.116:80/ ; done'
    Oct 31 09:20:34.949: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.166.116:80/\n"
    Oct 31 09:20:34.949: INFO: stdout: "\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn\naffinity-clusterip-transition-sgvhn"
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Received response from host: affinity-clusterip-transition-sgvhn
    Oct 31 09:20:34.949: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2166, will wait for the garbage collector to delete the pods 10/31/23 09:20:35.034
    Oct 31 09:20:35.215: INFO: Deleting ReplicationController affinity-clusterip-transition took: 73.093918ms
    Oct 31 09:20:35.316: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.106754ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:20:37.680: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2166" for this suite. 10/31/23 09:20:37.747
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:20:37.85
Oct 31 09:20:37.850: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:20:37.851
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:38.019
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:38.152
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78
STEP: Creating projection with secret that has name projected-secret-test-map-3fd306ec-dd7a-4639-bcb6-420a3edb07f1 10/31/23 09:20:38.286
STEP: Creating a pod to test consume secrets 10/31/23 09:20:38.427
Oct 31 09:20:38.448: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def" in namespace "projected-8225" to be "Succeeded or Failed"
Oct 31 09:20:38.468: INFO: Pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def": Phase="Pending", Reason="", readiness=false. Elapsed: 19.878688ms
Oct 31 09:20:40.517: INFO: Pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def": Phase="Running", Reason="", readiness=false. Elapsed: 2.068637219s
Oct 31 09:20:42.478: INFO: Pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02986206s
STEP: Saw pod success 10/31/23 09:20:42.478
Oct 31 09:20:42.479: INFO: Pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def" satisfied condition "Succeeded or Failed"
Oct 31 09:20:42.527: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def container projected-secret-volume-test: <nil>
STEP: delete the pod 10/31/23 09:20:42.673
Oct 31 09:20:42.734: INFO: Waiting for pod pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def to disappear
Oct 31 09:20:42.781: INFO: Pod pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Oct 31 09:20:42.782: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8225" for this suite. 10/31/23 09:20:42.84
------------------------------
â€¢ [SLOW TEST] [5.043 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:20:37.85
    Oct 31 09:20:37.850: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:20:37.851
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:38.019
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:38.152
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:78
    STEP: Creating projection with secret that has name projected-secret-test-map-3fd306ec-dd7a-4639-bcb6-420a3edb07f1 10/31/23 09:20:38.286
    STEP: Creating a pod to test consume secrets 10/31/23 09:20:38.427
    Oct 31 09:20:38.448: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def" in namespace "projected-8225" to be "Succeeded or Failed"
    Oct 31 09:20:38.468: INFO: Pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def": Phase="Pending", Reason="", readiness=false. Elapsed: 19.878688ms
    Oct 31 09:20:40.517: INFO: Pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def": Phase="Running", Reason="", readiness=false. Elapsed: 2.068637219s
    Oct 31 09:20:42.478: INFO: Pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02986206s
    STEP: Saw pod success 10/31/23 09:20:42.478
    Oct 31 09:20:42.479: INFO: Pod "pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def" satisfied condition "Succeeded or Failed"
    Oct 31 09:20:42.527: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def container projected-secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 09:20:42.673
    Oct 31 09:20:42.734: INFO: Waiting for pod pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def to disappear
    Oct 31 09:20:42.781: INFO: Pod pod-projected-secrets-eaa39cba-4b64-46de-b046-194a2dfb8def no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:20:42.782: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8225" for this suite. 10/31/23 09:20:42.84
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-node] Lease
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[BeforeEach] [sig-node] Lease
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:20:42.896
Oct 31 09:20:42.896: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename lease-test 10/31/23 09:20:42.898
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:43.064
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:43.162
[BeforeEach] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:31
[It] lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72
[AfterEach] [sig-node] Lease
  test/e2e/framework/node/init/init.go:32
Oct 31 09:20:44.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Lease
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Lease
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Lease
  tear down framework | framework.go:193
STEP: Destroying namespace "lease-test-3981" for this suite. 10/31/23 09:20:44.23
------------------------------
â€¢ [1.391 seconds]
[sig-node] Lease
test/e2e/common/node/framework.go:23
  lease API should be available [Conformance]
  test/e2e/common/node/lease.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Lease
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:20:42.896
    Oct 31 09:20:42.896: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename lease-test 10/31/23 09:20:42.898
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:43.064
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:43.162
    [BeforeEach] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:31
    [It] lease API should be available [Conformance]
      test/e2e/common/node/lease.go:72
    [AfterEach] [sig-node] Lease
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:20:44.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Lease
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Lease
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Lease
      tear down framework | framework.go:193
    STEP: Destroying namespace "lease-test-3981" for this suite. 10/31/23 09:20:44.23
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:20:44.296
Oct 31 09:20:44.296: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 09:20:44.297
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:44.491
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:44.625
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125
STEP: Creating secret with name secret-test-de15e4b9-ece3-412d-92c1-0b69b443d885 10/31/23 09:20:44.725
STEP: Creating a pod to test consume secrets 10/31/23 09:20:44.814
Oct 31 09:20:44.857: INFO: Waiting up to 5m0s for pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e" in namespace "secrets-4723" to be "Succeeded or Failed"
Oct 31 09:20:44.874: INFO: Pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e": Phase="Pending", Reason="", readiness=false. Elapsed: 16.93582ms
Oct 31 09:20:46.884: INFO: Pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027672537s
Oct 31 09:20:48.880: INFO: Pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023378698s
STEP: Saw pod success 10/31/23 09:20:48.88
Oct 31 09:20:48.880: INFO: Pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e" satisfied condition "Succeeded or Failed"
Oct 31 09:20:48.931: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e container secret-volume-test: <nil>
STEP: delete the pod 10/31/23 09:20:49.107
Oct 31 09:20:49.167: INFO: Waiting for pod pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e to disappear
Oct 31 09:20:49.257: INFO: Pod pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 09:20:49.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4723" for this suite. 10/31/23 09:20:49.309
------------------------------
â€¢ [SLOW TEST] [5.068 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:125

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:20:44.296
    Oct 31 09:20:44.296: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 09:20:44.297
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:44.491
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:44.625
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:125
    STEP: Creating secret with name secret-test-de15e4b9-ece3-412d-92c1-0b69b443d885 10/31/23 09:20:44.725
    STEP: Creating a pod to test consume secrets 10/31/23 09:20:44.814
    Oct 31 09:20:44.857: INFO: Waiting up to 5m0s for pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e" in namespace "secrets-4723" to be "Succeeded or Failed"
    Oct 31 09:20:44.874: INFO: Pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e": Phase="Pending", Reason="", readiness=false. Elapsed: 16.93582ms
    Oct 31 09:20:46.884: INFO: Pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027672537s
    Oct 31 09:20:48.880: INFO: Pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023378698s
    STEP: Saw pod success 10/31/23 09:20:48.88
    Oct 31 09:20:48.880: INFO: Pod "pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e" satisfied condition "Succeeded or Failed"
    Oct 31 09:20:48.931: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e container secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 09:20:49.107
    Oct 31 09:20:49.167: INFO: Waiting for pod pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e to disappear
    Oct 31 09:20:49.257: INFO: Pod pod-secrets-73645b65-be41-4a20-8922-3b7bb9ebcd7e no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:20:49.258: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4723" for this suite. 10/31/23 09:20:49.309
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:20:49.367
Oct 31 09:20:49.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 09:20:49.37
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:49.515
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:49.601
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448
STEP: Counting existing ResourceQuota 10/31/23 09:20:49.668
STEP: Creating a ResourceQuota 10/31/23 09:20:54.727
STEP: Ensuring resource quota status is calculated 10/31/23 09:20:54.765
STEP: Creating a ReplicaSet 10/31/23 09:20:56.772
STEP: Ensuring resource quota status captures replicaset creation 10/31/23 09:20:56.862
STEP: Deleting a ReplicaSet 10/31/23 09:20:58.899
STEP: Ensuring resource quota status released usage 10/31/23 09:20:58.985
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 09:21:00.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-7867" for this suite. 10/31/23 09:21:01.047
------------------------------
â€¢ [SLOW TEST] [11.732 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/apimachinery/resource_quota.go:448

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:20:49.367
    Oct 31 09:20:49.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 09:20:49.37
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:20:49.515
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:20:49.601
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
      test/e2e/apimachinery/resource_quota.go:448
    STEP: Counting existing ResourceQuota 10/31/23 09:20:49.668
    STEP: Creating a ResourceQuota 10/31/23 09:20:54.727
    STEP: Ensuring resource quota status is calculated 10/31/23 09:20:54.765
    STEP: Creating a ReplicaSet 10/31/23 09:20:56.772
    STEP: Ensuring resource quota status captures replicaset creation 10/31/23 09:20:56.862
    STEP: Deleting a ReplicaSet 10/31/23 09:20:58.899
    STEP: Ensuring resource quota status released usage 10/31/23 09:20:58.985
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:21:00.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-7867" for this suite. 10/31/23 09:21:01.047
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Downward API
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:21:01.099
Oct 31 09:21:01.099: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:21:01.1
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:01.495
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:01.637
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217
STEP: Creating a pod to test downward api env vars 10/31/23 09:21:01.738
Oct 31 09:21:01.800: INFO: Waiting up to 5m0s for pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6" in namespace "downward-api-513" to be "Succeeded or Failed"
Oct 31 09:21:01.859: INFO: Pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6": Phase="Pending", Reason="", readiness=false. Elapsed: 59.557905ms
Oct 31 09:21:03.922: INFO: Pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.122016624s
Oct 31 09:21:05.909: INFO: Pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.109210831s
STEP: Saw pod success 10/31/23 09:21:05.909
Oct 31 09:21:05.909: INFO: Pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6" satisfied condition "Succeeded or Failed"
Oct 31 09:21:05.961: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6 container dapi-container: <nil>
STEP: delete the pod 10/31/23 09:21:06.114
Oct 31 09:21:06.173: INFO: Waiting for pod downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6 to disappear
Oct 31 09:21:06.265: INFO: Pod downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Oct 31 09:21:06.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-513" for this suite. 10/31/23 09:21:06.321
------------------------------
â€¢ [SLOW TEST] [5.278 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:21:01.099
    Oct 31 09:21:01.099: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:21:01.1
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:01.495
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:01.637
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:217
    STEP: Creating a pod to test downward api env vars 10/31/23 09:21:01.738
    Oct 31 09:21:01.800: INFO: Waiting up to 5m0s for pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6" in namespace "downward-api-513" to be "Succeeded or Failed"
    Oct 31 09:21:01.859: INFO: Pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6": Phase="Pending", Reason="", readiness=false. Elapsed: 59.557905ms
    Oct 31 09:21:03.922: INFO: Pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.122016624s
    Oct 31 09:21:05.909: INFO: Pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.109210831s
    STEP: Saw pod success 10/31/23 09:21:05.909
    Oct 31 09:21:05.909: INFO: Pod "downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6" satisfied condition "Succeeded or Failed"
    Oct 31 09:21:05.961: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6 container dapi-container: <nil>
    STEP: delete the pod 10/31/23 09:21:06.114
    Oct 31 09:21:06.173: INFO: Waiting for pod downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6 to disappear
    Oct 31 09:21:06.265: INFO: Pod downward-api-f9b0c14d-3310-4292-81ea-36a9d7053af6 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:21:06.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-513" for this suite. 10/31/23 09:21:06.321
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:21:06.379
Oct 31 09:21:06.379: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:21:06.38
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:06.69
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:06.825
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250
STEP: creating service in namespace services-6324 10/31/23 09:21:06.922
STEP: creating service affinity-nodeport-transition in namespace services-6324 10/31/23 09:21:06.923
STEP: creating replication controller affinity-nodeport-transition in namespace services-6324 10/31/23 09:21:06.996
I1031 09:21:07.059741      18 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-6324, replica count: 3
I1031 09:21:10.112064      18 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Oct 31 09:21:10.265: INFO: Creating new exec pod
Oct 31 09:21:10.405: INFO: Waiting up to 5m0s for pod "execpod-affinityptwsl" in namespace "services-6324" to be "running"
Oct 31 09:21:10.415: INFO: Pod "execpod-affinityptwsl": Phase="Pending", Reason="", readiness=false. Elapsed: 9.391244ms
Oct 31 09:21:12.447: INFO: Pod "execpod-affinityptwsl": Phase="Running", Reason="", readiness=true. Elapsed: 2.041324291s
Oct 31 09:21:12.447: INFO: Pod "execpod-affinityptwsl" satisfied condition "running"
Oct 31 09:21:13.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
Oct 31 09:21:14.438: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Oct 31 09:21:14.438: INFO: stdout: ""
Oct 31 09:21:14.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c nc -v -z -w 2 10.93.225.53 80'
Oct 31 09:21:15.414: INFO: stderr: "+ nc -v -z -w 2 10.93.225.53 80\nConnection to 10.93.225.53 80 port [tcp/http] succeeded!\n"
Oct 31 09:21:15.414: INFO: stdout: ""
Oct 31 09:21:15.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c nc -v -z -w 2 10.20.4.182 32224'
Oct 31 09:21:16.328: INFO: stderr: "+ nc -v -z -w 2 10.20.4.182 32224\nConnection to 10.20.4.182 32224 port [tcp/*] succeeded!\n"
Oct 31 09:21:16.328: INFO: stdout: ""
Oct 31 09:21:16.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c nc -v -z -w 2 10.20.4.137 32224'
Oct 31 09:21:17.219: INFO: stderr: "+ nc -v -z -w 2 10.20.4.137 32224\nConnection to 10.20.4.137 32224 port [tcp/*] succeeded!\n"
Oct 31 09:21:17.219: INFO: stdout: ""
Oct 31 09:21:17.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.20.4.137:32224/ ; done'
Oct 31 09:21:18.432: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n"
Oct 31 09:21:18.432: INFO: stdout: "\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4"
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
Oct 31 09:21:18.542: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.20.4.137:32224/ ; done'
Oct 31 09:21:19.475: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n"
Oct 31 09:21:19.475: INFO: stdout: "\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52"
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
Oct 31 09:21:19.475: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6324, will wait for the garbage collector to delete the pods 10/31/23 09:21:19.579
Oct 31 09:21:19.731: INFO: Deleting ReplicationController affinity-nodeport-transition took: 39.170378ms
Oct 31 09:21:19.933: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 201.791787ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:21:22.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6324" for this suite. 10/31/23 09:21:22.542
------------------------------
â€¢ [SLOW TEST] [16.302 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:21:06.379
    Oct 31 09:21:06.379: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:21:06.38
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:06.69
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:06.825
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2250
    STEP: creating service in namespace services-6324 10/31/23 09:21:06.922
    STEP: creating service affinity-nodeport-transition in namespace services-6324 10/31/23 09:21:06.923
    STEP: creating replication controller affinity-nodeport-transition in namespace services-6324 10/31/23 09:21:06.996
    I1031 09:21:07.059741      18 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-6324, replica count: 3
    I1031 09:21:10.112064      18 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Oct 31 09:21:10.265: INFO: Creating new exec pod
    Oct 31 09:21:10.405: INFO: Waiting up to 5m0s for pod "execpod-affinityptwsl" in namespace "services-6324" to be "running"
    Oct 31 09:21:10.415: INFO: Pod "execpod-affinityptwsl": Phase="Pending", Reason="", readiness=false. Elapsed: 9.391244ms
    Oct 31 09:21:12.447: INFO: Pod "execpod-affinityptwsl": Phase="Running", Reason="", readiness=true. Elapsed: 2.041324291s
    Oct 31 09:21:12.447: INFO: Pod "execpod-affinityptwsl" satisfied condition "running"
    Oct 31 09:21:13.507: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport-transition 80'
    Oct 31 09:21:14.438: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
    Oct 31 09:21:14.438: INFO: stdout: ""
    Oct 31 09:21:14.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c nc -v -z -w 2 10.93.225.53 80'
    Oct 31 09:21:15.414: INFO: stderr: "+ nc -v -z -w 2 10.93.225.53 80\nConnection to 10.93.225.53 80 port [tcp/http] succeeded!\n"
    Oct 31 09:21:15.414: INFO: stdout: ""
    Oct 31 09:21:15.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c nc -v -z -w 2 10.20.4.182 32224'
    Oct 31 09:21:16.328: INFO: stderr: "+ nc -v -z -w 2 10.20.4.182 32224\nConnection to 10.20.4.182 32224 port [tcp/*] succeeded!\n"
    Oct 31 09:21:16.328: INFO: stdout: ""
    Oct 31 09:21:16.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c nc -v -z -w 2 10.20.4.137 32224'
    Oct 31 09:21:17.219: INFO: stderr: "+ nc -v -z -w 2 10.20.4.137 32224\nConnection to 10.20.4.137 32224 port [tcp/*] succeeded!\n"
    Oct 31 09:21:17.219: INFO: stdout: ""
    Oct 31 09:21:17.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.20.4.137:32224/ ; done'
    Oct 31 09:21:18.432: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n"
    Oct 31 09:21:18.432: INFO: stdout: "\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4\naffinity-nodeport-transition-2txfj\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-d2jb4"
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-2txfj
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:18.433: INFO: Received response from host: affinity-nodeport-transition-d2jb4
    Oct 31 09:21:18.542: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6324 exec execpod-affinityptwsl -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.20.4.137:32224/ ; done'
    Oct 31 09:21:19.475: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:32224/\n"
    Oct 31 09:21:19.475: INFO: stdout: "\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52\naffinity-nodeport-transition-dfl52"
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Received response from host: affinity-nodeport-transition-dfl52
    Oct 31 09:21:19.475: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6324, will wait for the garbage collector to delete the pods 10/31/23 09:21:19.579
    Oct 31 09:21:19.731: INFO: Deleting ReplicationController affinity-nodeport-transition took: 39.170378ms
    Oct 31 09:21:19.933: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 201.791787ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:21:22.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6324" for this suite. 10/31/23 09:21:22.542
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:21:22.692
Oct 31 09:21:22.692: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename watch 10/31/23 09:21:22.693
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:22.837
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:22.972
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60
STEP: creating a watch on configmaps with label A 10/31/23 09:21:23.069
STEP: creating a watch on configmaps with label B 10/31/23 09:21:23.162
STEP: creating a watch on configmaps with label A or B 10/31/23 09:21:23.208
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 10/31/23 09:21:23.261
Oct 31 09:21:23.317: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11644 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 09:21:23.317: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11644 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification 10/31/23 09:21:23.318
Oct 31 09:21:23.474: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11645 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 09:21:23.474: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11645 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification 10/31/23 09:21:23.475
Oct 31 09:21:23.624: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11646 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 09:21:23.624: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11646 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification 10/31/23 09:21:23.624
Oct 31 09:21:23.678: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11647 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 09:21:23.678: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11647 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 10/31/23 09:21:23.678
Oct 31 09:21:23.769: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4047  4e0e4d65-ac4c-4ac1-b98a-5da1f7835604 11648 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 09:21:23.770: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4047  4e0e4d65-ac4c-4ac1-b98a-5da1f7835604 11648 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification 10/31/23 09:21:33.77
Oct 31 09:21:33.795: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4047  4e0e4d65-ac4c-4ac1-b98a-5da1f7835604 11712 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 09:21:33.795: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4047  4e0e4d65-ac4c-4ac1-b98a-5da1f7835604 11712 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Oct 31 09:21:43.796: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-4047" for this suite. 10/31/23 09:21:43.806
------------------------------
â€¢ [SLOW TEST] [21.170 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/apimachinery/watch.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:21:22.692
    Oct 31 09:21:22.692: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename watch 10/31/23 09:21:22.693
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:22.837
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:22.972
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe add, update, and delete watch notifications on configmaps [Conformance]
      test/e2e/apimachinery/watch.go:60
    STEP: creating a watch on configmaps with label A 10/31/23 09:21:23.069
    STEP: creating a watch on configmaps with label B 10/31/23 09:21:23.162
    STEP: creating a watch on configmaps with label A or B 10/31/23 09:21:23.208
    STEP: creating a configmap with label A and ensuring the correct watchers observe the notification 10/31/23 09:21:23.261
    Oct 31 09:21:23.317: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11644 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 09:21:23.317: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11644 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A and ensuring the correct watchers observe the notification 10/31/23 09:21:23.318
    Oct 31 09:21:23.474: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11645 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 09:21:23.474: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11645 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying configmap A again and ensuring the correct watchers observe the notification 10/31/23 09:21:23.475
    Oct 31 09:21:23.624: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11646 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 09:21:23.624: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11646 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap A and ensuring the correct watchers observe the notification 10/31/23 09:21:23.624
    Oct 31 09:21:23.678: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11647 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 09:21:23.678: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-4047  452fc880-5658-4db8-8dee-41ee45c7c648 11647 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: creating a configmap with label B and ensuring the correct watchers observe the notification 10/31/23 09:21:23.678
    Oct 31 09:21:23.769: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4047  4e0e4d65-ac4c-4ac1-b98a-5da1f7835604 11648 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 09:21:23.770: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4047  4e0e4d65-ac4c-4ac1-b98a-5da1f7835604 11648 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: deleting configmap B and ensuring the correct watchers observe the notification 10/31/23 09:21:33.77
    Oct 31 09:21:33.795: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4047  4e0e4d65-ac4c-4ac1-b98a-5da1f7835604 11712 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 09:21:33.795: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-4047  4e0e4d65-ac4c-4ac1-b98a-5da1f7835604 11712 0 2023-10-31 09:21:23 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-10-31 09:21:23 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:21:43.796: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-4047" for this suite. 10/31/23 09:21:43.806
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:21:43.864
Oct 31 09:21:43.864: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:21:43.865
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:44.05
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:44.233
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302
STEP: creating service nodeport-test with type=NodePort in namespace services-2585 10/31/23 09:21:44.287
STEP: creating replication controller nodeport-test in namespace services-2585 10/31/23 09:21:44.374
I1031 09:21:44.412183      18 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-2585, replica count: 2
I1031 09:21:47.513799      18 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Oct 31 09:21:47.513: INFO: Creating new exec pod
Oct 31 09:21:47.534: INFO: Waiting up to 5m0s for pod "execpodvhkbf" in namespace "services-2585" to be "running"
Oct 31 09:21:47.563: INFO: Pod "execpodvhkbf": Phase="Pending", Reason="", readiness=false. Elapsed: 29.027902ms
Oct 31 09:21:49.570: INFO: Pod "execpodvhkbf": Phase="Running", Reason="", readiness=true. Elapsed: 2.036186567s
Oct 31 09:21:49.570: INFO: Pod "execpodvhkbf" satisfied condition "running"
Oct 31 09:21:50.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2585 exec execpodvhkbf -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
Oct 31 09:21:51.630: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Oct 31 09:21:51.630: INFO: stdout: ""
Oct 31 09:21:51.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2585 exec execpodvhkbf -- /bin/sh -x -c nc -v -z -w 2 10.93.191.14 80'
Oct 31 09:21:52.688: INFO: stderr: "+ nc -v -z -w 2 10.93.191.14 80\nConnection to 10.93.191.14 80 port [tcp/http] succeeded!\n"
Oct 31 09:21:52.688: INFO: stdout: ""
Oct 31 09:21:52.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2585 exec execpodvhkbf -- /bin/sh -x -c nc -v -z -w 2 10.20.4.183 30528'
Oct 31 09:21:53.596: INFO: stderr: "+ nc -v -z -w 2 10.20.4.183 30528\nConnection to 10.20.4.183 30528 port [tcp/*] succeeded!\n"
Oct 31 09:21:53.596: INFO: stdout: ""
Oct 31 09:21:53.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2585 exec execpodvhkbf -- /bin/sh -x -c nc -v -z -w 2 10.20.4.137 30528'
Oct 31 09:21:54.464: INFO: stderr: "+ nc -v -z -w 2 10.20.4.137 30528\nConnection to 10.20.4.137 30528 port [tcp/*] succeeded!\n"
Oct 31 09:21:54.464: INFO: stdout: ""
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:21:54.464: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2585" for this suite. 10/31/23 09:21:54.517
------------------------------
â€¢ [SLOW TEST] [10.708 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/network/service.go:1302

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:21:43.864
    Oct 31 09:21:43.864: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:21:43.865
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:44.05
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:44.233
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to create a functioning NodePort service [Conformance]
      test/e2e/network/service.go:1302
    STEP: creating service nodeport-test with type=NodePort in namespace services-2585 10/31/23 09:21:44.287
    STEP: creating replication controller nodeport-test in namespace services-2585 10/31/23 09:21:44.374
    I1031 09:21:44.412183      18 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-2585, replica count: 2
    I1031 09:21:47.513799      18 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Oct 31 09:21:47.513: INFO: Creating new exec pod
    Oct 31 09:21:47.534: INFO: Waiting up to 5m0s for pod "execpodvhkbf" in namespace "services-2585" to be "running"
    Oct 31 09:21:47.563: INFO: Pod "execpodvhkbf": Phase="Pending", Reason="", readiness=false. Elapsed: 29.027902ms
    Oct 31 09:21:49.570: INFO: Pod "execpodvhkbf": Phase="Running", Reason="", readiness=true. Elapsed: 2.036186567s
    Oct 31 09:21:49.570: INFO: Pod "execpodvhkbf" satisfied condition "running"
    Oct 31 09:21:50.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2585 exec execpodvhkbf -- /bin/sh -x -c nc -v -z -w 2 nodeport-test 80'
    Oct 31 09:21:51.630: INFO: stderr: "+ nc -v -z -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
    Oct 31 09:21:51.630: INFO: stdout: ""
    Oct 31 09:21:51.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2585 exec execpodvhkbf -- /bin/sh -x -c nc -v -z -w 2 10.93.191.14 80'
    Oct 31 09:21:52.688: INFO: stderr: "+ nc -v -z -w 2 10.93.191.14 80\nConnection to 10.93.191.14 80 port [tcp/http] succeeded!\n"
    Oct 31 09:21:52.688: INFO: stdout: ""
    Oct 31 09:21:52.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2585 exec execpodvhkbf -- /bin/sh -x -c nc -v -z -w 2 10.20.4.183 30528'
    Oct 31 09:21:53.596: INFO: stderr: "+ nc -v -z -w 2 10.20.4.183 30528\nConnection to 10.20.4.183 30528 port [tcp/*] succeeded!\n"
    Oct 31 09:21:53.596: INFO: stdout: ""
    Oct 31 09:21:53.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2585 exec execpodvhkbf -- /bin/sh -x -c nc -v -z -w 2 10.20.4.137 30528'
    Oct 31 09:21:54.464: INFO: stderr: "+ nc -v -z -w 2 10.20.4.137 30528\nConnection to 10.20.4.137 30528 port [tcp/*] succeeded!\n"
    Oct 31 09:21:54.464: INFO: stdout: ""
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:21:54.464: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2585" for this suite. 10/31/23 09:21:54.517
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] DisruptionController
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:21:54.573
Oct 31 09:21:54.573: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename disruption 10/31/23 09:21:54.575
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:54.778
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:54.917
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108
STEP: creating the pdb 10/31/23 09:21:55.054
STEP: Waiting for the pdb to be processed 10/31/23 09:21:55.102
STEP: updating the pdb 10/31/23 09:21:55.2
STEP: Waiting for the pdb to be processed 10/31/23 09:21:55.381
STEP: patching the pdb 10/31/23 09:21:55.433
STEP: Waiting for the pdb to be processed 10/31/23 09:21:55.613
STEP: Waiting for the pdb to be deleted 10/31/23 09:21:55.833
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:21:55.841: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-8276" for this suite. 10/31/23 09:21:55.896
------------------------------
â€¢ [1.377 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/apps/disruption.go:108

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:21:54.573
    Oct 31 09:21:54.573: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename disruption 10/31/23 09:21:54.575
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:54.778
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:54.917
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should create a PodDisruptionBudget [Conformance]
      test/e2e/apps/disruption.go:108
    STEP: creating the pdb 10/31/23 09:21:55.054
    STEP: Waiting for the pdb to be processed 10/31/23 09:21:55.102
    STEP: updating the pdb 10/31/23 09:21:55.2
    STEP: Waiting for the pdb to be processed 10/31/23 09:21:55.381
    STEP: patching the pdb 10/31/23 09:21:55.433
    STEP: Waiting for the pdb to be processed 10/31/23 09:21:55.613
    STEP: Waiting for the pdb to be deleted 10/31/23 09:21:55.833
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:21:55.841: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-8276" for this suite. 10/31/23 09:21:55.896
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:21:55.95
Oct 31 09:21:55.951: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename var-expansion 10/31/23 09:21:55.952
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:56.103
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:56.248
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186
Oct 31 09:21:56.400: INFO: Waiting up to 2m0s for pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5" in namespace "var-expansion-7" to be "container 0 failed with reason CreateContainerConfigError"
Oct 31 09:21:56.416: INFO: Pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5": Phase="Pending", Reason="", readiness=false. Elapsed: 15.857518ms
Oct 31 09:21:58.426: INFO: Pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026440207s
Oct 31 09:21:58.427: INFO: Pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Oct 31 09:21:58.427: INFO: Deleting pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5" in namespace "var-expansion-7"
Oct 31 09:21:58.489: INFO: Wait up to 5m0s for pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:00.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-7" for this suite. 10/31/23 09:22:00.681
------------------------------
â€¢ [4.745 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/common/node/expansion.go:186

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:21:55.95
    Oct 31 09:21:55.951: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename var-expansion 10/31/23 09:21:55.952
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:21:56.103
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:21:56.248
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
      test/e2e/common/node/expansion.go:186
    Oct 31 09:21:56.400: INFO: Waiting up to 2m0s for pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5" in namespace "var-expansion-7" to be "container 0 failed with reason CreateContainerConfigError"
    Oct 31 09:21:56.416: INFO: Pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5": Phase="Pending", Reason="", readiness=false. Elapsed: 15.857518ms
    Oct 31 09:21:58.426: INFO: Pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026440207s
    Oct 31 09:21:58.427: INFO: Pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Oct 31 09:21:58.427: INFO: Deleting pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5" in namespace "var-expansion-7"
    Oct 31 09:21:58.489: INFO: Wait up to 5m0s for pod "var-expansion-d7060f64-fb84-4488-9510-37b5c7be4af5" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:00.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-7" for this suite. 10/31/23 09:22:00.681
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:00.702
Oct 31 09:22:00.702: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 09:22:00.703
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:00.844
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:01.069
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 09:22:01.288
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:22:01.994
STEP: Deploying the webhook pod 10/31/23 09:22:02.072
STEP: Wait for the deployment to be ready 10/31/23 09:22:02.235
Oct 31 09:22:02.445: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 22, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 22, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 22, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 22, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:22:04.458
STEP: Verifying the service has paired with the endpoint 10/31/23 09:22:04.533
Oct 31 09:22:05.535: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582
STEP: Listing all of the created validation webhooks 10/31/23 09:22:05.914
STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:22:07.12
STEP: Deleting the collection of validation webhooks 10/31/23 09:22:07.336
STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:22:07.405
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:07.545: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-1500" for this suite. 10/31/23 09:22:07.953
STEP: Destroying namespace "webhook-1500-markers" for this suite. 10/31/23 09:22:08.007
------------------------------
â€¢ [SLOW TEST] [7.420 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:582

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:00.702
    Oct 31 09:22:00.702: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 09:22:00.703
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:00.844
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:01.069
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 09:22:01.288
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:22:01.994
    STEP: Deploying the webhook pod 10/31/23 09:22:02.072
    STEP: Wait for the deployment to be ready 10/31/23 09:22:02.235
    Oct 31 09:22:02.445: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 22, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 22, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 22, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 22, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:22:04.458
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:22:04.533
    Oct 31 09:22:05.535: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing validating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:582
    STEP: Listing all of the created validation webhooks 10/31/23 09:22:05.914
    STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:22:07.12
    STEP: Deleting the collection of validation webhooks 10/31/23 09:22:07.336
    STEP: Creating a configMap that does not comply to the validation webhook rules 10/31/23 09:22:07.405
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:07.545: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-1500" for this suite. 10/31/23 09:22:07.953
    STEP: Destroying namespace "webhook-1500-markers" for this suite. 10/31/23 09:22:08.007
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:08.127
Oct 31 09:22:08.128: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename csiinlinevolumes 10/31/23 09:22:08.129
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:08.295
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:08.435
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46
STEP: creating 10/31/23 09:22:08.634
STEP: getting 10/31/23 09:22:08.827
STEP: listing 10/31/23 09:22:08.938
STEP: deleting 10/31/23 09:22:08.986
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:09.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-3404" for this suite. 10/31/23 09:22:09.364
------------------------------
â€¢ [1.300 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
  test/e2e/storage/csi_inline.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:08.127
    Oct 31 09:22:08.128: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename csiinlinevolumes 10/31/23 09:22:08.129
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:08.295
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:08.435
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support ephemeral VolumeLifecycleMode in CSIDriver API [Conformance]
      test/e2e/storage/csi_inline.go:46
    STEP: creating 10/31/23 09:22:08.634
    STEP: getting 10/31/23 09:22:08.827
    STEP: listing 10/31/23 09:22:08.938
    STEP: deleting 10/31/23 09:22:08.986
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:09.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-3404" for this suite. 10/31/23 09:22:09.364
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:09.43
Oct 31 09:22:09.430: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:22:09.431
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:09.628
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:09.764
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74
STEP: Creating configMap with name projected-configmap-test-volume-bf721bba-e903-43f7-9f09-fe0bdf0210f1 10/31/23 09:22:09.873
STEP: Creating a pod to test consume configMaps 10/31/23 09:22:09.92
Oct 31 09:22:10.095: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459" in namespace "projected-5214" to be "Succeeded or Failed"
Oct 31 09:22:10.121: INFO: Pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459": Phase="Pending", Reason="", readiness=false. Elapsed: 26.574871ms
Oct 31 09:22:12.129: INFO: Pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034662658s
Oct 31 09:22:14.129: INFO: Pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033972354s
STEP: Saw pod success 10/31/23 09:22:14.129
Oct 31 09:22:14.129: INFO: Pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459" satisfied condition "Succeeded or Failed"
Oct 31 09:22:14.207: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:22:14.345
Oct 31 09:22:14.427: INFO: Waiting for pod pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459 to disappear
Oct 31 09:22:14.512: INFO: Pod pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:14.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5214" for this suite. 10/31/23 09:22:14.563
------------------------------
â€¢ [SLOW TEST] [5.234 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:74

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:09.43
    Oct 31 09:22:09.430: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:22:09.431
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:09.628
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:09.764
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:74
    STEP: Creating configMap with name projected-configmap-test-volume-bf721bba-e903-43f7-9f09-fe0bdf0210f1 10/31/23 09:22:09.873
    STEP: Creating a pod to test consume configMaps 10/31/23 09:22:09.92
    Oct 31 09:22:10.095: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459" in namespace "projected-5214" to be "Succeeded or Failed"
    Oct 31 09:22:10.121: INFO: Pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459": Phase="Pending", Reason="", readiness=false. Elapsed: 26.574871ms
    Oct 31 09:22:12.129: INFO: Pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034662658s
    Oct 31 09:22:14.129: INFO: Pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033972354s
    STEP: Saw pod success 10/31/23 09:22:14.129
    Oct 31 09:22:14.129: INFO: Pod "pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459" satisfied condition "Succeeded or Failed"
    Oct 31 09:22:14.207: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:22:14.345
    Oct 31 09:22:14.427: INFO: Waiting for pod pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459 to disappear
    Oct 31 09:22:14.512: INFO: Pod pod-projected-configmaps-3e5fb3c4-0c58-4f85-81dc-80465e344459 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:14.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5214" for this suite. 10/31/23 09:22:14.563
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:14.668
Oct 31 09:22:14.669: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 09:22:14.67
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:14.854
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:14.967
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79
STEP: Creating secret with name secret-test-map-b90b817e-826f-411a-ba47-7e454e66d052 10/31/23 09:22:15.104
STEP: Creating a pod to test consume secrets 10/31/23 09:22:15.152
Oct 31 09:22:15.216: INFO: Waiting up to 5m0s for pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696" in namespace "secrets-9843" to be "Succeeded or Failed"
Oct 31 09:22:15.309: INFO: Pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696": Phase="Pending", Reason="", readiness=false. Elapsed: 92.705723ms
Oct 31 09:22:17.317: INFO: Pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696": Phase="Pending", Reason="", readiness=false. Elapsed: 2.100707506s
Oct 31 09:22:19.318: INFO: Pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.10132821s
STEP: Saw pod success 10/31/23 09:22:19.318
Oct 31 09:22:19.318: INFO: Pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696" satisfied condition "Succeeded or Failed"
Oct 31 09:22:19.369: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696 container secret-volume-test: <nil>
STEP: delete the pod 10/31/23 09:22:19.47
Oct 31 09:22:19.536: INFO: Waiting for pod pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696 to disappear
Oct 31 09:22:19.624: INFO: Pod pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:19.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-9843" for this suite. 10/31/23 09:22:19.678
------------------------------
â€¢ [SLOW TEST] [5.069 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:79

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:14.668
    Oct 31 09:22:14.669: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 09:22:14.67
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:14.854
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:14.967
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:79
    STEP: Creating secret with name secret-test-map-b90b817e-826f-411a-ba47-7e454e66d052 10/31/23 09:22:15.104
    STEP: Creating a pod to test consume secrets 10/31/23 09:22:15.152
    Oct 31 09:22:15.216: INFO: Waiting up to 5m0s for pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696" in namespace "secrets-9843" to be "Succeeded or Failed"
    Oct 31 09:22:15.309: INFO: Pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696": Phase="Pending", Reason="", readiness=false. Elapsed: 92.705723ms
    Oct 31 09:22:17.317: INFO: Pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696": Phase="Pending", Reason="", readiness=false. Elapsed: 2.100707506s
    Oct 31 09:22:19.318: INFO: Pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.10132821s
    STEP: Saw pod success 10/31/23 09:22:19.318
    Oct 31 09:22:19.318: INFO: Pod "pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696" satisfied condition "Succeeded or Failed"
    Oct 31 09:22:19.369: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696 container secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 09:22:19.47
    Oct 31 09:22:19.536: INFO: Waiting for pod pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696 to disappear
    Oct 31 09:22:19.624: INFO: Pod pod-secrets-0fc5acb4-1171-4ea9-b74e-d2e6236c5696 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:19.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-9843" for this suite. 10/31/23 09:22:19.678
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:19.741
Oct 31 09:22:19.741: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename var-expansion 10/31/23 09:22:19.745
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:19.93
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:20.068
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152
Oct 31 09:22:20.163: INFO: Waiting up to 2m0s for pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867" in namespace "var-expansion-5269" to be "container 0 failed with reason CreateContainerConfigError"
Oct 31 09:22:20.181: INFO: Pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867": Phase="Pending", Reason="", readiness=false. Elapsed: 17.887629ms
Oct 31 09:22:22.190: INFO: Pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026790286s
Oct 31 09:22:22.190: INFO: Pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867" satisfied condition "container 0 failed with reason CreateContainerConfigError"
Oct 31 09:22:22.190: INFO: Deleting pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867" in namespace "var-expansion-5269"
Oct 31 09:22:22.245: INFO: Wait up to 5m0s for pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:24.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-5269" for this suite. 10/31/23 09:22:24.329
------------------------------
â€¢ [4.601 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/common/node/expansion.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:19.741
    Oct 31 09:22:19.741: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename var-expansion 10/31/23 09:22:19.745
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:19.93
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:20.068
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
      test/e2e/common/node/expansion.go:152
    Oct 31 09:22:20.163: INFO: Waiting up to 2m0s for pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867" in namespace "var-expansion-5269" to be "container 0 failed with reason CreateContainerConfigError"
    Oct 31 09:22:20.181: INFO: Pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867": Phase="Pending", Reason="", readiness=false. Elapsed: 17.887629ms
    Oct 31 09:22:22.190: INFO: Pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026790286s
    Oct 31 09:22:22.190: INFO: Pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867" satisfied condition "container 0 failed with reason CreateContainerConfigError"
    Oct 31 09:22:22.190: INFO: Deleting pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867" in namespace "var-expansion-5269"
    Oct 31 09:22:22.245: INFO: Wait up to 5m0s for pod "var-expansion-3cdbca05-63ae-44a0-a127-864b2e6d5867" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:24.268: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-5269" for this suite. 10/31/23 09:22:24.329
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:24.352
Oct 31 09:22:24.352: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replicaset 10/31/23 09:22:24.353
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:24.534
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:24.671
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176
STEP: Create a Replicaset 10/31/23 09:22:24.86
STEP: Verify that the required pods have come up. 10/31/23 09:22:24.924
Oct 31 09:22:24.973: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 10/31/23 09:22:24.973
Oct 31 09:22:24.974: INFO: Waiting up to 5m0s for pod "test-rs-4zbsg" in namespace "replicaset-6661" to be "running"
Oct 31 09:22:24.986: INFO: Pod "test-rs-4zbsg": Phase="Pending", Reason="", readiness=false. Elapsed: 12.638845ms
Oct 31 09:22:26.994: INFO: Pod "test-rs-4zbsg": Phase="Running", Reason="", readiness=true. Elapsed: 2.020012367s
Oct 31 09:22:26.994: INFO: Pod "test-rs-4zbsg" satisfied condition "running"
STEP: Getting /status 10/31/23 09:22:26.994
Oct 31 09:22:27.042: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status 10/31/23 09:22:27.042
Oct 31 09:22:27.148: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated 10/31/23 09:22:27.148
Oct 31 09:22:27.197: INFO: Observed &ReplicaSet event: ADDED
Oct 31 09:22:27.197: INFO: Observed &ReplicaSet event: MODIFIED
Oct 31 09:22:27.198: INFO: Observed &ReplicaSet event: MODIFIED
Oct 31 09:22:27.198: INFO: Observed &ReplicaSet event: MODIFIED
Oct 31 09:22:27.198: INFO: Found replicaset test-rs in namespace replicaset-6661 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Oct 31 09:22:27.198: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status 10/31/23 09:22:27.199
Oct 31 09:22:27.199: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Oct 31 09:22:27.255: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched 10/31/23 09:22:27.255
Oct 31 09:22:27.270: INFO: Observed &ReplicaSet event: ADDED
Oct 31 09:22:27.270: INFO: Observed &ReplicaSet event: MODIFIED
Oct 31 09:22:27.270: INFO: Observed &ReplicaSet event: MODIFIED
Oct 31 09:22:27.271: INFO: Observed &ReplicaSet event: MODIFIED
Oct 31 09:22:27.271: INFO: Observed replicaset test-rs in namespace replicaset-6661 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Oct 31 09:22:27.271: INFO: Observed &ReplicaSet event: MODIFIED
Oct 31 09:22:27.271: INFO: Found replicaset test-rs in namespace replicaset-6661 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Oct 31 09:22:27.271: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:27.272: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-6661" for this suite. 10/31/23 09:22:27.345
------------------------------
â€¢ [3.046 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/apps/replica_set.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:24.352
    Oct 31 09:22:24.352: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replicaset 10/31/23 09:22:24.353
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:24.534
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:24.671
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should validate Replicaset Status endpoints [Conformance]
      test/e2e/apps/replica_set.go:176
    STEP: Create a Replicaset 10/31/23 09:22:24.86
    STEP: Verify that the required pods have come up. 10/31/23 09:22:24.924
    Oct 31 09:22:24.973: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 10/31/23 09:22:24.973
    Oct 31 09:22:24.974: INFO: Waiting up to 5m0s for pod "test-rs-4zbsg" in namespace "replicaset-6661" to be "running"
    Oct 31 09:22:24.986: INFO: Pod "test-rs-4zbsg": Phase="Pending", Reason="", readiness=false. Elapsed: 12.638845ms
    Oct 31 09:22:26.994: INFO: Pod "test-rs-4zbsg": Phase="Running", Reason="", readiness=true. Elapsed: 2.020012367s
    Oct 31 09:22:26.994: INFO: Pod "test-rs-4zbsg" satisfied condition "running"
    STEP: Getting /status 10/31/23 09:22:26.994
    Oct 31 09:22:27.042: INFO: Replicaset test-rs has Conditions: []
    STEP: updating the Replicaset Status 10/31/23 09:22:27.042
    Oct 31 09:22:27.148: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the ReplicaSet status to be updated 10/31/23 09:22:27.148
    Oct 31 09:22:27.197: INFO: Observed &ReplicaSet event: ADDED
    Oct 31 09:22:27.197: INFO: Observed &ReplicaSet event: MODIFIED
    Oct 31 09:22:27.198: INFO: Observed &ReplicaSet event: MODIFIED
    Oct 31 09:22:27.198: INFO: Observed &ReplicaSet event: MODIFIED
    Oct 31 09:22:27.198: INFO: Found replicaset test-rs in namespace replicaset-6661 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Oct 31 09:22:27.198: INFO: Replicaset test-rs has an updated status
    STEP: patching the Replicaset Status 10/31/23 09:22:27.199
    Oct 31 09:22:27.199: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Oct 31 09:22:27.255: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Replicaset status to be patched 10/31/23 09:22:27.255
    Oct 31 09:22:27.270: INFO: Observed &ReplicaSet event: ADDED
    Oct 31 09:22:27.270: INFO: Observed &ReplicaSet event: MODIFIED
    Oct 31 09:22:27.270: INFO: Observed &ReplicaSet event: MODIFIED
    Oct 31 09:22:27.271: INFO: Observed &ReplicaSet event: MODIFIED
    Oct 31 09:22:27.271: INFO: Observed replicaset test-rs in namespace replicaset-6661 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Oct 31 09:22:27.271: INFO: Observed &ReplicaSet event: MODIFIED
    Oct 31 09:22:27.271: INFO: Found replicaset test-rs in namespace replicaset-6661 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
    Oct 31 09:22:27.271: INFO: Replicaset test-rs has a patched status
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:27.272: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-6661" for this suite. 10/31/23 09:22:27.345
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Downward API
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:27.398
Oct 31 09:22:27.399: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:22:27.399
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:27.6
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:27.695
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267
STEP: Creating a pod to test downward api env vars 10/31/23 09:22:27.833
Oct 31 09:22:27.852: INFO: Waiting up to 5m0s for pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68" in namespace "downward-api-1785" to be "Succeeded or Failed"
Oct 31 09:22:27.907: INFO: Pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68": Phase="Pending", Reason="", readiness=false. Elapsed: 55.137924ms
Oct 31 09:22:29.970: INFO: Pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68": Phase="Running", Reason="", readiness=false. Elapsed: 2.117829158s
Oct 31 09:22:31.917: INFO: Pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.065500745s
STEP: Saw pod success 10/31/23 09:22:31.917
Oct 31 09:22:31.918: INFO: Pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68" satisfied condition "Succeeded or Failed"
Oct 31 09:22:31.965: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68 container dapi-container: <nil>
STEP: delete the pod 10/31/23 09:22:32.144
Oct 31 09:22:32.218: INFO: Waiting for pod downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68 to disappear
Oct 31 09:22:32.310: INFO: Pod downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:32.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-1785" for this suite. 10/31/23 09:22:32.364
------------------------------
â€¢ [SLOW TEST] [5.021 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:267

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:27.398
    Oct 31 09:22:27.399: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:22:27.399
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:27.6
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:27.695
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod UID as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:267
    STEP: Creating a pod to test downward api env vars 10/31/23 09:22:27.833
    Oct 31 09:22:27.852: INFO: Waiting up to 5m0s for pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68" in namespace "downward-api-1785" to be "Succeeded or Failed"
    Oct 31 09:22:27.907: INFO: Pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68": Phase="Pending", Reason="", readiness=false. Elapsed: 55.137924ms
    Oct 31 09:22:29.970: INFO: Pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68": Phase="Running", Reason="", readiness=false. Elapsed: 2.117829158s
    Oct 31 09:22:31.917: INFO: Pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.065500745s
    STEP: Saw pod success 10/31/23 09:22:31.917
    Oct 31 09:22:31.918: INFO: Pod "downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68" satisfied condition "Succeeded or Failed"
    Oct 31 09:22:31.965: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68 container dapi-container: <nil>
    STEP: delete the pod 10/31/23 09:22:32.144
    Oct 31 09:22:32.218: INFO: Waiting for pod downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68 to disappear
    Oct 31 09:22:32.310: INFO: Pod downward-api-68b4be57-6d95-49f0-9a8d-e362984e1d68 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:32.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-1785" for this suite. 10/31/23 09:22:32.364
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:32.421
Oct 31 09:22:32.421: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:22:32.423
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:32.632
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:32.769
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557
STEP: creating a service nodeport-service with the type=NodePort in namespace services-7875 10/31/23 09:22:32.888
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 10/31/23 09:22:32.924
STEP: creating service externalsvc in namespace services-7875 10/31/23 09:22:32.924
STEP: creating replication controller externalsvc in namespace services-7875 10/31/23 09:22:33.025
I1031 09:22:33.101895      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7875, replica count: 2
I1031 09:22:36.153082      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName 10/31/23 09:22:36.2
Oct 31 09:22:36.376: INFO: Creating new exec pod
Oct 31 09:22:36.437: INFO: Waiting up to 5m0s for pod "execpod6wdzm" in namespace "services-7875" to be "running"
Oct 31 09:22:36.457: INFO: Pod "execpod6wdzm": Phase="Pending", Reason="", readiness=false. Elapsed: 19.987406ms
Oct 31 09:22:38.465: INFO: Pod "execpod6wdzm": Phase="Running", Reason="", readiness=true. Elapsed: 2.028131516s
Oct 31 09:22:38.465: INFO: Pod "execpod6wdzm" satisfied condition "running"
Oct 31 09:22:38.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7875 exec execpod6wdzm -- /bin/sh -x -c nslookup nodeport-service.services-7875.svc.cluster.local'
Oct 31 09:22:39.321: INFO: stderr: "+ nslookup nodeport-service.services-7875.svc.cluster.local\n"
Oct 31 09:22:39.321: INFO: stdout: "Server:\t\t10.93.0.10\nAddress:\t10.93.0.10#53\n\nnodeport-service.services-7875.svc.cluster.local\tcanonical name = externalsvc.services-7875.svc.cluster.local.\nName:\texternalsvc.services-7875.svc.cluster.local\nAddress: 10.93.49.73\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-7875, will wait for the garbage collector to delete the pods 10/31/23 09:22:39.321
Oct 31 09:22:39.520: INFO: Deleting ReplicationController externalsvc took: 48.215033ms
Oct 31 09:22:39.624: INFO: Terminating ReplicationController externalsvc pods took: 103.9428ms
Oct 31 09:22:41.993: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:42.092: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-7875" for this suite. 10/31/23 09:22:42.111
------------------------------
â€¢ [SLOW TEST] [9.747 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/network/service.go:1557

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:32.421
    Oct 31 09:22:32.421: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:22:32.423
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:32.632
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:32.769
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from NodePort to ExternalName [Conformance]
      test/e2e/network/service.go:1557
    STEP: creating a service nodeport-service with the type=NodePort in namespace services-7875 10/31/23 09:22:32.888
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 10/31/23 09:22:32.924
    STEP: creating service externalsvc in namespace services-7875 10/31/23 09:22:32.924
    STEP: creating replication controller externalsvc in namespace services-7875 10/31/23 09:22:33.025
    I1031 09:22:33.101895      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7875, replica count: 2
    I1031 09:22:36.153082      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the NodePort service to type=ExternalName 10/31/23 09:22:36.2
    Oct 31 09:22:36.376: INFO: Creating new exec pod
    Oct 31 09:22:36.437: INFO: Waiting up to 5m0s for pod "execpod6wdzm" in namespace "services-7875" to be "running"
    Oct 31 09:22:36.457: INFO: Pod "execpod6wdzm": Phase="Pending", Reason="", readiness=false. Elapsed: 19.987406ms
    Oct 31 09:22:38.465: INFO: Pod "execpod6wdzm": Phase="Running", Reason="", readiness=true. Elapsed: 2.028131516s
    Oct 31 09:22:38.465: INFO: Pod "execpod6wdzm" satisfied condition "running"
    Oct 31 09:22:38.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-7875 exec execpod6wdzm -- /bin/sh -x -c nslookup nodeport-service.services-7875.svc.cluster.local'
    Oct 31 09:22:39.321: INFO: stderr: "+ nslookup nodeport-service.services-7875.svc.cluster.local\n"
    Oct 31 09:22:39.321: INFO: stdout: "Server:\t\t10.93.0.10\nAddress:\t10.93.0.10#53\n\nnodeport-service.services-7875.svc.cluster.local\tcanonical name = externalsvc.services-7875.svc.cluster.local.\nName:\texternalsvc.services-7875.svc.cluster.local\nAddress: 10.93.49.73\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-7875, will wait for the garbage collector to delete the pods 10/31/23 09:22:39.321
    Oct 31 09:22:39.520: INFO: Deleting ReplicationController externalsvc took: 48.215033ms
    Oct 31 09:22:39.624: INFO: Terminating ReplicationController externalsvc pods took: 103.9428ms
    Oct 31 09:22:41.993: INFO: Cleaning up the NodePort to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:42.092: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-7875" for this suite. 10/31/23 09:22:42.111
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Downward API
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:42.168
Oct 31 09:22:42.168: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:22:42.17
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:42.343
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:42.446
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44
STEP: Creating a pod to test downward api env vars 10/31/23 09:22:42.548
Oct 31 09:22:42.614: INFO: Waiting up to 5m0s for pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836" in namespace "downward-api-6681" to be "Succeeded or Failed"
Oct 31 09:22:42.667: INFO: Pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836": Phase="Pending", Reason="", readiness=false. Elapsed: 52.510895ms
Oct 31 09:22:44.676: INFO: Pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836": Phase="Pending", Reason="", readiness=false. Elapsed: 2.06211165s
Oct 31 09:22:46.675: INFO: Pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.06141642s
STEP: Saw pod success 10/31/23 09:22:46.675
Oct 31 09:22:46.676: INFO: Pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836" satisfied condition "Succeeded or Failed"
Oct 31 09:22:46.726: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836 container dapi-container: <nil>
STEP: delete the pod 10/31/23 09:22:46.877
Oct 31 09:22:46.939: INFO: Waiting for pod downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836 to disappear
Oct 31 09:22:47.024: INFO: Pod downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:47.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-6681" for this suite. 10/31/23 09:22:47.078
------------------------------
â€¢ [4.964 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:42.168
    Oct 31 09:22:42.168: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:22:42.17
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:42.343
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:42.446
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:44
    STEP: Creating a pod to test downward api env vars 10/31/23 09:22:42.548
    Oct 31 09:22:42.614: INFO: Waiting up to 5m0s for pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836" in namespace "downward-api-6681" to be "Succeeded or Failed"
    Oct 31 09:22:42.667: INFO: Pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836": Phase="Pending", Reason="", readiness=false. Elapsed: 52.510895ms
    Oct 31 09:22:44.676: INFO: Pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836": Phase="Pending", Reason="", readiness=false. Elapsed: 2.06211165s
    Oct 31 09:22:46.675: INFO: Pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.06141642s
    STEP: Saw pod success 10/31/23 09:22:46.675
    Oct 31 09:22:46.676: INFO: Pod "downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836" satisfied condition "Succeeded or Failed"
    Oct 31 09:22:46.726: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836 container dapi-container: <nil>
    STEP: delete the pod 10/31/23 09:22:46.877
    Oct 31 09:22:46.939: INFO: Waiting for pod downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836 to disappear
    Oct 31 09:22:47.024: INFO: Pod downward-api-ad8e1321-7dda-49cd-841f-cf8f21e88836 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:47.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-6681" for this suite. 10/31/23 09:22:47.078
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:47.148
Oct 31 09:22:47.149: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename security-context-test 10/31/23 09:22:47.15
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:47.349
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:47.463
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:528
Oct 31 09:22:47.610: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84" in namespace "security-context-test-5663" to be "Succeeded or Failed"
Oct 31 09:22:47.626: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": Phase="Pending", Reason="", readiness=false. Elapsed: 15.99496ms
Oct 31 09:22:49.652: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": Phase="Running", Reason="", readiness=true. Elapsed: 2.042210416s
Oct 31 09:22:51.640: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": Phase="Running", Reason="", readiness=false. Elapsed: 4.030591297s
Oct 31 09:22:53.637: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.027516732s
Oct 31 09:22:53.637: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84" satisfied condition "Succeeded or Failed"
Oct 31 09:22:53.779: INFO: Got logs for pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:53.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-5663" for this suite. 10/31/23 09:22:53.837
------------------------------
â€¢ [SLOW TEST] [6.744 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with privileged
  test/e2e/common/node/security_context.go:491
    should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:528

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:47.148
    Oct 31 09:22:47.149: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename security-context-test 10/31/23 09:22:47.15
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:47.349
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:47.463
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:528
    Oct 31 09:22:47.610: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84" in namespace "security-context-test-5663" to be "Succeeded or Failed"
    Oct 31 09:22:47.626: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": Phase="Pending", Reason="", readiness=false. Elapsed: 15.99496ms
    Oct 31 09:22:49.652: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": Phase="Running", Reason="", readiness=true. Elapsed: 2.042210416s
    Oct 31 09:22:51.640: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": Phase="Running", Reason="", readiness=false. Elapsed: 4.030591297s
    Oct 31 09:22:53.637: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.027516732s
    Oct 31 09:22:53.637: INFO: Pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84" satisfied condition "Succeeded or Failed"
    Oct 31 09:22:53.779: INFO: Got logs for pod "busybox-privileged-false-3027499e-fe16-425f-993e-669a67455b84": "ip: RTNETLINK answers: Operation not permitted\n"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:53.780: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-5663" for this suite. 10/31/23 09:22:53.837
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:53.898
Oct 31 09:22:53.898: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename endpointslice 10/31/23 09:22:53.899
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:54.164
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:54.34
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66
Oct 31 09:22:54.626: INFO: Endpoints addresses: [10.99.0.2 10.99.0.3] , ports: [6443]
Oct 31 09:22:54.626: INFO: EndpointSlices addresses: [10.99.0.2 10.99.0.3] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Oct 31 09:22:54.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-4340" for this suite. 10/31/23 09:22:54.705
------------------------------
â€¢ [0.824 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/network/endpointslice.go:66

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:53.898
    Oct 31 09:22:53.898: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename endpointslice 10/31/23 09:22:53.899
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:54.164
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:54.34
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
      test/e2e/network/endpointslice.go:66
    Oct 31 09:22:54.626: INFO: Endpoints addresses: [10.99.0.2 10.99.0.3] , ports: [6443]
    Oct 31 09:22:54.626: INFO: EndpointSlices addresses: [10.99.0.2 10.99.0.3] , ports: [6443]
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:22:54.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-4340" for this suite. 10/31/23 09:22:54.705
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Downward API volume
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:22:54.723
Oct 31 09:22:54.724: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:22:54.726
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:54.91
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:55.031
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130
STEP: Creating the pod 10/31/23 09:22:55.132
Oct 31 09:22:55.197: INFO: Waiting up to 5m0s for pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286" in namespace "downward-api-3108" to be "running and ready"
Oct 31 09:22:55.248: INFO: Pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286": Phase="Pending", Reason="", readiness=false. Elapsed: 50.498529ms
Oct 31 09:22:55.248: INFO: The phase of Pod labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:22:57.285: INFO: Pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286": Phase="Running", Reason="", readiness=true. Elapsed: 2.088234117s
Oct 31 09:22:57.285: INFO: The phase of Pod labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286 is Running (Ready = true)
Oct 31 09:22:57.286: INFO: Pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286" satisfied condition "running and ready"
Oct 31 09:22:57.955: INFO: Successfully updated pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 09:23:00.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3108" for this suite. 10/31/23 09:23:00.18
------------------------------
â€¢ [SLOW TEST] [5.512 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:22:54.723
    Oct 31 09:22:54.724: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:22:54.726
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:22:54.91
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:22:55.031
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:130
    STEP: Creating the pod 10/31/23 09:22:55.132
    Oct 31 09:22:55.197: INFO: Waiting up to 5m0s for pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286" in namespace "downward-api-3108" to be "running and ready"
    Oct 31 09:22:55.248: INFO: Pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286": Phase="Pending", Reason="", readiness=false. Elapsed: 50.498529ms
    Oct 31 09:22:55.248: INFO: The phase of Pod labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:22:57.285: INFO: Pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286": Phase="Running", Reason="", readiness=true. Elapsed: 2.088234117s
    Oct 31 09:22:57.285: INFO: The phase of Pod labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286 is Running (Ready = true)
    Oct 31 09:22:57.286: INFO: Pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286" satisfied condition "running and ready"
    Oct 31 09:22:57.955: INFO: Successfully updated pod "labelsupdate88bd02ae-1e5a-4e4d-8f1b-1ceef98eb286"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:23:00.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3108" for this suite. 10/31/23 09:23:00.18
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:23:00.241
Oct 31 09:23:00.241: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:23:00.243
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:00.528
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:00.62
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215
STEP: Creating secret with name s-test-opt-del-817cc155-255d-4200-a9ce-1d44ef527da2 10/31/23 09:23:00.739
STEP: Creating secret with name s-test-opt-upd-4fa2b4bc-801f-42ca-a6fc-53c61711d5b5 10/31/23 09:23:00.795
STEP: Creating the pod 10/31/23 09:23:00.887
Oct 31 09:23:00.904: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d" in namespace "projected-7867" to be "running and ready"
Oct 31 09:23:00.917: INFO: Pod "pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d": Phase="Pending", Reason="", readiness=false. Elapsed: 12.90061ms
Oct 31 09:23:00.917: INFO: The phase of Pod pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:23:02.927: INFO: Pod "pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d": Phase="Running", Reason="", readiness=true. Elapsed: 2.022766626s
Oct 31 09:23:02.927: INFO: The phase of Pod pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d is Running (Ready = true)
Oct 31 09:23:02.927: INFO: Pod "pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-817cc155-255d-4200-a9ce-1d44ef527da2 10/31/23 09:23:03.46
STEP: Updating secret s-test-opt-upd-4fa2b4bc-801f-42ca-a6fc-53c61711d5b5 10/31/23 09:23:03.577
STEP: Creating secret with name s-test-opt-create-9dc90499-17e5-4475-8c9c-641d7c6c498c 10/31/23 09:23:03.634
STEP: waiting to observe update in volume 10/31/23 09:23:03.765
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Oct 31 09:23:06.191: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7867" for this suite. 10/31/23 09:23:06.245
------------------------------
â€¢ [SLOW TEST] [6.022 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:23:00.241
    Oct 31 09:23:00.241: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:23:00.243
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:00.528
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:00.62
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:215
    STEP: Creating secret with name s-test-opt-del-817cc155-255d-4200-a9ce-1d44ef527da2 10/31/23 09:23:00.739
    STEP: Creating secret with name s-test-opt-upd-4fa2b4bc-801f-42ca-a6fc-53c61711d5b5 10/31/23 09:23:00.795
    STEP: Creating the pod 10/31/23 09:23:00.887
    Oct 31 09:23:00.904: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d" in namespace "projected-7867" to be "running and ready"
    Oct 31 09:23:00.917: INFO: Pod "pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d": Phase="Pending", Reason="", readiness=false. Elapsed: 12.90061ms
    Oct 31 09:23:00.917: INFO: The phase of Pod pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:23:02.927: INFO: Pod "pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d": Phase="Running", Reason="", readiness=true. Elapsed: 2.022766626s
    Oct 31 09:23:02.927: INFO: The phase of Pod pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d is Running (Ready = true)
    Oct 31 09:23:02.927: INFO: Pod "pod-projected-secrets-434e17bd-ba7b-4b2d-9798-72ab6b29712d" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-817cc155-255d-4200-a9ce-1d44ef527da2 10/31/23 09:23:03.46
    STEP: Updating secret s-test-opt-upd-4fa2b4bc-801f-42ca-a6fc-53c61711d5b5 10/31/23 09:23:03.577
    STEP: Creating secret with name s-test-opt-create-9dc90499-17e5-4475-8c9c-641d7c6c498c 10/31/23 09:23:03.634
    STEP: waiting to observe update in volume 10/31/23 09:23:03.765
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:23:06.191: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7867" for this suite. 10/31/23 09:23:06.245
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:23:06.266
Oct 31 09:23:06.266: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 09:23:06.267
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:06.374
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:06.515
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 09:23:06.731
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:23:07.501
STEP: Deploying the webhook pod 10/31/23 09:23:07.592
STEP: Wait for the deployment to be ready 10/31/23 09:23:07.663
Oct 31 09:23:07.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 23, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 23, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:23:09.889
STEP: Verifying the service has paired with the endpoint 10/31/23 09:23:09.959
Oct 31 09:23:10.959: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656
STEP: Listing all of the created validation webhooks 10/31/23 09:23:11.171
STEP: Creating a configMap that should be mutated 10/31/23 09:23:12.437
STEP: Deleting the collection of validation webhooks 10/31/23 09:23:13.188
STEP: Creating a configMap that should not be mutated 10/31/23 09:23:13.483
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:23:13.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6173" for this suite. 10/31/23 09:23:13.935
STEP: Destroying namespace "webhook-6173-markers" for this suite. 10/31/23 09:23:13.996
------------------------------
â€¢ [SLOW TEST] [7.784 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing mutating webhooks should work [Conformance]
  test/e2e/apimachinery/webhook.go:656

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:23:06.266
    Oct 31 09:23:06.266: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 09:23:06.267
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:06.374
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:06.515
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 09:23:06.731
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:23:07.501
    STEP: Deploying the webhook pod 10/31/23 09:23:07.592
    STEP: Wait for the deployment to be ready 10/31/23 09:23:07.663
    Oct 31 09:23:07.882: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 23, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 23, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:23:09.889
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:23:09.959
    Oct 31 09:23:10.959: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] listing mutating webhooks should work [Conformance]
      test/e2e/apimachinery/webhook.go:656
    STEP: Listing all of the created validation webhooks 10/31/23 09:23:11.171
    STEP: Creating a configMap that should be mutated 10/31/23 09:23:12.437
    STEP: Deleting the collection of validation webhooks 10/31/23 09:23:13.188
    STEP: Creating a configMap that should not be mutated 10/31/23 09:23:13.483
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:23:13.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6173" for this suite. 10/31/23 09:23:13.935
    STEP: Destroying namespace "webhook-6173-markers" for this suite. 10/31/23 09:23:13.996
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] DisruptionController
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:23:14.051
Oct 31 09:23:14.051: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename disruption 10/31/23 09:23:14.053
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:14.245
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:14.423
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347
STEP: Creating a pdb that targets all three pods in a test replica set 10/31/23 09:23:14.56
STEP: Waiting for the pdb to be processed 10/31/23 09:23:14.647
STEP: First trying to evict a pod which shouldn't be evictable 10/31/23 09:23:14.837
STEP: Waiting for all pods to be running 10/31/23 09:23:14.837
Oct 31 09:23:14.877: INFO: running pods: 0 < 3
STEP: locating a running pod 10/31/23 09:23:16.884
STEP: Updating the pdb to allow a pod to be evicted 10/31/23 09:23:17.019
STEP: Waiting for the pdb to be processed 10/31/23 09:23:17.171
STEP: Trying to evict the same pod we tried earlier which should now be evictable 10/31/23 09:23:17.263
STEP: Waiting for all pods to be running 10/31/23 09:23:17.264
STEP: Waiting for the pdb to observed all healthy pods 10/31/23 09:23:17.314
STEP: Patching the pdb to disallow a pod to be evicted 10/31/23 09:23:17.495
STEP: Waiting for the pdb to be processed 10/31/23 09:23:17.603
STEP: Waiting for all pods to be running 10/31/23 09:23:17.657
Oct 31 09:23:17.708: INFO: running pods: 2 < 3
STEP: locating a running pod 10/31/23 09:23:19.732
STEP: Deleting the pdb to allow a pod to be evicted 10/31/23 09:23:19.883
STEP: Waiting for the pdb to be deleted 10/31/23 09:23:19.971
STEP: Trying to evict the same pod we tried earlier which should now be evictable 10/31/23 09:23:20.071
STEP: Waiting for all pods to be running 10/31/23 09:23:20.071
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:23:20.191: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-580" for this suite. 10/31/23 09:23:20.214
------------------------------
â€¢ [SLOW TEST] [6.179 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/apps/disruption.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:23:14.051
    Oct 31 09:23:14.051: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename disruption 10/31/23 09:23:14.053
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:14.245
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:14.423
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should block an eviction until the PDB is updated to allow it [Conformance]
      test/e2e/apps/disruption.go:347
    STEP: Creating a pdb that targets all three pods in a test replica set 10/31/23 09:23:14.56
    STEP: Waiting for the pdb to be processed 10/31/23 09:23:14.647
    STEP: First trying to evict a pod which shouldn't be evictable 10/31/23 09:23:14.837
    STEP: Waiting for all pods to be running 10/31/23 09:23:14.837
    Oct 31 09:23:14.877: INFO: running pods: 0 < 3
    STEP: locating a running pod 10/31/23 09:23:16.884
    STEP: Updating the pdb to allow a pod to be evicted 10/31/23 09:23:17.019
    STEP: Waiting for the pdb to be processed 10/31/23 09:23:17.171
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 10/31/23 09:23:17.263
    STEP: Waiting for all pods to be running 10/31/23 09:23:17.264
    STEP: Waiting for the pdb to observed all healthy pods 10/31/23 09:23:17.314
    STEP: Patching the pdb to disallow a pod to be evicted 10/31/23 09:23:17.495
    STEP: Waiting for the pdb to be processed 10/31/23 09:23:17.603
    STEP: Waiting for all pods to be running 10/31/23 09:23:17.657
    Oct 31 09:23:17.708: INFO: running pods: 2 < 3
    STEP: locating a running pod 10/31/23 09:23:19.732
    STEP: Deleting the pdb to allow a pod to be evicted 10/31/23 09:23:19.883
    STEP: Waiting for the pdb to be deleted 10/31/23 09:23:19.971
    STEP: Trying to evict the same pod we tried earlier which should now be evictable 10/31/23 09:23:20.071
    STEP: Waiting for all pods to be running 10/31/23 09:23:20.071
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:23:20.191: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-580" for this suite. 10/31/23 09:23:20.214
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:23:20.236
Oct 31 09:23:20.236: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 09:23:20.237
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:20.369
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:20.468
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845
STEP: Create set of pods 10/31/23 09:23:20.541
Oct 31 09:23:20.640: INFO: created test-pod-1
Oct 31 09:23:20.656: INFO: created test-pod-2
Oct 31 09:23:20.681: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running 10/31/23 09:23:20.681
Oct 31 09:23:20.681: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-4752' to be running and ready
Oct 31 09:23:20.929: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Oct 31 09:23:20.929: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Oct 31 09:23:20.929: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Oct 31 09:23:20.929: INFO: 0 / 3 pods in namespace 'pods-4752' are running and ready (0 seconds elapsed)
Oct 31 09:23:20.929: INFO: expected 0 pod replicas in namespace 'pods-4752', 0 are Running and Ready.
Oct 31 09:23:20.929: INFO: POD         NODE                                          PHASE    GRACE  CONDITIONS
Oct 31 09:23:20.929: INFO: test-pod-1  pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  }]
Oct 31 09:23:20.929: INFO: test-pod-2  pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  }]
Oct 31 09:23:20.929: INFO: test-pod-3  pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  }]
Oct 31 09:23:20.929: INFO: 
Oct 31 09:23:23.088: INFO: 3 / 3 pods in namespace 'pods-4752' are running and ready (2 seconds elapsed)
Oct 31 09:23:23.089: INFO: expected 0 pod replicas in namespace 'pods-4752', 0 are Running and Ready.
STEP: waiting for all pods to be deleted 10/31/23 09:23:23.151
Oct 31 09:23:23.169: INFO: Pod quantity 3 is different from expected quantity 0
Oct 31 09:23:24.221: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 09:23:25.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-4752" for this suite. 10/31/23 09:23:25.274
------------------------------
â€¢ [SLOW TEST] [5.049 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/common/node/pods.go:845

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:23:20.236
    Oct 31 09:23:20.236: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 09:23:20.237
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:20.369
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:20.468
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should delete a collection of pods [Conformance]
      test/e2e/common/node/pods.go:845
    STEP: Create set of pods 10/31/23 09:23:20.541
    Oct 31 09:23:20.640: INFO: created test-pod-1
    Oct 31 09:23:20.656: INFO: created test-pod-2
    Oct 31 09:23:20.681: INFO: created test-pod-3
    STEP: waiting for all 3 pods to be running 10/31/23 09:23:20.681
    Oct 31 09:23:20.681: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-4752' to be running and ready
    Oct 31 09:23:20.929: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Oct 31 09:23:20.929: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Oct 31 09:23:20.929: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
    Oct 31 09:23:20.929: INFO: 0 / 3 pods in namespace 'pods-4752' are running and ready (0 seconds elapsed)
    Oct 31 09:23:20.929: INFO: expected 0 pod replicas in namespace 'pods-4752', 0 are Running and Ready.
    Oct 31 09:23:20.929: INFO: POD         NODE                                          PHASE    GRACE  CONDITIONS
    Oct 31 09:23:20.929: INFO: test-pod-1  pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  }]
    Oct 31 09:23:20.929: INFO: test-pod-2  pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  }]
    Oct 31 09:23:20.929: INFO: test-pod-3  pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:23:20 +0000 UTC  }]
    Oct 31 09:23:20.929: INFO: 
    Oct 31 09:23:23.088: INFO: 3 / 3 pods in namespace 'pods-4752' are running and ready (2 seconds elapsed)
    Oct 31 09:23:23.089: INFO: expected 0 pod replicas in namespace 'pods-4752', 0 are Running and Ready.
    STEP: waiting for all pods to be deleted 10/31/23 09:23:23.151
    Oct 31 09:23:23.169: INFO: Pod quantity 3 is different from expected quantity 0
    Oct 31 09:23:24.221: INFO: Pod quantity 3 is different from expected quantity 0
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:23:25.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-4752" for this suite. 10/31/23 09:23:25.274
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:23:25.29
Oct 31 09:23:25.290: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename svcaccounts 10/31/23 09:23:25.292
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:25.473
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:25.622
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649
STEP: creating a ServiceAccount 10/31/23 09:23:25.759
STEP: watching for the ServiceAccount to be added 10/31/23 09:23:25.902
STEP: patching the ServiceAccount 10/31/23 09:23:26.005
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 10/31/23 09:23:26.028
STEP: deleting the ServiceAccount 10/31/23 09:23:26.161
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Oct 31 09:23:26.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-7103" for this suite. 10/31/23 09:23:26.279
------------------------------
â€¢ [1.085 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:649

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:23:25.29
    Oct 31 09:23:25.290: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename svcaccounts 10/31/23 09:23:25.292
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:25.473
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:25.622
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through the lifecycle of a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:649
    STEP: creating a ServiceAccount 10/31/23 09:23:25.759
    STEP: watching for the ServiceAccount to be added 10/31/23 09:23:25.902
    STEP: patching the ServiceAccount 10/31/23 09:23:26.005
    STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) 10/31/23 09:23:26.028
    STEP: deleting the ServiceAccount 10/31/23 09:23:26.161
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:23:26.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-7103" for this suite. 10/31/23 09:23:26.279
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:23:26.379
Oct 31 09:23:26.379: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 09:23:26.381
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:26.578
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:26.715
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57
STEP: Creating configMap with name configmap-test-volume-876f2fdb-8d8a-436d-913f-3910d0f1729b 10/31/23 09:23:26.81
STEP: Creating a pod to test consume configMaps 10/31/23 09:23:26.958
Oct 31 09:23:27.034: INFO: Waiting up to 5m0s for pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1" in namespace "configmap-4423" to be "Succeeded or Failed"
Oct 31 09:23:27.084: INFO: Pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1": Phase="Pending", Reason="", readiness=false. Elapsed: 49.517768ms
Oct 31 09:23:29.092: INFO: Pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1": Phase="Running", Reason="", readiness=false. Elapsed: 2.057655222s
Oct 31 09:23:31.133: INFO: Pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.098842335s
STEP: Saw pod success 10/31/23 09:23:31.133
Oct 31 09:23:31.134: INFO: Pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1" satisfied condition "Succeeded or Failed"
Oct 31 09:23:31.181: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:23:31.277
Oct 31 09:23:31.346: INFO: Waiting for pod pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1 to disappear
Oct 31 09:23:31.395: INFO: Pod pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:23:31.395: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-4423" for this suite. 10/31/23 09:23:31.451
------------------------------
â€¢ [SLOW TEST] [5.085 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:23:26.379
    Oct 31 09:23:26.379: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 09:23:26.381
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:26.578
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:26.715
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:57
    STEP: Creating configMap with name configmap-test-volume-876f2fdb-8d8a-436d-913f-3910d0f1729b 10/31/23 09:23:26.81
    STEP: Creating a pod to test consume configMaps 10/31/23 09:23:26.958
    Oct 31 09:23:27.034: INFO: Waiting up to 5m0s for pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1" in namespace "configmap-4423" to be "Succeeded or Failed"
    Oct 31 09:23:27.084: INFO: Pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1": Phase="Pending", Reason="", readiness=false. Elapsed: 49.517768ms
    Oct 31 09:23:29.092: INFO: Pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1": Phase="Running", Reason="", readiness=false. Elapsed: 2.057655222s
    Oct 31 09:23:31.133: INFO: Pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.098842335s
    STEP: Saw pod success 10/31/23 09:23:31.133
    Oct 31 09:23:31.134: INFO: Pod "pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1" satisfied condition "Succeeded or Failed"
    Oct 31 09:23:31.181: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:23:31.277
    Oct 31 09:23:31.346: INFO: Waiting for pod pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1 to disappear
    Oct 31 09:23:31.395: INFO: Pod pod-configmaps-51c0932b-d714-493b-8ae1-538eeaa419a1 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:23:31.395: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-4423" for this suite. 10/31/23 09:23:31.451
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:23:31.465
Oct 31 09:23:31.466: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:23:31.467
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:31.601
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:31.752
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90
STEP: Creating a pod to test downward api env vars 10/31/23 09:23:31.845
Oct 31 09:23:31.862: INFO: Waiting up to 5m0s for pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529" in namespace "downward-api-138" to be "Succeeded or Failed"
Oct 31 09:23:31.881: INFO: Pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529": Phase="Pending", Reason="", readiness=false. Elapsed: 19.140096ms
Oct 31 09:23:33.941: INFO: Pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529": Phase="Pending", Reason="", readiness=false. Elapsed: 2.07914889s
Oct 31 09:23:35.892: INFO: Pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030841086s
STEP: Saw pod success 10/31/23 09:23:35.892
Oct 31 09:23:35.893: INFO: Pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529" satisfied condition "Succeeded or Failed"
Oct 31 09:23:35.948: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downward-api-465cad3b-d734-4c89-a480-fb42f64a4529 container dapi-container: <nil>
STEP: delete the pod 10/31/23 09:23:36.084
Oct 31 09:23:36.157: INFO: Waiting for pod downward-api-465cad3b-d734-4c89-a480-fb42f64a4529 to disappear
Oct 31 09:23:36.209: INFO: Pod downward-api-465cad3b-d734-4c89-a480-fb42f64a4529 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Oct 31 09:23:36.209: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-138" for this suite. 10/31/23 09:23:36.271
------------------------------
â€¢ [4.820 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:90

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:23:31.465
    Oct 31 09:23:31.466: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:23:31.467
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:31.601
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:31.752
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide host IP as an env var [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:90
    STEP: Creating a pod to test downward api env vars 10/31/23 09:23:31.845
    Oct 31 09:23:31.862: INFO: Waiting up to 5m0s for pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529" in namespace "downward-api-138" to be "Succeeded or Failed"
    Oct 31 09:23:31.881: INFO: Pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529": Phase="Pending", Reason="", readiness=false. Elapsed: 19.140096ms
    Oct 31 09:23:33.941: INFO: Pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529": Phase="Pending", Reason="", readiness=false. Elapsed: 2.07914889s
    Oct 31 09:23:35.892: INFO: Pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030841086s
    STEP: Saw pod success 10/31/23 09:23:35.892
    Oct 31 09:23:35.893: INFO: Pod "downward-api-465cad3b-d734-4c89-a480-fb42f64a4529" satisfied condition "Succeeded or Failed"
    Oct 31 09:23:35.948: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downward-api-465cad3b-d734-4c89-a480-fb42f64a4529 container dapi-container: <nil>
    STEP: delete the pod 10/31/23 09:23:36.084
    Oct 31 09:23:36.157: INFO: Waiting for pod downward-api-465cad3b-d734-4c89-a480-fb42f64a4529 to disappear
    Oct 31 09:23:36.209: INFO: Pod downward-api-465cad3b-d734-4c89-a480-fb42f64a4529 no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:23:36.209: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-138" for this suite. 10/31/23 09:23:36.271
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:23:36.286
Oct 31 09:23:36.286: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-probe 10/31/23 09:23:36.287
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:36.521
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:36.625
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152
STEP: Creating pod busybox-3400a0ad-2fec-4843-9f9c-185d976df587 in namespace container-probe-9873 10/31/23 09:23:36.718
Oct 31 09:23:36.762: INFO: Waiting up to 5m0s for pod "busybox-3400a0ad-2fec-4843-9f9c-185d976df587" in namespace "container-probe-9873" to be "not pending"
Oct 31 09:23:36.789: INFO: Pod "busybox-3400a0ad-2fec-4843-9f9c-185d976df587": Phase="Pending", Reason="", readiness=false. Elapsed: 26.186586ms
Oct 31 09:23:38.795: INFO: Pod "busybox-3400a0ad-2fec-4843-9f9c-185d976df587": Phase="Running", Reason="", readiness=true. Elapsed: 2.032273675s
Oct 31 09:23:38.795: INFO: Pod "busybox-3400a0ad-2fec-4843-9f9c-185d976df587" satisfied condition "not pending"
Oct 31 09:23:38.795: INFO: Started pod busybox-3400a0ad-2fec-4843-9f9c-185d976df587 in namespace container-probe-9873
STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 09:23:38.795
Oct 31 09:23:38.885: INFO: Initial restart count of pod busybox-3400a0ad-2fec-4843-9f9c-185d976df587 is 0
STEP: deleting the pod 10/31/23 09:27:39.29
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Oct 31 09:27:39.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-9873" for this suite. 10/31/23 09:27:39.368
------------------------------
â€¢ [SLOW TEST] [243.171 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:152

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:23:36.286
    Oct 31 09:23:36.286: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-probe 10/31/23 09:23:36.287
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:23:36.521
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:23:36.625
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:152
    STEP: Creating pod busybox-3400a0ad-2fec-4843-9f9c-185d976df587 in namespace container-probe-9873 10/31/23 09:23:36.718
    Oct 31 09:23:36.762: INFO: Waiting up to 5m0s for pod "busybox-3400a0ad-2fec-4843-9f9c-185d976df587" in namespace "container-probe-9873" to be "not pending"
    Oct 31 09:23:36.789: INFO: Pod "busybox-3400a0ad-2fec-4843-9f9c-185d976df587": Phase="Pending", Reason="", readiness=false. Elapsed: 26.186586ms
    Oct 31 09:23:38.795: INFO: Pod "busybox-3400a0ad-2fec-4843-9f9c-185d976df587": Phase="Running", Reason="", readiness=true. Elapsed: 2.032273675s
    Oct 31 09:23:38.795: INFO: Pod "busybox-3400a0ad-2fec-4843-9f9c-185d976df587" satisfied condition "not pending"
    Oct 31 09:23:38.795: INFO: Started pod busybox-3400a0ad-2fec-4843-9f9c-185d976df587 in namespace container-probe-9873
    STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 09:23:38.795
    Oct 31 09:23:38.885: INFO: Initial restart count of pod busybox-3400a0ad-2fec-4843-9f9c-185d976df587 is 0
    STEP: deleting the pod 10/31/23 09:27:39.29
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:27:39.314: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-9873" for this suite. 10/31/23 09:27:39.368
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:27:39.463
Oct 31 09:27:39.464: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:27:39.465
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:27:39.613
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:27:39.751
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69
Oct 31 09:27:39.894: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 10/31/23 09:27:47.954
Oct 31 09:27:47.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 create -f -'
Oct 31 09:27:49.133: INFO: stderr: ""
Oct 31 09:27:49.133: INFO: stdout: "e2e-test-crd-publish-openapi-328-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Oct 31 09:27:49.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 delete e2e-test-crd-publish-openapi-328-crds test-foo'
Oct 31 09:27:49.398: INFO: stderr: ""
Oct 31 09:27:49.398: INFO: stdout: "e2e-test-crd-publish-openapi-328-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Oct 31 09:27:49.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 apply -f -'
Oct 31 09:27:49.926: INFO: stderr: ""
Oct 31 09:27:49.926: INFO: stdout: "e2e-test-crd-publish-openapi-328-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Oct 31 09:27:49.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 delete e2e-test-crd-publish-openapi-328-crds test-foo'
Oct 31 09:27:50.193: INFO: stderr: ""
Oct 31 09:27:50.193: INFO: stdout: "e2e-test-crd-publish-openapi-328-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 10/31/23 09:27:50.193
Oct 31 09:27:50.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 create -f -'
Oct 31 09:27:50.655: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 10/31/23 09:27:50.655
Oct 31 09:27:50.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 create -f -'
Oct 31 09:27:51.576: INFO: rc: 1
Oct 31 09:27:51.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 apply -f -'
Oct 31 09:27:52.254: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties 10/31/23 09:27:52.254
Oct 31 09:27:52.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 create -f -'
Oct 31 09:27:52.693: INFO: rc: 1
Oct 31 09:27:52.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 apply -f -'
Oct 31 09:27:53.233: INFO: rc: 1
STEP: kubectl explain works to explain CR properties 10/31/23 09:27:53.233
Oct 31 09:27:53.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds'
Oct 31 09:27:53.660: INFO: stderr: ""
Oct 31 09:27:53.660: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-328-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively 10/31/23 09:27:53.66
Oct 31 09:27:53.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds.metadata'
Oct 31 09:27:53.992: INFO: stderr: ""
Oct 31 09:27:53.992: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-328-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Oct 31 09:27:53.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds.spec'
Oct 31 09:27:54.399: INFO: stderr: ""
Oct 31 09:27:54.399: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-328-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Oct 31 09:27:54.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds.spec.bars'
Oct 31 09:27:54.817: INFO: stderr: ""
Oct 31 09:27:54.817: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-328-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist 10/31/23 09:27:54.817
Oct 31 09:27:54.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds.spec.bars2'
Oct 31 09:27:55.266: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:27:58.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-582" for this suite. 10/31/23 09:27:58.356
------------------------------
â€¢ [SLOW TEST] [18.953 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:69

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:27:39.463
    Oct 31 09:27:39.464: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:27:39.465
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:27:39.613
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:27:39.751
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD with validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:69
    Oct 31 09:27:39.894: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: kubectl validation (kubectl create and apply) allows request with known and required properties 10/31/23 09:27:47.954
    Oct 31 09:27:47.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 create -f -'
    Oct 31 09:27:49.133: INFO: stderr: ""
    Oct 31 09:27:49.133: INFO: stdout: "e2e-test-crd-publish-openapi-328-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Oct 31 09:27:49.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 delete e2e-test-crd-publish-openapi-328-crds test-foo'
    Oct 31 09:27:49.398: INFO: stderr: ""
    Oct 31 09:27:49.398: INFO: stdout: "e2e-test-crd-publish-openapi-328-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    Oct 31 09:27:49.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 apply -f -'
    Oct 31 09:27:49.926: INFO: stderr: ""
    Oct 31 09:27:49.926: INFO: stdout: "e2e-test-crd-publish-openapi-328-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
    Oct 31 09:27:49.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 delete e2e-test-crd-publish-openapi-328-crds test-foo'
    Oct 31 09:27:50.193: INFO: stderr: ""
    Oct 31 09:27:50.193: INFO: stdout: "e2e-test-crd-publish-openapi-328-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
    STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values 10/31/23 09:27:50.193
    Oct 31 09:27:50.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 create -f -'
    Oct 31 09:27:50.655: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema 10/31/23 09:27:50.655
    Oct 31 09:27:50.656: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 create -f -'
    Oct 31 09:27:51.576: INFO: rc: 1
    Oct 31 09:27:51.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 apply -f -'
    Oct 31 09:27:52.254: INFO: rc: 1
    STEP: kubectl validation (kubectl create and apply) rejects request without required properties 10/31/23 09:27:52.254
    Oct 31 09:27:52.254: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 create -f -'
    Oct 31 09:27:52.693: INFO: rc: 1
    Oct 31 09:27:52.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 --namespace=crd-publish-openapi-582 apply -f -'
    Oct 31 09:27:53.233: INFO: rc: 1
    STEP: kubectl explain works to explain CR properties 10/31/23 09:27:53.233
    Oct 31 09:27:53.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds'
    Oct 31 09:27:53.660: INFO: stderr: ""
    Oct 31 09:27:53.660: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-328-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
    STEP: kubectl explain works to explain CR properties recursively 10/31/23 09:27:53.66
    Oct 31 09:27:53.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds.metadata'
    Oct 31 09:27:53.992: INFO: stderr: ""
    Oct 31 09:27:53.992: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-328-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
    Oct 31 09:27:53.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds.spec'
    Oct 31 09:27:54.399: INFO: stderr: ""
    Oct 31 09:27:54.399: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-328-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
    Oct 31 09:27:54.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds.spec.bars'
    Oct 31 09:27:54.817: INFO: stderr: ""
    Oct 31 09:27:54.817: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-328-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
    STEP: kubectl explain works to return error when explain is called on property that doesn't exist 10/31/23 09:27:54.817
    Oct 31 09:27:54.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-582 explain e2e-test-crd-publish-openapi-328-crds.spec.bars2'
    Oct 31 09:27:55.266: INFO: rc: 1
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:27:58.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-582" for this suite. 10/31/23 09:27:58.356
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:27:58.417
Oct 31 09:27:58.418: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:27:58.419
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:27:58.823
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:27:58.925
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should provide secure master service  [Conformance]
  test/e2e/network/service.go:777
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:27:59.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1185" for this suite. 10/31/23 09:27:59.168
------------------------------
â€¢ [0.764 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should provide secure master service  [Conformance]
  test/e2e/network/service.go:777

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:27:58.417
    Oct 31 09:27:58.418: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:27:58.419
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:27:58.823
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:27:58.925
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should provide secure master service  [Conformance]
      test/e2e/network/service.go:777
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:27:59.113: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1185" for this suite. 10/31/23 09:27:59.168
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:27:59.185
Oct 31 09:27:59.185: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename svcaccounts 10/31/23 09:27:59.187
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:27:59.411
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:27:59.58
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275
STEP: Creating a pod to test service account token:  10/31/23 09:27:59.652
Oct 31 09:27:59.669: INFO: Waiting up to 5m0s for pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787" in namespace "svcaccounts-1209" to be "Succeeded or Failed"
Oct 31 09:27:59.685: INFO: Pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787": Phase="Pending", Reason="", readiness=false. Elapsed: 16.256646ms
Oct 31 09:28:01.693: INFO: Pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024629106s
Oct 31 09:28:03.695: INFO: Pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025960096s
STEP: Saw pod success 10/31/23 09:28:03.695
Oct 31 09:28:03.695: INFO: Pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787" satisfied condition "Succeeded or Failed"
Oct 31 09:28:03.716: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod test-pod-43530869-9293-4464-bfc9-45ec15a58787 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:28:04.034
Oct 31 09:28:04.097: INFO: Waiting for pod test-pod-43530869-9293-4464-bfc9-45ec15a58787 to disappear
Oct 31 09:28:04.145: INFO: Pod test-pod-43530869-9293-4464-bfc9-45ec15a58787 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Oct 31 09:28:04.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-1209" for this suite. 10/31/23 09:28:04.161
------------------------------
â€¢ [SLOW TEST] [5.033 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount projected service account token [Conformance]
  test/e2e/auth/service_accounts.go:275

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:27:59.185
    Oct 31 09:27:59.185: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename svcaccounts 10/31/23 09:27:59.187
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:27:59.411
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:27:59.58
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount projected service account token [Conformance]
      test/e2e/auth/service_accounts.go:275
    STEP: Creating a pod to test service account token:  10/31/23 09:27:59.652
    Oct 31 09:27:59.669: INFO: Waiting up to 5m0s for pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787" in namespace "svcaccounts-1209" to be "Succeeded or Failed"
    Oct 31 09:27:59.685: INFO: Pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787": Phase="Pending", Reason="", readiness=false. Elapsed: 16.256646ms
    Oct 31 09:28:01.693: INFO: Pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024629106s
    Oct 31 09:28:03.695: INFO: Pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025960096s
    STEP: Saw pod success 10/31/23 09:28:03.695
    Oct 31 09:28:03.695: INFO: Pod "test-pod-43530869-9293-4464-bfc9-45ec15a58787" satisfied condition "Succeeded or Failed"
    Oct 31 09:28:03.716: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod test-pod-43530869-9293-4464-bfc9-45ec15a58787 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:28:04.034
    Oct 31 09:28:04.097: INFO: Waiting for pod test-pod-43530869-9293-4464-bfc9-45ec15a58787 to disappear
    Oct 31 09:28:04.145: INFO: Pod test-pod-43530869-9293-4464-bfc9-45ec15a58787 no longer exists
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:28:04.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-1209" for this suite. 10/31/23 09:28:04.161
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:28:04.219
Oct 31 09:28:04.220: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:28:04.221
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:04.509
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:04.652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177
STEP: Creating a pod to test emptydir 0666 on node default medium 10/31/23 09:28:04.747
Oct 31 09:28:04.805: INFO: Waiting up to 5m0s for pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270" in namespace "emptydir-1815" to be "Succeeded or Failed"
Oct 31 09:28:04.825: INFO: Pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270": Phase="Pending", Reason="", readiness=false. Elapsed: 19.83651ms
Oct 31 09:28:06.868: INFO: Pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270": Phase="Pending", Reason="", readiness=false. Elapsed: 2.062598347s
Oct 31 09:28:08.857: INFO: Pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.051881551s
STEP: Saw pod success 10/31/23 09:28:08.857
Oct 31 09:28:08.857: INFO: Pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270" satisfied condition "Succeeded or Failed"
Oct 31 09:28:08.908: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270 container test-container: <nil>
STEP: delete the pod 10/31/23 09:28:09.092
Oct 31 09:28:09.161: INFO: Waiting for pod pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270 to disappear
Oct 31 09:28:09.245: INFO: Pod pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:28:09.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-1815" for this suite. 10/31/23 09:28:09.3
------------------------------
â€¢ [SLOW TEST] [5.151 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:28:04.219
    Oct 31 09:28:04.220: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:28:04.221
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:04.509
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:04.652
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:177
    STEP: Creating a pod to test emptydir 0666 on node default medium 10/31/23 09:28:04.747
    Oct 31 09:28:04.805: INFO: Waiting up to 5m0s for pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270" in namespace "emptydir-1815" to be "Succeeded or Failed"
    Oct 31 09:28:04.825: INFO: Pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270": Phase="Pending", Reason="", readiness=false. Elapsed: 19.83651ms
    Oct 31 09:28:06.868: INFO: Pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270": Phase="Pending", Reason="", readiness=false. Elapsed: 2.062598347s
    Oct 31 09:28:08.857: INFO: Pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.051881551s
    STEP: Saw pod success 10/31/23 09:28:08.857
    Oct 31 09:28:08.857: INFO: Pod "pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270" satisfied condition "Succeeded or Failed"
    Oct 31 09:28:08.908: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270 container test-container: <nil>
    STEP: delete the pod 10/31/23 09:28:09.092
    Oct 31 09:28:09.161: INFO: Waiting for pod pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270 to disappear
    Oct 31 09:28:09.245: INFO: Pod pod-2a5a7f88-4c2a-4664-ac45-4a6c2e755270 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:28:09.245: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-1815" for this suite. 10/31/23 09:28:09.3
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:28:09.376
Oct 31 09:28:09.376: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename runtimeclass 10/31/23 09:28:09.377
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:09.56
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:09.625
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Oct 31 09:28:09.833: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-574" for this suite. 10/31/23 09:28:09.885
------------------------------
â€¢ [0.564 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:55

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:28:09.376
    Oct 31 09:28:09.376: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename runtimeclass 10/31/23 09:28:09.377
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:09.56
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:09.625
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:55
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:28:09.833: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-574" for this suite. 10/31/23 09:28:09.885
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:28:09.946
Oct 31 09:28:09.947: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename var-expansion 10/31/23 09:28:09.948
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:10.133
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:10.267
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112
STEP: Creating a pod to test substitution in volume subpath 10/31/23 09:28:10.41
Oct 31 09:28:10.425: INFO: Waiting up to 5m0s for pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316" in namespace "var-expansion-5886" to be "Succeeded or Failed"
Oct 31 09:28:10.436: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316": Phase="Pending", Reason="", readiness=false. Elapsed: 10.180397ms
Oct 31 09:28:12.446: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316": Phase="Running", Reason="", readiness=true. Elapsed: 2.020808021s
Oct 31 09:28:14.446: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316": Phase="Running", Reason="", readiness=false. Elapsed: 4.019932918s
Oct 31 09:28:16.445: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019260185s
STEP: Saw pod success 10/31/23 09:28:16.445
Oct 31 09:28:16.445: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316" satisfied condition "Succeeded or Failed"
Oct 31 09:28:16.497: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod var-expansion-38cdd102-dc22-42f5-b093-d17783639316 container dapi-container: <nil>
STEP: delete the pod 10/31/23 09:28:16.637
Oct 31 09:28:16.704: INFO: Waiting for pod var-expansion-38cdd102-dc22-42f5-b093-d17783639316 to disappear
Oct 31 09:28:16.792: INFO: Pod var-expansion-38cdd102-dc22-42f5-b093-d17783639316 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Oct 31 09:28:16.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-5886" for this suite. 10/31/23 09:28:16.851
------------------------------
â€¢ [SLOW TEST] [7.003 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/common/node/expansion.go:112

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:28:09.946
    Oct 31 09:28:09.947: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename var-expansion 10/31/23 09:28:09.948
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:10.133
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:10.267
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a volume subpath [Conformance]
      test/e2e/common/node/expansion.go:112
    STEP: Creating a pod to test substitution in volume subpath 10/31/23 09:28:10.41
    Oct 31 09:28:10.425: INFO: Waiting up to 5m0s for pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316" in namespace "var-expansion-5886" to be "Succeeded or Failed"
    Oct 31 09:28:10.436: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316": Phase="Pending", Reason="", readiness=false. Elapsed: 10.180397ms
    Oct 31 09:28:12.446: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316": Phase="Running", Reason="", readiness=true. Elapsed: 2.020808021s
    Oct 31 09:28:14.446: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316": Phase="Running", Reason="", readiness=false. Elapsed: 4.019932918s
    Oct 31 09:28:16.445: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.019260185s
    STEP: Saw pod success 10/31/23 09:28:16.445
    Oct 31 09:28:16.445: INFO: Pod "var-expansion-38cdd102-dc22-42f5-b093-d17783639316" satisfied condition "Succeeded or Failed"
    Oct 31 09:28:16.497: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod var-expansion-38cdd102-dc22-42f5-b093-d17783639316 container dapi-container: <nil>
    STEP: delete the pod 10/31/23 09:28:16.637
    Oct 31 09:28:16.704: INFO: Waiting for pod var-expansion-38cdd102-dc22-42f5-b093-d17783639316 to disappear
    Oct 31 09:28:16.792: INFO: Pod var-expansion-38cdd102-dc22-42f5-b093-d17783639316 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:28:16.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-5886" for this suite. 10/31/23 09:28:16.851
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:28:16.958
Oct 31 09:28:16.958: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:28:16.959
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:17.281
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:17.439
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99
STEP: Creating configMap with name projected-configmap-test-volume-map-5af8e9cc-7be6-4beb-9b77-c32057f4abef 10/31/23 09:28:17.564
STEP: Creating a pod to test consume configMaps 10/31/23 09:28:17.623
Oct 31 09:28:17.692: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2" in namespace "projected-4480" to be "Succeeded or Failed"
Oct 31 09:28:17.715: INFO: Pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2": Phase="Pending", Reason="", readiness=false. Elapsed: 23.131973ms
Oct 31 09:28:19.823: INFO: Pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2": Phase="Running", Reason="", readiness=false. Elapsed: 2.131016477s
Oct 31 09:28:21.800: INFO: Pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.107468755s
STEP: Saw pod success 10/31/23 09:28:21.8
Oct 31 09:28:21.800: INFO: Pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2" satisfied condition "Succeeded or Failed"
Oct 31 09:28:21.855: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:28:22.038
Oct 31 09:28:22.103: INFO: Waiting for pod pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2 to disappear
Oct 31 09:28:22.192: INFO: Pod pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:28:22.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4480" for this suite. 10/31/23 09:28:22.246
------------------------------
â€¢ [SLOW TEST] [5.320 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:28:16.958
    Oct 31 09:28:16.958: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:28:16.959
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:17.281
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:17.439
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:99
    STEP: Creating configMap with name projected-configmap-test-volume-map-5af8e9cc-7be6-4beb-9b77-c32057f4abef 10/31/23 09:28:17.564
    STEP: Creating a pod to test consume configMaps 10/31/23 09:28:17.623
    Oct 31 09:28:17.692: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2" in namespace "projected-4480" to be "Succeeded or Failed"
    Oct 31 09:28:17.715: INFO: Pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2": Phase="Pending", Reason="", readiness=false. Elapsed: 23.131973ms
    Oct 31 09:28:19.823: INFO: Pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2": Phase="Running", Reason="", readiness=false. Elapsed: 2.131016477s
    Oct 31 09:28:21.800: INFO: Pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.107468755s
    STEP: Saw pod success 10/31/23 09:28:21.8
    Oct 31 09:28:21.800: INFO: Pod "pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2" satisfied condition "Succeeded or Failed"
    Oct 31 09:28:21.855: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:28:22.038
    Oct 31 09:28:22.103: INFO: Waiting for pod pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2 to disappear
    Oct 31 09:28:22.192: INFO: Pod pod-projected-configmaps-74acb847-b33b-4252-b663-1dd7214ad4b2 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:28:22.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4480" for this suite. 10/31/23 09:28:22.246
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:28:22.284
Oct 31 09:28:22.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 09:28:22.285
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:22.494
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:22.631
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083
STEP: Create a pod 10/31/23 09:28:22.77
Oct 31 09:28:22.905: INFO: Waiting up to 5m0s for pod "pod-xh6nb" in namespace "pods-891" to be "running"
Oct 31 09:28:22.956: INFO: Pod "pod-xh6nb": Phase="Pending", Reason="", readiness=false. Elapsed: 50.684093ms
Oct 31 09:28:24.964: INFO: Pod "pod-xh6nb": Phase="Running", Reason="", readiness=true. Elapsed: 2.059184911s
Oct 31 09:28:24.964: INFO: Pod "pod-xh6nb" satisfied condition "running"
STEP: patching /status 10/31/23 09:28:24.964
Oct 31 09:28:25.021: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 09:28:25.022: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-891" for this suite. 10/31/23 09:28:25.042
------------------------------
â€¢ [2.813 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should patch a pod status [Conformance]
  test/e2e/common/node/pods.go:1083

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:28:22.284
    Oct 31 09:28:22.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 09:28:22.285
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:22.494
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:22.631
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should patch a pod status [Conformance]
      test/e2e/common/node/pods.go:1083
    STEP: Create a pod 10/31/23 09:28:22.77
    Oct 31 09:28:22.905: INFO: Waiting up to 5m0s for pod "pod-xh6nb" in namespace "pods-891" to be "running"
    Oct 31 09:28:22.956: INFO: Pod "pod-xh6nb": Phase="Pending", Reason="", readiness=false. Elapsed: 50.684093ms
    Oct 31 09:28:24.964: INFO: Pod "pod-xh6nb": Phase="Running", Reason="", readiness=true. Elapsed: 2.059184911s
    Oct 31 09:28:24.964: INFO: Pod "pod-xh6nb" satisfied condition "running"
    STEP: patching /status 10/31/23 09:28:24.964
    Oct 31 09:28:25.021: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:28:25.022: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-891" for this suite. 10/31/23 09:28:25.042
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:28:25.102
Oct 31 09:28:25.102: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:28:25.104
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:25.254
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:25.385
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228
STEP: creating service in namespace services-6084 10/31/23 09:28:25.524
STEP: creating service affinity-nodeport in namespace services-6084 10/31/23 09:28:25.524
STEP: creating replication controller affinity-nodeport in namespace services-6084 10/31/23 09:28:25.55
I1031 09:28:25.610241      18 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-6084, replica count: 3
I1031 09:28:28.662765      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Oct 31 09:28:28.819: INFO: Creating new exec pod
Oct 31 09:28:28.876: INFO: Waiting up to 5m0s for pod "execpod-affinitymh8cr" in namespace "services-6084" to be "running"
Oct 31 09:28:28.928: INFO: Pod "execpod-affinitymh8cr": Phase="Pending", Reason="", readiness=false. Elapsed: 51.702857ms
Oct 31 09:28:31.007: INFO: Pod "execpod-affinitymh8cr": Phase="Running", Reason="", readiness=true. Elapsed: 2.130403753s
Oct 31 09:28:31.007: INFO: Pod "execpod-affinitymh8cr" satisfied condition "running"
Oct 31 09:28:32.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
Oct 31 09:28:33.046: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Oct 31 09:28:33.046: INFO: stdout: ""
Oct 31 09:28:33.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c nc -v -z -w 2 10.93.74.5 80'
Oct 31 09:28:34.025: INFO: stderr: "+ nc -v -z -w 2 10.93.74.5 80\nConnection to 10.93.74.5 80 port [tcp/http] succeeded!\n"
Oct 31 09:28:34.025: INFO: stdout: ""
Oct 31 09:28:34.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c nc -v -z -w 2 10.20.4.137 30613'
Oct 31 09:28:34.870: INFO: stderr: "+ nc -v -z -w 2 10.20.4.137 30613\nConnection to 10.20.4.137 30613 port [tcp/*] succeeded!\n"
Oct 31 09:28:34.870: INFO: stdout: ""
Oct 31 09:28:34.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c nc -v -z -w 2 10.20.4.183 30613'
Oct 31 09:28:35.694: INFO: stderr: "+ nc -v -z -w 2 10.20.4.183 30613\nConnection to 10.20.4.183 30613 port [tcp/*] succeeded!\n"
Oct 31 09:28:35.694: INFO: stdout: ""
Oct 31 09:28:35.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.20.4.137:30613/ ; done'
Oct 31 09:28:36.709: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n"
Oct 31 09:28:36.709: INFO: stdout: "\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl"
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
Oct 31 09:28:36.709: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-6084, will wait for the garbage collector to delete the pods 10/31/23 09:28:36.777
Oct 31 09:28:36.999: INFO: Deleting ReplicationController affinity-nodeport took: 68.709037ms
Oct 31 09:28:37.100: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.810975ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:28:39.428: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6084" for this suite. 10/31/23 09:28:39.478
------------------------------
â€¢ [SLOW TEST] [14.395 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2228

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:28:25.102
    Oct 31 09:28:25.102: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:28:25.104
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:25.254
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:25.385
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2228
    STEP: creating service in namespace services-6084 10/31/23 09:28:25.524
    STEP: creating service affinity-nodeport in namespace services-6084 10/31/23 09:28:25.524
    STEP: creating replication controller affinity-nodeport in namespace services-6084 10/31/23 09:28:25.55
    I1031 09:28:25.610241      18 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-6084, replica count: 3
    I1031 09:28:28.662765      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Oct 31 09:28:28.819: INFO: Creating new exec pod
    Oct 31 09:28:28.876: INFO: Waiting up to 5m0s for pod "execpod-affinitymh8cr" in namespace "services-6084" to be "running"
    Oct 31 09:28:28.928: INFO: Pod "execpod-affinitymh8cr": Phase="Pending", Reason="", readiness=false. Elapsed: 51.702857ms
    Oct 31 09:28:31.007: INFO: Pod "execpod-affinitymh8cr": Phase="Running", Reason="", readiness=true. Elapsed: 2.130403753s
    Oct 31 09:28:31.007: INFO: Pod "execpod-affinitymh8cr" satisfied condition "running"
    Oct 31 09:28:32.075: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c nc -v -z -w 2 affinity-nodeport 80'
    Oct 31 09:28:33.046: INFO: stderr: "+ nc -v -z -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
    Oct 31 09:28:33.046: INFO: stdout: ""
    Oct 31 09:28:33.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c nc -v -z -w 2 10.93.74.5 80'
    Oct 31 09:28:34.025: INFO: stderr: "+ nc -v -z -w 2 10.93.74.5 80\nConnection to 10.93.74.5 80 port [tcp/http] succeeded!\n"
    Oct 31 09:28:34.025: INFO: stdout: ""
    Oct 31 09:28:34.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c nc -v -z -w 2 10.20.4.137 30613'
    Oct 31 09:28:34.870: INFO: stderr: "+ nc -v -z -w 2 10.20.4.137 30613\nConnection to 10.20.4.137 30613 port [tcp/*] succeeded!\n"
    Oct 31 09:28:34.870: INFO: stdout: ""
    Oct 31 09:28:34.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c nc -v -z -w 2 10.20.4.183 30613'
    Oct 31 09:28:35.694: INFO: stderr: "+ nc -v -z -w 2 10.20.4.183 30613\nConnection to 10.20.4.183 30613 port [tcp/*] succeeded!\n"
    Oct 31 09:28:35.694: INFO: stdout: ""
    Oct 31 09:28:35.694: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6084 exec execpod-affinitymh8cr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.20.4.137:30613/ ; done'
    Oct 31 09:28:36.709: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.20.4.137:30613/\n"
    Oct 31 09:28:36.709: INFO: stdout: "\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl\naffinity-nodeport-lcrsl"
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Received response from host: affinity-nodeport-lcrsl
    Oct 31 09:28:36.709: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-nodeport in namespace services-6084, will wait for the garbage collector to delete the pods 10/31/23 09:28:36.777
    Oct 31 09:28:36.999: INFO: Deleting ReplicationController affinity-nodeport took: 68.709037ms
    Oct 31 09:28:37.100: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.810975ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:28:39.428: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6084" for this suite. 10/31/23 09:28:39.478
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:28:39.503
Oct 31 09:28:39.504: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename namespaces 10/31/23 09:28:39.504
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:39.784
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:39.919
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243
STEP: Creating a test namespace 10/31/23 09:28:40.017
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:40.22
STEP: Creating a pod in the namespace 10/31/23 09:28:40.354
STEP: Waiting for the pod to have running status 10/31/23 09:28:40.413
Oct 31 09:28:40.414: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-6610" to be "running"
Oct 31 09:28:40.469: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 55.078218ms
Oct 31 09:28:42.476: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.062274351s
Oct 31 09:28:42.476: INFO: Pod "test-pod" satisfied condition "running"
STEP: Deleting the namespace 10/31/23 09:28:42.476
STEP: Waiting for the namespace to be removed. 10/31/23 09:28:42.563
STEP: Recreating the namespace 10/31/23 09:28:53.572
STEP: Verifying there are no pods in the namespace 10/31/23 09:28:53.744
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:28:53.795: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-2776" for this suite. 10/31/23 09:28:53.849
STEP: Destroying namespace "nsdeletetest-6610" for this suite. 10/31/23 09:28:53.9
Oct 31 09:28:53.987: INFO: Namespace nsdeletetest-6610 was already deleted
STEP: Destroying namespace "nsdeletetest-9890" for this suite. 10/31/23 09:28:53.987
------------------------------
â€¢ [SLOW TEST] [14.537 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:243

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:28:39.503
    Oct 31 09:28:39.504: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename namespaces 10/31/23 09:28:39.504
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:39.784
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:39.919
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all pods are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:243
    STEP: Creating a test namespace 10/31/23 09:28:40.017
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:40.22
    STEP: Creating a pod in the namespace 10/31/23 09:28:40.354
    STEP: Waiting for the pod to have running status 10/31/23 09:28:40.413
    Oct 31 09:28:40.414: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "nsdeletetest-6610" to be "running"
    Oct 31 09:28:40.469: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 55.078218ms
    Oct 31 09:28:42.476: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.062274351s
    Oct 31 09:28:42.476: INFO: Pod "test-pod" satisfied condition "running"
    STEP: Deleting the namespace 10/31/23 09:28:42.476
    STEP: Waiting for the namespace to be removed. 10/31/23 09:28:42.563
    STEP: Recreating the namespace 10/31/23 09:28:53.572
    STEP: Verifying there are no pods in the namespace 10/31/23 09:28:53.744
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:28:53.795: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-2776" for this suite. 10/31/23 09:28:53.849
    STEP: Destroying namespace "nsdeletetest-6610" for this suite. 10/31/23 09:28:53.9
    Oct 31 09:28:53.987: INFO: Namespace nsdeletetest-6610 was already deleted
    STEP: Destroying namespace "nsdeletetest-9890" for this suite. 10/31/23 09:28:53.987
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:28:54.045
Oct 31 09:28:54.046: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename endpointslice 10/31/23 09:28:54.047
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:54.324
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:54.461
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205
STEP: referencing a single matching pod 10/31/23 09:28:59.894
STEP: referencing matching pods with named port 10/31/23 09:29:04.983
STEP: creating empty Endpoints and EndpointSlices for no matching Pods 10/31/23 09:29:10.055
STEP: recreating EndpointSlices after they've been deleted 10/31/23 09:29:15.174
Oct 31 09:29:15.496: INFO: EndpointSlice for Service endpointslice-5732/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Oct 31 09:29:25.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-5732" for this suite. 10/31/23 09:29:25.614
------------------------------
â€¢ [SLOW TEST] [31.622 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/network/endpointslice.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:28:54.045
    Oct 31 09:28:54.046: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename endpointslice 10/31/23 09:28:54.047
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:28:54.324
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:28:54.461
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
      test/e2e/network/endpointslice.go:205
    STEP: referencing a single matching pod 10/31/23 09:28:59.894
    STEP: referencing matching pods with named port 10/31/23 09:29:04.983
    STEP: creating empty Endpoints and EndpointSlices for no matching Pods 10/31/23 09:29:10.055
    STEP: recreating EndpointSlices after they've been deleted 10/31/23 09:29:15.174
    Oct 31 09:29:15.496: INFO: EndpointSlice for Service endpointslice-5732/example-named-port not found
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:29:25.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-5732" for this suite. 10/31/23 09:29:25.614
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:29:25.673
Oct 31 09:29:25.673: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 09:29:25.675
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:29:25.867
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:29:26.015
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should create and stop a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:339
STEP: creating a replication controller 10/31/23 09:29:26.159
Oct 31 09:29:26.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 create -f -'
Oct 31 09:29:27.397: INFO: stderr: ""
Oct 31 09:29:27.397: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 10/31/23 09:29:27.397
Oct 31 09:29:27.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Oct 31 09:29:27.594: INFO: stderr: ""
Oct 31 09:29:27.594: INFO: stdout: "update-demo-nautilus-75q9w update-demo-nautilus-97m8l "
Oct 31 09:29:27.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:29:27.754: INFO: stderr: ""
Oct 31 09:29:27.754: INFO: stdout: ""
Oct 31 09:29:27.754: INFO: update-demo-nautilus-75q9w is created but not running
Oct 31 09:29:32.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Oct 31 09:29:32.975: INFO: stderr: ""
Oct 31 09:29:32.975: INFO: stdout: "update-demo-nautilus-75q9w update-demo-nautilus-97m8l "
Oct 31 09:29:32.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:29:33.144: INFO: stderr: ""
Oct 31 09:29:33.144: INFO: stdout: ""
Oct 31 09:29:33.144: INFO: update-demo-nautilus-75q9w is created but not running
Oct 31 09:29:38.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Oct 31 09:29:38.281: INFO: stderr: ""
Oct 31 09:29:38.281: INFO: stdout: "update-demo-nautilus-75q9w update-demo-nautilus-97m8l "
Oct 31 09:29:38.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:29:38.475: INFO: stderr: ""
Oct 31 09:29:38.475: INFO: stdout: ""
Oct 31 09:29:38.475: INFO: update-demo-nautilus-75q9w is created but not running
Oct 31 09:29:43.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Oct 31 09:29:43.639: INFO: stderr: ""
Oct 31 09:29:43.639: INFO: stdout: "update-demo-nautilus-75q9w update-demo-nautilus-97m8l "
Oct 31 09:29:43.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:29:43.820: INFO: stderr: ""
Oct 31 09:29:43.820: INFO: stdout: "true"
Oct 31 09:29:43.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Oct 31 09:29:43.951: INFO: stderr: ""
Oct 31 09:29:43.951: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Oct 31 09:29:43.951: INFO: validating pod update-demo-nautilus-75q9w
Oct 31 09:29:44.119: INFO: got data: {
  "image": "nautilus.jpg"
}

Oct 31 09:29:44.119: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Oct 31 09:29:44.119: INFO: update-demo-nautilus-75q9w is verified up and running
Oct 31 09:29:44.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-97m8l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:29:44.319: INFO: stderr: ""
Oct 31 09:29:44.319: INFO: stdout: "true"
Oct 31 09:29:44.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-97m8l -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Oct 31 09:29:44.517: INFO: stderr: ""
Oct 31 09:29:44.517: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Oct 31 09:29:44.517: INFO: validating pod update-demo-nautilus-97m8l
Oct 31 09:29:44.717: INFO: got data: {
  "image": "nautilus.jpg"
}

Oct 31 09:29:44.717: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Oct 31 09:29:44.717: INFO: update-demo-nautilus-97m8l is verified up and running
STEP: using delete to clean up resources 10/31/23 09:29:44.717
Oct 31 09:29:44.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 delete --grace-period=0 --force -f -'
Oct 31 09:29:44.912: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Oct 31 09:29:44.912: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Oct 31 09:29:44.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get rc,svc -l name=update-demo --no-headers'
Oct 31 09:29:45.158: INFO: stderr: "No resources found in kubectl-4241 namespace.\n"
Oct 31 09:29:45.158: INFO: stdout: ""
Oct 31 09:29:45.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Oct 31 09:29:45.359: INFO: stderr: ""
Oct 31 09:29:45.359: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 09:29:45.359: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4241" for this suite. 10/31/23 09:29:45.413
------------------------------
â€¢ [SLOW TEST] [19.805 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should create and stop a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:339

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:29:25.673
    Oct 31 09:29:25.673: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 09:29:25.675
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:29:25.867
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:29:26.015
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should create and stop a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:339
    STEP: creating a replication controller 10/31/23 09:29:26.159
    Oct 31 09:29:26.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 create -f -'
    Oct 31 09:29:27.397: INFO: stderr: ""
    Oct 31 09:29:27.397: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 10/31/23 09:29:27.397
    Oct 31 09:29:27.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Oct 31 09:29:27.594: INFO: stderr: ""
    Oct 31 09:29:27.594: INFO: stdout: "update-demo-nautilus-75q9w update-demo-nautilus-97m8l "
    Oct 31 09:29:27.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:29:27.754: INFO: stderr: ""
    Oct 31 09:29:27.754: INFO: stdout: ""
    Oct 31 09:29:27.754: INFO: update-demo-nautilus-75q9w is created but not running
    Oct 31 09:29:32.755: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Oct 31 09:29:32.975: INFO: stderr: ""
    Oct 31 09:29:32.975: INFO: stdout: "update-demo-nautilus-75q9w update-demo-nautilus-97m8l "
    Oct 31 09:29:32.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:29:33.144: INFO: stderr: ""
    Oct 31 09:29:33.144: INFO: stdout: ""
    Oct 31 09:29:33.144: INFO: update-demo-nautilus-75q9w is created but not running
    Oct 31 09:29:38.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Oct 31 09:29:38.281: INFO: stderr: ""
    Oct 31 09:29:38.281: INFO: stdout: "update-demo-nautilus-75q9w update-demo-nautilus-97m8l "
    Oct 31 09:29:38.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:29:38.475: INFO: stderr: ""
    Oct 31 09:29:38.475: INFO: stdout: ""
    Oct 31 09:29:38.475: INFO: update-demo-nautilus-75q9w is created but not running
    Oct 31 09:29:43.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Oct 31 09:29:43.639: INFO: stderr: ""
    Oct 31 09:29:43.639: INFO: stdout: "update-demo-nautilus-75q9w update-demo-nautilus-97m8l "
    Oct 31 09:29:43.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:29:43.820: INFO: stderr: ""
    Oct 31 09:29:43.820: INFO: stdout: "true"
    Oct 31 09:29:43.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-75q9w -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Oct 31 09:29:43.951: INFO: stderr: ""
    Oct 31 09:29:43.951: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Oct 31 09:29:43.951: INFO: validating pod update-demo-nautilus-75q9w
    Oct 31 09:29:44.119: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Oct 31 09:29:44.119: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Oct 31 09:29:44.119: INFO: update-demo-nautilus-75q9w is verified up and running
    Oct 31 09:29:44.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-97m8l -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:29:44.319: INFO: stderr: ""
    Oct 31 09:29:44.319: INFO: stdout: "true"
    Oct 31 09:29:44.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods update-demo-nautilus-97m8l -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Oct 31 09:29:44.517: INFO: stderr: ""
    Oct 31 09:29:44.517: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Oct 31 09:29:44.517: INFO: validating pod update-demo-nautilus-97m8l
    Oct 31 09:29:44.717: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Oct 31 09:29:44.717: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Oct 31 09:29:44.717: INFO: update-demo-nautilus-97m8l is verified up and running
    STEP: using delete to clean up resources 10/31/23 09:29:44.717
    Oct 31 09:29:44.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 delete --grace-period=0 --force -f -'
    Oct 31 09:29:44.912: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Oct 31 09:29:44.912: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Oct 31 09:29:44.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get rc,svc -l name=update-demo --no-headers'
    Oct 31 09:29:45.158: INFO: stderr: "No resources found in kubectl-4241 namespace.\n"
    Oct 31 09:29:45.158: INFO: stdout: ""
    Oct 31 09:29:45.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4241 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Oct 31 09:29:45.359: INFO: stderr: ""
    Oct 31 09:29:45.359: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:29:45.359: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4241" for this suite. 10/31/23 09:29:45.413
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance]
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:29:45.481
Oct 31 09:29:45.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename ephemeral-containers-test 10/31/23 09:29:45.482
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:29:45.691
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:29:45.826
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/common/node/ephemeral_containers.go:38
[It] will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45
STEP: creating a target pod 10/31/23 09:29:45.922
Oct 31 09:29:45.979: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-5383" to be "running and ready"
Oct 31 09:29:46.039: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 60.402601ms
Oct 31 09:29:46.040: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:29:48.050: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.070652361s
Oct 31 09:29:48.050: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
Oct 31 09:29:48.050: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
STEP: adding an ephemeral container 10/31/23 09:29:48.103
Oct 31 09:29:48.136: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-5383" to be "container debugger running"
Oct 31 09:29:48.188: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 52.37949ms
Oct 31 09:29:50.245: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.109622316s
Oct 31 09:29:50.245: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
STEP: checking pod container endpoints 10/31/23 09:29:50.245
Oct 31 09:29:50.246: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5383 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:29:50.246: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:29:50.246: INFO: ExecWithOptions: Clientset creation
Oct 31 09:29:50.247: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/ephemeral-containers-test-5383/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
Oct 31 09:29:50.945: INFO: Exec stderr: ""
[AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:29:51.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "ephemeral-containers-test-5383" for this suite. 10/31/23 09:29:51.279
------------------------------
â€¢ [SLOW TEST] [5.909 seconds]
[sig-node] Ephemeral Containers [NodeConformance]
test/e2e/common/node/framework.go:23
  will start an ephemeral container in an existing pod [Conformance]
  test/e2e/common/node/ephemeral_containers.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:29:45.481
    Oct 31 09:29:45.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename ephemeral-containers-test 10/31/23 09:29:45.482
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:29:45.691
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:29:45.826
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/common/node/ephemeral_containers.go:38
    [It] will start an ephemeral container in an existing pod [Conformance]
      test/e2e/common/node/ephemeral_containers.go:45
    STEP: creating a target pod 10/31/23 09:29:45.922
    Oct 31 09:29:45.979: INFO: Waiting up to 5m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-5383" to be "running and ready"
    Oct 31 09:29:46.039: INFO: Pod "ephemeral-containers-target-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 60.402601ms
    Oct 31 09:29:46.040: INFO: The phase of Pod ephemeral-containers-target-pod is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:29:48.050: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.070652361s
    Oct 31 09:29:48.050: INFO: The phase of Pod ephemeral-containers-target-pod is Running (Ready = true)
    Oct 31 09:29:48.050: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "running and ready"
    STEP: adding an ephemeral container 10/31/23 09:29:48.103
    Oct 31 09:29:48.136: INFO: Waiting up to 1m0s for pod "ephemeral-containers-target-pod" in namespace "ephemeral-containers-test-5383" to be "container debugger running"
    Oct 31 09:29:48.188: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 52.37949ms
    Oct 31 09:29:50.245: INFO: Pod "ephemeral-containers-target-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.109622316s
    Oct 31 09:29:50.245: INFO: Pod "ephemeral-containers-target-pod" satisfied condition "container debugger running"
    STEP: checking pod container endpoints 10/31/23 09:29:50.245
    Oct 31 09:29:50.246: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5383 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:29:50.246: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:29:50.246: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:29:50.247: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/ephemeral-containers-test-5383/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
    Oct 31 09:29:50.945: INFO: Exec stderr: ""
    [AfterEach] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:29:51.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Ephemeral Containers [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "ephemeral-containers-test-5383" for this suite. 10/31/23 09:29:51.279
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:29:51.397
Oct 31 09:29:51.397: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename watch 10/31/23 09:29:51.398
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:29:51.565
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:29:51.712
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334
STEP: getting a starting resourceVersion 10/31/23 09:29:51.817
STEP: starting a background goroutine to produce watch events 10/31/23 09:29:51.865
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 10/31/23 09:29:51.866
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Oct 31 09:29:56.353: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-3093" for this suite. 10/31/23 09:29:56.411
------------------------------
â€¢ [SLOW TEST] [5.075 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/apimachinery/watch.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:29:51.397
    Oct 31 09:29:51.397: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename watch 10/31/23 09:29:51.398
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:29:51.565
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:29:51.712
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should receive events on concurrent watches in same order [Conformance]
      test/e2e/apimachinery/watch.go:334
    STEP: getting a starting resourceVersion 10/31/23 09:29:51.817
    STEP: starting a background goroutine to produce watch events 10/31/23 09:29:51.865
    STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order 10/31/23 09:29:51.866
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:29:56.353: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-3093" for this suite. 10/31/23 09:29:56.411
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
[BeforeEach] [sig-node] Downward API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:29:56.476
Oct 31 09:29:56.477: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:29:56.479
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:29:56.702
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:29:56.838
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:31
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166
STEP: Creating a pod to test downward api env vars 10/31/23 09:29:56.891
Oct 31 09:29:56.950: INFO: Waiting up to 5m0s for pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa" in namespace "downward-api-1842" to be "Succeeded or Failed"
Oct 31 09:29:56.975: INFO: Pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa": Phase="Pending", Reason="", readiness=false. Elapsed: 25.351017ms
Oct 31 09:29:59.028: INFO: Pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa": Phase="Running", Reason="", readiness=true. Elapsed: 2.078060608s
Oct 31 09:30:00.993: INFO: Pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.043527019s
STEP: Saw pod success 10/31/23 09:30:00.993
Oct 31 09:30:00.993: INFO: Pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa" satisfied condition "Succeeded or Failed"
Oct 31 09:30:01.043: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downward-api-c438b1e5-d556-4a34-8812-944a977b0efa container dapi-container: <nil>
STEP: delete the pod 10/31/23 09:30:01.246
Oct 31 09:30:01.312: INFO: Waiting for pod downward-api-c438b1e5-d556-4a34-8812-944a977b0efa to disappear
Oct 31 09:30:01.397: INFO: Pod downward-api-c438b1e5-d556-4a34-8812-944a977b0efa no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/node/init/init.go:32
Oct 31 09:30:01.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Downward API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Downward API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Downward API
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-1842" for this suite. 10/31/23 09:30:01.46
------------------------------
â€¢ [SLOW TEST] [5.038 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/common/node/downwardapi.go:166

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Downward API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:29:56.476
    Oct 31 09:29:56.477: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:29:56.479
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:29:56.702
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:29:56.838
    [BeforeEach] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
      test/e2e/common/node/downwardapi.go:166
    STEP: Creating a pod to test downward api env vars 10/31/23 09:29:56.891
    Oct 31 09:29:56.950: INFO: Waiting up to 5m0s for pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa" in namespace "downward-api-1842" to be "Succeeded or Failed"
    Oct 31 09:29:56.975: INFO: Pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa": Phase="Pending", Reason="", readiness=false. Elapsed: 25.351017ms
    Oct 31 09:29:59.028: INFO: Pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa": Phase="Running", Reason="", readiness=true. Elapsed: 2.078060608s
    Oct 31 09:30:00.993: INFO: Pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.043527019s
    STEP: Saw pod success 10/31/23 09:30:00.993
    Oct 31 09:30:00.993: INFO: Pod "downward-api-c438b1e5-d556-4a34-8812-944a977b0efa" satisfied condition "Succeeded or Failed"
    Oct 31 09:30:01.043: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downward-api-c438b1e5-d556-4a34-8812-944a977b0efa container dapi-container: <nil>
    STEP: delete the pod 10/31/23 09:30:01.246
    Oct 31 09:30:01.312: INFO: Waiting for pod downward-api-c438b1e5-d556-4a34-8812-944a977b0efa to disappear
    Oct 31 09:30:01.397: INFO: Pod downward-api-c438b1e5-d556-4a34-8812-944a977b0efa no longer exists
    [AfterEach] [sig-node] Downward API
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:30:01.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Downward API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Downward API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Downward API
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-1842" for this suite. 10/31/23 09:30:01.46
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:30:01.52
Oct 31 09:30:01.520: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:30:01.521
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:30:01.754
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:30:01.937
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127
STEP: Creating a pod to test emptydir 0644 on tmpfs 10/31/23 09:30:02.002
Oct 31 09:30:02.086: INFO: Waiting up to 5m0s for pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7" in namespace "emptydir-8754" to be "Succeeded or Failed"
Oct 31 09:30:02.101: INFO: Pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7": Phase="Pending", Reason="", readiness=false. Elapsed: 14.740603ms
Oct 31 09:30:04.118: INFO: Pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.031796043s
Oct 31 09:30:06.125: INFO: Pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.039167875s
STEP: Saw pod success 10/31/23 09:30:06.125
Oct 31 09:30:06.125: INFO: Pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7" satisfied condition "Succeeded or Failed"
Oct 31 09:30:06.176: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7 container test-container: <nil>
STEP: delete the pod 10/31/23 09:30:06.329
Oct 31 09:30:06.403: INFO: Waiting for pod pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7 to disappear
Oct 31 09:30:06.489: INFO: Pod pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:30:06.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8754" for this suite. 10/31/23 09:30:06.547
------------------------------
â€¢ [SLOW TEST] [5.087 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:127

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:30:01.52
    Oct 31 09:30:01.520: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:30:01.521
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:30:01.754
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:30:01.937
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:127
    STEP: Creating a pod to test emptydir 0644 on tmpfs 10/31/23 09:30:02.002
    Oct 31 09:30:02.086: INFO: Waiting up to 5m0s for pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7" in namespace "emptydir-8754" to be "Succeeded or Failed"
    Oct 31 09:30:02.101: INFO: Pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7": Phase="Pending", Reason="", readiness=false. Elapsed: 14.740603ms
    Oct 31 09:30:04.118: INFO: Pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.031796043s
    Oct 31 09:30:06.125: INFO: Pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.039167875s
    STEP: Saw pod success 10/31/23 09:30:06.125
    Oct 31 09:30:06.125: INFO: Pod "pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7" satisfied condition "Succeeded or Failed"
    Oct 31 09:30:06.176: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7 container test-container: <nil>
    STEP: delete the pod 10/31/23 09:30:06.329
    Oct 31 09:30:06.403: INFO: Waiting for pod pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7 to disappear
    Oct 31 09:30:06.489: INFO: Pod pod-7cd69f16-c892-4bd7-a3b2-be63aa73b1f7 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:30:06.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8754" for this suite. 10/31/23 09:30:06.547
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:30:06.61
Oct 31 09:30:06.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-probe 10/31/23 09:30:06.611
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:30:06.803
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:30:06.959
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184
STEP: Creating pod liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84 in namespace container-probe-8029 10/31/23 09:30:07.026
Oct 31 09:30:07.081: INFO: Waiting up to 5m0s for pod "liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84" in namespace "container-probe-8029" to be "not pending"
Oct 31 09:30:07.130: INFO: Pod "liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84": Phase="Pending", Reason="", readiness=false. Elapsed: 48.96182ms
Oct 31 09:30:09.181: INFO: Pod "liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84": Phase="Running", Reason="", readiness=true. Elapsed: 2.099394419s
Oct 31 09:30:09.181: INFO: Pod "liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84" satisfied condition "not pending"
Oct 31 09:30:09.181: INFO: Started pod liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84 in namespace container-probe-8029
STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 09:30:09.181
Oct 31 09:30:09.277: INFO: Initial restart count of pod liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84 is 0
STEP: deleting the pod 10/31/23 09:34:10.222
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:10.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-8029" for this suite. 10/31/23 09:34:10.322
------------------------------
â€¢ [SLOW TEST] [243.805 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:184

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:30:06.61
    Oct 31 09:30:06.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-probe 10/31/23 09:30:06.611
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:30:06.803
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:30:06.959
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:184
    STEP: Creating pod liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84 in namespace container-probe-8029 10/31/23 09:30:07.026
    Oct 31 09:30:07.081: INFO: Waiting up to 5m0s for pod "liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84" in namespace "container-probe-8029" to be "not pending"
    Oct 31 09:30:07.130: INFO: Pod "liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84": Phase="Pending", Reason="", readiness=false. Elapsed: 48.96182ms
    Oct 31 09:30:09.181: INFO: Pod "liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84": Phase="Running", Reason="", readiness=true. Elapsed: 2.099394419s
    Oct 31 09:30:09.181: INFO: Pod "liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84" satisfied condition "not pending"
    Oct 31 09:30:09.181: INFO: Started pod liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84 in namespace container-probe-8029
    STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 09:30:09.181
    Oct 31 09:30:09.277: INFO: Initial restart count of pod liveness-1b8cfe9b-3bfb-437c-8d4a-949808370d84 is 0
    STEP: deleting the pod 10/31/23 09:34:10.222
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:10.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-8029" for this suite. 10/31/23 09:34:10.322
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:10.423
Oct 31 09:34:10.423: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-runtime 10/31/23 09:34:10.424
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:10.58
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:10.726
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:216
STEP: create the container 10/31/23 09:34:10.778
STEP: wait for the container to reach Failed 10/31/23 09:34:10.839
STEP: get the container status 10/31/23 09:34:14.88
STEP: the container should be terminated 10/31/23 09:34:14.889
STEP: the termination message should be set 10/31/23 09:34:14.889
Oct 31 09:34:14.889: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 10/31/23 09:34:14.889
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:15.001: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-412" for this suite. 10/31/23 09:34:15.058
------------------------------
â€¢ [4.696 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:10.423
    Oct 31 09:34:10.423: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-runtime 10/31/23 09:34:10.424
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:10.58
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:10.726
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:216
    STEP: create the container 10/31/23 09:34:10.778
    STEP: wait for the container to reach Failed 10/31/23 09:34:10.839
    STEP: get the container status 10/31/23 09:34:14.88
    STEP: the container should be terminated 10/31/23 09:34:14.889
    STEP: the termination message should be set 10/31/23 09:34:14.889
    Oct 31 09:34:14.889: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 10/31/23 09:34:14.889
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:15.001: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-412" for this suite. 10/31/23 09:34:15.058
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:15.122
Oct 31 09:34:15.122: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:34:15.123
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:15.357
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:15.498
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157
STEP: Creating a pod to test emptydir volume type on node default medium 10/31/23 09:34:15.601
Oct 31 09:34:15.680: INFO: Waiting up to 5m0s for pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67" in namespace "emptydir-7828" to be "Succeeded or Failed"
Oct 31 09:34:15.703: INFO: Pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67": Phase="Pending", Reason="", readiness=false. Elapsed: 22.132697ms
Oct 31 09:34:17.709: INFO: Pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67": Phase="Running", Reason="", readiness=false. Elapsed: 2.028024871s
Oct 31 09:34:19.757: INFO: Pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.076255891s
STEP: Saw pod success 10/31/23 09:34:19.757
Oct 31 09:34:19.757: INFO: Pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67" satisfied condition "Succeeded or Failed"
Oct 31 09:34:19.811: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-482a5fad-b146-40e8-9368-19fee97a0c67 container test-container: <nil>
STEP: delete the pod 10/31/23 09:34:20.063
Oct 31 09:34:20.127: INFO: Waiting for pod pod-482a5fad-b146-40e8-9368-19fee97a0c67 to disappear
Oct 31 09:34:20.204: INFO: Pod pod-482a5fad-b146-40e8-9368-19fee97a0c67 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:20.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7828" for this suite. 10/31/23 09:34:20.292
------------------------------
â€¢ [SLOW TEST] [5.228 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:157

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:15.122
    Oct 31 09:34:15.122: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:34:15.123
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:15.357
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:15.498
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:157
    STEP: Creating a pod to test emptydir volume type on node default medium 10/31/23 09:34:15.601
    Oct 31 09:34:15.680: INFO: Waiting up to 5m0s for pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67" in namespace "emptydir-7828" to be "Succeeded or Failed"
    Oct 31 09:34:15.703: INFO: Pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67": Phase="Pending", Reason="", readiness=false. Elapsed: 22.132697ms
    Oct 31 09:34:17.709: INFO: Pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67": Phase="Running", Reason="", readiness=false. Elapsed: 2.028024871s
    Oct 31 09:34:19.757: INFO: Pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.076255891s
    STEP: Saw pod success 10/31/23 09:34:19.757
    Oct 31 09:34:19.757: INFO: Pod "pod-482a5fad-b146-40e8-9368-19fee97a0c67" satisfied condition "Succeeded or Failed"
    Oct 31 09:34:19.811: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-482a5fad-b146-40e8-9368-19fee97a0c67 container test-container: <nil>
    STEP: delete the pod 10/31/23 09:34:20.063
    Oct 31 09:34:20.127: INFO: Waiting for pod pod-482a5fad-b146-40e8-9368-19fee97a0c67 to disappear
    Oct 31 09:34:20.204: INFO: Pod pod-482a5fad-b146-40e8-9368-19fee97a0c67 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:20.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7828" for this suite. 10/31/23 09:34:20.292
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:20.35
Oct 31 09:34:20.350: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 09:34:20.351
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:20.553
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:20.706
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943
STEP: Creating a ResourceQuota 10/31/23 09:34:20.804
STEP: Getting a ResourceQuota 10/31/23 09:34:20.865
STEP: Listing all ResourceQuotas with LabelSelector 10/31/23 09:34:20.954
STEP: Patching the ResourceQuota 10/31/23 09:34:21.007
STEP: Deleting a Collection of ResourceQuotas 10/31/23 09:34:21.095
STEP: Verifying the deleted ResourceQuota 10/31/23 09:34:21.187
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:21.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-8011" for this suite. 10/31/23 09:34:21.336
------------------------------
â€¢ [0.997 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should manage the lifecycle of a ResourceQuota [Conformance]
  test/e2e/apimachinery/resource_quota.go:943

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:20.35
    Oct 31 09:34:20.350: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 09:34:20.351
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:20.553
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:20.706
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of a ResourceQuota [Conformance]
      test/e2e/apimachinery/resource_quota.go:943
    STEP: Creating a ResourceQuota 10/31/23 09:34:20.804
    STEP: Getting a ResourceQuota 10/31/23 09:34:20.865
    STEP: Listing all ResourceQuotas with LabelSelector 10/31/23 09:34:20.954
    STEP: Patching the ResourceQuota 10/31/23 09:34:21.007
    STEP: Deleting a Collection of ResourceQuotas 10/31/23 09:34:21.095
    STEP: Verifying the deleted ResourceQuota 10/31/23 09:34:21.187
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:21.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-8011" for this suite. 10/31/23 09:34:21.336
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:21.358
Oct 31 09:34:21.359: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename disruption 10/31/23 09:34:21.36
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:21.547
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:21.73
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:21.826
Oct 31 09:34:21.826: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename disruption-2 10/31/23 09:34:21.827
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:22.055
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:22.235
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/apps/disruption.go:87
STEP: Waiting for the pdb to be processed 10/31/23 09:34:22.379
STEP: Waiting for the pdb to be processed 10/31/23 09:34:22.563
STEP: Waiting for the pdb to be processed 10/31/23 09:34:22.747
STEP: listing a collection of PDBs across all namespaces 10/31/23 09:34:22.84
STEP: listing a collection of PDBs in namespace disruption-566 10/31/23 09:34:22.888
STEP: deleting a collection of PDBs 10/31/23 09:34:22.925
STEP: Waiting for the PDB collection to be deleted 10/31/23 09:34:22.985
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:23.075: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:23.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  dump namespaces | framework.go:196
[DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-2-5711" for this suite. 10/31/23 09:34:23.21
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-566" for this suite. 10/31/23 09:34:23.263
------------------------------
â€¢ [1.959 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  Listing PodDisruptionBudgets for all namespaces
  test/e2e/apps/disruption.go:78
    should list and delete a collection of PodDisruptionBudgets [Conformance]
    test/e2e/apps/disruption.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:21.358
    Oct 31 09:34:21.359: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename disruption 10/31/23 09:34:21.36
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:21.547
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:21.73
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:21.826
    Oct 31 09:34:21.826: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename disruption-2 10/31/23 09:34:21.827
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:22.055
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:22.235
    [BeforeEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of PodDisruptionBudgets [Conformance]
      test/e2e/apps/disruption.go:87
    STEP: Waiting for the pdb to be processed 10/31/23 09:34:22.379
    STEP: Waiting for the pdb to be processed 10/31/23 09:34:22.563
    STEP: Waiting for the pdb to be processed 10/31/23 09:34:22.747
    STEP: listing a collection of PDBs across all namespaces 10/31/23 09:34:22.84
    STEP: listing a collection of PDBs in namespace disruption-566 10/31/23 09:34:22.888
    STEP: deleting a collection of PDBs 10/31/23 09:34:22.925
    STEP: Waiting for the PDB collection to be deleted 10/31/23 09:34:22.985
    [AfterEach] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:23.075: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:23.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] Listing PodDisruptionBudgets for all namespaces
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-2-5711" for this suite. 10/31/23 09:34:23.21
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-566" for this suite. 10/31/23 09:34:23.263
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] Job
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:23.318
Oct 31 09:34:23.318: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename job 10/31/23 09:34:23.32
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:23.469
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:23.601
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507
STEP: Creating a job 10/31/23 09:34:23.729
STEP: Ensuring active pods == parallelism 10/31/23 09:34:23.784
STEP: Orphaning one of the Job's Pods 10/31/23 09:34:25.794
Oct 31 09:34:26.377: INFO: Successfully updated pod "adopt-release-4sv8m"
STEP: Checking that the Job readopts the Pod 10/31/23 09:34:26.377
Oct 31 09:34:26.377: INFO: Waiting up to 15m0s for pod "adopt-release-4sv8m" in namespace "job-9622" to be "adopted"
Oct 31 09:34:26.425: INFO: Pod "adopt-release-4sv8m": Phase="Running", Reason="", readiness=true. Elapsed: 47.619573ms
Oct 31 09:34:28.495: INFO: Pod "adopt-release-4sv8m": Phase="Running", Reason="", readiness=true. Elapsed: 2.118004412s
Oct 31 09:34:28.495: INFO: Pod "adopt-release-4sv8m" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod 10/31/23 09:34:28.495
Oct 31 09:34:29.023: INFO: Successfully updated pod "adopt-release-4sv8m"
STEP: Checking that the Job releases the Pod 10/31/23 09:34:29.023
Oct 31 09:34:29.023: INFO: Waiting up to 15m0s for pod "adopt-release-4sv8m" in namespace "job-9622" to be "released"
Oct 31 09:34:29.063: INFO: Pod "adopt-release-4sv8m": Phase="Running", Reason="", readiness=true. Elapsed: 39.808772ms
Oct 31 09:34:31.085: INFO: Pod "adopt-release-4sv8m": Phase="Running", Reason="", readiness=true. Elapsed: 2.061884459s
Oct 31 09:34:31.085: INFO: Pod "adopt-release-4sv8m" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:31.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-9622" for this suite. 10/31/23 09:34:31.143
------------------------------
â€¢ [SLOW TEST] [7.915 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/apps/job.go:507

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:23.318
    Oct 31 09:34:23.318: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename job 10/31/23 09:34:23.32
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:23.469
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:23.601
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching orphans and release non-matching pods [Conformance]
      test/e2e/apps/job.go:507
    STEP: Creating a job 10/31/23 09:34:23.729
    STEP: Ensuring active pods == parallelism 10/31/23 09:34:23.784
    STEP: Orphaning one of the Job's Pods 10/31/23 09:34:25.794
    Oct 31 09:34:26.377: INFO: Successfully updated pod "adopt-release-4sv8m"
    STEP: Checking that the Job readopts the Pod 10/31/23 09:34:26.377
    Oct 31 09:34:26.377: INFO: Waiting up to 15m0s for pod "adopt-release-4sv8m" in namespace "job-9622" to be "adopted"
    Oct 31 09:34:26.425: INFO: Pod "adopt-release-4sv8m": Phase="Running", Reason="", readiness=true. Elapsed: 47.619573ms
    Oct 31 09:34:28.495: INFO: Pod "adopt-release-4sv8m": Phase="Running", Reason="", readiness=true. Elapsed: 2.118004412s
    Oct 31 09:34:28.495: INFO: Pod "adopt-release-4sv8m" satisfied condition "adopted"
    STEP: Removing the labels from the Job's Pod 10/31/23 09:34:28.495
    Oct 31 09:34:29.023: INFO: Successfully updated pod "adopt-release-4sv8m"
    STEP: Checking that the Job releases the Pod 10/31/23 09:34:29.023
    Oct 31 09:34:29.023: INFO: Waiting up to 15m0s for pod "adopt-release-4sv8m" in namespace "job-9622" to be "released"
    Oct 31 09:34:29.063: INFO: Pod "adopt-release-4sv8m": Phase="Running", Reason="", readiness=true. Elapsed: 39.808772ms
    Oct 31 09:34:31.085: INFO: Pod "adopt-release-4sv8m": Phase="Running", Reason="", readiness=true. Elapsed: 2.061884459s
    Oct 31 09:34:31.085: INFO: Pod "adopt-release-4sv8m" satisfied condition "released"
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:31.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-9622" for this suite. 10/31/23 09:34:31.143
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial]
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:443
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:31.234
Oct 31 09:34:31.234: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename daemonsets 10/31/23 09:34:31.235
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:31.401
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:31.534
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:157
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:443
Oct 31 09:34:31.974: INFO: Create a RollingUpdate DaemonSet
Oct 31 09:34:31.986: INFO: Check that daemon pods launch on every node of the cluster
Oct 31 09:34:32.079: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:34:32.079: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 09:34:33.145: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:34:33.145: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 09:34:34.139: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Oct 31 09:34:34.139: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
Oct 31 09:34:34.139: INFO: Update the DaemonSet to trigger a rollout
Oct 31 09:34:34.208: INFO: Updating DaemonSet daemon-set
Oct 31 09:34:37.368: INFO: Roll back the DaemonSet before rollout is complete
Oct 31 09:34:37.439: INFO: Updating DaemonSet daemon-set
Oct 31 09:34:37.439: INFO: Make sure DaemonSet rollback is complete
Oct 31 09:34:40.532: INFO: Pod daemon-set-wbdvt is not available
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:122
STEP: Deleting DaemonSet "daemon-set" 10/31/23 09:34:40.616
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2004, will wait for the garbage collector to delete the pods 10/31/23 09:34:40.617
Oct 31 09:34:40.801: INFO: Deleting DaemonSet.extensions daemon-set took: 87.637248ms
Oct 31 09:34:40.902: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.924974ms
Oct 31 09:34:42.477: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:34:42.478: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Oct 31 09:34:42.569: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16144"},"items":null}

Oct 31 09:34:42.665: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16144"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:42.879: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-2004" for this suite. 10/31/23 09:34:42.938
------------------------------
â€¢ [SLOW TEST] [11.761 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/apps/daemon_set.go:443

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:31.234
    Oct 31 09:34:31.234: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename daemonsets 10/31/23 09:34:31.235
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:31.401
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:31.534
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:157
    [It] should rollback without unnecessary restarts [Conformance]
      test/e2e/apps/daemon_set.go:443
    Oct 31 09:34:31.974: INFO: Create a RollingUpdate DaemonSet
    Oct 31 09:34:31.986: INFO: Check that daemon pods launch on every node of the cluster
    Oct 31 09:34:32.079: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:34:32.079: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 09:34:33.145: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:34:33.145: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 09:34:34.139: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Oct 31 09:34:34.139: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    Oct 31 09:34:34.139: INFO: Update the DaemonSet to trigger a rollout
    Oct 31 09:34:34.208: INFO: Updating DaemonSet daemon-set
    Oct 31 09:34:37.368: INFO: Roll back the DaemonSet before rollout is complete
    Oct 31 09:34:37.439: INFO: Updating DaemonSet daemon-set
    Oct 31 09:34:37.439: INFO: Make sure DaemonSet rollback is complete
    Oct 31 09:34:40.532: INFO: Pod daemon-set-wbdvt is not available
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:122
    STEP: Deleting DaemonSet "daemon-set" 10/31/23 09:34:40.616
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2004, will wait for the garbage collector to delete the pods 10/31/23 09:34:40.617
    Oct 31 09:34:40.801: INFO: Deleting DaemonSet.extensions daemon-set took: 87.637248ms
    Oct 31 09:34:40.902: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.924974ms
    Oct 31 09:34:42.477: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:34:42.478: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Oct 31 09:34:42.569: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16144"},"items":null}

    Oct 31 09:34:42.665: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16144"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:42.879: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-2004" for this suite. 10/31/23 09:34:42.938
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:42.995
Oct 31 09:34:42.996: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:34:42.997
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:43.141
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:43.357
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167
STEP: Creating a pod to test emptydir 0644 on node default medium 10/31/23 09:34:43.498
Oct 31 09:34:43.563: INFO: Waiting up to 5m0s for pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f" in namespace "emptydir-4643" to be "Succeeded or Failed"
Oct 31 09:34:43.614: INFO: Pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f": Phase="Pending", Reason="", readiness=false. Elapsed: 50.425567ms
Oct 31 09:34:45.665: INFO: Pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.102066538s
Oct 31 09:34:47.623: INFO: Pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.059742689s
STEP: Saw pod success 10/31/23 09:34:47.623
Oct 31 09:34:47.623: INFO: Pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f" satisfied condition "Succeeded or Failed"
Oct 31 09:34:47.674: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f container test-container: <nil>
STEP: delete the pod 10/31/23 09:34:47.874
Oct 31 09:34:47.938: INFO: Waiting for pod pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f to disappear
Oct 31 09:34:47.993: INFO: Pod pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:47.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-4643" for this suite. 10/31/23 09:34:48.046
------------------------------
â€¢ [SLOW TEST] [5.146 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:42.995
    Oct 31 09:34:42.996: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:34:42.997
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:43.141
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:43.357
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:167
    STEP: Creating a pod to test emptydir 0644 on node default medium 10/31/23 09:34:43.498
    Oct 31 09:34:43.563: INFO: Waiting up to 5m0s for pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f" in namespace "emptydir-4643" to be "Succeeded or Failed"
    Oct 31 09:34:43.614: INFO: Pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f": Phase="Pending", Reason="", readiness=false. Elapsed: 50.425567ms
    Oct 31 09:34:45.665: INFO: Pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.102066538s
    Oct 31 09:34:47.623: INFO: Pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.059742689s
    STEP: Saw pod success 10/31/23 09:34:47.623
    Oct 31 09:34:47.623: INFO: Pod "pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f" satisfied condition "Succeeded or Failed"
    Oct 31 09:34:47.674: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f container test-container: <nil>
    STEP: delete the pod 10/31/23 09:34:47.874
    Oct 31 09:34:47.938: INFO: Waiting for pod pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f to disappear
    Oct 31 09:34:47.993: INFO: Pod pod-a1753ec2-fa70-425a-ac4f-52ba7d15016f no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:47.994: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-4643" for this suite. 10/31/23 09:34:48.046
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:48.142
Oct 31 09:34:48.142: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 09:34:48.144
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:48.601
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:48.735
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68
STEP: Creating secret with name secret-test-055fb7c9-75cf-4c08-a04b-82780b9d53eb 10/31/23 09:34:48.836
STEP: Creating a pod to test consume secrets 10/31/23 09:34:48.917
Oct 31 09:34:48.943: INFO: Waiting up to 5m0s for pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e" in namespace "secrets-4457" to be "Succeeded or Failed"
Oct 31 09:34:48.977: INFO: Pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e": Phase="Pending", Reason="", readiness=false. Elapsed: 33.430164ms
Oct 31 09:34:51.008: INFO: Pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e": Phase="Running", Reason="", readiness=false. Elapsed: 2.065085183s
Oct 31 09:34:52.984: INFO: Pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.04123669s
STEP: Saw pod success 10/31/23 09:34:52.985
Oct 31 09:34:52.985: INFO: Pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e" satisfied condition "Succeeded or Failed"
Oct 31 09:34:53.000: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e container secret-volume-test: <nil>
STEP: delete the pod 10/31/23 09:34:53.207
Oct 31 09:34:53.285: INFO: Waiting for pod pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e to disappear
Oct 31 09:34:53.333: INFO: Pod pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:53.334: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4457" for this suite. 10/31/23 09:34:53.386
------------------------------
â€¢ [SLOW TEST] [5.296 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:48.142
    Oct 31 09:34:48.142: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 09:34:48.144
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:48.601
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:48.735
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:68
    STEP: Creating secret with name secret-test-055fb7c9-75cf-4c08-a04b-82780b9d53eb 10/31/23 09:34:48.836
    STEP: Creating a pod to test consume secrets 10/31/23 09:34:48.917
    Oct 31 09:34:48.943: INFO: Waiting up to 5m0s for pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e" in namespace "secrets-4457" to be "Succeeded or Failed"
    Oct 31 09:34:48.977: INFO: Pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e": Phase="Pending", Reason="", readiness=false. Elapsed: 33.430164ms
    Oct 31 09:34:51.008: INFO: Pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e": Phase="Running", Reason="", readiness=false. Elapsed: 2.065085183s
    Oct 31 09:34:52.984: INFO: Pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.04123669s
    STEP: Saw pod success 10/31/23 09:34:52.985
    Oct 31 09:34:52.985: INFO: Pod "pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e" satisfied condition "Succeeded or Failed"
    Oct 31 09:34:53.000: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e container secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 09:34:53.207
    Oct 31 09:34:53.285: INFO: Waiting for pod pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e to disappear
    Oct 31 09:34:53.333: INFO: Pod pod-secrets-7df2cbd4-69fd-4703-be5b-d0c4a81c434e no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:53.334: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4457" for this suite. 10/31/23 09:34:53.386
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:53.445
Oct 31 09:34:53.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 09:34:53.447
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:53.548
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:53.71
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:145
Oct 31 09:34:53.810: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:34:59.282: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-4633" for this suite. 10/31/23 09:34:59.374
------------------------------
â€¢ [SLOW TEST] [6.031 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    getting/updating/patching custom resource definition status sub-resource works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:145

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:53.445
    Oct 31 09:34:53.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 09:34:53.447
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:53.548
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:53.71
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:145
    Oct 31 09:34:53.810: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:34:59.282: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-4633" for this suite. 10/31/23 09:34:59.374
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] Secrets
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:34:59.476
Oct 31 09:34:59.476: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 09:34:59.478
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:59.706
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:59.846
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95
STEP: creating secret secrets-7612/secret-test-d5ff6350-d53d-4b2d-8291-9285c63a9f7e 10/31/23 09:34:59.945
STEP: Creating a pod to test consume secrets 10/31/23 09:35:00.034
Oct 31 09:35:00.073: INFO: Waiting up to 5m0s for pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b" in namespace "secrets-7612" to be "Succeeded or Failed"
Oct 31 09:35:00.142: INFO: Pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b": Phase="Pending", Reason="", readiness=false. Elapsed: 69.203715ms
Oct 31 09:35:02.151: INFO: Pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.07771182s
Oct 31 09:35:04.149: INFO: Pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.076500783s
STEP: Saw pod success 10/31/23 09:35:04.15
Oct 31 09:35:04.150: INFO: Pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b" satisfied condition "Succeeded or Failed"
Oct 31 09:35:04.157: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-configmaps-27fe5864-1211-46af-99df-503a4243646b container env-test: <nil>
STEP: delete the pod 10/31/23 09:35:04.298
Oct 31 09:35:04.370: INFO: Waiting for pod pod-configmaps-27fe5864-1211-46af-99df-503a4243646b to disappear
Oct 31 09:35:04.417: INFO: Pod pod-configmaps-27fe5864-1211-46af-99df-503a4243646b no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:04.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-7612" for this suite. 10/31/23 09:35:04.463
------------------------------
â€¢ [SLOW TEST] [5.098 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:95

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:34:59.476
    Oct 31 09:34:59.476: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 09:34:59.478
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:34:59.706
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:34:59.846
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:95
    STEP: creating secret secrets-7612/secret-test-d5ff6350-d53d-4b2d-8291-9285c63a9f7e 10/31/23 09:34:59.945
    STEP: Creating a pod to test consume secrets 10/31/23 09:35:00.034
    Oct 31 09:35:00.073: INFO: Waiting up to 5m0s for pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b" in namespace "secrets-7612" to be "Succeeded or Failed"
    Oct 31 09:35:00.142: INFO: Pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b": Phase="Pending", Reason="", readiness=false. Elapsed: 69.203715ms
    Oct 31 09:35:02.151: INFO: Pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.07771182s
    Oct 31 09:35:04.149: INFO: Pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.076500783s
    STEP: Saw pod success 10/31/23 09:35:04.15
    Oct 31 09:35:04.150: INFO: Pod "pod-configmaps-27fe5864-1211-46af-99df-503a4243646b" satisfied condition "Succeeded or Failed"
    Oct 31 09:35:04.157: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-configmaps-27fe5864-1211-46af-99df-503a4243646b container env-test: <nil>
    STEP: delete the pod 10/31/23 09:35:04.298
    Oct 31 09:35:04.370: INFO: Waiting for pod pod-configmaps-27fe5864-1211-46af-99df-503a4243646b to disappear
    Oct 31 09:35:04.417: INFO: Pod pod-configmaps-27fe5864-1211-46af-99df-503a4243646b no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:04.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-7612" for this suite. 10/31/23 09:35:04.463
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:04.586
Oct 31 09:35:04.587: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:35:04.588
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:04.815
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:04.952
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:35:05.058
Oct 31 09:35:05.084: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1" in namespace "projected-5015" to be "Succeeded or Failed"
Oct 31 09:35:05.143: INFO: Pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1": Phase="Pending", Reason="", readiness=false. Elapsed: 59.129245ms
Oct 31 09:35:07.151: INFO: Pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.066433864s
Oct 31 09:35:09.194: INFO: Pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.109558586s
STEP: Saw pod success 10/31/23 09:35:09.194
Oct 31 09:35:09.194: INFO: Pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1" satisfied condition "Succeeded or Failed"
Oct 31 09:35:09.246: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1 container client-container: <nil>
STEP: delete the pod 10/31/23 09:35:09.419
Oct 31 09:35:09.499: INFO: Waiting for pod downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1 to disappear
Oct 31 09:35:09.593: INFO: Pod downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:09.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-5015" for this suite. 10/31/23 09:35:09.65
------------------------------
â€¢ [SLOW TEST] [5.127 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:04.586
    Oct 31 09:35:04.587: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:35:04.588
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:04.815
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:04.952
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:84
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:35:05.058
    Oct 31 09:35:05.084: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1" in namespace "projected-5015" to be "Succeeded or Failed"
    Oct 31 09:35:05.143: INFO: Pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1": Phase="Pending", Reason="", readiness=false. Elapsed: 59.129245ms
    Oct 31 09:35:07.151: INFO: Pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.066433864s
    Oct 31 09:35:09.194: INFO: Pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.109558586s
    STEP: Saw pod success 10/31/23 09:35:09.194
    Oct 31 09:35:09.194: INFO: Pod "downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1" satisfied condition "Succeeded or Failed"
    Oct 31 09:35:09.246: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1 container client-container: <nil>
    STEP: delete the pod 10/31/23 09:35:09.419
    Oct 31 09:35:09.499: INFO: Waiting for pod downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1 to disappear
    Oct 31 09:35:09.593: INFO: Pod downwardapi-volume-d0ed9ef5-e09a-44f1-aae0-240212465ae1 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:09.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-5015" for this suite. 10/31/23 09:35:09.65
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:09.718
Oct 31 09:35:09.718: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:35:09.72
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:09.875
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:10.024
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:35:10.118
Oct 31 09:35:10.181: INFO: Waiting up to 5m0s for pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3" in namespace "downward-api-2394" to be "Succeeded or Failed"
Oct 31 09:35:10.211: INFO: Pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3": Phase="Pending", Reason="", readiness=false. Elapsed: 28.958503ms
Oct 31 09:35:12.219: INFO: Pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.036999534s
Oct 31 09:35:14.231: INFO: Pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.049808193s
STEP: Saw pod success 10/31/23 09:35:14.231
Oct 31 09:35:14.232: INFO: Pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3" satisfied condition "Succeeded or Failed"
Oct 31 09:35:14.285: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3 container client-container: <nil>
STEP: delete the pod 10/31/23 09:35:14.379
Oct 31 09:35:14.451: INFO: Waiting for pod downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3 to disappear
Oct 31 09:35:14.539: INFO: Pod downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:14.540: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-2394" for this suite. 10/31/23 09:35:14.56
------------------------------
â€¢ [4.912 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:09.718
    Oct 31 09:35:09.718: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:35:09.72
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:09.875
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:10.024
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:193
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:35:10.118
    Oct 31 09:35:10.181: INFO: Waiting up to 5m0s for pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3" in namespace "downward-api-2394" to be "Succeeded or Failed"
    Oct 31 09:35:10.211: INFO: Pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3": Phase="Pending", Reason="", readiness=false. Elapsed: 28.958503ms
    Oct 31 09:35:12.219: INFO: Pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.036999534s
    Oct 31 09:35:14.231: INFO: Pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.049808193s
    STEP: Saw pod success 10/31/23 09:35:14.231
    Oct 31 09:35:14.232: INFO: Pod "downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3" satisfied condition "Succeeded or Failed"
    Oct 31 09:35:14.285: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3 container client-container: <nil>
    STEP: delete the pod 10/31/23 09:35:14.379
    Oct 31 09:35:14.451: INFO: Waiting for pod downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3 to disappear
    Oct 31 09:35:14.539: INFO: Pod downwardapi-volume-53709a3a-39b2-4817-8c54-41e855c57cb3 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:14.540: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-2394" for this suite. 10/31/23 09:35:14.56
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:14.632
Oct 31 09:35:14.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename init-container 10/31/23 09:35:14.634
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:14.817
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:14.909
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177
STEP: creating the pod 10/31/23 09:35:15.007
Oct 31 09:35:15.008: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:20.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-8578" for this suite. 10/31/23 09:35:20.891
------------------------------
â€¢ [SLOW TEST] [6.312 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:14.632
    Oct 31 09:35:14.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename init-container 10/31/23 09:35:14.634
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:14.817
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:14.909
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:177
    STEP: creating the pod 10/31/23 09:35:15.007
    Oct 31 09:35:15.008: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:20.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-8578" for this suite. 10/31/23 09:35:20.891
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:20.947
Oct 31 09:35:20.947: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:35:20.949
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:21.107
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:21.246
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87
STEP: Creating a pod to test emptydir volume type on tmpfs 10/31/23 09:35:21.351
Oct 31 09:35:21.409: INFO: Waiting up to 5m0s for pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6" in namespace "emptydir-2692" to be "Succeeded or Failed"
Oct 31 09:35:21.418: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6": Phase="Pending", Reason="", readiness=false. Elapsed: 8.24998ms
Oct 31 09:35:23.430: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6": Phase="Running", Reason="", readiness=true. Elapsed: 2.020261789s
Oct 31 09:35:25.429: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6": Phase="Running", Reason="", readiness=false. Elapsed: 4.019103413s
Oct 31 09:35:27.427: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017903597s
STEP: Saw pod success 10/31/23 09:35:27.427
Oct 31 09:35:27.428: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6" satisfied condition "Succeeded or Failed"
Oct 31 09:35:27.481: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6 container test-container: <nil>
STEP: delete the pod 10/31/23 09:35:27.625
Oct 31 09:35:27.714: INFO: Waiting for pod pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6 to disappear
Oct 31 09:35:27.766: INFO: Pod pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:27.766: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-2692" for this suite. 10/31/23 09:35:27.822
------------------------------
â€¢ [SLOW TEST] [6.894 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:20.947
    Oct 31 09:35:20.947: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:35:20.949
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:21.107
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:21.246
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:87
    STEP: Creating a pod to test emptydir volume type on tmpfs 10/31/23 09:35:21.351
    Oct 31 09:35:21.409: INFO: Waiting up to 5m0s for pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6" in namespace "emptydir-2692" to be "Succeeded or Failed"
    Oct 31 09:35:21.418: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6": Phase="Pending", Reason="", readiness=false. Elapsed: 8.24998ms
    Oct 31 09:35:23.430: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6": Phase="Running", Reason="", readiness=true. Elapsed: 2.020261789s
    Oct 31 09:35:25.429: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6": Phase="Running", Reason="", readiness=false. Elapsed: 4.019103413s
    Oct 31 09:35:27.427: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.017903597s
    STEP: Saw pod success 10/31/23 09:35:27.427
    Oct 31 09:35:27.428: INFO: Pod "pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6" satisfied condition "Succeeded or Failed"
    Oct 31 09:35:27.481: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6 container test-container: <nil>
    STEP: delete the pod 10/31/23 09:35:27.625
    Oct 31 09:35:27.714: INFO: Waiting for pod pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6 to disappear
    Oct 31 09:35:27.766: INFO: Pod pod-906c48d9-010f-49fc-a6d7-fc9bc4ddf6a6 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:27.766: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-2692" for this suite. 10/31/23 09:35:27.822
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:27.854
Oct 31 09:35:27.855: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:35:27.855
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:28.078
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:28.193
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:35:28.29
Oct 31 09:35:28.352: INFO: Waiting up to 5m0s for pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a" in namespace "projected-7088" to be "Succeeded or Failed"
Oct 31 09:35:28.370: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a": Phase="Pending", Reason="", readiness=false. Elapsed: 17.675039ms
Oct 31 09:35:30.422: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a": Phase="Running", Reason="", readiness=true. Elapsed: 2.069840262s
Oct 31 09:35:32.378: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a": Phase="Running", Reason="", readiness=false. Elapsed: 4.026211329s
Oct 31 09:35:34.380: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.028062875s
STEP: Saw pod success 10/31/23 09:35:34.38
Oct 31 09:35:34.381: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a" satisfied condition "Succeeded or Failed"
Oct 31 09:35:34.478: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a container client-container: <nil>
STEP: delete the pod 10/31/23 09:35:34.533
Oct 31 09:35:34.609: INFO: Waiting for pod downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a to disappear
Oct 31 09:35:34.692: INFO: Pod downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:34.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7088" for this suite. 10/31/23 09:35:34.744
------------------------------
â€¢ [SLOW TEST] [6.973 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:27.854
    Oct 31 09:35:27.855: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:35:27.855
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:28.078
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:28.193
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:261
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:35:28.29
    Oct 31 09:35:28.352: INFO: Waiting up to 5m0s for pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a" in namespace "projected-7088" to be "Succeeded or Failed"
    Oct 31 09:35:28.370: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a": Phase="Pending", Reason="", readiness=false. Elapsed: 17.675039ms
    Oct 31 09:35:30.422: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a": Phase="Running", Reason="", readiness=true. Elapsed: 2.069840262s
    Oct 31 09:35:32.378: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a": Phase="Running", Reason="", readiness=false. Elapsed: 4.026211329s
    Oct 31 09:35:34.380: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.028062875s
    STEP: Saw pod success 10/31/23 09:35:34.38
    Oct 31 09:35:34.381: INFO: Pod "downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a" satisfied condition "Succeeded or Failed"
    Oct 31 09:35:34.478: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a container client-container: <nil>
    STEP: delete the pod 10/31/23 09:35:34.533
    Oct 31 09:35:34.609: INFO: Waiting for pod downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a to disappear
    Oct 31 09:35:34.692: INFO: Pod downwardapi-volume-737fb293-7e07-43f5-a8c0-0d2e776af05a no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:34.693: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7088" for this suite. 10/31/23 09:35:34.744
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
[BeforeEach] [sig-network] Service endpoints latency
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:34.832
Oct 31 09:35:34.832: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename svc-latency 10/31/23 09:35:34.834
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:34.986
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:35.118
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:31
[It] should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59
Oct 31 09:35:35.218: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: creating replication controller svc-latency-rc in namespace svc-latency-515 10/31/23 09:35:35.22
I1031 09:35:35.288293      18 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-515, replica count: 1
I1031 09:35:36.390152      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I1031 09:35:37.390423      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Oct 31 09:35:37.552: INFO: Created: latency-svc-zs4zl
Oct 31 09:35:37.552: INFO: Got endpoints: latency-svc-zs4zl [60.735696ms]
Oct 31 09:35:37.573: INFO: Created: latency-svc-c7gfd
Oct 31 09:35:37.587: INFO: Got endpoints: latency-svc-c7gfd [32.323835ms]
Oct 31 09:35:37.587: INFO: Created: latency-svc-dlz95
Oct 31 09:35:37.594: INFO: Created: latency-svc-c6xsg
Oct 31 09:35:37.615: INFO: Got endpoints: latency-svc-dlz95 [61.403967ms]
Oct 31 09:35:37.616: INFO: Got endpoints: latency-svc-c6xsg [63.13852ms]
Oct 31 09:35:37.624: INFO: Created: latency-svc-vmnsz
Oct 31 09:35:37.625: INFO: Got endpoints: latency-svc-vmnsz [71.764176ms]
Oct 31 09:35:37.676: INFO: Created: latency-svc-tt6t9
Oct 31 09:35:37.681: INFO: Got endpoints: latency-svc-tt6t9 [126.275208ms]
Oct 31 09:35:37.686: INFO: Created: latency-svc-jtmwz
Oct 31 09:35:37.695: INFO: Got endpoints: latency-svc-jtmwz [140.253091ms]
Oct 31 09:35:37.695: INFO: Created: latency-svc-r7cn7
Oct 31 09:35:37.701: INFO: Got endpoints: latency-svc-r7cn7 [146.046512ms]
Oct 31 09:35:37.705: INFO: Created: latency-svc-fkn6t
Oct 31 09:35:37.776: INFO: Got endpoints: latency-svc-fkn6t [220.741297ms]
Oct 31 09:35:37.777: INFO: Created: latency-svc-hvm8v
Oct 31 09:35:37.789: INFO: Got endpoints: latency-svc-hvm8v [234.133332ms]
Oct 31 09:35:37.795: INFO: Created: latency-svc-8grgg
Oct 31 09:35:37.803: INFO: Got endpoints: latency-svc-8grgg [247.939825ms]
Oct 31 09:35:37.872: INFO: Created: latency-svc-q8m5l
Oct 31 09:35:37.873: INFO: Created: latency-svc-4kvvw
Oct 31 09:35:37.889: INFO: Got endpoints: latency-svc-q8m5l [333.677518ms]
Oct 31 09:35:37.889: INFO: Got endpoints: latency-svc-4kvvw [333.540666ms]
Oct 31 09:35:37.904: INFO: Created: latency-svc-q4qn7
Oct 31 09:35:37.904: INFO: Got endpoints: latency-svc-q4qn7 [348.970879ms]
Oct 31 09:35:37.909: INFO: Created: latency-svc-bqwqc
Oct 31 09:35:37.921: INFO: Got endpoints: latency-svc-bqwqc [365.414187ms]
Oct 31 09:35:37.921: INFO: Created: latency-svc-wlswz
Oct 31 09:35:37.977: INFO: Got endpoints: latency-svc-wlswz [421.626192ms]
Oct 31 09:35:37.978: INFO: Created: latency-svc-dflzz
Oct 31 09:35:37.983: INFO: Got endpoints: latency-svc-dflzz [395.699718ms]
Oct 31 09:35:37.984: INFO: Created: latency-svc-vfcgd
Oct 31 09:35:37.991: INFO: Got endpoints: latency-svc-vfcgd [374.514233ms]
Oct 31 09:35:37.999: INFO: Created: latency-svc-x57cd
Oct 31 09:35:38.027: INFO: Got endpoints: latency-svc-x57cd [402.604905ms]
Oct 31 09:35:38.028: INFO: Created: latency-svc-jf45k
Oct 31 09:35:38.070: INFO: Created: latency-svc-qbvkb
Oct 31 09:35:38.075: INFO: Got endpoints: latency-svc-jf45k [460.011211ms]
Oct 31 09:35:38.079: INFO: Got endpoints: latency-svc-qbvkb [397.386653ms]
Oct 31 09:35:38.086: INFO: Created: latency-svc-rkth5
Oct 31 09:35:38.107: INFO: Created: latency-svc-g5bmc
Oct 31 09:35:38.107: INFO: Got endpoints: latency-svc-rkth5 [411.465516ms]
Oct 31 09:35:38.113: INFO: Got endpoints: latency-svc-g5bmc [412.426314ms]
Oct 31 09:35:38.118: INFO: Created: latency-svc-jl2w5
Oct 31 09:35:38.123: INFO: Got endpoints: latency-svc-jl2w5 [347.473445ms]
Oct 31 09:35:38.125: INFO: Created: latency-svc-7xtbz
Oct 31 09:35:38.178: INFO: Got endpoints: latency-svc-7xtbz [389.286558ms]
Oct 31 09:35:38.186: INFO: Created: latency-svc-g9tgk
Oct 31 09:35:38.188: INFO: Created: latency-svc-rqbz7
Oct 31 09:35:38.189: INFO: Got endpoints: latency-svc-g9tgk [386.394404ms]
Oct 31 09:35:38.195: INFO: Got endpoints: latency-svc-rqbz7 [306.0632ms]
Oct 31 09:35:38.196: INFO: Created: latency-svc-984t8
Oct 31 09:35:38.207: INFO: Got endpoints: latency-svc-984t8 [317.200848ms]
Oct 31 09:35:38.471: INFO: Created: latency-svc-g4jsk
Oct 31 09:35:38.490: INFO: Got endpoints: latency-svc-g4jsk [585.473879ms]
Oct 31 09:35:38.492: INFO: Created: latency-svc-4gmh7
Oct 31 09:35:38.582: INFO: Got endpoints: latency-svc-4gmh7 [661.321982ms]
Oct 31 09:35:38.583: INFO: Created: latency-svc-4q76d
Oct 31 09:35:38.592: INFO: Created: latency-svc-j5zns
Oct 31 09:35:38.602: INFO: Got endpoints: latency-svc-j5zns [619.019892ms]
Oct 31 09:35:38.603: INFO: Got endpoints: latency-svc-4q76d [625.965726ms]
Oct 31 09:35:38.604: INFO: Created: latency-svc-hpxj2
Oct 31 09:35:38.673: INFO: Created: latency-svc-qxtl6
Oct 31 09:35:38.673: INFO: Got endpoints: latency-svc-qxtl6 [645.74718ms]
Oct 31 09:35:38.674: INFO: Got endpoints: latency-svc-hpxj2 [683.045768ms]
Oct 31 09:35:38.676: INFO: Created: latency-svc-z2n8v
Oct 31 09:35:38.684: INFO: Got endpoints: latency-svc-z2n8v [607.758159ms]
Oct 31 09:35:38.685: INFO: Created: latency-svc-rsb4v
Oct 31 09:35:38.691: INFO: Got endpoints: latency-svc-rsb4v [611.977327ms]
Oct 31 09:35:38.773: INFO: Created: latency-svc-s8ngp
Oct 31 09:35:38.788: INFO: Created: latency-svc-8vxp9
Oct 31 09:35:38.790: INFO: Got endpoints: latency-svc-s8ngp [682.434154ms]
Oct 31 09:35:38.795: INFO: Got endpoints: latency-svc-8vxp9 [681.589277ms]
Oct 31 09:35:38.800: INFO: Created: latency-svc-7wvjq
Oct 31 09:35:38.805: INFO: Got endpoints: latency-svc-7wvjq [681.346473ms]
Oct 31 09:35:38.813: INFO: Created: latency-svc-fd6bh
Oct 31 09:35:38.820: INFO: Created: latency-svc-s2khq
Oct 31 09:35:38.880: INFO: Got endpoints: latency-svc-s2khq [690.573994ms]
Oct 31 09:35:38.881: INFO: Got endpoints: latency-svc-fd6bh [702.806452ms]
Oct 31 09:35:38.883: INFO: Created: latency-svc-8xs7n
Oct 31 09:35:38.889: INFO: Got endpoints: latency-svc-8xs7n [694.583313ms]
Oct 31 09:35:38.904: INFO: Created: latency-svc-zq259
Oct 31 09:35:38.913: INFO: Got endpoints: latency-svc-zq259 [706.392156ms]
Oct 31 09:35:38.918: INFO: Created: latency-svc-lpxw7
Oct 31 09:35:38.919: INFO: Created: latency-svc-s9gwc
Oct 31 09:35:38.976: INFO: Created: latency-svc-k8dwd
Oct 31 09:35:38.978: INFO: Created: latency-svc-hvnhs
Oct 31 09:35:38.992: INFO: Created: latency-svc-m6ht6
Oct 31 09:35:39.012: INFO: Created: latency-svc-pj4k4
Oct 31 09:35:39.013: INFO: Created: latency-svc-hr5mj
Oct 31 09:35:39.042: INFO: Created: latency-svc-jb65h
Oct 31 09:35:39.045: INFO: Got endpoints: latency-svc-s9gwc [463.423249ms]
Oct 31 09:35:39.058: INFO: Got endpoints: latency-svc-hvnhs [455.747844ms]
Oct 31 09:35:39.058: INFO: Got endpoints: latency-svc-lpxw7 [568.278026ms]
Oct 31 09:35:39.060: INFO: Got endpoints: latency-svc-m6ht6 [386.995302ms]
Oct 31 09:35:39.062: INFO: Got endpoints: latency-svc-k8dwd [458.479882ms]
Oct 31 09:35:39.074: INFO: Created: latency-svc-jr6bj
Oct 31 09:35:39.100: INFO: Got endpoints: latency-svc-jr6bj [309.773202ms]
Oct 31 09:35:39.100: INFO: Got endpoints: latency-svc-pj4k4 [426.142669ms]
Oct 31 09:35:39.101: INFO: Got endpoints: latency-svc-jb65h [409.497442ms]
Oct 31 09:35:39.101: INFO: Got endpoints: latency-svc-hr5mj [417.318689ms]
Oct 31 09:35:39.118: INFO: Created: latency-svc-rlgqk
Oct 31 09:35:39.145: INFO: Got endpoints: latency-svc-rlgqk [349.492037ms]
Oct 31 09:35:39.174: INFO: Created: latency-svc-fcb8m
Oct 31 09:35:39.177: INFO: Got endpoints: latency-svc-fcb8m [371.65902ms]
Oct 31 09:35:39.181: INFO: Created: latency-svc-dn4d5
Oct 31 09:35:39.195: INFO: Got endpoints: latency-svc-dn4d5 [313.902498ms]
Oct 31 09:35:39.199: INFO: Created: latency-svc-vckqb
Oct 31 09:35:39.213: INFO: Got endpoints: latency-svc-vckqb [331.237028ms]
Oct 31 09:35:39.229: INFO: Created: latency-svc-bdqlb
Oct 31 09:35:39.314: INFO: Got endpoints: latency-svc-bdqlb [424.837273ms]
Oct 31 09:35:39.317: INFO: Created: latency-svc-m2h9g
Oct 31 09:35:39.327: INFO: Got endpoints: latency-svc-m2h9g [413.797995ms]
Oct 31 09:35:39.333: INFO: Created: latency-svc-x4k6m
Oct 31 09:35:39.340: INFO: Got endpoints: latency-svc-x4k6m [294.601106ms]
Oct 31 09:35:39.343: INFO: Created: latency-svc-h6dcm
Oct 31 09:35:39.346: INFO: Got endpoints: latency-svc-h6dcm [287.384477ms]
Oct 31 09:35:39.346: INFO: Created: latency-svc-8d922
Oct 31 09:35:39.371: INFO: Got endpoints: latency-svc-8d922 [312.564924ms]
Oct 31 09:35:39.375: INFO: Created: latency-svc-4cs2m
Oct 31 09:35:39.382: INFO: Got endpoints: latency-svc-4cs2m [321.616487ms]
Oct 31 09:35:39.385: INFO: Created: latency-svc-vkc6w
Oct 31 09:35:39.389: INFO: Created: latency-svc-x6tgc
Oct 31 09:35:39.395: INFO: Got endpoints: latency-svc-vkc6w [332.783421ms]
Oct 31 09:35:39.399: INFO: Got endpoints: latency-svc-x6tgc [299.007216ms]
Oct 31 09:35:39.401: INFO: Created: latency-svc-w42p5
Oct 31 09:35:39.418: INFO: Got endpoints: latency-svc-w42p5 [317.455313ms]
Oct 31 09:35:39.419: INFO: Created: latency-svc-2l5ph
Oct 31 09:35:39.473: INFO: Got endpoints: latency-svc-2l5ph [369.609244ms]
Oct 31 09:35:39.491: INFO: Created: latency-svc-58sbl
Oct 31 09:35:39.491: INFO: Got endpoints: latency-svc-58sbl [388.806468ms]
Oct 31 09:35:39.492: INFO: Created: latency-svc-gk8mc
Oct 31 09:35:39.494: INFO: Got endpoints: latency-svc-gk8mc [349.404888ms]
Oct 31 09:35:39.521: INFO: Created: latency-svc-4hxg2
Oct 31 09:35:39.521: INFO: Created: latency-svc-qt2vm
Oct 31 09:35:39.521: INFO: Got endpoints: latency-svc-qt2vm [344.26946ms]
Oct 31 09:35:39.579: INFO: Got endpoints: latency-svc-4hxg2 [384.461143ms]
Oct 31 09:35:39.594: INFO: Created: latency-svc-65vt9
Oct 31 09:35:39.597: INFO: Created: latency-svc-pq9jw
Oct 31 09:35:39.602: INFO: Got endpoints: latency-svc-65vt9 [388.755864ms]
Oct 31 09:35:39.609: INFO: Created: latency-svc-wjtzc
Oct 31 09:35:39.613: INFO: Created: latency-svc-45qnq
Oct 31 09:35:39.628: INFO: Created: latency-svc-86vv5
Oct 31 09:35:39.637: INFO: Created: latency-svc-vjhs8
Oct 31 09:35:39.678: INFO: Got endpoints: latency-svc-pq9jw [363.686843ms]
Oct 31 09:35:39.679: INFO: Created: latency-svc-w68xj
Oct 31 09:35:39.694: INFO: Created: latency-svc-x6qmc
Oct 31 09:35:39.697: INFO: Created: latency-svc-rvf6p
Oct 31 09:35:39.702: INFO: Created: latency-svc-js2tj
Oct 31 09:35:39.711: INFO: Got endpoints: latency-svc-wjtzc [383.260412ms]
Oct 31 09:35:39.779: INFO: Got endpoints: latency-svc-45qnq [437.857537ms]
Oct 31 09:35:39.783: INFO: Created: latency-svc-6nccw
Oct 31 09:35:39.783: INFO: Created: latency-svc-9z524
Oct 31 09:35:39.793: INFO: Created: latency-svc-wsft2
Oct 31 09:35:39.797: INFO: Created: latency-svc-9lzgl
Oct 31 09:35:39.803: INFO: Got endpoints: latency-svc-86vv5 [456.433381ms]
Oct 31 09:35:39.803: INFO: Created: latency-svc-6qpbs
Oct 31 09:35:39.877: INFO: Got endpoints: latency-svc-vjhs8 [505.74563ms]
Oct 31 09:35:39.880: INFO: Created: latency-svc-gw56x
Oct 31 09:35:39.885: INFO: Created: latency-svc-clzxc
Oct 31 09:35:39.906: INFO: Got endpoints: latency-svc-w68xj [523.831724ms]
Oct 31 09:35:39.908: INFO: Created: latency-svc-lx4x8
Oct 31 09:35:39.974: INFO: Got endpoints: latency-svc-x6qmc [574.917535ms]
Oct 31 09:35:39.975: INFO: Created: latency-svc-2hwx8
Oct 31 09:35:40.007: INFO: Created: latency-svc-rqxbq
Oct 31 09:35:40.008: INFO: Got endpoints: latency-svc-rvf6p [612.993479ms]
Oct 31 09:35:40.013: INFO: Created: latency-svc-z7q98
Oct 31 09:35:40.018: INFO: Created: latency-svc-wc4ch
Oct 31 09:35:40.026: INFO: Created: latency-svc-flf87
Oct 31 09:35:40.085: INFO: Got endpoints: latency-svc-js2tj [666.944272ms]
Oct 31 09:35:40.089: INFO: Created: latency-svc-rn6kc
Oct 31 09:35:40.102: INFO: Got endpoints: latency-svc-9z524 [627.964892ms]
Oct 31 09:35:40.153: INFO: Created: latency-svc-8qmct
Oct 31 09:35:40.154: INFO: Got endpoints: latency-svc-6nccw [662.816022ms]
Oct 31 09:35:40.173: INFO: Created: latency-svc-v6vbp
Oct 31 09:35:40.194: INFO: Created: latency-svc-pzmks
Oct 31 09:35:40.206: INFO: Got endpoints: latency-svc-wsft2 [711.588817ms]
Oct 31 09:35:40.232: INFO: Created: latency-svc-9lc8d
Oct 31 09:35:40.273: INFO: Got endpoints: latency-svc-9lzgl [752.163584ms]
Oct 31 09:35:40.305: INFO: Got endpoints: latency-svc-6qpbs [726.174596ms]
Oct 31 09:35:40.334: INFO: Created: latency-svc-qxtnl
Oct 31 09:35:40.338: INFO: Created: latency-svc-svwt4
Oct 31 09:35:40.373: INFO: Got endpoints: latency-svc-gw56x [771.450065ms]
Oct 31 09:35:40.409: INFO: Got endpoints: latency-svc-clzxc [730.453281ms]
Oct 31 09:35:40.429: INFO: Created: latency-svc-nk5tn
Oct 31 09:35:40.450: INFO: Got endpoints: latency-svc-lx4x8 [739.483151ms]
Oct 31 09:35:40.515: INFO: Got endpoints: latency-svc-2hwx8 [736.231483ms]
Oct 31 09:35:40.525: INFO: Created: latency-svc-5vh67
Oct 31 09:35:40.530: INFO: Created: latency-svc-9d2kq
Oct 31 09:35:40.536: INFO: Created: latency-svc-gdbfr
Oct 31 09:35:40.575: INFO: Got endpoints: latency-svc-rqxbq [772.404274ms]
Oct 31 09:35:40.599: INFO: Got endpoints: latency-svc-z7q98 [720.540132ms]
Oct 31 09:35:40.599: INFO: Created: latency-svc-qr92w
Oct 31 09:35:40.672: INFO: Got endpoints: latency-svc-wc4ch [765.617146ms]
Oct 31 09:35:40.681: INFO: Created: latency-svc-6xjhl
Oct 31 09:35:40.722: INFO: Got endpoints: latency-svc-flf87 [747.674169ms]
Oct 31 09:35:40.723: INFO: Created: latency-svc-27mkk
Oct 31 09:35:40.752: INFO: Got endpoints: latency-svc-rn6kc [744.01549ms]
Oct 31 09:35:40.779: INFO: Created: latency-svc-spxhs
Oct 31 09:35:40.792: INFO: Created: latency-svc-lr7tc
Oct 31 09:35:40.797: INFO: Got endpoints: latency-svc-8qmct [711.706831ms]
Oct 31 09:35:40.851: INFO: Got endpoints: latency-svc-v6vbp [748.651665ms]
Oct 31 09:35:40.863: INFO: Created: latency-svc-8lctp
Oct 31 09:35:40.871: INFO: Created: latency-svc-cf4n2
Oct 31 09:35:40.898: INFO: Got endpoints: latency-svc-pzmks [744.28205ms]
Oct 31 09:35:40.922: INFO: Created: latency-svc-5wk7n
Oct 31 09:35:40.997: INFO: Got endpoints: latency-svc-9lc8d [790.642106ms]
Oct 31 09:35:40.999: INFO: Got endpoints: latency-svc-qxtnl [725.446026ms]
Oct 31 09:35:41.018: INFO: Created: latency-svc-kvnmz
Oct 31 09:35:41.023: INFO: Created: latency-svc-d5wnl
Oct 31 09:35:41.048: INFO: Got endpoints: latency-svc-svwt4 [742.462119ms]
Oct 31 09:35:41.105: INFO: Got endpoints: latency-svc-nk5tn [730.918503ms]
Oct 31 09:35:41.109: INFO: Created: latency-svc-fz5bp
Oct 31 09:35:41.132: INFO: Created: latency-svc-mwm95
Oct 31 09:35:41.151: INFO: Got endpoints: latency-svc-5vh67 [741.227607ms]
Oct 31 09:35:41.170: INFO: Created: latency-svc-xcgww
Oct 31 09:35:41.245: INFO: Got endpoints: latency-svc-9d2kq [794.887816ms]
Oct 31 09:35:41.255: INFO: Got endpoints: latency-svc-gdbfr [739.226868ms]
Oct 31 09:35:41.308: INFO: Got endpoints: latency-svc-qr92w [731.994557ms]
Oct 31 09:35:41.333: INFO: Created: latency-svc-95gcp
Oct 31 09:35:41.334: INFO: Created: latency-svc-5phsw
Oct 31 09:35:41.347: INFO: Created: latency-svc-5nnr5
Oct 31 09:35:41.369: INFO: Got endpoints: latency-svc-6xjhl [770.090044ms]
Oct 31 09:35:41.408: INFO: Got endpoints: latency-svc-27mkk [735.23415ms]
Oct 31 09:35:41.411: INFO: Created: latency-svc-f2pl9
Oct 31 09:35:41.451: INFO: Got endpoints: latency-svc-spxhs [728.54429ms]
Oct 31 09:35:41.465: INFO: Created: latency-svc-z249j
Oct 31 09:35:41.483: INFO: Created: latency-svc-vcx9g
Oct 31 09:35:41.501: INFO: Got endpoints: latency-svc-lr7tc [747.923954ms]
Oct 31 09:35:41.550: INFO: Got endpoints: latency-svc-8lctp [753.447473ms]
Oct 31 09:35:41.564: INFO: Created: latency-svc-9ghjq
Oct 31 09:35:41.592: INFO: Created: latency-svc-hh8bt
Oct 31 09:35:41.613: INFO: Got endpoints: latency-svc-cf4n2 [762.17645ms]
Oct 31 09:35:41.650: INFO: Got endpoints: latency-svc-5wk7n [751.370072ms]
Oct 31 09:35:41.668: INFO: Created: latency-svc-spvwf
Oct 31 09:35:41.698: INFO: Got endpoints: latency-svc-kvnmz [700.993367ms]
Oct 31 09:35:41.698: INFO: Created: latency-svc-mt692
Oct 31 09:35:41.758: INFO: Got endpoints: latency-svc-d5wnl [759.193748ms]
Oct 31 09:35:41.761: INFO: Created: latency-svc-fxwl2
Oct 31 09:35:41.807: INFO: Created: latency-svc-ztl4v
Oct 31 09:35:41.808: INFO: Got endpoints: latency-svc-fz5bp [759.250371ms]
Oct 31 09:35:41.851: INFO: Got endpoints: latency-svc-mwm95 [745.785617ms]
Oct 31 09:35:41.879: INFO: Created: latency-svc-z7t8j
Oct 31 09:35:41.879: INFO: Created: latency-svc-nqt6h
Oct 31 09:35:41.908: INFO: Got endpoints: latency-svc-xcgww [756.880645ms]
Oct 31 09:35:41.953: INFO: Got endpoints: latency-svc-95gcp [707.039348ms]
Oct 31 09:35:41.969: INFO: Created: latency-svc-6x2x5
Oct 31 09:35:41.991: INFO: Created: latency-svc-qrs88
Oct 31 09:35:42.000: INFO: Got endpoints: latency-svc-5phsw [745.587235ms]
Oct 31 09:35:42.055: INFO: Got endpoints: latency-svc-5nnr5 [747.272927ms]
Oct 31 09:35:42.112: INFO: Created: latency-svc-xpkzz
Oct 31 09:35:42.119: INFO: Got endpoints: latency-svc-f2pl9 [749.371517ms]
Oct 31 09:35:42.157: INFO: Created: latency-svc-xqwcx
Oct 31 09:35:42.161: INFO: Got endpoints: latency-svc-z249j [753.385918ms]
Oct 31 09:35:42.197: INFO: Created: latency-svc-z29h5
Oct 31 09:35:42.200: INFO: Created: latency-svc-4b87b
Oct 31 09:35:42.202: INFO: Got endpoints: latency-svc-vcx9g [750.64623ms]
Oct 31 09:35:42.267: INFO: Got endpoints: latency-svc-9ghjq [765.97068ms]
Oct 31 09:35:42.269: INFO: Created: latency-svc-bj6q7
Oct 31 09:35:42.293: INFO: Created: latency-svc-rr8gl
Oct 31 09:35:42.301: INFO: Got endpoints: latency-svc-hh8bt [750.392447ms]
Oct 31 09:35:42.335: INFO: Created: latency-svc-wc7hm
Oct 31 09:35:42.349: INFO: Got endpoints: latency-svc-spvwf [735.472039ms]
Oct 31 09:35:42.404: INFO: Created: latency-svc-lnw52
Oct 31 09:35:42.407: INFO: Got endpoints: latency-svc-mt692 [757.270342ms]
Oct 31 09:35:42.473: INFO: Created: latency-svc-8blfh
Oct 31 09:35:42.474: INFO: Got endpoints: latency-svc-fxwl2 [775.812385ms]
Oct 31 09:35:42.500: INFO: Got endpoints: latency-svc-ztl4v [741.548623ms]
Oct 31 09:35:42.515: INFO: Created: latency-svc-kwptc
Oct 31 09:35:42.541: INFO: Created: latency-svc-rj427
Oct 31 09:35:42.548: INFO: Got endpoints: latency-svc-z7t8j [697.205369ms]
Oct 31 09:35:42.613: INFO: Got endpoints: latency-svc-nqt6h [805.221357ms]
Oct 31 09:35:42.642: INFO: Created: latency-svc-rs5jt
Oct 31 09:35:42.650: INFO: Created: latency-svc-gblgp
Oct 31 09:35:42.657: INFO: Got endpoints: latency-svc-6x2x5 [749.159715ms]
Oct 31 09:35:42.710: INFO: Got endpoints: latency-svc-qrs88 [757.208209ms]
Oct 31 09:35:42.737: INFO: Created: latency-svc-hqhkh
Oct 31 09:35:42.738: INFO: Created: latency-svc-stht2
Oct 31 09:35:42.759: INFO: Got endpoints: latency-svc-xpkzz [758.577657ms]
Oct 31 09:35:42.779: INFO: Created: latency-svc-kgf4t
Oct 31 09:35:42.808: INFO: Got endpoints: latency-svc-xqwcx [752.609303ms]
Oct 31 09:35:42.916: INFO: Got endpoints: latency-svc-z29h5 [796.267429ms]
Oct 31 09:35:42.922: INFO: Got endpoints: latency-svc-4b87b [760.510788ms]
Oct 31 09:35:42.960: INFO: Created: latency-svc-r855f
Oct 31 09:35:42.970: INFO: Created: latency-svc-p87vl
Oct 31 09:35:42.970: INFO: Got endpoints: latency-svc-bj6q7 [768.135418ms]
Oct 31 09:35:42.972: INFO: Created: latency-svc-ljk59
Oct 31 09:35:43.003: INFO: Got endpoints: latency-svc-rr8gl [735.968937ms]
Oct 31 09:35:43.034: INFO: Created: latency-svc-zzd8r
Oct 31 09:35:43.044: INFO: Created: latency-svc-ccj88
Oct 31 09:35:43.051: INFO: Got endpoints: latency-svc-wc7hm [748.812305ms]
Oct 31 09:35:43.099: INFO: Got endpoints: latency-svc-lnw52 [749.578931ms]
Oct 31 09:35:43.116: INFO: Created: latency-svc-c6wnh
Oct 31 09:35:43.157: INFO: Got endpoints: latency-svc-8blfh [749.680499ms]
Oct 31 09:35:43.167: INFO: Created: latency-svc-6hmfm
Oct 31 09:35:43.207: INFO: Got endpoints: latency-svc-kwptc [733.49467ms]
Oct 31 09:35:43.208: INFO: Created: latency-svc-qs2j2
Oct 31 09:35:43.253: INFO: Got endpoints: latency-svc-rj427 [752.39479ms]
Oct 31 09:35:43.282: INFO: Created: latency-svc-qs7s5
Oct 31 09:35:43.286: INFO: Created: latency-svc-d4qfz
Oct 31 09:35:43.298: INFO: Got endpoints: latency-svc-rs5jt [750.293149ms]
Oct 31 09:35:43.411: INFO: Got endpoints: latency-svc-hqhkh [753.767429ms]
Oct 31 09:35:43.411: INFO: Got endpoints: latency-svc-gblgp [797.897185ms]
Oct 31 09:35:43.423: INFO: Created: latency-svc-62qmn
Oct 31 09:35:43.441: INFO: Created: latency-svc-pntdl
Oct 31 09:35:43.449: INFO: Created: latency-svc-fkcl7
Oct 31 09:35:43.449: INFO: Got endpoints: latency-svc-stht2 [738.461408ms]
Oct 31 09:35:43.505: INFO: Created: latency-svc-z88gp
Oct 31 09:35:43.506: INFO: Got endpoints: latency-svc-kgf4t [747.124504ms]
Oct 31 09:35:43.550: INFO: Got endpoints: latency-svc-r855f [741.721522ms]
Oct 31 09:35:43.560: INFO: Created: latency-svc-8rrtd
Oct 31 09:35:43.574: INFO: Created: latency-svc-4rppk
Oct 31 09:35:43.603: INFO: Got endpoints: latency-svc-p87vl [686.972835ms]
Oct 31 09:35:43.653: INFO: Got endpoints: latency-svc-ljk59 [731.423935ms]
Oct 31 09:35:43.654: INFO: Created: latency-svc-5md4w
Oct 31 09:35:43.700: INFO: Got endpoints: latency-svc-zzd8r [729.112344ms]
Oct 31 09:35:43.712: INFO: Created: latency-svc-5qsd7
Oct 31 09:35:43.729: INFO: Created: latency-svc-cgrpd
Oct 31 09:35:43.754: INFO: Got endpoints: latency-svc-ccj88 [748.607978ms]
Oct 31 09:35:43.804: INFO: Got endpoints: latency-svc-c6wnh [752.90622ms]
Oct 31 09:35:43.807: INFO: Created: latency-svc-nw8kw
Oct 31 09:35:43.864: INFO: Created: latency-svc-2lmlt
Oct 31 09:35:43.864: INFO: Got endpoints: latency-svc-6hmfm [764.452313ms]
Oct 31 09:35:43.898: INFO: Got endpoints: latency-svc-qs2j2 [741.025782ms]
Oct 31 09:35:43.962: INFO: Created: latency-svc-49c7c
Oct 31 09:35:43.976: INFO: Got endpoints: latency-svc-qs7s5 [768.35391ms]
Oct 31 09:35:44.071: INFO: Got endpoints: latency-svc-d4qfz [817.749073ms]
Oct 31 09:35:44.087: INFO: Got endpoints: latency-svc-62qmn [788.477595ms]
Oct 31 09:35:44.089: INFO: Created: latency-svc-9w7s8
Oct 31 09:35:44.095: INFO: Created: latency-svc-pfh4w
Oct 31 09:35:44.180: INFO: Got endpoints: latency-svc-fkcl7 [769.165651ms]
Oct 31 09:35:44.227: INFO: Got endpoints: latency-svc-pntdl [815.844746ms]
Oct 31 09:35:44.230: INFO: Got endpoints: latency-svc-z88gp [780.942867ms]
Oct 31 09:35:44.230: INFO: Created: latency-svc-hc9hh
Oct 31 09:35:44.241: INFO: Created: latency-svc-z5vkb
Oct 31 09:35:44.272: INFO: Created: latency-svc-vr5rx
Oct 31 09:35:44.273: INFO: Got endpoints: latency-svc-8rrtd [766.30482ms]
Oct 31 09:35:44.279: INFO: Created: latency-svc-pmx4d
Oct 31 09:35:44.294: INFO: Created: latency-svc-g4gxr
Oct 31 09:35:44.295: INFO: Created: latency-svc-r67bq
Oct 31 09:35:44.305: INFO: Got endpoints: latency-svc-4rppk [754.87389ms]
Oct 31 09:35:44.354: INFO: Got endpoints: latency-svc-5md4w [750.412409ms]
Oct 31 09:35:44.380: INFO: Created: latency-svc-rlq9z
Oct 31 09:35:44.382: INFO: Created: latency-svc-k88v2
Oct 31 09:35:44.405: INFO: Got endpoints: latency-svc-5qsd7 [751.455281ms]
Oct 31 09:35:44.448: INFO: Got endpoints: latency-svc-cgrpd [748.050762ms]
Oct 31 09:35:44.465: INFO: Created: latency-svc-77rdp
Oct 31 09:35:44.487: INFO: Created: latency-svc-gk5vw
Oct 31 09:35:44.509: INFO: Got endpoints: latency-svc-nw8kw [755.877195ms]
Oct 31 09:35:44.547: INFO: Got endpoints: latency-svc-2lmlt [743.007835ms]
Oct 31 09:35:44.561: INFO: Created: latency-svc-679jr
Oct 31 09:35:44.581: INFO: Created: latency-svc-79h2j
Oct 31 09:35:44.687: INFO: Got endpoints: latency-svc-9w7s8 [788.952853ms]
Oct 31 09:35:44.688: INFO: Got endpoints: latency-svc-49c7c [823.789801ms]
Oct 31 09:35:44.703: INFO: Got endpoints: latency-svc-pfh4w [726.671815ms]
Oct 31 09:35:44.733: INFO: Created: latency-svc-b7wsw
Oct 31 09:35:44.836: INFO: Created: latency-svc-qbrtm
Oct 31 09:35:44.836: INFO: Got endpoints: latency-svc-z5vkb [748.393155ms]
Oct 31 09:35:44.836: INFO: Got endpoints: latency-svc-hc9hh [764.738656ms]
Oct 31 09:35:44.844: INFO: Created: latency-svc-mfhnc
Oct 31 09:35:44.853: INFO: Got endpoints: latency-svc-vr5rx [671.90828ms]
Oct 31 09:35:44.861: INFO: Created: latency-svc-8tvqq
Oct 31 09:35:44.866: INFO: Created: latency-svc-2m7ch
Oct 31 09:35:44.910: INFO: Got endpoints: latency-svc-pmx4d [682.78275ms]
Oct 31 09:35:44.911: INFO: Created: latency-svc-sdvvv
Oct 31 09:35:44.951: INFO: Got endpoints: latency-svc-r67bq [721.184862ms]
Oct 31 09:35:44.969: INFO: Created: latency-svc-ffz8d
Oct 31 09:35:44.985: INFO: Created: latency-svc-bb7lz
Oct 31 09:35:45.013: INFO: Got endpoints: latency-svc-g4gxr [740.218582ms]
Oct 31 09:35:45.054: INFO: Got endpoints: latency-svc-rlq9z [748.765955ms]
Oct 31 09:35:45.065: INFO: Created: latency-svc-nxjrh
Oct 31 09:35:45.076: INFO: Created: latency-svc-4wh75
Oct 31 09:35:45.145: INFO: Got endpoints: latency-svc-k88v2 [789.516137ms]
Oct 31 09:35:45.154: INFO: Got endpoints: latency-svc-77rdp [749.327093ms]
Oct 31 09:35:45.167: INFO: Created: latency-svc-k5gcc
Oct 31 09:35:45.201: INFO: Created: latency-svc-d6q8k
Oct 31 09:35:45.211: INFO: Got endpoints: latency-svc-gk5vw [762.333649ms]
Oct 31 09:35:45.250: INFO: Created: latency-svc-8pphh
Oct 31 09:35:45.252: INFO: Got endpoints: latency-svc-679jr [742.43849ms]
Oct 31 09:35:45.316: INFO: Got endpoints: latency-svc-79h2j [768.444053ms]
Oct 31 09:35:45.328: INFO: Created: latency-svc-tr7sw
Oct 31 09:35:45.353: INFO: Got endpoints: latency-svc-b7wsw [665.293211ms]
Oct 31 09:35:45.356: INFO: Created: latency-svc-dn5ft
Oct 31 09:35:45.413: INFO: Got endpoints: latency-svc-qbrtm [725.661034ms]
Oct 31 09:35:45.423: INFO: Created: latency-svc-6z9vr
Oct 31 09:35:45.452: INFO: Got endpoints: latency-svc-mfhnc [749.60133ms]
Oct 31 09:35:45.499: INFO: Got endpoints: latency-svc-8tvqq [663.014101ms]
Oct 31 09:35:45.551: INFO: Got endpoints: latency-svc-2m7ch [714.45802ms]
Oct 31 09:35:45.625: INFO: Got endpoints: latency-svc-sdvvv [767.390341ms]
Oct 31 09:35:45.653: INFO: Got endpoints: latency-svc-ffz8d [742.770871ms]
Oct 31 09:35:45.708: INFO: Got endpoints: latency-svc-bb7lz [757.284023ms]
Oct 31 09:35:45.750: INFO: Got endpoints: latency-svc-nxjrh [736.81915ms]
Oct 31 09:35:45.804: INFO: Got endpoints: latency-svc-4wh75 [749.512582ms]
Oct 31 09:35:45.854: INFO: Got endpoints: latency-svc-k5gcc [708.944487ms]
Oct 31 09:35:45.910: INFO: Got endpoints: latency-svc-d6q8k [756.088643ms]
Oct 31 09:35:45.949: INFO: Got endpoints: latency-svc-8pphh [737.859878ms]
Oct 31 09:35:45.997: INFO: Got endpoints: latency-svc-tr7sw [745.02062ms]
Oct 31 09:35:46.049: INFO: Got endpoints: latency-svc-dn5ft [731.426509ms]
Oct 31 09:35:46.101: INFO: Got endpoints: latency-svc-6z9vr [746.350752ms]
Oct 31 09:35:46.102: INFO: Latencies: [32.323835ms 61.403967ms 63.13852ms 71.764176ms 126.275208ms 140.253091ms 146.046512ms 220.741297ms 234.133332ms 247.939825ms 287.384477ms 294.601106ms 299.007216ms 306.0632ms 309.773202ms 312.564924ms 313.902498ms 317.200848ms 317.455313ms 321.616487ms 331.237028ms 332.783421ms 333.540666ms 333.677518ms 344.26946ms 347.473445ms 348.970879ms 349.404888ms 349.492037ms 363.686843ms 365.414187ms 369.609244ms 371.65902ms 374.514233ms 383.260412ms 384.461143ms 386.394404ms 386.995302ms 388.755864ms 388.806468ms 389.286558ms 395.699718ms 397.386653ms 402.604905ms 409.497442ms 411.465516ms 412.426314ms 413.797995ms 417.318689ms 421.626192ms 424.837273ms 426.142669ms 437.857537ms 455.747844ms 456.433381ms 458.479882ms 460.011211ms 463.423249ms 505.74563ms 523.831724ms 568.278026ms 574.917535ms 585.473879ms 607.758159ms 611.977327ms 612.993479ms 619.019892ms 625.965726ms 627.964892ms 645.74718ms 661.321982ms 662.816022ms 663.014101ms 665.293211ms 666.944272ms 671.90828ms 681.346473ms 681.589277ms 682.434154ms 682.78275ms 683.045768ms 686.972835ms 690.573994ms 694.583313ms 697.205369ms 700.993367ms 702.806452ms 706.392156ms 707.039348ms 708.944487ms 711.588817ms 711.706831ms 714.45802ms 720.540132ms 721.184862ms 725.446026ms 725.661034ms 726.174596ms 726.671815ms 728.54429ms 729.112344ms 730.453281ms 730.918503ms 731.423935ms 731.426509ms 731.994557ms 733.49467ms 735.23415ms 735.472039ms 735.968937ms 736.231483ms 736.81915ms 737.859878ms 738.461408ms 739.226868ms 739.483151ms 740.218582ms 741.025782ms 741.227607ms 741.548623ms 741.721522ms 742.43849ms 742.462119ms 742.770871ms 743.007835ms 744.01549ms 744.28205ms 745.02062ms 745.587235ms 745.785617ms 746.350752ms 747.124504ms 747.272927ms 747.674169ms 747.923954ms 748.050762ms 748.393155ms 748.607978ms 748.651665ms 748.765955ms 748.812305ms 749.159715ms 749.327093ms 749.371517ms 749.512582ms 749.578931ms 749.60133ms 749.680499ms 750.293149ms 750.392447ms 750.412409ms 750.64623ms 751.370072ms 751.455281ms 752.163584ms 752.39479ms 752.609303ms 752.90622ms 753.385918ms 753.447473ms 753.767429ms 754.87389ms 755.877195ms 756.088643ms 756.880645ms 757.208209ms 757.270342ms 757.284023ms 758.577657ms 759.193748ms 759.250371ms 760.510788ms 762.17645ms 762.333649ms 764.452313ms 764.738656ms 765.617146ms 765.97068ms 766.30482ms 767.390341ms 768.135418ms 768.35391ms 768.444053ms 769.165651ms 770.090044ms 771.450065ms 772.404274ms 775.812385ms 780.942867ms 788.477595ms 788.952853ms 789.516137ms 790.642106ms 794.887816ms 796.267429ms 797.897185ms 805.221357ms 815.844746ms 817.749073ms 823.789801ms]
Oct 31 09:35:46.102: INFO: 50 %ile: 729.112344ms
Oct 31 09:35:46.102: INFO: 90 %ile: 768.135418ms
Oct 31 09:35:46.102: INFO: 99 %ile: 817.749073ms
Oct 31 09:35:46.102: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:46.103: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Service endpoints latency
  tear down framework | framework.go:193
STEP: Destroying namespace "svc-latency-515" for this suite. 10/31/23 09:35:46.16
------------------------------
â€¢ [SLOW TEST] [11.385 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/network/service_latency.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Service endpoints latency
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:34.832
    Oct 31 09:35:34.832: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename svc-latency 10/31/23 09:35:34.834
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:34.986
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:35.118
    [BeforeEach] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be very high  [Conformance]
      test/e2e/network/service_latency.go:59
    Oct 31 09:35:35.218: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: creating replication controller svc-latency-rc in namespace svc-latency-515 10/31/23 09:35:35.22
    I1031 09:35:35.288293      18 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-515, replica count: 1
    I1031 09:35:36.390152      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    I1031 09:35:37.390423      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Oct 31 09:35:37.552: INFO: Created: latency-svc-zs4zl
    Oct 31 09:35:37.552: INFO: Got endpoints: latency-svc-zs4zl [60.735696ms]
    Oct 31 09:35:37.573: INFO: Created: latency-svc-c7gfd
    Oct 31 09:35:37.587: INFO: Got endpoints: latency-svc-c7gfd [32.323835ms]
    Oct 31 09:35:37.587: INFO: Created: latency-svc-dlz95
    Oct 31 09:35:37.594: INFO: Created: latency-svc-c6xsg
    Oct 31 09:35:37.615: INFO: Got endpoints: latency-svc-dlz95 [61.403967ms]
    Oct 31 09:35:37.616: INFO: Got endpoints: latency-svc-c6xsg [63.13852ms]
    Oct 31 09:35:37.624: INFO: Created: latency-svc-vmnsz
    Oct 31 09:35:37.625: INFO: Got endpoints: latency-svc-vmnsz [71.764176ms]
    Oct 31 09:35:37.676: INFO: Created: latency-svc-tt6t9
    Oct 31 09:35:37.681: INFO: Got endpoints: latency-svc-tt6t9 [126.275208ms]
    Oct 31 09:35:37.686: INFO: Created: latency-svc-jtmwz
    Oct 31 09:35:37.695: INFO: Got endpoints: latency-svc-jtmwz [140.253091ms]
    Oct 31 09:35:37.695: INFO: Created: latency-svc-r7cn7
    Oct 31 09:35:37.701: INFO: Got endpoints: latency-svc-r7cn7 [146.046512ms]
    Oct 31 09:35:37.705: INFO: Created: latency-svc-fkn6t
    Oct 31 09:35:37.776: INFO: Got endpoints: latency-svc-fkn6t [220.741297ms]
    Oct 31 09:35:37.777: INFO: Created: latency-svc-hvm8v
    Oct 31 09:35:37.789: INFO: Got endpoints: latency-svc-hvm8v [234.133332ms]
    Oct 31 09:35:37.795: INFO: Created: latency-svc-8grgg
    Oct 31 09:35:37.803: INFO: Got endpoints: latency-svc-8grgg [247.939825ms]
    Oct 31 09:35:37.872: INFO: Created: latency-svc-q8m5l
    Oct 31 09:35:37.873: INFO: Created: latency-svc-4kvvw
    Oct 31 09:35:37.889: INFO: Got endpoints: latency-svc-q8m5l [333.677518ms]
    Oct 31 09:35:37.889: INFO: Got endpoints: latency-svc-4kvvw [333.540666ms]
    Oct 31 09:35:37.904: INFO: Created: latency-svc-q4qn7
    Oct 31 09:35:37.904: INFO: Got endpoints: latency-svc-q4qn7 [348.970879ms]
    Oct 31 09:35:37.909: INFO: Created: latency-svc-bqwqc
    Oct 31 09:35:37.921: INFO: Got endpoints: latency-svc-bqwqc [365.414187ms]
    Oct 31 09:35:37.921: INFO: Created: latency-svc-wlswz
    Oct 31 09:35:37.977: INFO: Got endpoints: latency-svc-wlswz [421.626192ms]
    Oct 31 09:35:37.978: INFO: Created: latency-svc-dflzz
    Oct 31 09:35:37.983: INFO: Got endpoints: latency-svc-dflzz [395.699718ms]
    Oct 31 09:35:37.984: INFO: Created: latency-svc-vfcgd
    Oct 31 09:35:37.991: INFO: Got endpoints: latency-svc-vfcgd [374.514233ms]
    Oct 31 09:35:37.999: INFO: Created: latency-svc-x57cd
    Oct 31 09:35:38.027: INFO: Got endpoints: latency-svc-x57cd [402.604905ms]
    Oct 31 09:35:38.028: INFO: Created: latency-svc-jf45k
    Oct 31 09:35:38.070: INFO: Created: latency-svc-qbvkb
    Oct 31 09:35:38.075: INFO: Got endpoints: latency-svc-jf45k [460.011211ms]
    Oct 31 09:35:38.079: INFO: Got endpoints: latency-svc-qbvkb [397.386653ms]
    Oct 31 09:35:38.086: INFO: Created: latency-svc-rkth5
    Oct 31 09:35:38.107: INFO: Created: latency-svc-g5bmc
    Oct 31 09:35:38.107: INFO: Got endpoints: latency-svc-rkth5 [411.465516ms]
    Oct 31 09:35:38.113: INFO: Got endpoints: latency-svc-g5bmc [412.426314ms]
    Oct 31 09:35:38.118: INFO: Created: latency-svc-jl2w5
    Oct 31 09:35:38.123: INFO: Got endpoints: latency-svc-jl2w5 [347.473445ms]
    Oct 31 09:35:38.125: INFO: Created: latency-svc-7xtbz
    Oct 31 09:35:38.178: INFO: Got endpoints: latency-svc-7xtbz [389.286558ms]
    Oct 31 09:35:38.186: INFO: Created: latency-svc-g9tgk
    Oct 31 09:35:38.188: INFO: Created: latency-svc-rqbz7
    Oct 31 09:35:38.189: INFO: Got endpoints: latency-svc-g9tgk [386.394404ms]
    Oct 31 09:35:38.195: INFO: Got endpoints: latency-svc-rqbz7 [306.0632ms]
    Oct 31 09:35:38.196: INFO: Created: latency-svc-984t8
    Oct 31 09:35:38.207: INFO: Got endpoints: latency-svc-984t8 [317.200848ms]
    Oct 31 09:35:38.471: INFO: Created: latency-svc-g4jsk
    Oct 31 09:35:38.490: INFO: Got endpoints: latency-svc-g4jsk [585.473879ms]
    Oct 31 09:35:38.492: INFO: Created: latency-svc-4gmh7
    Oct 31 09:35:38.582: INFO: Got endpoints: latency-svc-4gmh7 [661.321982ms]
    Oct 31 09:35:38.583: INFO: Created: latency-svc-4q76d
    Oct 31 09:35:38.592: INFO: Created: latency-svc-j5zns
    Oct 31 09:35:38.602: INFO: Got endpoints: latency-svc-j5zns [619.019892ms]
    Oct 31 09:35:38.603: INFO: Got endpoints: latency-svc-4q76d [625.965726ms]
    Oct 31 09:35:38.604: INFO: Created: latency-svc-hpxj2
    Oct 31 09:35:38.673: INFO: Created: latency-svc-qxtl6
    Oct 31 09:35:38.673: INFO: Got endpoints: latency-svc-qxtl6 [645.74718ms]
    Oct 31 09:35:38.674: INFO: Got endpoints: latency-svc-hpxj2 [683.045768ms]
    Oct 31 09:35:38.676: INFO: Created: latency-svc-z2n8v
    Oct 31 09:35:38.684: INFO: Got endpoints: latency-svc-z2n8v [607.758159ms]
    Oct 31 09:35:38.685: INFO: Created: latency-svc-rsb4v
    Oct 31 09:35:38.691: INFO: Got endpoints: latency-svc-rsb4v [611.977327ms]
    Oct 31 09:35:38.773: INFO: Created: latency-svc-s8ngp
    Oct 31 09:35:38.788: INFO: Created: latency-svc-8vxp9
    Oct 31 09:35:38.790: INFO: Got endpoints: latency-svc-s8ngp [682.434154ms]
    Oct 31 09:35:38.795: INFO: Got endpoints: latency-svc-8vxp9 [681.589277ms]
    Oct 31 09:35:38.800: INFO: Created: latency-svc-7wvjq
    Oct 31 09:35:38.805: INFO: Got endpoints: latency-svc-7wvjq [681.346473ms]
    Oct 31 09:35:38.813: INFO: Created: latency-svc-fd6bh
    Oct 31 09:35:38.820: INFO: Created: latency-svc-s2khq
    Oct 31 09:35:38.880: INFO: Got endpoints: latency-svc-s2khq [690.573994ms]
    Oct 31 09:35:38.881: INFO: Got endpoints: latency-svc-fd6bh [702.806452ms]
    Oct 31 09:35:38.883: INFO: Created: latency-svc-8xs7n
    Oct 31 09:35:38.889: INFO: Got endpoints: latency-svc-8xs7n [694.583313ms]
    Oct 31 09:35:38.904: INFO: Created: latency-svc-zq259
    Oct 31 09:35:38.913: INFO: Got endpoints: latency-svc-zq259 [706.392156ms]
    Oct 31 09:35:38.918: INFO: Created: latency-svc-lpxw7
    Oct 31 09:35:38.919: INFO: Created: latency-svc-s9gwc
    Oct 31 09:35:38.976: INFO: Created: latency-svc-k8dwd
    Oct 31 09:35:38.978: INFO: Created: latency-svc-hvnhs
    Oct 31 09:35:38.992: INFO: Created: latency-svc-m6ht6
    Oct 31 09:35:39.012: INFO: Created: latency-svc-pj4k4
    Oct 31 09:35:39.013: INFO: Created: latency-svc-hr5mj
    Oct 31 09:35:39.042: INFO: Created: latency-svc-jb65h
    Oct 31 09:35:39.045: INFO: Got endpoints: latency-svc-s9gwc [463.423249ms]
    Oct 31 09:35:39.058: INFO: Got endpoints: latency-svc-hvnhs [455.747844ms]
    Oct 31 09:35:39.058: INFO: Got endpoints: latency-svc-lpxw7 [568.278026ms]
    Oct 31 09:35:39.060: INFO: Got endpoints: latency-svc-m6ht6 [386.995302ms]
    Oct 31 09:35:39.062: INFO: Got endpoints: latency-svc-k8dwd [458.479882ms]
    Oct 31 09:35:39.074: INFO: Created: latency-svc-jr6bj
    Oct 31 09:35:39.100: INFO: Got endpoints: latency-svc-jr6bj [309.773202ms]
    Oct 31 09:35:39.100: INFO: Got endpoints: latency-svc-pj4k4 [426.142669ms]
    Oct 31 09:35:39.101: INFO: Got endpoints: latency-svc-jb65h [409.497442ms]
    Oct 31 09:35:39.101: INFO: Got endpoints: latency-svc-hr5mj [417.318689ms]
    Oct 31 09:35:39.118: INFO: Created: latency-svc-rlgqk
    Oct 31 09:35:39.145: INFO: Got endpoints: latency-svc-rlgqk [349.492037ms]
    Oct 31 09:35:39.174: INFO: Created: latency-svc-fcb8m
    Oct 31 09:35:39.177: INFO: Got endpoints: latency-svc-fcb8m [371.65902ms]
    Oct 31 09:35:39.181: INFO: Created: latency-svc-dn4d5
    Oct 31 09:35:39.195: INFO: Got endpoints: latency-svc-dn4d5 [313.902498ms]
    Oct 31 09:35:39.199: INFO: Created: latency-svc-vckqb
    Oct 31 09:35:39.213: INFO: Got endpoints: latency-svc-vckqb [331.237028ms]
    Oct 31 09:35:39.229: INFO: Created: latency-svc-bdqlb
    Oct 31 09:35:39.314: INFO: Got endpoints: latency-svc-bdqlb [424.837273ms]
    Oct 31 09:35:39.317: INFO: Created: latency-svc-m2h9g
    Oct 31 09:35:39.327: INFO: Got endpoints: latency-svc-m2h9g [413.797995ms]
    Oct 31 09:35:39.333: INFO: Created: latency-svc-x4k6m
    Oct 31 09:35:39.340: INFO: Got endpoints: latency-svc-x4k6m [294.601106ms]
    Oct 31 09:35:39.343: INFO: Created: latency-svc-h6dcm
    Oct 31 09:35:39.346: INFO: Got endpoints: latency-svc-h6dcm [287.384477ms]
    Oct 31 09:35:39.346: INFO: Created: latency-svc-8d922
    Oct 31 09:35:39.371: INFO: Got endpoints: latency-svc-8d922 [312.564924ms]
    Oct 31 09:35:39.375: INFO: Created: latency-svc-4cs2m
    Oct 31 09:35:39.382: INFO: Got endpoints: latency-svc-4cs2m [321.616487ms]
    Oct 31 09:35:39.385: INFO: Created: latency-svc-vkc6w
    Oct 31 09:35:39.389: INFO: Created: latency-svc-x6tgc
    Oct 31 09:35:39.395: INFO: Got endpoints: latency-svc-vkc6w [332.783421ms]
    Oct 31 09:35:39.399: INFO: Got endpoints: latency-svc-x6tgc [299.007216ms]
    Oct 31 09:35:39.401: INFO: Created: latency-svc-w42p5
    Oct 31 09:35:39.418: INFO: Got endpoints: latency-svc-w42p5 [317.455313ms]
    Oct 31 09:35:39.419: INFO: Created: latency-svc-2l5ph
    Oct 31 09:35:39.473: INFO: Got endpoints: latency-svc-2l5ph [369.609244ms]
    Oct 31 09:35:39.491: INFO: Created: latency-svc-58sbl
    Oct 31 09:35:39.491: INFO: Got endpoints: latency-svc-58sbl [388.806468ms]
    Oct 31 09:35:39.492: INFO: Created: latency-svc-gk8mc
    Oct 31 09:35:39.494: INFO: Got endpoints: latency-svc-gk8mc [349.404888ms]
    Oct 31 09:35:39.521: INFO: Created: latency-svc-4hxg2
    Oct 31 09:35:39.521: INFO: Created: latency-svc-qt2vm
    Oct 31 09:35:39.521: INFO: Got endpoints: latency-svc-qt2vm [344.26946ms]
    Oct 31 09:35:39.579: INFO: Got endpoints: latency-svc-4hxg2 [384.461143ms]
    Oct 31 09:35:39.594: INFO: Created: latency-svc-65vt9
    Oct 31 09:35:39.597: INFO: Created: latency-svc-pq9jw
    Oct 31 09:35:39.602: INFO: Got endpoints: latency-svc-65vt9 [388.755864ms]
    Oct 31 09:35:39.609: INFO: Created: latency-svc-wjtzc
    Oct 31 09:35:39.613: INFO: Created: latency-svc-45qnq
    Oct 31 09:35:39.628: INFO: Created: latency-svc-86vv5
    Oct 31 09:35:39.637: INFO: Created: latency-svc-vjhs8
    Oct 31 09:35:39.678: INFO: Got endpoints: latency-svc-pq9jw [363.686843ms]
    Oct 31 09:35:39.679: INFO: Created: latency-svc-w68xj
    Oct 31 09:35:39.694: INFO: Created: latency-svc-x6qmc
    Oct 31 09:35:39.697: INFO: Created: latency-svc-rvf6p
    Oct 31 09:35:39.702: INFO: Created: latency-svc-js2tj
    Oct 31 09:35:39.711: INFO: Got endpoints: latency-svc-wjtzc [383.260412ms]
    Oct 31 09:35:39.779: INFO: Got endpoints: latency-svc-45qnq [437.857537ms]
    Oct 31 09:35:39.783: INFO: Created: latency-svc-6nccw
    Oct 31 09:35:39.783: INFO: Created: latency-svc-9z524
    Oct 31 09:35:39.793: INFO: Created: latency-svc-wsft2
    Oct 31 09:35:39.797: INFO: Created: latency-svc-9lzgl
    Oct 31 09:35:39.803: INFO: Got endpoints: latency-svc-86vv5 [456.433381ms]
    Oct 31 09:35:39.803: INFO: Created: latency-svc-6qpbs
    Oct 31 09:35:39.877: INFO: Got endpoints: latency-svc-vjhs8 [505.74563ms]
    Oct 31 09:35:39.880: INFO: Created: latency-svc-gw56x
    Oct 31 09:35:39.885: INFO: Created: latency-svc-clzxc
    Oct 31 09:35:39.906: INFO: Got endpoints: latency-svc-w68xj [523.831724ms]
    Oct 31 09:35:39.908: INFO: Created: latency-svc-lx4x8
    Oct 31 09:35:39.974: INFO: Got endpoints: latency-svc-x6qmc [574.917535ms]
    Oct 31 09:35:39.975: INFO: Created: latency-svc-2hwx8
    Oct 31 09:35:40.007: INFO: Created: latency-svc-rqxbq
    Oct 31 09:35:40.008: INFO: Got endpoints: latency-svc-rvf6p [612.993479ms]
    Oct 31 09:35:40.013: INFO: Created: latency-svc-z7q98
    Oct 31 09:35:40.018: INFO: Created: latency-svc-wc4ch
    Oct 31 09:35:40.026: INFO: Created: latency-svc-flf87
    Oct 31 09:35:40.085: INFO: Got endpoints: latency-svc-js2tj [666.944272ms]
    Oct 31 09:35:40.089: INFO: Created: latency-svc-rn6kc
    Oct 31 09:35:40.102: INFO: Got endpoints: latency-svc-9z524 [627.964892ms]
    Oct 31 09:35:40.153: INFO: Created: latency-svc-8qmct
    Oct 31 09:35:40.154: INFO: Got endpoints: latency-svc-6nccw [662.816022ms]
    Oct 31 09:35:40.173: INFO: Created: latency-svc-v6vbp
    Oct 31 09:35:40.194: INFO: Created: latency-svc-pzmks
    Oct 31 09:35:40.206: INFO: Got endpoints: latency-svc-wsft2 [711.588817ms]
    Oct 31 09:35:40.232: INFO: Created: latency-svc-9lc8d
    Oct 31 09:35:40.273: INFO: Got endpoints: latency-svc-9lzgl [752.163584ms]
    Oct 31 09:35:40.305: INFO: Got endpoints: latency-svc-6qpbs [726.174596ms]
    Oct 31 09:35:40.334: INFO: Created: latency-svc-qxtnl
    Oct 31 09:35:40.338: INFO: Created: latency-svc-svwt4
    Oct 31 09:35:40.373: INFO: Got endpoints: latency-svc-gw56x [771.450065ms]
    Oct 31 09:35:40.409: INFO: Got endpoints: latency-svc-clzxc [730.453281ms]
    Oct 31 09:35:40.429: INFO: Created: latency-svc-nk5tn
    Oct 31 09:35:40.450: INFO: Got endpoints: latency-svc-lx4x8 [739.483151ms]
    Oct 31 09:35:40.515: INFO: Got endpoints: latency-svc-2hwx8 [736.231483ms]
    Oct 31 09:35:40.525: INFO: Created: latency-svc-5vh67
    Oct 31 09:35:40.530: INFO: Created: latency-svc-9d2kq
    Oct 31 09:35:40.536: INFO: Created: latency-svc-gdbfr
    Oct 31 09:35:40.575: INFO: Got endpoints: latency-svc-rqxbq [772.404274ms]
    Oct 31 09:35:40.599: INFO: Got endpoints: latency-svc-z7q98 [720.540132ms]
    Oct 31 09:35:40.599: INFO: Created: latency-svc-qr92w
    Oct 31 09:35:40.672: INFO: Got endpoints: latency-svc-wc4ch [765.617146ms]
    Oct 31 09:35:40.681: INFO: Created: latency-svc-6xjhl
    Oct 31 09:35:40.722: INFO: Got endpoints: latency-svc-flf87 [747.674169ms]
    Oct 31 09:35:40.723: INFO: Created: latency-svc-27mkk
    Oct 31 09:35:40.752: INFO: Got endpoints: latency-svc-rn6kc [744.01549ms]
    Oct 31 09:35:40.779: INFO: Created: latency-svc-spxhs
    Oct 31 09:35:40.792: INFO: Created: latency-svc-lr7tc
    Oct 31 09:35:40.797: INFO: Got endpoints: latency-svc-8qmct [711.706831ms]
    Oct 31 09:35:40.851: INFO: Got endpoints: latency-svc-v6vbp [748.651665ms]
    Oct 31 09:35:40.863: INFO: Created: latency-svc-8lctp
    Oct 31 09:35:40.871: INFO: Created: latency-svc-cf4n2
    Oct 31 09:35:40.898: INFO: Got endpoints: latency-svc-pzmks [744.28205ms]
    Oct 31 09:35:40.922: INFO: Created: latency-svc-5wk7n
    Oct 31 09:35:40.997: INFO: Got endpoints: latency-svc-9lc8d [790.642106ms]
    Oct 31 09:35:40.999: INFO: Got endpoints: latency-svc-qxtnl [725.446026ms]
    Oct 31 09:35:41.018: INFO: Created: latency-svc-kvnmz
    Oct 31 09:35:41.023: INFO: Created: latency-svc-d5wnl
    Oct 31 09:35:41.048: INFO: Got endpoints: latency-svc-svwt4 [742.462119ms]
    Oct 31 09:35:41.105: INFO: Got endpoints: latency-svc-nk5tn [730.918503ms]
    Oct 31 09:35:41.109: INFO: Created: latency-svc-fz5bp
    Oct 31 09:35:41.132: INFO: Created: latency-svc-mwm95
    Oct 31 09:35:41.151: INFO: Got endpoints: latency-svc-5vh67 [741.227607ms]
    Oct 31 09:35:41.170: INFO: Created: latency-svc-xcgww
    Oct 31 09:35:41.245: INFO: Got endpoints: latency-svc-9d2kq [794.887816ms]
    Oct 31 09:35:41.255: INFO: Got endpoints: latency-svc-gdbfr [739.226868ms]
    Oct 31 09:35:41.308: INFO: Got endpoints: latency-svc-qr92w [731.994557ms]
    Oct 31 09:35:41.333: INFO: Created: latency-svc-95gcp
    Oct 31 09:35:41.334: INFO: Created: latency-svc-5phsw
    Oct 31 09:35:41.347: INFO: Created: latency-svc-5nnr5
    Oct 31 09:35:41.369: INFO: Got endpoints: latency-svc-6xjhl [770.090044ms]
    Oct 31 09:35:41.408: INFO: Got endpoints: latency-svc-27mkk [735.23415ms]
    Oct 31 09:35:41.411: INFO: Created: latency-svc-f2pl9
    Oct 31 09:35:41.451: INFO: Got endpoints: latency-svc-spxhs [728.54429ms]
    Oct 31 09:35:41.465: INFO: Created: latency-svc-z249j
    Oct 31 09:35:41.483: INFO: Created: latency-svc-vcx9g
    Oct 31 09:35:41.501: INFO: Got endpoints: latency-svc-lr7tc [747.923954ms]
    Oct 31 09:35:41.550: INFO: Got endpoints: latency-svc-8lctp [753.447473ms]
    Oct 31 09:35:41.564: INFO: Created: latency-svc-9ghjq
    Oct 31 09:35:41.592: INFO: Created: latency-svc-hh8bt
    Oct 31 09:35:41.613: INFO: Got endpoints: latency-svc-cf4n2 [762.17645ms]
    Oct 31 09:35:41.650: INFO: Got endpoints: latency-svc-5wk7n [751.370072ms]
    Oct 31 09:35:41.668: INFO: Created: latency-svc-spvwf
    Oct 31 09:35:41.698: INFO: Got endpoints: latency-svc-kvnmz [700.993367ms]
    Oct 31 09:35:41.698: INFO: Created: latency-svc-mt692
    Oct 31 09:35:41.758: INFO: Got endpoints: latency-svc-d5wnl [759.193748ms]
    Oct 31 09:35:41.761: INFO: Created: latency-svc-fxwl2
    Oct 31 09:35:41.807: INFO: Created: latency-svc-ztl4v
    Oct 31 09:35:41.808: INFO: Got endpoints: latency-svc-fz5bp [759.250371ms]
    Oct 31 09:35:41.851: INFO: Got endpoints: latency-svc-mwm95 [745.785617ms]
    Oct 31 09:35:41.879: INFO: Created: latency-svc-z7t8j
    Oct 31 09:35:41.879: INFO: Created: latency-svc-nqt6h
    Oct 31 09:35:41.908: INFO: Got endpoints: latency-svc-xcgww [756.880645ms]
    Oct 31 09:35:41.953: INFO: Got endpoints: latency-svc-95gcp [707.039348ms]
    Oct 31 09:35:41.969: INFO: Created: latency-svc-6x2x5
    Oct 31 09:35:41.991: INFO: Created: latency-svc-qrs88
    Oct 31 09:35:42.000: INFO: Got endpoints: latency-svc-5phsw [745.587235ms]
    Oct 31 09:35:42.055: INFO: Got endpoints: latency-svc-5nnr5 [747.272927ms]
    Oct 31 09:35:42.112: INFO: Created: latency-svc-xpkzz
    Oct 31 09:35:42.119: INFO: Got endpoints: latency-svc-f2pl9 [749.371517ms]
    Oct 31 09:35:42.157: INFO: Created: latency-svc-xqwcx
    Oct 31 09:35:42.161: INFO: Got endpoints: latency-svc-z249j [753.385918ms]
    Oct 31 09:35:42.197: INFO: Created: latency-svc-z29h5
    Oct 31 09:35:42.200: INFO: Created: latency-svc-4b87b
    Oct 31 09:35:42.202: INFO: Got endpoints: latency-svc-vcx9g [750.64623ms]
    Oct 31 09:35:42.267: INFO: Got endpoints: latency-svc-9ghjq [765.97068ms]
    Oct 31 09:35:42.269: INFO: Created: latency-svc-bj6q7
    Oct 31 09:35:42.293: INFO: Created: latency-svc-rr8gl
    Oct 31 09:35:42.301: INFO: Got endpoints: latency-svc-hh8bt [750.392447ms]
    Oct 31 09:35:42.335: INFO: Created: latency-svc-wc7hm
    Oct 31 09:35:42.349: INFO: Got endpoints: latency-svc-spvwf [735.472039ms]
    Oct 31 09:35:42.404: INFO: Created: latency-svc-lnw52
    Oct 31 09:35:42.407: INFO: Got endpoints: latency-svc-mt692 [757.270342ms]
    Oct 31 09:35:42.473: INFO: Created: latency-svc-8blfh
    Oct 31 09:35:42.474: INFO: Got endpoints: latency-svc-fxwl2 [775.812385ms]
    Oct 31 09:35:42.500: INFO: Got endpoints: latency-svc-ztl4v [741.548623ms]
    Oct 31 09:35:42.515: INFO: Created: latency-svc-kwptc
    Oct 31 09:35:42.541: INFO: Created: latency-svc-rj427
    Oct 31 09:35:42.548: INFO: Got endpoints: latency-svc-z7t8j [697.205369ms]
    Oct 31 09:35:42.613: INFO: Got endpoints: latency-svc-nqt6h [805.221357ms]
    Oct 31 09:35:42.642: INFO: Created: latency-svc-rs5jt
    Oct 31 09:35:42.650: INFO: Created: latency-svc-gblgp
    Oct 31 09:35:42.657: INFO: Got endpoints: latency-svc-6x2x5 [749.159715ms]
    Oct 31 09:35:42.710: INFO: Got endpoints: latency-svc-qrs88 [757.208209ms]
    Oct 31 09:35:42.737: INFO: Created: latency-svc-hqhkh
    Oct 31 09:35:42.738: INFO: Created: latency-svc-stht2
    Oct 31 09:35:42.759: INFO: Got endpoints: latency-svc-xpkzz [758.577657ms]
    Oct 31 09:35:42.779: INFO: Created: latency-svc-kgf4t
    Oct 31 09:35:42.808: INFO: Got endpoints: latency-svc-xqwcx [752.609303ms]
    Oct 31 09:35:42.916: INFO: Got endpoints: latency-svc-z29h5 [796.267429ms]
    Oct 31 09:35:42.922: INFO: Got endpoints: latency-svc-4b87b [760.510788ms]
    Oct 31 09:35:42.960: INFO: Created: latency-svc-r855f
    Oct 31 09:35:42.970: INFO: Created: latency-svc-p87vl
    Oct 31 09:35:42.970: INFO: Got endpoints: latency-svc-bj6q7 [768.135418ms]
    Oct 31 09:35:42.972: INFO: Created: latency-svc-ljk59
    Oct 31 09:35:43.003: INFO: Got endpoints: latency-svc-rr8gl [735.968937ms]
    Oct 31 09:35:43.034: INFO: Created: latency-svc-zzd8r
    Oct 31 09:35:43.044: INFO: Created: latency-svc-ccj88
    Oct 31 09:35:43.051: INFO: Got endpoints: latency-svc-wc7hm [748.812305ms]
    Oct 31 09:35:43.099: INFO: Got endpoints: latency-svc-lnw52 [749.578931ms]
    Oct 31 09:35:43.116: INFO: Created: latency-svc-c6wnh
    Oct 31 09:35:43.157: INFO: Got endpoints: latency-svc-8blfh [749.680499ms]
    Oct 31 09:35:43.167: INFO: Created: latency-svc-6hmfm
    Oct 31 09:35:43.207: INFO: Got endpoints: latency-svc-kwptc [733.49467ms]
    Oct 31 09:35:43.208: INFO: Created: latency-svc-qs2j2
    Oct 31 09:35:43.253: INFO: Got endpoints: latency-svc-rj427 [752.39479ms]
    Oct 31 09:35:43.282: INFO: Created: latency-svc-qs7s5
    Oct 31 09:35:43.286: INFO: Created: latency-svc-d4qfz
    Oct 31 09:35:43.298: INFO: Got endpoints: latency-svc-rs5jt [750.293149ms]
    Oct 31 09:35:43.411: INFO: Got endpoints: latency-svc-hqhkh [753.767429ms]
    Oct 31 09:35:43.411: INFO: Got endpoints: latency-svc-gblgp [797.897185ms]
    Oct 31 09:35:43.423: INFO: Created: latency-svc-62qmn
    Oct 31 09:35:43.441: INFO: Created: latency-svc-pntdl
    Oct 31 09:35:43.449: INFO: Created: latency-svc-fkcl7
    Oct 31 09:35:43.449: INFO: Got endpoints: latency-svc-stht2 [738.461408ms]
    Oct 31 09:35:43.505: INFO: Created: latency-svc-z88gp
    Oct 31 09:35:43.506: INFO: Got endpoints: latency-svc-kgf4t [747.124504ms]
    Oct 31 09:35:43.550: INFO: Got endpoints: latency-svc-r855f [741.721522ms]
    Oct 31 09:35:43.560: INFO: Created: latency-svc-8rrtd
    Oct 31 09:35:43.574: INFO: Created: latency-svc-4rppk
    Oct 31 09:35:43.603: INFO: Got endpoints: latency-svc-p87vl [686.972835ms]
    Oct 31 09:35:43.653: INFO: Got endpoints: latency-svc-ljk59 [731.423935ms]
    Oct 31 09:35:43.654: INFO: Created: latency-svc-5md4w
    Oct 31 09:35:43.700: INFO: Got endpoints: latency-svc-zzd8r [729.112344ms]
    Oct 31 09:35:43.712: INFO: Created: latency-svc-5qsd7
    Oct 31 09:35:43.729: INFO: Created: latency-svc-cgrpd
    Oct 31 09:35:43.754: INFO: Got endpoints: latency-svc-ccj88 [748.607978ms]
    Oct 31 09:35:43.804: INFO: Got endpoints: latency-svc-c6wnh [752.90622ms]
    Oct 31 09:35:43.807: INFO: Created: latency-svc-nw8kw
    Oct 31 09:35:43.864: INFO: Created: latency-svc-2lmlt
    Oct 31 09:35:43.864: INFO: Got endpoints: latency-svc-6hmfm [764.452313ms]
    Oct 31 09:35:43.898: INFO: Got endpoints: latency-svc-qs2j2 [741.025782ms]
    Oct 31 09:35:43.962: INFO: Created: latency-svc-49c7c
    Oct 31 09:35:43.976: INFO: Got endpoints: latency-svc-qs7s5 [768.35391ms]
    Oct 31 09:35:44.071: INFO: Got endpoints: latency-svc-d4qfz [817.749073ms]
    Oct 31 09:35:44.087: INFO: Got endpoints: latency-svc-62qmn [788.477595ms]
    Oct 31 09:35:44.089: INFO: Created: latency-svc-9w7s8
    Oct 31 09:35:44.095: INFO: Created: latency-svc-pfh4w
    Oct 31 09:35:44.180: INFO: Got endpoints: latency-svc-fkcl7 [769.165651ms]
    Oct 31 09:35:44.227: INFO: Got endpoints: latency-svc-pntdl [815.844746ms]
    Oct 31 09:35:44.230: INFO: Got endpoints: latency-svc-z88gp [780.942867ms]
    Oct 31 09:35:44.230: INFO: Created: latency-svc-hc9hh
    Oct 31 09:35:44.241: INFO: Created: latency-svc-z5vkb
    Oct 31 09:35:44.272: INFO: Created: latency-svc-vr5rx
    Oct 31 09:35:44.273: INFO: Got endpoints: latency-svc-8rrtd [766.30482ms]
    Oct 31 09:35:44.279: INFO: Created: latency-svc-pmx4d
    Oct 31 09:35:44.294: INFO: Created: latency-svc-g4gxr
    Oct 31 09:35:44.295: INFO: Created: latency-svc-r67bq
    Oct 31 09:35:44.305: INFO: Got endpoints: latency-svc-4rppk [754.87389ms]
    Oct 31 09:35:44.354: INFO: Got endpoints: latency-svc-5md4w [750.412409ms]
    Oct 31 09:35:44.380: INFO: Created: latency-svc-rlq9z
    Oct 31 09:35:44.382: INFO: Created: latency-svc-k88v2
    Oct 31 09:35:44.405: INFO: Got endpoints: latency-svc-5qsd7 [751.455281ms]
    Oct 31 09:35:44.448: INFO: Got endpoints: latency-svc-cgrpd [748.050762ms]
    Oct 31 09:35:44.465: INFO: Created: latency-svc-77rdp
    Oct 31 09:35:44.487: INFO: Created: latency-svc-gk5vw
    Oct 31 09:35:44.509: INFO: Got endpoints: latency-svc-nw8kw [755.877195ms]
    Oct 31 09:35:44.547: INFO: Got endpoints: latency-svc-2lmlt [743.007835ms]
    Oct 31 09:35:44.561: INFO: Created: latency-svc-679jr
    Oct 31 09:35:44.581: INFO: Created: latency-svc-79h2j
    Oct 31 09:35:44.687: INFO: Got endpoints: latency-svc-9w7s8 [788.952853ms]
    Oct 31 09:35:44.688: INFO: Got endpoints: latency-svc-49c7c [823.789801ms]
    Oct 31 09:35:44.703: INFO: Got endpoints: latency-svc-pfh4w [726.671815ms]
    Oct 31 09:35:44.733: INFO: Created: latency-svc-b7wsw
    Oct 31 09:35:44.836: INFO: Created: latency-svc-qbrtm
    Oct 31 09:35:44.836: INFO: Got endpoints: latency-svc-z5vkb [748.393155ms]
    Oct 31 09:35:44.836: INFO: Got endpoints: latency-svc-hc9hh [764.738656ms]
    Oct 31 09:35:44.844: INFO: Created: latency-svc-mfhnc
    Oct 31 09:35:44.853: INFO: Got endpoints: latency-svc-vr5rx [671.90828ms]
    Oct 31 09:35:44.861: INFO: Created: latency-svc-8tvqq
    Oct 31 09:35:44.866: INFO: Created: latency-svc-2m7ch
    Oct 31 09:35:44.910: INFO: Got endpoints: latency-svc-pmx4d [682.78275ms]
    Oct 31 09:35:44.911: INFO: Created: latency-svc-sdvvv
    Oct 31 09:35:44.951: INFO: Got endpoints: latency-svc-r67bq [721.184862ms]
    Oct 31 09:35:44.969: INFO: Created: latency-svc-ffz8d
    Oct 31 09:35:44.985: INFO: Created: latency-svc-bb7lz
    Oct 31 09:35:45.013: INFO: Got endpoints: latency-svc-g4gxr [740.218582ms]
    Oct 31 09:35:45.054: INFO: Got endpoints: latency-svc-rlq9z [748.765955ms]
    Oct 31 09:35:45.065: INFO: Created: latency-svc-nxjrh
    Oct 31 09:35:45.076: INFO: Created: latency-svc-4wh75
    Oct 31 09:35:45.145: INFO: Got endpoints: latency-svc-k88v2 [789.516137ms]
    Oct 31 09:35:45.154: INFO: Got endpoints: latency-svc-77rdp [749.327093ms]
    Oct 31 09:35:45.167: INFO: Created: latency-svc-k5gcc
    Oct 31 09:35:45.201: INFO: Created: latency-svc-d6q8k
    Oct 31 09:35:45.211: INFO: Got endpoints: latency-svc-gk5vw [762.333649ms]
    Oct 31 09:35:45.250: INFO: Created: latency-svc-8pphh
    Oct 31 09:35:45.252: INFO: Got endpoints: latency-svc-679jr [742.43849ms]
    Oct 31 09:35:45.316: INFO: Got endpoints: latency-svc-79h2j [768.444053ms]
    Oct 31 09:35:45.328: INFO: Created: latency-svc-tr7sw
    Oct 31 09:35:45.353: INFO: Got endpoints: latency-svc-b7wsw [665.293211ms]
    Oct 31 09:35:45.356: INFO: Created: latency-svc-dn5ft
    Oct 31 09:35:45.413: INFO: Got endpoints: latency-svc-qbrtm [725.661034ms]
    Oct 31 09:35:45.423: INFO: Created: latency-svc-6z9vr
    Oct 31 09:35:45.452: INFO: Got endpoints: latency-svc-mfhnc [749.60133ms]
    Oct 31 09:35:45.499: INFO: Got endpoints: latency-svc-8tvqq [663.014101ms]
    Oct 31 09:35:45.551: INFO: Got endpoints: latency-svc-2m7ch [714.45802ms]
    Oct 31 09:35:45.625: INFO: Got endpoints: latency-svc-sdvvv [767.390341ms]
    Oct 31 09:35:45.653: INFO: Got endpoints: latency-svc-ffz8d [742.770871ms]
    Oct 31 09:35:45.708: INFO: Got endpoints: latency-svc-bb7lz [757.284023ms]
    Oct 31 09:35:45.750: INFO: Got endpoints: latency-svc-nxjrh [736.81915ms]
    Oct 31 09:35:45.804: INFO: Got endpoints: latency-svc-4wh75 [749.512582ms]
    Oct 31 09:35:45.854: INFO: Got endpoints: latency-svc-k5gcc [708.944487ms]
    Oct 31 09:35:45.910: INFO: Got endpoints: latency-svc-d6q8k [756.088643ms]
    Oct 31 09:35:45.949: INFO: Got endpoints: latency-svc-8pphh [737.859878ms]
    Oct 31 09:35:45.997: INFO: Got endpoints: latency-svc-tr7sw [745.02062ms]
    Oct 31 09:35:46.049: INFO: Got endpoints: latency-svc-dn5ft [731.426509ms]
    Oct 31 09:35:46.101: INFO: Got endpoints: latency-svc-6z9vr [746.350752ms]
    Oct 31 09:35:46.102: INFO: Latencies: [32.323835ms 61.403967ms 63.13852ms 71.764176ms 126.275208ms 140.253091ms 146.046512ms 220.741297ms 234.133332ms 247.939825ms 287.384477ms 294.601106ms 299.007216ms 306.0632ms 309.773202ms 312.564924ms 313.902498ms 317.200848ms 317.455313ms 321.616487ms 331.237028ms 332.783421ms 333.540666ms 333.677518ms 344.26946ms 347.473445ms 348.970879ms 349.404888ms 349.492037ms 363.686843ms 365.414187ms 369.609244ms 371.65902ms 374.514233ms 383.260412ms 384.461143ms 386.394404ms 386.995302ms 388.755864ms 388.806468ms 389.286558ms 395.699718ms 397.386653ms 402.604905ms 409.497442ms 411.465516ms 412.426314ms 413.797995ms 417.318689ms 421.626192ms 424.837273ms 426.142669ms 437.857537ms 455.747844ms 456.433381ms 458.479882ms 460.011211ms 463.423249ms 505.74563ms 523.831724ms 568.278026ms 574.917535ms 585.473879ms 607.758159ms 611.977327ms 612.993479ms 619.019892ms 625.965726ms 627.964892ms 645.74718ms 661.321982ms 662.816022ms 663.014101ms 665.293211ms 666.944272ms 671.90828ms 681.346473ms 681.589277ms 682.434154ms 682.78275ms 683.045768ms 686.972835ms 690.573994ms 694.583313ms 697.205369ms 700.993367ms 702.806452ms 706.392156ms 707.039348ms 708.944487ms 711.588817ms 711.706831ms 714.45802ms 720.540132ms 721.184862ms 725.446026ms 725.661034ms 726.174596ms 726.671815ms 728.54429ms 729.112344ms 730.453281ms 730.918503ms 731.423935ms 731.426509ms 731.994557ms 733.49467ms 735.23415ms 735.472039ms 735.968937ms 736.231483ms 736.81915ms 737.859878ms 738.461408ms 739.226868ms 739.483151ms 740.218582ms 741.025782ms 741.227607ms 741.548623ms 741.721522ms 742.43849ms 742.462119ms 742.770871ms 743.007835ms 744.01549ms 744.28205ms 745.02062ms 745.587235ms 745.785617ms 746.350752ms 747.124504ms 747.272927ms 747.674169ms 747.923954ms 748.050762ms 748.393155ms 748.607978ms 748.651665ms 748.765955ms 748.812305ms 749.159715ms 749.327093ms 749.371517ms 749.512582ms 749.578931ms 749.60133ms 749.680499ms 750.293149ms 750.392447ms 750.412409ms 750.64623ms 751.370072ms 751.455281ms 752.163584ms 752.39479ms 752.609303ms 752.90622ms 753.385918ms 753.447473ms 753.767429ms 754.87389ms 755.877195ms 756.088643ms 756.880645ms 757.208209ms 757.270342ms 757.284023ms 758.577657ms 759.193748ms 759.250371ms 760.510788ms 762.17645ms 762.333649ms 764.452313ms 764.738656ms 765.617146ms 765.97068ms 766.30482ms 767.390341ms 768.135418ms 768.35391ms 768.444053ms 769.165651ms 770.090044ms 771.450065ms 772.404274ms 775.812385ms 780.942867ms 788.477595ms 788.952853ms 789.516137ms 790.642106ms 794.887816ms 796.267429ms 797.897185ms 805.221357ms 815.844746ms 817.749073ms 823.789801ms]
    Oct 31 09:35:46.102: INFO: 50 %ile: 729.112344ms
    Oct 31 09:35:46.102: INFO: 90 %ile: 768.135418ms
    Oct 31 09:35:46.102: INFO: 99 %ile: 817.749073ms
    Oct 31 09:35:46.102: INFO: Total sample count: 200
    [AfterEach] [sig-network] Service endpoints latency
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:46.103: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Service endpoints latency
      tear down framework | framework.go:193
    STEP: Destroying namespace "svc-latency-515" for this suite. 10/31/23 09:35:46.16
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] PodTemplates
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:46.228
Oct 31 09:35:46.228: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename podtemplate 10/31/23 09:35:46.229
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:46.465
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:46.601
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:47.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-976" for this suite. 10/31/23 09:35:47.402
------------------------------
â€¢ [1.229 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/common/node/podtemplates.go:53

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:46.228
    Oct 31 09:35:46.228: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename podtemplate 10/31/23 09:35:46.229
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:46.465
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:46.601
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should run the lifecycle of PodTemplates [Conformance]
      test/e2e/common/node/podtemplates.go:53
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:47.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-976" for this suite. 10/31/23 09:35:47.402
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:47.462
Oct 31 09:35:47.462: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:35:47.463
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:47.66
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:47.801
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46
STEP: Creating projection with secret that has name projected-secret-test-24497e59-a7a2-4c9e-811e-88568d6f9858 10/31/23 09:35:47.884
STEP: Creating a pod to test consume secrets 10/31/23 09:35:47.97
Oct 31 09:35:48.032: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce" in namespace "projected-1426" to be "Succeeded or Failed"
Oct 31 09:35:48.053: INFO: Pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce": Phase="Pending", Reason="", readiness=false. Elapsed: 20.587858ms
Oct 31 09:35:50.063: INFO: Pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030558814s
Oct 31 09:35:52.076: INFO: Pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.043873835s
STEP: Saw pod success 10/31/23 09:35:52.076
Oct 31 09:35:52.077: INFO: Pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce" satisfied condition "Succeeded or Failed"
Oct 31 09:35:52.085: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce container projected-secret-volume-test: <nil>
STEP: delete the pod 10/31/23 09:35:52.167
Oct 31 09:35:52.228: INFO: Waiting for pod pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce to disappear
Oct 31 09:35:52.295: INFO: Pod pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:52.295: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1426" for this suite. 10/31/23 09:35:52.324
------------------------------
â€¢ [4.922 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:47.462
    Oct 31 09:35:47.462: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:35:47.463
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:47.66
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:47.801
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:46
    STEP: Creating projection with secret that has name projected-secret-test-24497e59-a7a2-4c9e-811e-88568d6f9858 10/31/23 09:35:47.884
    STEP: Creating a pod to test consume secrets 10/31/23 09:35:47.97
    Oct 31 09:35:48.032: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce" in namespace "projected-1426" to be "Succeeded or Failed"
    Oct 31 09:35:48.053: INFO: Pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce": Phase="Pending", Reason="", readiness=false. Elapsed: 20.587858ms
    Oct 31 09:35:50.063: INFO: Pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030558814s
    Oct 31 09:35:52.076: INFO: Pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.043873835s
    STEP: Saw pod success 10/31/23 09:35:52.076
    Oct 31 09:35:52.077: INFO: Pod "pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce" satisfied condition "Succeeded or Failed"
    Oct 31 09:35:52.085: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce container projected-secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 09:35:52.167
    Oct 31 09:35:52.228: INFO: Waiting for pod pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce to disappear
    Oct 31 09:35:52.295: INFO: Pod pod-projected-secrets-590612e8-6b89-474c-a8da-19aefc446dce no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:52.295: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1426" for this suite. 10/31/23 09:35:52.324
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:52.385
Oct 31 09:35:52.385: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename security-context-test 10/31/23 09:35:52.386
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:52.518
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:52.601
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:486
Oct 31 09:35:52.716: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7" in namespace "security-context-test-5462" to be "Succeeded or Failed"
Oct 31 09:35:52.785: INFO: Pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7": Phase="Pending", Reason="", readiness=false. Elapsed: 69.24702ms
Oct 31 09:35:54.810: INFO: Pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.093888249s
Oct 31 09:35:56.797: INFO: Pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.080878505s
Oct 31 09:35:56.797: INFO: Pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Oct 31 09:35:56.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-5462" for this suite. 10/31/23 09:35:56.888
------------------------------
â€¢ [4.606 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  test/e2e/common/node/security_context.go:430
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:486

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:52.385
    Oct 31 09:35:52.385: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename security-context-test 10/31/23 09:35:52.386
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:52.518
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:52.601
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:486
    Oct 31 09:35:52.716: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7" in namespace "security-context-test-5462" to be "Succeeded or Failed"
    Oct 31 09:35:52.785: INFO: Pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7": Phase="Pending", Reason="", readiness=false. Elapsed: 69.24702ms
    Oct 31 09:35:54.810: INFO: Pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.093888249s
    Oct 31 09:35:56.797: INFO: Pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.080878505s
    Oct 31 09:35:56.797: INFO: Pod "busybox-readonly-false-29e2aaf9-018e-4d62-b5fe-a842457675a7" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:35:56.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-5462" for this suite. 10/31/23 09:35:56.888
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:35:57.001
Oct 31 09:35:57.002: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replicaset 10/31/23 09:35:57.004
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:57.182
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:57.277
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111
Oct 31 09:35:57.348: INFO: Creating ReplicaSet my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139
Oct 31 09:35:57.578: INFO: Pod name my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139: Found 0 pods out of 1
Oct 31 09:36:02.586: INFO: Pod name my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139: Found 1 pods out of 1
Oct 31 09:36:02.587: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139" is running
Oct 31 09:36:02.587: INFO: Waiting up to 5m0s for pod "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd" in namespace "replicaset-2594" to be "running"
Oct 31 09:36:02.713: INFO: Pod "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd": Phase="Running", Reason="", readiness=true. Elapsed: 126.665374ms
Oct 31 09:36:02.713: INFO: Pod "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd" satisfied condition "running"
Oct 31 09:36:02.713: INFO: Pod "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:35:57 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:35:59 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:35:59 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:35:57 +0000 UTC Reason: Message:}])
Oct 31 09:36:02.713: INFO: Trying to dial the pod
Oct 31 09:36:08.055: INFO: Controller my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139: Got expected result from replica 1 [my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd]: "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:36:08.056: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-2594" for this suite. 10/31/23 09:36:08.109
------------------------------
â€¢ [SLOW TEST] [11.163 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/apps/replica_set.go:111

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:35:57.001
    Oct 31 09:35:57.002: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replicaset 10/31/23 09:35:57.004
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:35:57.182
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:35:57.277
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should serve a basic image on each replica with a public image  [Conformance]
      test/e2e/apps/replica_set.go:111
    Oct 31 09:35:57.348: INFO: Creating ReplicaSet my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139
    Oct 31 09:35:57.578: INFO: Pod name my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139: Found 0 pods out of 1
    Oct 31 09:36:02.586: INFO: Pod name my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139: Found 1 pods out of 1
    Oct 31 09:36:02.587: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139" is running
    Oct 31 09:36:02.587: INFO: Waiting up to 5m0s for pod "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd" in namespace "replicaset-2594" to be "running"
    Oct 31 09:36:02.713: INFO: Pod "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd": Phase="Running", Reason="", readiness=true. Elapsed: 126.665374ms
    Oct 31 09:36:02.713: INFO: Pod "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd" satisfied condition "running"
    Oct 31 09:36:02.713: INFO: Pod "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:35:57 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:35:59 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:35:59 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-10-31 09:35:57 +0000 UTC Reason: Message:}])
    Oct 31 09:36:02.713: INFO: Trying to dial the pod
    Oct 31 09:36:08.055: INFO: Controller my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139: Got expected result from replica 1 [my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd]: "my-hostname-basic-f94f9871-4909-4b25-bbf4-6e93d397a139-p8mqd", 1 of 1 required successes so far
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:36:08.056: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-2594" for this suite. 10/31/23 09:36:08.109
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:36:08.167
Oct 31 09:36:08.167: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename deployment 10/31/23 09:36:08.168
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:08.43
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:08.566
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185
STEP: creating a Deployment 10/31/23 09:36:08.779
STEP: waiting for Deployment to be created 10/31/23 09:36:08.847
STEP: waiting for all Replicas to be Ready 10/31/23 09:36:08.856
Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Oct 31 09:36:08.897: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Oct 31 09:36:08.897: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Oct 31 09:36:10.029: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Oct 31 09:36:10.029: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Oct 31 09:36:10.231: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment 10/31/23 09:36:10.231
W1031 09:36:10.337900      18 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Oct 31 09:36:10.353: INFO: observed event type ADDED
STEP: waiting for Replicas to scale 10/31/23 09:36:10.353
Oct 31 09:36:10.361: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
Oct 31 09:36:10.361: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
Oct 31 09:36:10.361: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
Oct 31 09:36:10.361: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.376: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.376: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.400: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.400: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:10.449: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
Oct 31 09:36:10.449: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
Oct 31 09:36:11.989: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:11.990: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:12.022: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
STEP: listing Deployments 10/31/23 09:36:12.022
Oct 31 09:36:12.073: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment 10/31/23 09:36:12.074
Oct 31 09:36:12.176: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
STEP: fetching the DeploymentStatus 10/31/23 09:36:12.176
Oct 31 09:36:12.283: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Oct 31 09:36:12.283: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Oct 31 09:36:12.284: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Oct 31 09:36:12.284: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Oct 31 09:36:12.284: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Oct 31 09:36:13.275: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Oct 31 09:36:13.711: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
Oct 31 09:36:13.759: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Oct 31 09:36:13.798: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Oct 31 09:36:15.276: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus 10/31/23 09:36:15.365
STEP: fetching the DeploymentStatus 10/31/23 09:36:15.501
Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
Oct 31 09:36:15.565: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:15.565: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 3
Oct 31 09:36:15.566: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:15.566: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
Oct 31 09:36:15.569: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 3
STEP: deleting the Deployment 10/31/23 09:36:15.569
Oct 31 09:36:15.624: INFO: observed event type MODIFIED
Oct 31 09:36:15.625: INFO: observed event type MODIFIED
Oct 31 09:36:15.625: INFO: observed event type MODIFIED
Oct 31 09:36:15.625: INFO: observed event type MODIFIED
Oct 31 09:36:15.625: INFO: observed event type MODIFIED
Oct 31 09:36:15.626: INFO: observed event type MODIFIED
Oct 31 09:36:15.626: INFO: observed event type MODIFIED
Oct 31 09:36:15.626: INFO: observed event type MODIFIED
Oct 31 09:36:15.626: INFO: observed event type MODIFIED
Oct 31 09:36:15.626: INFO: observed event type MODIFIED
Oct 31 09:36:15.626: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Oct 31 09:36:15.676: INFO: Log out all the ReplicaSets if there is no deployment created
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Oct 31 09:36:15.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-695" for this suite. 10/31/23 09:36:15.743
------------------------------
â€¢ [SLOW TEST] [7.591 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/apps/deployment.go:185

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:36:08.167
    Oct 31 09:36:08.167: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename deployment 10/31/23 09:36:08.168
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:08.43
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:08.566
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] should run the lifecycle of a Deployment [Conformance]
      test/e2e/apps/deployment.go:185
    STEP: creating a Deployment 10/31/23 09:36:08.779
    STEP: waiting for Deployment to be created 10/31/23 09:36:08.847
    STEP: waiting for all Replicas to be Ready 10/31/23 09:36:08.856
    Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Oct 31 09:36:08.883: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Oct 31 09:36:08.897: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Oct 31 09:36:08.897: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0 and labels map[test-deployment-static:true]
    Oct 31 09:36:10.029: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Oct 31 09:36:10.029: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment-static:true]
    Oct 31 09:36:10.231: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2 and labels map[test-deployment-static:true]
    STEP: patching the Deployment 10/31/23 09:36:10.231
    W1031 09:36:10.337900      18 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Oct 31 09:36:10.353: INFO: observed event type ADDED
    STEP: waiting for Replicas to scale 10/31/23 09:36:10.353
    Oct 31 09:36:10.361: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
    Oct 31 09:36:10.361: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
    Oct 31 09:36:10.361: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
    Oct 31 09:36:10.361: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
    Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
    Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
    Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
    Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 0
    Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    Oct 31 09:36:10.362: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.363: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.376: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.376: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.400: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.400: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:10.449: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    Oct 31 09:36:10.449: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    Oct 31 09:36:11.989: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:11.990: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:12.022: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    STEP: listing Deployments 10/31/23 09:36:12.022
    Oct 31 09:36:12.073: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
    STEP: updating the Deployment 10/31/23 09:36:12.074
    Oct 31 09:36:12.176: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    STEP: fetching the DeploymentStatus 10/31/23 09:36:12.176
    Oct 31 09:36:12.283: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Oct 31 09:36:12.283: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Oct 31 09:36:12.284: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Oct 31 09:36:12.284: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Oct 31 09:36:12.284: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
    Oct 31 09:36:13.275: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Oct 31 09:36:13.711: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    Oct 31 09:36:13.759: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Oct 31 09:36:13.798: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
    Oct 31 09:36:15.276: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
    STEP: patching the DeploymentStatus 10/31/23 09:36:15.365
    STEP: fetching the DeploymentStatus 10/31/23 09:36:15.501
    Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    Oct 31 09:36:15.564: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 1
    Oct 31 09:36:15.565: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:15.565: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 3
    Oct 31 09:36:15.566: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:15.566: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 2
    Oct 31 09:36:15.569: INFO: observed Deployment test-deployment in namespace deployment-695 with ReadyReplicas 3
    STEP: deleting the Deployment 10/31/23 09:36:15.569
    Oct 31 09:36:15.624: INFO: observed event type MODIFIED
    Oct 31 09:36:15.625: INFO: observed event type MODIFIED
    Oct 31 09:36:15.625: INFO: observed event type MODIFIED
    Oct 31 09:36:15.625: INFO: observed event type MODIFIED
    Oct 31 09:36:15.625: INFO: observed event type MODIFIED
    Oct 31 09:36:15.626: INFO: observed event type MODIFIED
    Oct 31 09:36:15.626: INFO: observed event type MODIFIED
    Oct 31 09:36:15.626: INFO: observed event type MODIFIED
    Oct 31 09:36:15.626: INFO: observed event type MODIFIED
    Oct 31 09:36:15.626: INFO: observed event type MODIFIED
    Oct 31 09:36:15.626: INFO: observed event type MODIFIED
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Oct 31 09:36:15.676: INFO: Log out all the ReplicaSets if there is no deployment created
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:36:15.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-695" for this suite. 10/31/23 09:36:15.743
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:36:15.767
Oct 31 09:36:15.767: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sysctl 10/31/23 09:36:15.768
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:15.935
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:16.021
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 10/31/23 09:36:16.117
STEP: Watching for error events or started pod 10/31/23 09:36:16.203
STEP: Waiting for pod completion 10/31/23 09:36:18.213
Oct 31 09:36:18.214: INFO: Waiting up to 3m0s for pod "sysctl-24688c01-d257-44b2-b359-dbced974108a" in namespace "sysctl-5487" to be "completed"
Oct 31 09:36:18.239: INFO: Pod "sysctl-24688c01-d257-44b2-b359-dbced974108a": Phase="Running", Reason="", readiness=false. Elapsed: 25.530703ms
Oct 31 09:36:20.248: INFO: Pod "sysctl-24688c01-d257-44b2-b359-dbced974108a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.033979123s
Oct 31 09:36:20.248: INFO: Pod "sysctl-24688c01-d257-44b2-b359-dbced974108a" satisfied condition "completed"
STEP: Checking that the pod succeeded 10/31/23 09:36:20.304
STEP: Getting logs from the pod 10/31/23 09:36:20.304
STEP: Checking that the sysctl is actually updated 10/31/23 09:36:20.363
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:36:20.363: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "sysctl-5487" for this suite. 10/31/23 09:36:20.428
------------------------------
â€¢ [4.755 seconds]
[sig-node] Sysctls [LinuxOnly] [NodeConformance]
test/e2e/common/node/framework.go:23
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/common/node/sysctl.go:77

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:37
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:36:15.767
    Oct 31 09:36:15.767: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sysctl 10/31/23 09:36:15.768
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:15.935
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:16.021
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/common/node/sysctl.go:67
    [It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
      test/e2e/common/node/sysctl.go:77
    STEP: Creating a pod with the kernel.shm_rmid_forced sysctl 10/31/23 09:36:16.117
    STEP: Watching for error events or started pod 10/31/23 09:36:16.203
    STEP: Waiting for pod completion 10/31/23 09:36:18.213
    Oct 31 09:36:18.214: INFO: Waiting up to 3m0s for pod "sysctl-24688c01-d257-44b2-b359-dbced974108a" in namespace "sysctl-5487" to be "completed"
    Oct 31 09:36:18.239: INFO: Pod "sysctl-24688c01-d257-44b2-b359-dbced974108a": Phase="Running", Reason="", readiness=false. Elapsed: 25.530703ms
    Oct 31 09:36:20.248: INFO: Pod "sysctl-24688c01-d257-44b2-b359-dbced974108a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 2.033979123s
    Oct 31 09:36:20.248: INFO: Pod "sysctl-24688c01-d257-44b2-b359-dbced974108a" satisfied condition "completed"
    STEP: Checking that the pod succeeded 10/31/23 09:36:20.304
    STEP: Getting logs from the pod 10/31/23 09:36:20.304
    STEP: Checking that the sysctl is actually updated 10/31/23 09:36:20.363
    [AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:36:20.363: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sysctl-5487" for this suite. 10/31/23 09:36:20.428
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:36:20.524
Oct 31 09:36:20.525: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 09:36:20.527
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:20.633
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:20.812
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326
STEP: Counting existing ResourceQuota 10/31/23 09:36:37.881
STEP: Creating a ResourceQuota 10/31/23 09:36:42.889
STEP: Ensuring resource quota status is calculated 10/31/23 09:36:42.94
STEP: Creating a ConfigMap 10/31/23 09:36:44.948
STEP: Ensuring resource quota status captures configMap creation 10/31/23 09:36:45.037
STEP: Deleting a ConfigMap 10/31/23 09:36:47.045
STEP: Ensuring resource quota status released usage 10/31/23 09:36:47.134
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 09:36:49.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-6486" for this suite. 10/31/23 09:36:49.198
------------------------------
â€¢ [SLOW TEST] [28.781 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/apimachinery/resource_quota.go:326

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:36:20.524
    Oct 31 09:36:20.525: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 09:36:20.527
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:20.633
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:20.812
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
      test/e2e/apimachinery/resource_quota.go:326
    STEP: Counting existing ResourceQuota 10/31/23 09:36:37.881
    STEP: Creating a ResourceQuota 10/31/23 09:36:42.889
    STEP: Ensuring resource quota status is calculated 10/31/23 09:36:42.94
    STEP: Creating a ConfigMap 10/31/23 09:36:44.948
    STEP: Ensuring resource quota status captures configMap creation 10/31/23 09:36:45.037
    STEP: Deleting a ConfigMap 10/31/23 09:36:47.045
    STEP: Ensuring resource quota status released usage 10/31/23 09:36:47.134
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:36:49.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-6486" for this suite. 10/31/23 09:36:49.198
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
[BeforeEach] [sig-instrumentation] Events
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:36:49.308
Oct 31 09:36:49.308: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename events 10/31/23 09:36:49.31
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:49.453
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:49.589
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:31
[It] should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57
STEP: creating a test event 10/31/23 09:36:49.687
STEP: listing all events in all namespaces 10/31/23 09:36:49.778
STEP: patching the test event 10/31/23 09:36:49.834
STEP: fetching the test event 10/31/23 09:36:49.926
STEP: updating the test event 10/31/23 09:36:50.026
STEP: getting the test event 10/31/23 09:36:50.159
STEP: deleting the test event 10/31/23 09:36:50.254
STEP: listing all events in all namespaces 10/31/23 09:36:50.305
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/node/init/init.go:32
Oct 31 09:36:50.405: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events
  tear down framework | framework.go:193
STEP: Destroying namespace "events-6895" for this suite. 10/31/23 09:36:50.461
------------------------------
â€¢ [1.253 seconds]
[sig-instrumentation] Events
test/e2e/instrumentation/common/framework.go:23
  should manage the lifecycle of an event [Conformance]
  test/e2e/instrumentation/core_events.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:36:49.308
    Oct 31 09:36:49.308: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename events 10/31/23 09:36:49.31
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:49.453
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:49.589
    [BeforeEach] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:31
    [It] should manage the lifecycle of an event [Conformance]
      test/e2e/instrumentation/core_events.go:57
    STEP: creating a test event 10/31/23 09:36:49.687
    STEP: listing all events in all namespaces 10/31/23 09:36:49.778
    STEP: patching the test event 10/31/23 09:36:49.834
    STEP: fetching the test event 10/31/23 09:36:49.926
    STEP: updating the test event 10/31/23 09:36:50.026
    STEP: getting the test event 10/31/23 09:36:50.159
    STEP: deleting the test event 10/31/23 09:36:50.254
    STEP: listing all events in all namespaces 10/31/23 09:36:50.305
    [AfterEach] [sig-instrumentation] Events
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:36:50.405: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-6895" for this suite. 10/31/23 09:36:50.461
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:36:50.563
Oct 31 09:36:50.563: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubelet-test 10/31/23 09:36:50.564
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:50.738
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:50.901
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:110
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:36:55.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-4945" for this suite. 10/31/23 09:36:55.192
------------------------------
â€¢ [4.698 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should have an terminated reason [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:36:50.563
    Oct 31 09:36:50.563: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubelet-test 10/31/23 09:36:50.564
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:50.738
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:50.901
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should have an terminated reason [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:110
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:36:55.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-4945" for this suite. 10/31/23 09:36:55.192
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin]
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:36:55.263
Oct 31 09:36:55.264: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename certificates 10/31/23 09:36:55.265
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:55.453
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:55.634
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200
STEP: getting /apis 10/31/23 09:36:56.13
STEP: getting /apis/certificates.k8s.io 10/31/23 09:36:56.181
STEP: getting /apis/certificates.k8s.io/v1 10/31/23 09:36:56.229
STEP: creating 10/31/23 09:36:56.323
STEP: getting 10/31/23 09:36:56.365
STEP: listing 10/31/23 09:36:56.424
STEP: watching 10/31/23 09:36:56.474
Oct 31 09:36:56.475: INFO: starting watch
STEP: patching 10/31/23 09:36:56.57
STEP: updating 10/31/23 09:36:56.63
Oct 31 09:36:56.681: INFO: waiting for watch events with expected annotations
Oct 31 09:36:56.682: INFO: saw patched and updated annotations
STEP: getting /approval 10/31/23 09:36:56.682
STEP: patching /approval 10/31/23 09:36:56.733
STEP: updating /approval 10/31/23 09:36:56.788
STEP: getting /status 10/31/23 09:36:56.805
STEP: patching /status 10/31/23 09:36:56.813
STEP: updating /status 10/31/23 09:36:56.869
STEP: deleting 10/31/23 09:36:56.886
STEP: deleting a collection 10/31/23 09:36:57.036
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:36:57.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "certificates-8969" for this suite. 10/31/23 09:36:57.245
------------------------------
â€¢ [2.074 seconds]
[sig-auth] Certificates API [Privileged:ClusterAdmin]
test/e2e/auth/framework.go:23
  should support CSR API operations [Conformance]
  test/e2e/auth/certificates.go:200

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:36:55.263
    Oct 31 09:36:55.264: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename certificates 10/31/23 09:36:55.265
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:55.453
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:55.634
    [BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSR API operations [Conformance]
      test/e2e/auth/certificates.go:200
    STEP: getting /apis 10/31/23 09:36:56.13
    STEP: getting /apis/certificates.k8s.io 10/31/23 09:36:56.181
    STEP: getting /apis/certificates.k8s.io/v1 10/31/23 09:36:56.229
    STEP: creating 10/31/23 09:36:56.323
    STEP: getting 10/31/23 09:36:56.365
    STEP: listing 10/31/23 09:36:56.424
    STEP: watching 10/31/23 09:36:56.474
    Oct 31 09:36:56.475: INFO: starting watch
    STEP: patching 10/31/23 09:36:56.57
    STEP: updating 10/31/23 09:36:56.63
    Oct 31 09:36:56.681: INFO: waiting for watch events with expected annotations
    Oct 31 09:36:56.682: INFO: saw patched and updated annotations
    STEP: getting /approval 10/31/23 09:36:56.682
    STEP: patching /approval 10/31/23 09:36:56.733
    STEP: updating /approval 10/31/23 09:36:56.788
    STEP: getting /status 10/31/23 09:36:56.805
    STEP: patching /status 10/31/23 09:36:56.813
    STEP: updating /status 10/31/23 09:36:56.869
    STEP: deleting 10/31/23 09:36:56.886
    STEP: deleting a collection 10/31/23 09:36:57.036
    [AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:36:57.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] Certificates API [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "certificates-8969" for this suite. 10/31/23 09:36:57.245
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:36:57.354
Oct 31 09:36:57.354: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replicaset 10/31/23 09:36:57.355
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:57.534
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:57.686
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165
STEP: Create a ReplicaSet 10/31/23 09:36:57.741
STEP: Verify that the required pods have come up 10/31/23 09:36:57.799
Oct 31 09:36:57.822: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running 10/31/23 09:36:57.822
Oct 31 09:36:57.823: INFO: Waiting up to 5m0s for pod "test-rs-qgw4l" in namespace "replicaset-1658" to be "running"
Oct 31 09:36:57.823: INFO: Waiting up to 5m0s for pod "test-rs-698h6" in namespace "replicaset-1658" to be "running"
Oct 31 09:36:57.824: INFO: Waiting up to 5m0s for pod "test-rs-q8672" in namespace "replicaset-1658" to be "running"
Oct 31 09:36:57.834: INFO: Pod "test-rs-698h6": Phase="Pending", Reason="", readiness=false. Elapsed: 10.349563ms
Oct 31 09:36:57.835: INFO: Pod "test-rs-q8672": Phase="Pending", Reason="", readiness=false. Elapsed: 11.302988ms
Oct 31 09:36:57.835: INFO: Pod "test-rs-qgw4l": Phase="Pending", Reason="", readiness=false. Elapsed: 12.385323ms
Oct 31 09:36:59.846: INFO: Pod "test-rs-698h6": Phase="Running", Reason="", readiness=true. Elapsed: 2.02308577s
Oct 31 09:36:59.847: INFO: Pod "test-rs-698h6" satisfied condition "running"
Oct 31 09:36:59.847: INFO: Pod "test-rs-q8672": Phase="Running", Reason="", readiness=true. Elapsed: 2.023289962s
Oct 31 09:36:59.847: INFO: Pod "test-rs-q8672" satisfied condition "running"
Oct 31 09:36:59.889: INFO: Pod "test-rs-qgw4l": Phase="Running", Reason="", readiness=true. Elapsed: 2.065955681s
Oct 31 09:36:59.889: INFO: Pod "test-rs-qgw4l" satisfied condition "running"
Oct 31 09:36:59.901: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets 10/31/23 09:36:59.901
STEP: DeleteCollection of the ReplicaSets 10/31/23 09:36:59.952
STEP: After DeleteCollection verify that ReplicaSets have been deleted 10/31/23 09:37:00.029
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:37:00.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-1658" for this suite. 10/31/23 09:37:00.199
------------------------------
â€¢ [2.916 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/apps/replica_set.go:165

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:36:57.354
    Oct 31 09:36:57.354: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replicaset 10/31/23 09:36:57.355
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:36:57.534
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:36:57.686
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should list and delete a collection of ReplicaSets [Conformance]
      test/e2e/apps/replica_set.go:165
    STEP: Create a ReplicaSet 10/31/23 09:36:57.741
    STEP: Verify that the required pods have come up 10/31/23 09:36:57.799
    Oct 31 09:36:57.822: INFO: Pod name sample-pod: Found 3 pods out of 3
    STEP: ensuring each pod is running 10/31/23 09:36:57.822
    Oct 31 09:36:57.823: INFO: Waiting up to 5m0s for pod "test-rs-qgw4l" in namespace "replicaset-1658" to be "running"
    Oct 31 09:36:57.823: INFO: Waiting up to 5m0s for pod "test-rs-698h6" in namespace "replicaset-1658" to be "running"
    Oct 31 09:36:57.824: INFO: Waiting up to 5m0s for pod "test-rs-q8672" in namespace "replicaset-1658" to be "running"
    Oct 31 09:36:57.834: INFO: Pod "test-rs-698h6": Phase="Pending", Reason="", readiness=false. Elapsed: 10.349563ms
    Oct 31 09:36:57.835: INFO: Pod "test-rs-q8672": Phase="Pending", Reason="", readiness=false. Elapsed: 11.302988ms
    Oct 31 09:36:57.835: INFO: Pod "test-rs-qgw4l": Phase="Pending", Reason="", readiness=false. Elapsed: 12.385323ms
    Oct 31 09:36:59.846: INFO: Pod "test-rs-698h6": Phase="Running", Reason="", readiness=true. Elapsed: 2.02308577s
    Oct 31 09:36:59.847: INFO: Pod "test-rs-698h6" satisfied condition "running"
    Oct 31 09:36:59.847: INFO: Pod "test-rs-q8672": Phase="Running", Reason="", readiness=true. Elapsed: 2.023289962s
    Oct 31 09:36:59.847: INFO: Pod "test-rs-q8672" satisfied condition "running"
    Oct 31 09:36:59.889: INFO: Pod "test-rs-qgw4l": Phase="Running", Reason="", readiness=true. Elapsed: 2.065955681s
    Oct 31 09:36:59.889: INFO: Pod "test-rs-qgw4l" satisfied condition "running"
    Oct 31 09:36:59.901: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
    STEP: Listing all ReplicaSets 10/31/23 09:36:59.901
    STEP: DeleteCollection of the ReplicaSets 10/31/23 09:36:59.952
    STEP: After DeleteCollection verify that ReplicaSets have been deleted 10/31/23 09:37:00.029
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:37:00.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-1658" for this suite. 10/31/23 09:37:00.199
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:37:00.273
Oct 31 09:37:00.274: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-runtime 10/31/23 09:37:00.275
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:00.427
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:00.561
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:195
STEP: create the container 10/31/23 09:37:00.617
STEP: wait for the container to reach Succeeded 10/31/23 09:37:00.683
STEP: get the container status 10/31/23 09:37:04.728
STEP: the container should be terminated 10/31/23 09:37:04.775
STEP: the termination message should be set 10/31/23 09:37:04.776
Oct 31 09:37:04.776: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container 10/31/23 09:37:04.776
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Oct 31 09:37:04.934: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-6832" for this suite. 10/31/23 09:37:04.95
------------------------------
â€¢ [4.765 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:37:00.273
    Oct 31 09:37:00.274: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-runtime 10/31/23 09:37:00.275
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:00.427
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:00.561
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:195
    STEP: create the container 10/31/23 09:37:00.617
    STEP: wait for the container to reach Succeeded 10/31/23 09:37:00.683
    STEP: get the container status 10/31/23 09:37:04.728
    STEP: the container should be terminated 10/31/23 09:37:04.775
    STEP: the termination message should be set 10/31/23 09:37:04.776
    Oct 31 09:37:04.776: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
    STEP: delete the container 10/31/23 09:37:04.776
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:37:04.934: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-6832" for this suite. 10/31/23 09:37:04.95
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:37:05.042
Oct 31 09:37:05.042: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename statefulset 10/31/23 09:37:05.043
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:05.201
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:05.268
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-8102 10/31/23 09:37:05.369
[It] should have a working scale subresource [Conformance]
  test/e2e/apps/statefulset.go:848
STEP: Creating statefulset ss in namespace statefulset-8102 10/31/23 09:37:05.427
Oct 31 09:37:05.572: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Oct 31 09:37:15.621: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource 10/31/23 09:37:15.75
STEP: updating a scale subresource 10/31/23 09:37:15.843
STEP: verifying the statefulset Spec.Replicas was modified 10/31/23 09:37:15.931
STEP: Patch a scale subresource 10/31/23 09:37:15.978
STEP: verifying the statefulset Spec.Replicas was modified 10/31/23 09:37:16.097
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Oct 31 09:37:16.104: INFO: Deleting all statefulset in ns statefulset-8102
Oct 31 09:37:16.152: INFO: Scaling statefulset ss to 0
Oct 31 09:37:26.308: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 09:37:26.358: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:37:26.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-8102" for this suite. 10/31/23 09:37:26.647
------------------------------
â€¢ [SLOW TEST] [21.691 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should have a working scale subresource [Conformance]
    test/e2e/apps/statefulset.go:848

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:37:05.042
    Oct 31 09:37:05.042: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename statefulset 10/31/23 09:37:05.043
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:05.201
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:05.268
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-8102 10/31/23 09:37:05.369
    [It] should have a working scale subresource [Conformance]
      test/e2e/apps/statefulset.go:848
    STEP: Creating statefulset ss in namespace statefulset-8102 10/31/23 09:37:05.427
    Oct 31 09:37:05.572: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Oct 31 09:37:15.621: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: getting scale subresource 10/31/23 09:37:15.75
    STEP: updating a scale subresource 10/31/23 09:37:15.843
    STEP: verifying the statefulset Spec.Replicas was modified 10/31/23 09:37:15.931
    STEP: Patch a scale subresource 10/31/23 09:37:15.978
    STEP: verifying the statefulset Spec.Replicas was modified 10/31/23 09:37:16.097
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Oct 31 09:37:16.104: INFO: Deleting all statefulset in ns statefulset-8102
    Oct 31 09:37:16.152: INFO: Scaling statefulset ss to 0
    Oct 31 09:37:26.308: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 09:37:26.358: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:37:26.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-8102" for this suite. 10/31/23 09:37:26.647
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version
  should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:37:26.733
Oct 31 09:37:26.733: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 09:37:26.735
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:26.885
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:27.064
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check is all data is printed  [Conformance]
  test/e2e/kubectl/kubectl.go:1685
Oct 31 09:37:27.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4727 version'
Oct 31 09:37:27.241: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Oct 31 09:37:27.241: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.9\", GitCommit:\"d1483fdf7a0578c83523bc1e2212a606a44fd71d\", GitTreeState:\"clean\", BuildDate:\"2023-09-13T11:32:41Z\", GoVersion:\"go1.20.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.9\", GitCommit:\"d1483fdf7a0578c83523bc1e2212a606a44fd71d\", GitTreeState:\"clean\", BuildDate:\"2023-09-13T11:25:26Z\", GoVersion:\"go1.20.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 09:37:27.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4727" for this suite. 10/31/23 09:37:27.29
------------------------------
â€¢ [0.606 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl version
  test/e2e/kubectl/kubectl.go:1679
    should check is all data is printed  [Conformance]
    test/e2e/kubectl/kubectl.go:1685

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:37:26.733
    Oct 31 09:37:26.733: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 09:37:26.735
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:26.885
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:27.064
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check is all data is printed  [Conformance]
      test/e2e/kubectl/kubectl.go:1685
    Oct 31 09:37:27.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4727 version'
    Oct 31 09:37:27.241: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
    Oct 31 09:37:27.241: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.9\", GitCommit:\"d1483fdf7a0578c83523bc1e2212a606a44fd71d\", GitTreeState:\"clean\", BuildDate:\"2023-09-13T11:32:41Z\", GoVersion:\"go1.20.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.7\nServer Version: version.Info{Major:\"1\", Minor:\"26\", GitVersion:\"v1.26.9\", GitCommit:\"d1483fdf7a0578c83523bc1e2212a606a44fd71d\", GitTreeState:\"clean\", BuildDate:\"2023-09-13T11:25:26Z\", GoVersion:\"go1.20.8\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:37:27.241: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4727" for this suite. 10/31/23 09:37:27.29
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:37:27.34
Oct 31 09:37:27.340: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:37:27.343
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:27.495
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:27.611
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194
Oct 31 09:37:27.758: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 10/31/23 09:37:36.66
Oct 31 09:37:36.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 --namespace=crd-publish-openapi-9051 create -f -'
Oct 31 09:37:37.845: INFO: stderr: ""
Oct 31 09:37:37.845: INFO: stdout: "e2e-test-crd-publish-openapi-6101-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Oct 31 09:37:37.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 --namespace=crd-publish-openapi-9051 delete e2e-test-crd-publish-openapi-6101-crds test-cr'
Oct 31 09:37:38.124: INFO: stderr: ""
Oct 31 09:37:38.124: INFO: stdout: "e2e-test-crd-publish-openapi-6101-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Oct 31 09:37:38.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 --namespace=crd-publish-openapi-9051 apply -f -'
Oct 31 09:37:38.730: INFO: stderr: ""
Oct 31 09:37:38.730: INFO: stdout: "e2e-test-crd-publish-openapi-6101-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Oct 31 09:37:38.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 --namespace=crd-publish-openapi-9051 delete e2e-test-crd-publish-openapi-6101-crds test-cr'
Oct 31 09:37:38.993: INFO: stderr: ""
Oct 31 09:37:38.993: INFO: stdout: "e2e-test-crd-publish-openapi-6101-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 10/31/23 09:37:38.993
Oct 31 09:37:38.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 explain e2e-test-crd-publish-openapi-6101-crds'
Oct 31 09:37:39.374: INFO: stderr: ""
Oct 31 09:37:39.374: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6101-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:37:42.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-9051" for this suite. 10/31/23 09:37:42.831
------------------------------
â€¢ [SLOW TEST] [15.519 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:194

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:37:27.34
    Oct 31 09:37:27.340: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:37:27.343
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:27.495
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:27.611
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields at the schema root [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:194
    Oct 31 09:37:27.758: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 10/31/23 09:37:36.66
    Oct 31 09:37:36.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 --namespace=crd-publish-openapi-9051 create -f -'
    Oct 31 09:37:37.845: INFO: stderr: ""
    Oct 31 09:37:37.845: INFO: stdout: "e2e-test-crd-publish-openapi-6101-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Oct 31 09:37:37.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 --namespace=crd-publish-openapi-9051 delete e2e-test-crd-publish-openapi-6101-crds test-cr'
    Oct 31 09:37:38.124: INFO: stderr: ""
    Oct 31 09:37:38.124: INFO: stdout: "e2e-test-crd-publish-openapi-6101-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    Oct 31 09:37:38.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 --namespace=crd-publish-openapi-9051 apply -f -'
    Oct 31 09:37:38.730: INFO: stderr: ""
    Oct 31 09:37:38.730: INFO: stdout: "e2e-test-crd-publish-openapi-6101-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
    Oct 31 09:37:38.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 --namespace=crd-publish-openapi-9051 delete e2e-test-crd-publish-openapi-6101-crds test-cr'
    Oct 31 09:37:38.993: INFO: stderr: ""
    Oct 31 09:37:38.993: INFO: stdout: "e2e-test-crd-publish-openapi-6101-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 10/31/23 09:37:38.993
    Oct 31 09:37:38.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-9051 explain e2e-test-crd-publish-openapi-6101-crds'
    Oct 31 09:37:39.374: INFO: stderr: ""
    Oct 31 09:37:39.374: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-6101-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:37:42.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-9051" for this suite. 10/31/23 09:37:42.831
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:37:42.867
Oct 31 09:37:42.867: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename gc 10/31/23 09:37:42.868
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:43.097
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:43.196
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849
Oct 31 09:37:43.369: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"4d0d1176-17d4-430b-9407-b59b32d29498", Controller:(*bool)(0xc00434ad76), BlockOwnerDeletion:(*bool)(0xc00434ad77)}}
Oct 31 09:37:43.434: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"c2158d81-b90c-419b-b2b5-c1d4676a79e7", Controller:(*bool)(0xc00434afee), BlockOwnerDeletion:(*bool)(0xc00434afef)}}
Oct 31 09:37:43.493: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"06ce7e1d-35b6-4450-ad5c-b303727f8866", Controller:(*bool)(0xc004f1e3a6), BlockOwnerDeletion:(*bool)(0xc004f1e3a7)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Oct 31 09:37:48.569: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-3396" for this suite. 10/31/23 09:37:48.623
------------------------------
â€¢ [SLOW TEST] [5.833 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/apimachinery/garbage_collector.go:849

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:37:42.867
    Oct 31 09:37:42.867: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename gc 10/31/23 09:37:42.868
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:43.097
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:43.196
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not be blocked by dependency circle [Conformance]
      test/e2e/apimachinery/garbage_collector.go:849
    Oct 31 09:37:43.369: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"4d0d1176-17d4-430b-9407-b59b32d29498", Controller:(*bool)(0xc00434ad76), BlockOwnerDeletion:(*bool)(0xc00434ad77)}}
    Oct 31 09:37:43.434: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"c2158d81-b90c-419b-b2b5-c1d4676a79e7", Controller:(*bool)(0xc00434afee), BlockOwnerDeletion:(*bool)(0xc00434afef)}}
    Oct 31 09:37:43.493: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"06ce7e1d-35b6-4450-ad5c-b303727f8866", Controller:(*bool)(0xc004f1e3a6), BlockOwnerDeletion:(*bool)(0xc004f1e3a7)}}
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:37:48.569: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-3396" for this suite. 10/31/23 09:37:48.623
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:37:48.708
Oct 31 09:37:48.708: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 09:37:48.709
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:48.815
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:49.017
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:37:49.072
Oct 31 09:37:49.141: INFO: Waiting up to 5m0s for pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc" in namespace "downward-api-8308" to be "Succeeded or Failed"
Oct 31 09:37:49.161: INFO: Pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc": Phase="Pending", Reason="", readiness=false. Elapsed: 19.57798ms
Oct 31 09:37:51.172: INFO: Pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030523748s
Oct 31 09:37:53.169: INFO: Pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027214563s
STEP: Saw pod success 10/31/23 09:37:53.169
Oct 31 09:37:53.169: INFO: Pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc" satisfied condition "Succeeded or Failed"
Oct 31 09:37:53.219: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc container client-container: <nil>
STEP: delete the pod 10/31/23 09:37:53.445
Oct 31 09:37:53.505: INFO: Waiting for pod downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc to disappear
Oct 31 09:37:53.553: INFO: Pod downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 09:37:53.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-8308" for this suite. 10/31/23 09:37:53.607
------------------------------
â€¢ [4.960 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:84

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:37:48.708
    Oct 31 09:37:48.708: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 09:37:48.709
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:48.815
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:49.017
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:84
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:37:49.072
    Oct 31 09:37:49.141: INFO: Waiting up to 5m0s for pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc" in namespace "downward-api-8308" to be "Succeeded or Failed"
    Oct 31 09:37:49.161: INFO: Pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc": Phase="Pending", Reason="", readiness=false. Elapsed: 19.57798ms
    Oct 31 09:37:51.172: INFO: Pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030523748s
    Oct 31 09:37:53.169: INFO: Pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027214563s
    STEP: Saw pod success 10/31/23 09:37:53.169
    Oct 31 09:37:53.169: INFO: Pod "downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc" satisfied condition "Succeeded or Failed"
    Oct 31 09:37:53.219: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc container client-container: <nil>
    STEP: delete the pod 10/31/23 09:37:53.445
    Oct 31 09:37:53.505: INFO: Waiting for pod downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc to disappear
    Oct 31 09:37:53.553: INFO: Pod downwardapi-volume-754efda8-4ff5-4a39-a266-b6cb6777f5bc no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:37:53.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-8308" for this suite. 10/31/23 09:37:53.607
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:37:53.669
Oct 31 09:37:53.669: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replication-controller 10/31/23 09:37:53.67
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:53.863
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:53.999
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110
STEP: creating a ReplicationController 10/31/23 09:37:54.166
STEP: waiting for RC to be added 10/31/23 09:37:54.177
STEP: waiting for available Replicas 10/31/23 09:37:54.178
STEP: patching ReplicationController 10/31/23 09:37:55.355
STEP: waiting for RC to be modified 10/31/23 09:37:55.452
STEP: patching ReplicationController status 10/31/23 09:37:55.453
STEP: waiting for RC to be modified 10/31/23 09:37:55.467
STEP: waiting for available Replicas 10/31/23 09:37:55.467
STEP: fetching ReplicationController status 10/31/23 09:37:55.475
STEP: patching ReplicationController scale 10/31/23 09:37:55.525
STEP: waiting for RC to be modified 10/31/23 09:37:55.595
STEP: waiting for ReplicationController's scale to be the max amount 10/31/23 09:37:55.596
STEP: fetching ReplicationController; ensuring that it's patched 10/31/23 09:37:56.642
STEP: updating ReplicationController status 10/31/23 09:37:56.691
STEP: waiting for RC to be modified 10/31/23 09:37:56.704
STEP: listing all ReplicationControllers 10/31/23 09:37:56.705
STEP: checking that ReplicationController has expected values 10/31/23 09:37:56.714
STEP: deleting ReplicationControllers by collection 10/31/23 09:37:56.714
STEP: waiting for ReplicationController to have a DELETED watchEvent 10/31/23 09:37:56.782
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:37:56.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-7413" for this suite. 10/31/23 09:37:56.951
------------------------------
â€¢ [3.351 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/apps/rc.go:110

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:37:53.669
    Oct 31 09:37:53.669: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replication-controller 10/31/23 09:37:53.67
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:53.863
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:53.999
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should test the lifecycle of a ReplicationController [Conformance]
      test/e2e/apps/rc.go:110
    STEP: creating a ReplicationController 10/31/23 09:37:54.166
    STEP: waiting for RC to be added 10/31/23 09:37:54.177
    STEP: waiting for available Replicas 10/31/23 09:37:54.178
    STEP: patching ReplicationController 10/31/23 09:37:55.355
    STEP: waiting for RC to be modified 10/31/23 09:37:55.452
    STEP: patching ReplicationController status 10/31/23 09:37:55.453
    STEP: waiting for RC to be modified 10/31/23 09:37:55.467
    STEP: waiting for available Replicas 10/31/23 09:37:55.467
    STEP: fetching ReplicationController status 10/31/23 09:37:55.475
    STEP: patching ReplicationController scale 10/31/23 09:37:55.525
    STEP: waiting for RC to be modified 10/31/23 09:37:55.595
    STEP: waiting for ReplicationController's scale to be the max amount 10/31/23 09:37:55.596
    STEP: fetching ReplicationController; ensuring that it's patched 10/31/23 09:37:56.642
    STEP: updating ReplicationController status 10/31/23 09:37:56.691
    STEP: waiting for RC to be modified 10/31/23 09:37:56.704
    STEP: listing all ReplicationControllers 10/31/23 09:37:56.705
    STEP: checking that ReplicationController has expected values 10/31/23 09:37:56.714
    STEP: deleting ReplicationControllers by collection 10/31/23 09:37:56.714
    STEP: waiting for ReplicationController to have a DELETED watchEvent 10/31/23 09:37:56.782
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:37:56.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-7413" for this suite. 10/31/23 09:37:56.951
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:37:57.021
Oct 31 09:37:57.021: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename namespaces 10/31/23 09:37:57.022
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:57.145
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:57.245
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366
STEP: Updating Namespace "namespaces-5434" 10/31/23 09:37:57.316
Oct 31 09:37:57.380: INFO: Namespace "namespaces-5434" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"39bf49b0-9f32-40a3-abf5-1332f7c3fb9d", "kubernetes.io/metadata.name":"namespaces-5434", "namespaces-5434":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:37:57.380: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-5434" for this suite. 10/31/23 09:37:57.447
------------------------------
â€¢ [0.485 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply an update to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:37:57.021
    Oct 31 09:37:57.021: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename namespaces 10/31/23 09:37:57.022
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:57.145
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:57.245
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply an update to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:366
    STEP: Updating Namespace "namespaces-5434" 10/31/23 09:37:57.316
    Oct 31 09:37:57.380: INFO: Namespace "namespaces-5434" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"39bf49b0-9f32-40a3-abf5-1332f7c3fb9d", "kubernetes.io/metadata.name":"namespaces-5434", "namespaces-5434":"updated", "pod-security.kubernetes.io/enforce":"baseline"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:37:57.380: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-5434" for this suite. 10/31/23 09:37:57.447
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:37:57.522
Oct 31 09:37:57.522: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-lifecycle-hook 10/31/23 09:37:57.523
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:57.824
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:57.948
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 10/31/23 09:37:58.183
Oct 31 09:37:58.198: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-9412" to be "running and ready"
Oct 31 09:37:58.257: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 58.060908ms
Oct 31 09:37:58.257: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:38:00.279: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.080112107s
Oct 31 09:38:00.279: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:38:02.320: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.121976497s
Oct 31 09:38:02.321: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Oct 31 09:38:02.321: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:167
STEP: create the pod with lifecycle hook 10/31/23 09:38:02.373
Oct 31 09:38:02.431: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-9412" to be "running and ready"
Oct 31 09:38:02.489: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 57.392952ms
Oct 31 09:38:02.489: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:38:04.496: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.065043029s
Oct 31 09:38:04.496: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
Oct 31 09:38:04.496: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
STEP: check poststart hook 10/31/23 09:38:04.593
STEP: delete the pod with lifecycle hook 10/31/23 09:38:04.695
Oct 31 09:38:04.751: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Oct 31 09:38:04.760: INFO: Pod pod-with-poststart-http-hook still exists
Oct 31 09:38:06.760: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Oct 31 09:38:06.792: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Oct 31 09:38:06.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-9412" for this suite. 10/31/23 09:38:06.86
------------------------------
â€¢ [SLOW TEST] [9.428 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:167

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:37:57.522
    Oct 31 09:37:57.522: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-lifecycle-hook 10/31/23 09:37:57.523
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:37:57.824
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:37:57.948
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 10/31/23 09:37:58.183
    Oct 31 09:37:58.198: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-9412" to be "running and ready"
    Oct 31 09:37:58.257: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 58.060908ms
    Oct 31 09:37:58.257: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:38:00.279: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 2.080112107s
    Oct 31 09:38:00.279: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:38:02.320: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 4.121976497s
    Oct 31 09:38:02.321: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Oct 31 09:38:02.321: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute poststart http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:167
    STEP: create the pod with lifecycle hook 10/31/23 09:38:02.373
    Oct 31 09:38:02.431: INFO: Waiting up to 5m0s for pod "pod-with-poststart-http-hook" in namespace "container-lifecycle-hook-9412" to be "running and ready"
    Oct 31 09:38:02.489: INFO: Pod "pod-with-poststart-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 57.392952ms
    Oct 31 09:38:02.489: INFO: The phase of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:38:04.496: INFO: Pod "pod-with-poststart-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.065043029s
    Oct 31 09:38:04.496: INFO: The phase of Pod pod-with-poststart-http-hook is Running (Ready = true)
    Oct 31 09:38:04.496: INFO: Pod "pod-with-poststart-http-hook" satisfied condition "running and ready"
    STEP: check poststart hook 10/31/23 09:38:04.593
    STEP: delete the pod with lifecycle hook 10/31/23 09:38:04.695
    Oct 31 09:38:04.751: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Oct 31 09:38:04.760: INFO: Pod pod-with-poststart-http-hook still exists
    Oct 31 09:38:06.760: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
    Oct 31 09:38:06.792: INFO: Pod pod-with-poststart-http-hook no longer exists
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:38:06.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-9412" for this suite. 10/31/23 09:38:06.86
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:38:06.95
Oct 31 09:38:06.951: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename security-context-test 10/31/23 09:38:06.952
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:38:07.165
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:38:07.264
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:609
Oct 31 09:38:07.428: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65" in namespace "security-context-test-1943" to be "Succeeded or Failed"
Oct 31 09:38:07.488: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Pending", Reason="", readiness=false. Elapsed: 58.754204ms
Oct 31 09:38:09.495: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Pending", Reason="", readiness=false. Elapsed: 2.066086624s
Oct 31 09:38:11.537: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Pending", Reason="", readiness=false. Elapsed: 4.108338724s
Oct 31 09:38:13.495: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Pending", Reason="", readiness=false. Elapsed: 6.065958119s
Oct 31 09:38:15.497: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.067775899s
Oct 31 09:38:15.497: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Oct 31 09:38:15.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-1943" for this suite. 10/31/23 09:38:15.708
------------------------------
â€¢ [SLOW TEST] [8.769 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:555
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:609

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:38:06.95
    Oct 31 09:38:06.951: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename security-context-test 10/31/23 09:38:06.952
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:38:07.165
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:38:07.264
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:609
    Oct 31 09:38:07.428: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65" in namespace "security-context-test-1943" to be "Succeeded or Failed"
    Oct 31 09:38:07.488: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Pending", Reason="", readiness=false. Elapsed: 58.754204ms
    Oct 31 09:38:09.495: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Pending", Reason="", readiness=false. Elapsed: 2.066086624s
    Oct 31 09:38:11.537: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Pending", Reason="", readiness=false. Elapsed: 4.108338724s
    Oct 31 09:38:13.495: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Pending", Reason="", readiness=false. Elapsed: 6.065958119s
    Oct 31 09:38:15.497: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.067775899s
    Oct 31 09:38:15.497: INFO: Pod "alpine-nnp-false-28e8e852-b804-438f-abac-02bdfe396b65" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:38:15.699: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-1943" for this suite. 10/31/23 09:38:15.708
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:38:15.725
Oct 31 09:38:15.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-probe 10/31/23 09:38:15.727
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:38:15.935
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:38:16.076
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199
STEP: Creating pod liveness-395b1137-2f06-4be8-81ec-bffb3301a092 in namespace container-probe-3331 10/31/23 09:38:16.227
Oct 31 09:38:16.247: INFO: Waiting up to 5m0s for pod "liveness-395b1137-2f06-4be8-81ec-bffb3301a092" in namespace "container-probe-3331" to be "not pending"
Oct 31 09:38:16.268: INFO: Pod "liveness-395b1137-2f06-4be8-81ec-bffb3301a092": Phase="Pending", Reason="", readiness=false. Elapsed: 20.96149ms
Oct 31 09:38:18.276: INFO: Pod "liveness-395b1137-2f06-4be8-81ec-bffb3301a092": Phase="Running", Reason="", readiness=true. Elapsed: 2.028893775s
Oct 31 09:38:18.276: INFO: Pod "liveness-395b1137-2f06-4be8-81ec-bffb3301a092" satisfied condition "not pending"
Oct 31 09:38:18.276: INFO: Started pod liveness-395b1137-2f06-4be8-81ec-bffb3301a092 in namespace container-probe-3331
STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 09:38:18.276
Oct 31 09:38:18.290: INFO: Initial restart count of pod liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is 0
Oct 31 09:38:38.481: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 1 (20.190971805s elapsed)
Oct 31 09:38:58.617: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 2 (40.326559933s elapsed)
Oct 31 09:39:18.784: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 3 (1m0.493753818s elapsed)
Oct 31 09:39:39.003: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 4 (1m20.712303543s elapsed)
Oct 31 09:40:39.752: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 5 (2m21.461611798s elapsed)
STEP: deleting the pod 10/31/23 09:40:39.752
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Oct 31 09:40:39.825: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-3331" for this suite. 10/31/23 09:40:39.902
------------------------------
â€¢ [SLOW TEST] [144.190 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:199

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:38:15.725
    Oct 31 09:38:15.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-probe 10/31/23 09:38:15.727
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:38:15.935
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:38:16.076
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should have monotonically increasing restart count [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:199
    STEP: Creating pod liveness-395b1137-2f06-4be8-81ec-bffb3301a092 in namespace container-probe-3331 10/31/23 09:38:16.227
    Oct 31 09:38:16.247: INFO: Waiting up to 5m0s for pod "liveness-395b1137-2f06-4be8-81ec-bffb3301a092" in namespace "container-probe-3331" to be "not pending"
    Oct 31 09:38:16.268: INFO: Pod "liveness-395b1137-2f06-4be8-81ec-bffb3301a092": Phase="Pending", Reason="", readiness=false. Elapsed: 20.96149ms
    Oct 31 09:38:18.276: INFO: Pod "liveness-395b1137-2f06-4be8-81ec-bffb3301a092": Phase="Running", Reason="", readiness=true. Elapsed: 2.028893775s
    Oct 31 09:38:18.276: INFO: Pod "liveness-395b1137-2f06-4be8-81ec-bffb3301a092" satisfied condition "not pending"
    Oct 31 09:38:18.276: INFO: Started pod liveness-395b1137-2f06-4be8-81ec-bffb3301a092 in namespace container-probe-3331
    STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 09:38:18.276
    Oct 31 09:38:18.290: INFO: Initial restart count of pod liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is 0
    Oct 31 09:38:38.481: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 1 (20.190971805s elapsed)
    Oct 31 09:38:58.617: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 2 (40.326559933s elapsed)
    Oct 31 09:39:18.784: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 3 (1m0.493753818s elapsed)
    Oct 31 09:39:39.003: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 4 (1m20.712303543s elapsed)
    Oct 31 09:40:39.752: INFO: Restart count of pod container-probe-3331/liveness-395b1137-2f06-4be8-81ec-bffb3301a092 is now 5 (2m21.461611798s elapsed)
    STEP: deleting the pod 10/31/23 09:40:39.752
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:40:39.825: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-3331" for this suite. 10/31/23 09:40:39.902
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:40:39.916
Oct 31 09:40:39.916: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:40:39.917
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:40:40.11
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:40:40.244
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:40:40.382
Oct 31 09:40:40.395: INFO: Waiting up to 5m0s for pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4" in namespace "projected-6645" to be "Succeeded or Failed"
Oct 31 09:40:40.449: INFO: Pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4": Phase="Pending", Reason="", readiness=false. Elapsed: 53.995232ms
Oct 31 09:40:42.467: INFO: Pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.072900996s
Oct 31 09:40:44.457: INFO: Pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.062656921s
STEP: Saw pod success 10/31/23 09:40:44.457
Oct 31 09:40:44.458: INFO: Pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4" satisfied condition "Succeeded or Failed"
Oct 31 09:40:44.505: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4 container client-container: <nil>
STEP: delete the pod 10/31/23 09:40:44.808
Oct 31 09:40:44.871: INFO: Waiting for pod downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4 to disappear
Oct 31 09:40:44.961: INFO: Pod downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 09:40:44.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6645" for this suite. 10/31/23 09:40:44.972
------------------------------
â€¢ [SLOW TEST] [5.157 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:40:39.916
    Oct 31 09:40:39.916: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:40:39.917
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:40:40.11
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:40:40.244
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:235
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:40:40.382
    Oct 31 09:40:40.395: INFO: Waiting up to 5m0s for pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4" in namespace "projected-6645" to be "Succeeded or Failed"
    Oct 31 09:40:40.449: INFO: Pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4": Phase="Pending", Reason="", readiness=false. Elapsed: 53.995232ms
    Oct 31 09:40:42.467: INFO: Pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.072900996s
    Oct 31 09:40:44.457: INFO: Pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.062656921s
    STEP: Saw pod success 10/31/23 09:40:44.457
    Oct 31 09:40:44.458: INFO: Pod "downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4" satisfied condition "Succeeded or Failed"
    Oct 31 09:40:44.505: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4 container client-container: <nil>
    STEP: delete the pod 10/31/23 09:40:44.808
    Oct 31 09:40:44.871: INFO: Waiting for pod downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4 to disappear
    Oct 31 09:40:44.961: INFO: Pod downwardapi-volume-91e97bb9-a256-4fde-9545-b0cf5bd23de4 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:40:44.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6645" for this suite. 10/31/23 09:40:44.972
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:40:45.074
Oct 31 09:40:45.074: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:40:45.075
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:40:45.277
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:40:45.41
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124
STEP: Creating projection with configMap that has name projected-configmap-test-upd-d0812d99-408c-44fb-95a8-6f1e51298ec5 10/31/23 09:40:45.569
STEP: Creating the pod 10/31/23 09:40:45.617
Oct 31 09:40:45.674: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad" in namespace "projected-8943" to be "running and ready"
Oct 31 09:40:45.685: INFO: Pod "pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad": Phase="Pending", Reason="", readiness=false. Elapsed: 11.410071ms
Oct 31 09:40:45.685: INFO: The phase of Pod pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:40:47.693: INFO: Pod "pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad": Phase="Running", Reason="", readiness=true. Elapsed: 2.019358345s
Oct 31 09:40:47.693: INFO: The phase of Pod pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad is Running (Ready = true)
Oct 31 09:40:47.693: INFO: Pod "pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad" satisfied condition "running and ready"
STEP: Updating configmap projected-configmap-test-upd-d0812d99-408c-44fb-95a8-6f1e51298ec5 10/31/23 09:40:47.839
STEP: waiting to observe update in volume 10/31/23 09:40:47.929
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:42:16.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8943" for this suite. 10/31/23 09:42:16.771
------------------------------
â€¢ [SLOW TEST] [91.711 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:40:45.074
    Oct 31 09:40:45.074: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:40:45.075
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:40:45.277
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:40:45.41
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:124
    STEP: Creating projection with configMap that has name projected-configmap-test-upd-d0812d99-408c-44fb-95a8-6f1e51298ec5 10/31/23 09:40:45.569
    STEP: Creating the pod 10/31/23 09:40:45.617
    Oct 31 09:40:45.674: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad" in namespace "projected-8943" to be "running and ready"
    Oct 31 09:40:45.685: INFO: Pod "pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad": Phase="Pending", Reason="", readiness=false. Elapsed: 11.410071ms
    Oct 31 09:40:45.685: INFO: The phase of Pod pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:40:47.693: INFO: Pod "pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad": Phase="Running", Reason="", readiness=true. Elapsed: 2.019358345s
    Oct 31 09:40:47.693: INFO: The phase of Pod pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad is Running (Ready = true)
    Oct 31 09:40:47.693: INFO: Pod "pod-projected-configmaps-09fa5f93-0560-4974-9ac0-b52be49d40ad" satisfied condition "running and ready"
    STEP: Updating configmap projected-configmap-test-upd-d0812d99-408c-44fb-95a8-6f1e51298ec5 10/31/23 09:40:47.839
    STEP: waiting to observe update in volume 10/31/23 09:40:47.929
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:42:16.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8943" for this suite. 10/31/23 09:42:16.771
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:42:16.786
Oct 31 09:42:16.786: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:42:16.788
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:42:17.027
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:42:17.166
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137
STEP: Creating a pod to test emptydir 0666 on tmpfs 10/31/23 09:42:17.269
Oct 31 09:42:17.327: INFO: Waiting up to 5m0s for pod "pod-141b9e95-def7-414d-af7e-53be8eca7281" in namespace "emptydir-3764" to be "Succeeded or Failed"
Oct 31 09:42:17.345: INFO: Pod "pod-141b9e95-def7-414d-af7e-53be8eca7281": Phase="Pending", Reason="", readiness=false. Elapsed: 17.561913ms
Oct 31 09:42:19.358: INFO: Pod "pod-141b9e95-def7-414d-af7e-53be8eca7281": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030645926s
Oct 31 09:42:21.361: INFO: Pod "pod-141b9e95-def7-414d-af7e-53be8eca7281": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033907721s
STEP: Saw pod success 10/31/23 09:42:21.361
Oct 31 09:42:21.361: INFO: Pod "pod-141b9e95-def7-414d-af7e-53be8eca7281" satisfied condition "Succeeded or Failed"
Oct 31 09:42:21.409: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-141b9e95-def7-414d-af7e-53be8eca7281 container test-container: <nil>
STEP: delete the pod 10/31/23 09:42:21.683
Oct 31 09:42:21.775: INFO: Waiting for pod pod-141b9e95-def7-414d-af7e-53be8eca7281 to disappear
Oct 31 09:42:21.823: INFO: Pod pod-141b9e95-def7-414d-af7e-53be8eca7281 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:42:21.823: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3764" for this suite. 10/31/23 09:42:21.878
------------------------------
â€¢ [SLOW TEST] [5.294 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:137

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:42:16.786
    Oct 31 09:42:16.786: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:42:16.788
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:42:17.027
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:42:17.166
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:137
    STEP: Creating a pod to test emptydir 0666 on tmpfs 10/31/23 09:42:17.269
    Oct 31 09:42:17.327: INFO: Waiting up to 5m0s for pod "pod-141b9e95-def7-414d-af7e-53be8eca7281" in namespace "emptydir-3764" to be "Succeeded or Failed"
    Oct 31 09:42:17.345: INFO: Pod "pod-141b9e95-def7-414d-af7e-53be8eca7281": Phase="Pending", Reason="", readiness=false. Elapsed: 17.561913ms
    Oct 31 09:42:19.358: INFO: Pod "pod-141b9e95-def7-414d-af7e-53be8eca7281": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030645926s
    Oct 31 09:42:21.361: INFO: Pod "pod-141b9e95-def7-414d-af7e-53be8eca7281": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033907721s
    STEP: Saw pod success 10/31/23 09:42:21.361
    Oct 31 09:42:21.361: INFO: Pod "pod-141b9e95-def7-414d-af7e-53be8eca7281" satisfied condition "Succeeded or Failed"
    Oct 31 09:42:21.409: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-141b9e95-def7-414d-af7e-53be8eca7281 container test-container: <nil>
    STEP: delete the pod 10/31/23 09:42:21.683
    Oct 31 09:42:21.775: INFO: Waiting for pod pod-141b9e95-def7-414d-af7e-53be8eca7281 to disappear
    Oct 31 09:42:21.823: INFO: Pod pod-141b9e95-def7-414d-af7e-53be8eca7281 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:42:21.823: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3764" for this suite. 10/31/23 09:42:21.878
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:42:22.087
Oct 31 09:42:22.087: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 09:42:22.089
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:42:22.208
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:42:22.229
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 09:42:22.498
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:42:23.325
STEP: Deploying the webhook pod 10/31/23 09:42:23.369
STEP: Wait for the deployment to be ready 10/31/23 09:42:23.44
Oct 31 09:42:23.629: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 42, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 42, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 42, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 42, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:42:25.636
STEP: Verifying the service has paired with the endpoint 10/31/23 09:42:25.696
Oct 31 09:42:26.701: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508
STEP: Creating a mutating webhook configuration 10/31/23 09:42:26.71
STEP: Updating a mutating webhook configuration's rules to not include the create operation 10/31/23 09:42:28.037
STEP: Creating a configMap that should not be mutated 10/31/23 09:42:28.052
STEP: Patching a mutating webhook configuration's rules to include the create operation 10/31/23 09:42:28.172
STEP: Creating a configMap that should be mutated 10/31/23 09:42:28.229
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:42:28.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-7089" for this suite. 10/31/23 09:42:28.968
STEP: Destroying namespace "webhook-7089-markers" for this suite. 10/31/23 09:42:29.023
------------------------------
â€¢ [SLOW TEST] [7.040 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/apimachinery/webhook.go:508

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:42:22.087
    Oct 31 09:42:22.087: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 09:42:22.089
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:42:22.208
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:42:22.229
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 09:42:22.498
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:42:23.325
    STEP: Deploying the webhook pod 10/31/23 09:42:23.369
    STEP: Wait for the deployment to be ready 10/31/23 09:42:23.44
    Oct 31 09:42:23.629: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 42, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 42, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 42, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 42, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:42:25.636
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:42:25.696
    Oct 31 09:42:26.701: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] patching/updating a mutating webhook should work [Conformance]
      test/e2e/apimachinery/webhook.go:508
    STEP: Creating a mutating webhook configuration 10/31/23 09:42:26.71
    STEP: Updating a mutating webhook configuration's rules to not include the create operation 10/31/23 09:42:28.037
    STEP: Creating a configMap that should not be mutated 10/31/23 09:42:28.052
    STEP: Patching a mutating webhook configuration's rules to include the create operation 10/31/23 09:42:28.172
    STEP: Creating a configMap that should be mutated 10/31/23 09:42:28.229
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:42:28.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-7089" for this suite. 10/31/23 09:42:28.968
    STEP: Destroying namespace "webhook-7089-markers" for this suite. 10/31/23 09:42:29.023
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:42:29.133
Oct 31 09:42:29.134: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 09:42:29.135
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:42:29.403
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:42:29.584
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010
STEP: Creating resourceQuota "e2e-rq-status-hl67n" 10/31/23 09:42:29.785
Oct 31 09:42:30.018: INFO: Resource quota "e2e-rq-status-hl67n" reports spec: hard cpu limit of 500m
Oct 31 09:42:30.018: INFO: Resource quota "e2e-rq-status-hl67n" reports spec: hard memory limit of 500Mi
STEP: Updating resourceQuota "e2e-rq-status-hl67n" /status 10/31/23 09:42:30.019
STEP: Confirm /status for "e2e-rq-status-hl67n" resourceQuota via watch 10/31/23 09:42:30.161
Oct 31 09:42:30.208: INFO: observed resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList(nil)
Oct 31 09:42:30.208: INFO: Found resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Oct 31 09:42:30.209: INFO: ResourceQuota "e2e-rq-status-hl67n" /status was updated
STEP: Patching hard spec values for cpu & memory 10/31/23 09:42:30.29
Oct 31 09:42:30.340: INFO: Resource quota "e2e-rq-status-hl67n" reports spec: hard cpu limit of 1
Oct 31 09:42:30.340: INFO: Resource quota "e2e-rq-status-hl67n" reports spec: hard memory limit of 1Gi
STEP: Patching "e2e-rq-status-hl67n" /status 10/31/23 09:42:30.34
STEP: Confirm /status for "e2e-rq-status-hl67n" resourceQuota via watch 10/31/23 09:42:30.432
Oct 31 09:42:30.523: INFO: observed resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
Oct 31 09:42:30.523: INFO: Found resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
Oct 31 09:42:30.523: INFO: ResourceQuota "e2e-rq-status-hl67n" /status was patched
STEP: Get "e2e-rq-status-hl67n" /status 10/31/23 09:42:30.523
Oct 31 09:42:30.616: INFO: Resourcequota "e2e-rq-status-hl67n" reports status: hard cpu of 1
Oct 31 09:42:30.616: INFO: Resourcequota "e2e-rq-status-hl67n" reports status: hard memory of 1Gi
STEP: Repatching "e2e-rq-status-hl67n" /status before checking Spec is unchanged 10/31/23 09:42:30.667
Oct 31 09:42:30.831: INFO: Resourcequota "e2e-rq-status-hl67n" reports status: hard cpu of 2
Oct 31 09:42:30.831: INFO: Resourcequota "e2e-rq-status-hl67n" reports status: hard memory of 2Gi
Oct 31 09:42:30.836: INFO: Found resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
Oct 31 09:45:50.975: INFO: ResourceQuota "e2e-rq-status-hl67n" Spec was unchanged and /status reset
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 09:45:50.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-9024" for this suite. 10/31/23 09:45:51.037
------------------------------
â€¢ [SLOW TEST] [201.965 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should apply changes to a resourcequota status [Conformance]
  test/e2e/apimachinery/resource_quota.go:1010

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:42:29.133
    Oct 31 09:42:29.134: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 09:42:29.135
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:42:29.403
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:42:29.584
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply changes to a resourcequota status [Conformance]
      test/e2e/apimachinery/resource_quota.go:1010
    STEP: Creating resourceQuota "e2e-rq-status-hl67n" 10/31/23 09:42:29.785
    Oct 31 09:42:30.018: INFO: Resource quota "e2e-rq-status-hl67n" reports spec: hard cpu limit of 500m
    Oct 31 09:42:30.018: INFO: Resource quota "e2e-rq-status-hl67n" reports spec: hard memory limit of 500Mi
    STEP: Updating resourceQuota "e2e-rq-status-hl67n" /status 10/31/23 09:42:30.019
    STEP: Confirm /status for "e2e-rq-status-hl67n" resourceQuota via watch 10/31/23 09:42:30.161
    Oct 31 09:42:30.208: INFO: observed resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList(nil)
    Oct 31 09:42:30.208: INFO: Found resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Oct 31 09:42:30.209: INFO: ResourceQuota "e2e-rq-status-hl67n" /status was updated
    STEP: Patching hard spec values for cpu & memory 10/31/23 09:42:30.29
    Oct 31 09:42:30.340: INFO: Resource quota "e2e-rq-status-hl67n" reports spec: hard cpu limit of 1
    Oct 31 09:42:30.340: INFO: Resource quota "e2e-rq-status-hl67n" reports spec: hard memory limit of 1Gi
    STEP: Patching "e2e-rq-status-hl67n" /status 10/31/23 09:42:30.34
    STEP: Confirm /status for "e2e-rq-status-hl67n" resourceQuota via watch 10/31/23 09:42:30.432
    Oct 31 09:42:30.523: INFO: observed resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
    Oct 31 09:42:30.523: INFO: Found resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
    Oct 31 09:42:30.523: INFO: ResourceQuota "e2e-rq-status-hl67n" /status was patched
    STEP: Get "e2e-rq-status-hl67n" /status 10/31/23 09:42:30.523
    Oct 31 09:42:30.616: INFO: Resourcequota "e2e-rq-status-hl67n" reports status: hard cpu of 1
    Oct 31 09:42:30.616: INFO: Resourcequota "e2e-rq-status-hl67n" reports status: hard memory of 1Gi
    STEP: Repatching "e2e-rq-status-hl67n" /status before checking Spec is unchanged 10/31/23 09:42:30.667
    Oct 31 09:42:30.831: INFO: Resourcequota "e2e-rq-status-hl67n" reports status: hard cpu of 2
    Oct 31 09:42:30.831: INFO: Resourcequota "e2e-rq-status-hl67n" reports status: hard memory of 2Gi
    Oct 31 09:42:30.836: INFO: Found resourceQuota "e2e-rq-status-hl67n" in namespace "resourcequota-9024" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
    Oct 31 09:45:50.975: INFO: ResourceQuota "e2e-rq-status-hl67n" Spec was unchanged and /status reset
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:45:50.975: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-9024" for this suite. 10/31/23 09:45:51.037
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server
  should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:45:51.1
Oct 31 09:45:51.100: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 09:45:51.101
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:45:51.256
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:45:51.432
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/kubectl/kubectl.go:1812
STEP: Starting the proxy 10/31/23 09:45:51.491
Oct 31 09:45:51.491: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9771 proxy --unix-socket=/tmp/kubectl-proxy-unix1564448288/test'
STEP: retrieving proxy /api/ output 10/31/23 09:45:51.562
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 09:45:51.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9771" for this suite. 10/31/23 09:45:51.646
------------------------------
â€¢ [0.606 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support --unix-socket=/path  [Conformance]
    test/e2e/kubectl/kubectl.go:1812

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:45:51.1
    Oct 31 09:45:51.100: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 09:45:51.101
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:45:51.256
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:45:51.432
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support --unix-socket=/path  [Conformance]
      test/e2e/kubectl/kubectl.go:1812
    STEP: Starting the proxy 10/31/23 09:45:51.491
    Oct 31 09:45:51.491: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9771 proxy --unix-socket=/tmp/kubectl-proxy-unix1564448288/test'
    STEP: retrieving proxy /api/ output 10/31/23 09:45:51.562
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:45:51.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9771" for this suite. 10/31/23 09:45:51.646
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Probing container
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:45:51.706
Oct 31 09:45:51.706: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-probe 10/31/23 09:45:51.707
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:45:51.908
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:45:52.088
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72
Oct 31 09:45:52.201: INFO: Waiting up to 5m0s for pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb" in namespace "container-probe-4617" to be "running and ready"
Oct 31 09:45:52.279: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Pending", Reason="", readiness=false. Elapsed: 78.487701ms
Oct 31 09:45:52.279: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:45:54.287: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 2.086326296s
Oct 31 09:45:54.287: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:45:56.286: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 4.085818445s
Oct 31 09:45:56.286: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:45:58.291: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 6.090046044s
Oct 31 09:45:58.291: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:46:00.289: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 8.08831196s
Oct 31 09:46:00.289: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:46:02.293: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 10.092556662s
Oct 31 09:46:02.293: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:46:04.289: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 12.088754447s
Oct 31 09:46:04.289: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:46:06.329: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 14.128504329s
Oct 31 09:46:06.329: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:46:08.289: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 16.088587277s
Oct 31 09:46:08.289: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:46:10.289: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 18.088394432s
Oct 31 09:46:10.289: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:46:12.287: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 20.086348346s
Oct 31 09:46:12.287: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
Oct 31 09:46:14.288: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=true. Elapsed: 22.08753919s
Oct 31 09:46:14.288: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = true)
Oct 31 09:46:14.288: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb" satisfied condition "running and ready"
Oct 31 09:46:14.337: INFO: Container started at 2023-10-31 09:45:52 +0000 UTC, pod became ready at 2023-10-31 09:46:12 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Oct 31 09:46:14.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-4617" for this suite. 10/31/23 09:46:14.39
------------------------------
â€¢ [SLOW TEST] [22.736 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:72

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:45:51.706
    Oct 31 09:45:51.706: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-probe 10/31/23 09:45:51.707
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:45:51.908
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:45:52.088
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:72
    Oct 31 09:45:52.201: INFO: Waiting up to 5m0s for pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb" in namespace "container-probe-4617" to be "running and ready"
    Oct 31 09:45:52.279: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Pending", Reason="", readiness=false. Elapsed: 78.487701ms
    Oct 31 09:45:52.279: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:45:54.287: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 2.086326296s
    Oct 31 09:45:54.287: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:45:56.286: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 4.085818445s
    Oct 31 09:45:56.286: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:45:58.291: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 6.090046044s
    Oct 31 09:45:58.291: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:46:00.289: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 8.08831196s
    Oct 31 09:46:00.289: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:46:02.293: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 10.092556662s
    Oct 31 09:46:02.293: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:46:04.289: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 12.088754447s
    Oct 31 09:46:04.289: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:46:06.329: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 14.128504329s
    Oct 31 09:46:06.329: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:46:08.289: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 16.088587277s
    Oct 31 09:46:08.289: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:46:10.289: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 18.088394432s
    Oct 31 09:46:10.289: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:46:12.287: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=false. Elapsed: 20.086348346s
    Oct 31 09:46:12.287: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = false)
    Oct 31 09:46:14.288: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb": Phase="Running", Reason="", readiness=true. Elapsed: 22.08753919s
    Oct 31 09:46:14.288: INFO: The phase of Pod test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb is Running (Ready = true)
    Oct 31 09:46:14.288: INFO: Pod "test-webserver-39264683-6dd0-4c65-9452-19b59b8ad0cb" satisfied condition "running and ready"
    Oct 31 09:46:14.337: INFO: Container started at 2023-10-31 09:45:52 +0000 UTC, pod became ready at 2023-10-31 09:46:12 +0000 UTC
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:46:14.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-4617" for this suite. 10/31/23 09:46:14.39
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:46:14.444
Oct 31 09:46:14.444: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-runtime 10/31/23 09:46:14.446
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:14.62
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:14.766
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:232
STEP: create the container 10/31/23 09:46:14.909
STEP: wait for the container to reach Succeeded 10/31/23 09:46:14.927
STEP: get the container status 10/31/23 09:46:19.982
STEP: the container should be terminated 10/31/23 09:46:20.049
STEP: the termination message should be set 10/31/23 09:46:20.05
Oct 31 09:46:20.050: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container 10/31/23 09:46:20.05
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Oct 31 09:46:20.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-1288" for this suite. 10/31/23 09:46:20.281
------------------------------
â€¢ [SLOW TEST] [5.932 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:46:14.444
    Oct 31 09:46:14.444: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-runtime 10/31/23 09:46:14.446
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:14.62
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:14.766
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:232
    STEP: create the container 10/31/23 09:46:14.909
    STEP: wait for the container to reach Succeeded 10/31/23 09:46:14.927
    STEP: get the container status 10/31/23 09:46:19.982
    STEP: the container should be terminated 10/31/23 09:46:20.049
    STEP: the termination message should be set 10/31/23 09:46:20.05
    Oct 31 09:46:20.050: INFO: Expected: &{} to match Container's Termination Message:  --
    STEP: delete the container 10/31/23 09:46:20.05
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:46:20.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-1288" for this suite. 10/31/23 09:46:20.281
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:46:20.381
Oct 31 09:46:20.381: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 09:46:20.382
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:20.587
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:20.724
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45
STEP: Creating configMap configmap-2329/configmap-test-edad651c-64d5-4fa5-b46c-5ad2d02276a3 10/31/23 09:46:20.75
STEP: Creating a pod to test consume configMaps 10/31/23 09:46:20.811
Oct 31 09:46:20.844: INFO: Waiting up to 5m0s for pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489" in namespace "configmap-2329" to be "Succeeded or Failed"
Oct 31 09:46:20.906: INFO: Pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489": Phase="Pending", Reason="", readiness=false. Elapsed: 61.904763ms
Oct 31 09:46:22.913: INFO: Pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489": Phase="Running", Reason="", readiness=false. Elapsed: 2.068683515s
Oct 31 09:46:24.920: INFO: Pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.076173473s
STEP: Saw pod success 10/31/23 09:46:24.921
Oct 31 09:46:24.921: INFO: Pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489" satisfied condition "Succeeded or Failed"
Oct 31 09:46:25.021: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489 container env-test: <nil>
STEP: delete the pod 10/31/23 09:46:25.281
Oct 31 09:46:25.314: INFO: Waiting for pod pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489 to disappear
Oct 31 09:46:25.379: INFO: Pod pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:46:25.380: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-2329" for this suite. 10/31/23 09:46:25.481
------------------------------
â€¢ [SLOW TEST] [5.200 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:45

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:46:20.381
    Oct 31 09:46:20.381: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 09:46:20.382
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:20.587
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:20.724
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via environment variable [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:45
    STEP: Creating configMap configmap-2329/configmap-test-edad651c-64d5-4fa5-b46c-5ad2d02276a3 10/31/23 09:46:20.75
    STEP: Creating a pod to test consume configMaps 10/31/23 09:46:20.811
    Oct 31 09:46:20.844: INFO: Waiting up to 5m0s for pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489" in namespace "configmap-2329" to be "Succeeded or Failed"
    Oct 31 09:46:20.906: INFO: Pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489": Phase="Pending", Reason="", readiness=false. Elapsed: 61.904763ms
    Oct 31 09:46:22.913: INFO: Pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489": Phase="Running", Reason="", readiness=false. Elapsed: 2.068683515s
    Oct 31 09:46:24.920: INFO: Pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.076173473s
    STEP: Saw pod success 10/31/23 09:46:24.921
    Oct 31 09:46:24.921: INFO: Pod "pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489" satisfied condition "Succeeded or Failed"
    Oct 31 09:46:25.021: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489 container env-test: <nil>
    STEP: delete the pod 10/31/23 09:46:25.281
    Oct 31 09:46:25.314: INFO: Waiting for pod pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489 to disappear
    Oct 31 09:46:25.379: INFO: Pod pod-configmaps-24e9a9ea-e8c3-4b64-8e9c-6afce826f489 no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:46:25.380: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-2329" for this suite. 10/31/23 09:46:25.481
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
[BeforeEach] [sig-apps] ReplicationController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:46:25.584
Oct 31 09:46:25.584: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replication-controller 10/31/23 09:46:25.585
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:25.707
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:25.864
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:57
[It] should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92
STEP: Given a Pod with a 'name' label pod-adoption is created 10/31/23 09:46:26.014
Oct 31 09:46:26.030: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-5500" to be "running and ready"
Oct 31 09:46:26.088: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 57.198495ms
Oct 31 09:46:26.088: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:46:28.097: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 2.066547843s
Oct 31 09:46:28.097: INFO: The phase of Pod pod-adoption is Running (Ready = true)
Oct 31 09:46:28.097: INFO: Pod "pod-adoption" satisfied condition "running and ready"
STEP: When a replication controller with a matching selector is created 10/31/23 09:46:28.146
STEP: Then the orphan pod is adopted 10/31/23 09:46:28.206
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:46:28.217: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicationController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicationController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicationController
  tear down framework | framework.go:193
STEP: Destroying namespace "replication-controller-5500" for this suite. 10/31/23 09:46:28.276
------------------------------
â€¢ [2.747 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should adopt matching pods on creation [Conformance]
  test/e2e/apps/rc.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicationController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:46:25.584
    Oct 31 09:46:25.584: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replication-controller 10/31/23 09:46:25.585
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:25.707
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:25.864
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ReplicationController
      test/e2e/apps/rc.go:57
    [It] should adopt matching pods on creation [Conformance]
      test/e2e/apps/rc.go:92
    STEP: Given a Pod with a 'name' label pod-adoption is created 10/31/23 09:46:26.014
    Oct 31 09:46:26.030: INFO: Waiting up to 5m0s for pod "pod-adoption" in namespace "replication-controller-5500" to be "running and ready"
    Oct 31 09:46:26.088: INFO: Pod "pod-adoption": Phase="Pending", Reason="", readiness=false. Elapsed: 57.198495ms
    Oct 31 09:46:26.088: INFO: The phase of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:46:28.097: INFO: Pod "pod-adoption": Phase="Running", Reason="", readiness=true. Elapsed: 2.066547843s
    Oct 31 09:46:28.097: INFO: The phase of Pod pod-adoption is Running (Ready = true)
    Oct 31 09:46:28.097: INFO: Pod "pod-adoption" satisfied condition "running and ready"
    STEP: When a replication controller with a matching selector is created 10/31/23 09:46:28.146
    STEP: Then the orphan pod is adopted 10/31/23 09:46:28.206
    [AfterEach] [sig-apps] ReplicationController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:46:28.217: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicationController
      tear down framework | framework.go:193
    STEP: Destroying namespace "replication-controller-5500" for this suite. 10/31/23 09:46:28.276
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:46:28.341
Oct 31 09:46:28.341: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-webhook 10/31/23 09:46:28.343
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:28.581
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:28.73
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert 10/31/23 09:46:28.833
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 10/31/23 09:46:29.135
STEP: Deploying the custom resource conversion webhook pod 10/31/23 09:46:29.181
STEP: Wait for the deployment to be ready 10/31/23 09:46:29.289
Oct 31 09:46:29.328: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 10/31/23 09:46:31.545
STEP: Verifying the service has paired with the endpoint 10/31/23 09:46:31.569
Oct 31 09:46:32.570: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149
Oct 31 09:46:32.604: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Creating a v1 custom resource 10/31/23 09:46:40.469
STEP: v2 custom resource should be converted 10/31/23 09:46:40.557
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:46:41.531: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-webhook-6399" for this suite. 10/31/23 09:46:41.827
------------------------------
â€¢ [SLOW TEST] [13.551 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/apimachinery/crd_conversion_webhook.go:149

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:46:28.341
    Oct 31 09:46:28.341: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-webhook 10/31/23 09:46:28.343
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:28.581
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:28.73
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:128
    STEP: Setting up server cert 10/31/23 09:46:28.833
    STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication 10/31/23 09:46:29.135
    STEP: Deploying the custom resource conversion webhook pod 10/31/23 09:46:29.181
    STEP: Wait for the deployment to be ready 10/31/23 09:46:29.289
    Oct 31 09:46:29.328: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 10/31/23 09:46:31.545
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:46:31.569
    Oct 31 09:46:32.570: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
    [It] should be able to convert from CR v1 to CR v2 [Conformance]
      test/e2e/apimachinery/crd_conversion_webhook.go:149
    Oct 31 09:46:32.604: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Creating a v1 custom resource 10/31/23 09:46:40.469
    STEP: v2 custom resource should be converted 10/31/23 09:46:40.557
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:46:41.531: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/crd_conversion_webhook.go:139
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-webhook-6399" for this suite. 10/31/23 09:46:41.827
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:46:41.898
Oct 31 09:46:41.898: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename statefulset 10/31/23 09:46:41.9
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:42.054
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:42.229
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-5744 10/31/23 09:46:42.374
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/apps/statefulset.go:908
Oct 31 09:46:42.495: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Oct 31 09:46:52.503: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet 10/31/23 09:46:52.606
W1031 09:46:52.672592      18 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Oct 31 09:46:52.786: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 09:46:52.786: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
Oct 31 09:47:02.807: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 09:47:02.807: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets 10/31/23 09:47:02.912
STEP: Delete all of the StatefulSets 10/31/23 09:47:02.964
STEP: Verify that StatefulSets have been deleted 10/31/23 09:47:03.029
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Oct 31 09:47:03.094: INFO: Deleting all statefulset in ns statefulset-5744
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:47:03.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-5744" for this suite. 10/31/23 09:47:03.396
------------------------------
â€¢ [SLOW TEST] [21.599 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/apps/statefulset.go:908

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:46:41.898
    Oct 31 09:46:41.898: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename statefulset 10/31/23 09:46:41.9
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:46:42.054
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:46:42.229
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-5744 10/31/23 09:46:42.374
    [It] should list, patch and delete a collection of StatefulSets [Conformance]
      test/e2e/apps/statefulset.go:908
    Oct 31 09:46:42.495: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Oct 31 09:46:52.503: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: patching the StatefulSet 10/31/23 09:46:52.606
    W1031 09:46:52.672592      18 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Oct 31 09:46:52.786: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 09:46:52.786: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
    Oct 31 09:47:02.807: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 09:47:02.807: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Listing all StatefulSets 10/31/23 09:47:02.912
    STEP: Delete all of the StatefulSets 10/31/23 09:47:02.964
    STEP: Verify that StatefulSets have been deleted 10/31/23 09:47:03.029
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Oct 31 09:47:03.094: INFO: Deleting all statefulset in ns statefulset-5744
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:47:03.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-5744" for this suite. 10/31/23 09:47:03.396
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:47:03.498
Oct 31 09:47:03.498: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 09:47:03.5
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:47:03.68
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:47:03.821
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160
STEP: Discovering how many secrets are in namespace by default 10/31/23 09:47:03.852
STEP: Counting existing ResourceQuota 10/31/23 09:47:08.897
STEP: Creating a ResourceQuota 10/31/23 09:47:13.938
STEP: Ensuring resource quota status is calculated 10/31/23 09:47:13.996
STEP: Creating a Secret 10/31/23 09:47:16.007
STEP: Ensuring resource quota status captures secret creation 10/31/23 09:47:16.094
STEP: Deleting a secret 10/31/23 09:47:18.104
STEP: Ensuring resource quota status released usage 10/31/23 09:47:18.197
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 09:47:20.217: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-673" for this suite. 10/31/23 09:47:20.281
------------------------------
â€¢ [SLOW TEST] [16.868 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/apimachinery/resource_quota.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:47:03.498
    Oct 31 09:47:03.498: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 09:47:03.5
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:47:03.68
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:47:03.821
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a secret. [Conformance]
      test/e2e/apimachinery/resource_quota.go:160
    STEP: Discovering how many secrets are in namespace by default 10/31/23 09:47:03.852
    STEP: Counting existing ResourceQuota 10/31/23 09:47:08.897
    STEP: Creating a ResourceQuota 10/31/23 09:47:13.938
    STEP: Ensuring resource quota status is calculated 10/31/23 09:47:13.996
    STEP: Creating a Secret 10/31/23 09:47:16.007
    STEP: Ensuring resource quota status captures secret creation 10/31/23 09:47:16.094
    STEP: Deleting a secret 10/31/23 09:47:18.104
    STEP: Ensuring resource quota status released usage 10/31/23 09:47:18.197
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:47:20.217: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-673" for this suite. 10/31/23 09:47:20.281
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
[BeforeEach] [sig-network] HostPort
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:47:20.367
Oct 31 09:47:20.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename hostport 10/31/23 09:47:20.369
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:47:20.526
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:47:20.66
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 10/31/23 09:47:20.849
Oct 31 09:47:20.862: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-3213" to be "running and ready"
Oct 31 09:47:20.913: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 50.704978ms
Oct 31 09:47:20.913: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:47:22.926: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.063440875s
Oct 31 09:47:22.926: INFO: The phase of Pod pod1 is Running (Ready = true)
Oct 31 09:47:22.926: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.20.4.182 on the node which pod1 resides and expect scheduled 10/31/23 09:47:22.926
Oct 31 09:47:22.979: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-3213" to be "running and ready"
Oct 31 09:47:23.052: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 72.860989ms
Oct 31 09:47:23.052: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:47:25.101: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.121982455s
Oct 31 09:47:25.101: INFO: The phase of Pod pod2 is Running (Ready = true)
Oct 31 09:47:25.101: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.20.4.182 but use UDP protocol on the node which pod2 resides 10/31/23 09:47:25.101
Oct 31 09:47:25.163: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-3213" to be "running and ready"
Oct 31 09:47:25.210: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 47.263457ms
Oct 31 09:47:25.210: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:47:27.218: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.05525436s
Oct 31 09:47:27.218: INFO: The phase of Pod pod3 is Running (Ready = true)
Oct 31 09:47:27.218: INFO: Pod "pod3" satisfied condition "running and ready"
Oct 31 09:47:27.308: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-3213" to be "running and ready"
Oct 31 09:47:27.351: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 42.967436ms
Oct 31 09:47:27.351: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Oct 31 09:47:29.369: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.060651529s
Oct 31 09:47:29.369: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
Oct 31 09:47:29.369: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 10/31/23 09:47:29.423
Oct 31 09:47:29.424: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.20.4.182 http://127.0.0.1:54323/hostname] Namespace:hostport-3213 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:47:29.424: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:47:29.425: INFO: ExecWithOptions: Clientset creation
Oct 31 09:47:29.425: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/hostport-3213/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.20.4.182+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.20.4.182, port: 54323 10/31/23 09:47:30.229
Oct 31 09:47:30.229: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.20.4.182:54323/hostname] Namespace:hostport-3213 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:47:30.229: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:47:30.230: INFO: ExecWithOptions: Clientset creation
Oct 31 09:47:30.230: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/hostport-3213/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.20.4.182%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.20.4.182, port: 54323 UDP 10/31/23 09:47:30.919
Oct 31 09:47:30.919: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.20.4.182 54323] Namespace:hostport-3213 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 09:47:30.919: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 09:47:30.920: INFO: ExecWithOptions: Clientset creation
Oct 31 09:47:30.920: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/hostport-3213/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.20.4.182+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/node/init/init.go:32
Oct 31 09:47:36.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] HostPort
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] HostPort
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] HostPort
  tear down framework | framework.go:193
STEP: Destroying namespace "hostport-3213" for this suite. 10/31/23 09:47:36.724
------------------------------
â€¢ [SLOW TEST] [16.375 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/network/hostport.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] HostPort
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:47:20.367
    Oct 31 09:47:20.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename hostport 10/31/23 09:47:20.369
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:47:20.526
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:47:20.66
    [BeforeEach] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] HostPort
      test/e2e/network/hostport.go:49
    [It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
      test/e2e/network/hostport.go:63
    STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled 10/31/23 09:47:20.849
    Oct 31 09:47:20.862: INFO: Waiting up to 5m0s for pod "pod1" in namespace "hostport-3213" to be "running and ready"
    Oct 31 09:47:20.913: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 50.704978ms
    Oct 31 09:47:20.913: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:47:22.926: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.063440875s
    Oct 31 09:47:22.926: INFO: The phase of Pod pod1 is Running (Ready = true)
    Oct 31 09:47:22.926: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.20.4.182 on the node which pod1 resides and expect scheduled 10/31/23 09:47:22.926
    Oct 31 09:47:22.979: INFO: Waiting up to 5m0s for pod "pod2" in namespace "hostport-3213" to be "running and ready"
    Oct 31 09:47:23.052: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 72.860989ms
    Oct 31 09:47:23.052: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:47:25.101: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.121982455s
    Oct 31 09:47:25.101: INFO: The phase of Pod pod2 is Running (Ready = true)
    Oct 31 09:47:25.101: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.20.4.182 but use UDP protocol on the node which pod2 resides 10/31/23 09:47:25.101
    Oct 31 09:47:25.163: INFO: Waiting up to 5m0s for pod "pod3" in namespace "hostport-3213" to be "running and ready"
    Oct 31 09:47:25.210: INFO: Pod "pod3": Phase="Pending", Reason="", readiness=false. Elapsed: 47.263457ms
    Oct 31 09:47:25.210: INFO: The phase of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:47:27.218: INFO: Pod "pod3": Phase="Running", Reason="", readiness=true. Elapsed: 2.05525436s
    Oct 31 09:47:27.218: INFO: The phase of Pod pod3 is Running (Ready = true)
    Oct 31 09:47:27.218: INFO: Pod "pod3" satisfied condition "running and ready"
    Oct 31 09:47:27.308: INFO: Waiting up to 5m0s for pod "e2e-host-exec" in namespace "hostport-3213" to be "running and ready"
    Oct 31 09:47:27.351: INFO: Pod "e2e-host-exec": Phase="Pending", Reason="", readiness=false. Elapsed: 42.967436ms
    Oct 31 09:47:27.351: INFO: The phase of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 09:47:29.369: INFO: Pod "e2e-host-exec": Phase="Running", Reason="", readiness=true. Elapsed: 2.060651529s
    Oct 31 09:47:29.369: INFO: The phase of Pod e2e-host-exec is Running (Ready = true)
    Oct 31 09:47:29.369: INFO: Pod "e2e-host-exec" satisfied condition "running and ready"
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 10/31/23 09:47:29.423
    Oct 31 09:47:29.424: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.20.4.182 http://127.0.0.1:54323/hostname] Namespace:hostport-3213 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:47:29.424: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:47:29.425: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:47:29.425: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/hostport-3213/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.20.4.182+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.20.4.182, port: 54323 10/31/23 09:47:30.229
    Oct 31 09:47:30.229: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.20.4.182:54323/hostname] Namespace:hostport-3213 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:47:30.229: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:47:30.230: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:47:30.230: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/hostport-3213/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.20.4.182%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.20.4.182, port: 54323 UDP 10/31/23 09:47:30.919
    Oct 31 09:47:30.919: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.20.4.182 54323] Namespace:hostport-3213 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 09:47:30.919: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 09:47:30.920: INFO: ExecWithOptions: Clientset creation
    Oct 31 09:47:30.920: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/hostport-3213/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.20.4.182+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
    [AfterEach] [sig-network] HostPort
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:47:36.665: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] HostPort
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] HostPort
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] HostPort
      tear down framework | framework.go:193
    STEP: Destroying namespace "hostport-3213" for this suite. 10/31/23 09:47:36.724
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:47:36.744
Oct 31 09:47:36.745: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:47:36.746
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:47:36.958
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:47:36.999
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107
STEP: Creating a pod to test emptydir 0666 on tmpfs 10/31/23 09:47:37.093
Oct 31 09:47:37.156: INFO: Waiting up to 5m0s for pod "pod-71820281-3d36-4b44-bb19-12d878903f0a" in namespace "emptydir-4379" to be "Succeeded or Failed"
Oct 31 09:47:37.176: INFO: Pod "pod-71820281-3d36-4b44-bb19-12d878903f0a": Phase="Pending", Reason="", readiness=false. Elapsed: 20.24511ms
Oct 31 09:47:39.212: INFO: Pod "pod-71820281-3d36-4b44-bb19-12d878903f0a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.055782723s
Oct 31 09:47:41.185: INFO: Pod "pod-71820281-3d36-4b44-bb19-12d878903f0a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029108585s
STEP: Saw pod success 10/31/23 09:47:41.185
Oct 31 09:47:41.186: INFO: Pod "pod-71820281-3d36-4b44-bb19-12d878903f0a" satisfied condition "Succeeded or Failed"
Oct 31 09:47:41.242: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-71820281-3d36-4b44-bb19-12d878903f0a container test-container: <nil>
STEP: delete the pod 10/31/23 09:47:41.385
Oct 31 09:47:41.457: INFO: Waiting for pod pod-71820281-3d36-4b44-bb19-12d878903f0a to disappear
Oct 31 09:47:41.546: INFO: Pod pod-71820281-3d36-4b44-bb19-12d878903f0a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:47:41.546: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-4379" for this suite. 10/31/23 09:47:41.588
------------------------------
â€¢ [4.912 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:107

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:47:36.744
    Oct 31 09:47:36.745: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:47:36.746
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:47:36.958
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:47:36.999
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:107
    STEP: Creating a pod to test emptydir 0666 on tmpfs 10/31/23 09:47:37.093
    Oct 31 09:47:37.156: INFO: Waiting up to 5m0s for pod "pod-71820281-3d36-4b44-bb19-12d878903f0a" in namespace "emptydir-4379" to be "Succeeded or Failed"
    Oct 31 09:47:37.176: INFO: Pod "pod-71820281-3d36-4b44-bb19-12d878903f0a": Phase="Pending", Reason="", readiness=false. Elapsed: 20.24511ms
    Oct 31 09:47:39.212: INFO: Pod "pod-71820281-3d36-4b44-bb19-12d878903f0a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.055782723s
    Oct 31 09:47:41.185: INFO: Pod "pod-71820281-3d36-4b44-bb19-12d878903f0a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029108585s
    STEP: Saw pod success 10/31/23 09:47:41.185
    Oct 31 09:47:41.186: INFO: Pod "pod-71820281-3d36-4b44-bb19-12d878903f0a" satisfied condition "Succeeded or Failed"
    Oct 31 09:47:41.242: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-71820281-3d36-4b44-bb19-12d878903f0a container test-container: <nil>
    STEP: delete the pod 10/31/23 09:47:41.385
    Oct 31 09:47:41.457: INFO: Waiting for pod pod-71820281-3d36-4b44-bb19-12d878903f0a to disappear
    Oct 31 09:47:41.546: INFO: Pod pod-71820281-3d36-4b44-bb19-12d878903f0a no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:47:41.546: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-4379" for this suite. 10/31/23 09:47:41.588
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:47:41.66
Oct 31 09:47:41.660: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename deployment 10/31/23 09:47:41.662
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:47:41.857
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:47:41.997
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132
Oct 31 09:47:42.231: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 10/31/23 09:47:42.231
Oct 31 09:47:42.231: INFO: Waiting up to 5m0s for pod "test-rollover-controller-mxxrl" in namespace "deployment-2901" to be "running"
Oct 31 09:47:42.280: INFO: Pod "test-rollover-controller-mxxrl": Phase="Pending", Reason="", readiness=false. Elapsed: 49.090674ms
Oct 31 09:47:44.317: INFO: Pod "test-rollover-controller-mxxrl": Phase="Running", Reason="", readiness=true. Elapsed: 2.086184407s
Oct 31 09:47:44.317: INFO: Pod "test-rollover-controller-mxxrl" satisfied condition "running"
Oct 31 09:47:44.317: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Oct 31 09:47:46.339: INFO: Creating deployment "test-rollover-deployment"
Oct 31 09:47:46.444: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Oct 31 09:47:48.489: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Oct 31 09:47:48.593: INFO: Ensure that both replica sets have 1 created replica
Oct 31 09:47:48.695: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Oct 31 09:47:48.764: INFO: Updating deployment test-rollover-deployment
Oct 31 09:47:48.764: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Oct 31 09:47:50.840: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Oct 31 09:47:50.985: INFO: Make sure deployment "test-rollover-deployment" is complete
Oct 31 09:47:51.043: INFO: all replica sets need to contain the pod-template-hash label
Oct 31 09:47:51.043: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 09:47:53.141: INFO: all replica sets need to contain the pod-template-hash label
Oct 31 09:47:53.141: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 09:47:55.100: INFO: all replica sets need to contain the pod-template-hash label
Oct 31 09:47:55.100: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 09:47:57.141: INFO: all replica sets need to contain the pod-template-hash label
Oct 31 09:47:57.142: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 09:47:59.145: INFO: all replica sets need to contain the pod-template-hash label
Oct 31 09:47:59.145: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 09:48:01.117: INFO: 
Oct 31 09:48:01.117: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Oct 31 09:48:01.284: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-2901  a17241f9-686f-415e-8871-3961337616c5 22169 2 2023-10-31 09:47:46 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00450f458 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-10-31 09:47:46 +0000 UTC,LastTransitionTime:2023-10-31 09:47:46 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-10-31 09:48:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:46 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Oct 31 09:48:01.335: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-2901  fec4fb24-4791-4ebf-add0-118b82a3af20 22159 2 2023-10-31 09:47:48 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment a17241f9-686f-415e-8871-3961337616c5 0xc0050d46b7 0xc0050d46b8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17241f9-686f-415e-8871-3961337616c5\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:48:00 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050d4768 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Oct 31 09:48:01.335: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Oct 31 09:48:01.335: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-2901  284b4a8c-b456-48b2-bfa0-ed1723295073 22168 2 2023-10-31 09:47:42 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment a17241f9-686f-415e-8871-3961337616c5 0xc0050d4587 0xc0050d4588}] [] [{e2e.test Update apps/v1 2023-10-31 09:47:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17241f9-686f-415e-8871-3961337616c5\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:48:00 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0050d4648 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Oct 31 09:48:01.336: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-2901  ebd89e3d-f014-47a5-890e-35d50176de14 22109 2 2023-10-31 09:47:46 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment a17241f9-686f-415e-8871-3961337616c5 0xc0050d47d7 0xc0050d47d8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17241f9-686f-415e-8871-3961337616c5\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050d4888 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Oct 31 09:48:01.385: INFO: Pod "test-rollover-deployment-6c6df9974f-nrhxc" is available:
&Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-nrhxc test-rollover-deployment-6c6df9974f- deployment-2901  7e2c807d-ecc1-45ac-8116-f230f701d762 22123 0 2023-10-31 09:47:48 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f fec4fb24-4791-4ebf-add0-118b82a3af20 0xc0050d4dc7 0xc0050d4dc8}] [] [{kube-controller-manager Update v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fec4fb24-4791-4ebf-add0-118b82a3af20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:47:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.170\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qhm7p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qhm7p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:49 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:49 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.170,StartTime:2023-10-31 09:47:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 09:47:49 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://957d04a5bf01c2ab219573ade73a5f0d7adfefd43b8b91307d16ebcde4f7963c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.170,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Oct 31 09:48:01.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-2901" for this suite. 10/31/23 09:48:01.467
------------------------------
â€¢ [SLOW TEST] [19.861 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/apps/deployment.go:132

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:47:41.66
    Oct 31 09:47:41.660: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename deployment 10/31/23 09:47:41.662
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:47:41.857
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:47:41.997
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support rollover [Conformance]
      test/e2e/apps/deployment.go:132
    Oct 31 09:47:42.231: INFO: Pod name rollover-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 10/31/23 09:47:42.231
    Oct 31 09:47:42.231: INFO: Waiting up to 5m0s for pod "test-rollover-controller-mxxrl" in namespace "deployment-2901" to be "running"
    Oct 31 09:47:42.280: INFO: Pod "test-rollover-controller-mxxrl": Phase="Pending", Reason="", readiness=false. Elapsed: 49.090674ms
    Oct 31 09:47:44.317: INFO: Pod "test-rollover-controller-mxxrl": Phase="Running", Reason="", readiness=true. Elapsed: 2.086184407s
    Oct 31 09:47:44.317: INFO: Pod "test-rollover-controller-mxxrl" satisfied condition "running"
    Oct 31 09:47:44.317: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
    Oct 31 09:47:46.339: INFO: Creating deployment "test-rollover-deployment"
    Oct 31 09:47:46.444: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
    Oct 31 09:47:48.489: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
    Oct 31 09:47:48.593: INFO: Ensure that both replica sets have 1 created replica
    Oct 31 09:47:48.695: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
    Oct 31 09:47:48.764: INFO: Updating deployment test-rollover-deployment
    Oct 31 09:47:48.764: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
    Oct 31 09:47:50.840: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
    Oct 31 09:47:50.985: INFO: Make sure deployment "test-rollover-deployment" is complete
    Oct 31 09:47:51.043: INFO: all replica sets need to contain the pod-template-hash label
    Oct 31 09:47:51.043: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 09:47:53.141: INFO: all replica sets need to contain the pod-template-hash label
    Oct 31 09:47:53.141: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 09:47:55.100: INFO: all replica sets need to contain the pod-template-hash label
    Oct 31 09:47:55.100: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 09:47:57.141: INFO: all replica sets need to contain the pod-template-hash label
    Oct 31 09:47:57.142: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 09:47:59.145: INFO: all replica sets need to contain the pod-template-hash label
    Oct 31 09:47:59.145: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 47, 50, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-6c6df9974f\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 09:48:01.117: INFO: 
    Oct 31 09:48:01.117: INFO: Ensure that both old replica sets have no replicas
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Oct 31 09:48:01.284: INFO: Deployment "test-rollover-deployment":
    &Deployment{ObjectMeta:{test-rollover-deployment  deployment-2901  a17241f9-686f-415e-8871-3961337616c5 22169 2 2023-10-31 09:47:46 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00450f458 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-10-31 09:47:46 +0000 UTC,LastTransitionTime:2023-10-31 09:47:46 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-6c6df9974f" has successfully progressed.,LastUpdateTime:2023-10-31 09:48:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:46 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Oct 31 09:48:01.335: INFO: New ReplicaSet "test-rollover-deployment-6c6df9974f" of Deployment "test-rollover-deployment":
    &ReplicaSet{ObjectMeta:{test-rollover-deployment-6c6df9974f  deployment-2901  fec4fb24-4791-4ebf-add0-118b82a3af20 22159 2 2023-10-31 09:47:48 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment a17241f9-686f-415e-8871-3961337616c5 0xc0050d46b7 0xc0050d46b8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17241f9-686f-415e-8871-3961337616c5\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:48:00 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 6c6df9974f,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050d4768 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 09:48:01.335: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
    Oct 31 09:48:01.335: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-2901  284b4a8c-b456-48b2-bfa0-ed1723295073 22168 2 2023-10-31 09:47:42 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment a17241f9-686f-415e-8871-3961337616c5 0xc0050d4587 0xc0050d4588}] [] [{e2e.test Update apps/v1 2023-10-31 09:47:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:48:00 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17241f9-686f-415e-8871-3961337616c5\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:48:00 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0050d4648 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 09:48:01.336: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-768dcbc65b  deployment-2901  ebd89e3d-f014-47a5-890e-35d50176de14 22109 2 2023-10-31 09:47:46 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment a17241f9-686f-415e-8871-3961337616c5 0xc0050d47d7 0xc0050d47d8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a17241f9-686f-415e-8871-3961337616c5\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 768dcbc65b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:768dcbc65b] map[] [] [] []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050d4888 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 09:48:01.385: INFO: Pod "test-rollover-deployment-6c6df9974f-nrhxc" is available:
    &Pod{ObjectMeta:{test-rollover-deployment-6c6df9974f-nrhxc test-rollover-deployment-6c6df9974f- deployment-2901  7e2c807d-ecc1-45ac-8116-f230f701d762 22123 0 2023-10-31 09:47:48 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:6c6df9974f] map[] [{apps/v1 ReplicaSet test-rollover-deployment-6c6df9974f fec4fb24-4791-4ebf-add0-118b82a3af20 0xc0050d4dc7 0xc0050d4dc8}] [] [{kube-controller-manager Update v1 2023-10-31 09:47:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fec4fb24-4791-4ebf-add0-118b82a3af20\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 09:47:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.170\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qhm7p,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qhm7p,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:48 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:49 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:49 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 09:47:48 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.170,StartTime:2023-10-31 09:47:48 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 09:47:49 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://957d04a5bf01c2ab219573ade73a5f0d7adfefd43b8b91307d16ebcde4f7963c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.170,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:48:01.385: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-2901" for this suite. 10/31/23 09:48:01.467
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:48:01.521
Oct 31 09:48:01.521: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename statefulset 10/31/23 09:48:01.522
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:48:01.667
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:48:01.818
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-2157 10/31/23 09:48:01.963
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/apps/statefulset.go:697
STEP: Creating stateful set ss in namespace statefulset-2157 10/31/23 09:48:01.987
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2157 10/31/23 09:48:02.047
Oct 31 09:48:02.071: INFO: Found 0 stateful pods, waiting for 1
Oct 31 09:48:12.081: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 10/31/23 09:48:12.081
Oct 31 09:48:12.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 09:48:13.062: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 09:48:13.062: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 09:48:13.062: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Oct 31 09:48:13.149: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Oct 31 09:48:23.193: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Oct 31 09:48:23.193: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 09:48:23.358: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999566s
Oct 31 09:48:24.439: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.956071421s
Oct 31 09:48:25.445: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.876983909s
Oct 31 09:48:26.494: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.870202917s
Oct 31 09:48:27.534: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.822012804s
Oct 31 09:48:28.546: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.781658425s
Oct 31 09:48:29.554: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.769613098s
Oct 31 09:48:30.567: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.761101574s
Oct 31 09:48:31.580: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.747326591s
Oct 31 09:48:32.589: INFO: Verifying statefulset ss doesn't scale past 3 for another 736.030111ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2157 10/31/23 09:48:33.59
Oct 31 09:48:33.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 09:48:34.459: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Oct 31 09:48:34.459: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Oct 31 09:48:34.459: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Oct 31 09:48:34.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 09:48:35.388: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Oct 31 09:48:35.388: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Oct 31 09:48:35.388: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Oct 31 09:48:35.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 09:48:36.521: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Oct 31 09:48:36.521: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Oct 31 09:48:36.521: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Oct 31 09:48:36.571: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 09:48:36.571: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 09:48:36.571: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod 10/31/23 09:48:36.571
Oct 31 09:48:36.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 09:48:37.570: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 09:48:37.570: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 09:48:37.570: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Oct 31 09:48:37.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 09:48:38.602: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 09:48:38.602: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 09:48:38.602: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Oct 31 09:48:38.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 09:48:39.528: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 09:48:39.528: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 09:48:39.528: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Oct 31 09:48:39.528: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 09:48:39.536: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 1
Oct 31 09:48:49.597: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Oct 31 09:48:49.597: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Oct 31 09:48:49.597: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Oct 31 09:48:49.709: INFO: POD   NODE                                          PHASE    GRACE  CONDITIONS
Oct 31 09:48:49.709: INFO: ss-0  pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:02 +0000 UTC  }]
Oct 31 09:48:49.709: INFO: ss-1  pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:23 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:23 +0000 UTC  }]
Oct 31 09:48:49.710: INFO: ss-2  pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:23 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:23 +0000 UTC  }]
Oct 31 09:48:49.710: INFO: 
Oct 31 09:48:49.710: INFO: StatefulSet ss has not reached scale 0, at 3
Oct 31 09:48:50.761: INFO: POD   NODE                                          PHASE    GRACE  CONDITIONS
Oct 31 09:48:50.761: INFO: ss-0  pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:02 +0000 UTC  }]
Oct 31 09:48:50.761: INFO: 
Oct 31 09:48:50.761: INFO: StatefulSet ss has not reached scale 0, at 1
Oct 31 09:48:51.799: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.939802746s
Oct 31 09:48:52.813: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.902411737s
Oct 31 09:48:53.861: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.888971931s
Oct 31 09:48:54.872: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.840570198s
Oct 31 09:48:55.892: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.829922784s
Oct 31 09:48:56.939: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.809479487s
Oct 31 09:48:57.991: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.762893046s
Oct 31 09:48:58.998: INFO: Verifying statefulset ss doesn't scale past 0 for another 711.305425ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2157 10/31/23 09:48:59.998
Oct 31 09:49:00.005: INFO: Scaling statefulset ss to 0
Oct 31 09:49:00.162: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Oct 31 09:49:00.212: INFO: Deleting all statefulset in ns statefulset-2157
Oct 31 09:49:00.264: INFO: Scaling statefulset ss to 0
Oct 31 09:49:00.422: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 09:49:00.483: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:49:00.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-2157" for this suite. 10/31/23 09:49:00.781
------------------------------
â€¢ [SLOW TEST] [59.334 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/apps/statefulset.go:697

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:48:01.521
    Oct 31 09:48:01.521: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename statefulset 10/31/23 09:48:01.522
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:48:01.667
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:48:01.818
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-2157 10/31/23 09:48:01.963
    [It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
      test/e2e/apps/statefulset.go:697
    STEP: Creating stateful set ss in namespace statefulset-2157 10/31/23 09:48:01.987
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2157 10/31/23 09:48:02.047
    Oct 31 09:48:02.071: INFO: Found 0 stateful pods, waiting for 1
    Oct 31 09:48:12.081: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod 10/31/23 09:48:12.081
    Oct 31 09:48:12.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 09:48:13.062: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 09:48:13.062: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 09:48:13.062: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Oct 31 09:48:13.149: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Oct 31 09:48:23.193: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Oct 31 09:48:23.193: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 09:48:23.358: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999566s
    Oct 31 09:48:24.439: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.956071421s
    Oct 31 09:48:25.445: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.876983909s
    Oct 31 09:48:26.494: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.870202917s
    Oct 31 09:48:27.534: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.822012804s
    Oct 31 09:48:28.546: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.781658425s
    Oct 31 09:48:29.554: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.769613098s
    Oct 31 09:48:30.567: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.761101574s
    Oct 31 09:48:31.580: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.747326591s
    Oct 31 09:48:32.589: INFO: Verifying statefulset ss doesn't scale past 3 for another 736.030111ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2157 10/31/23 09:48:33.59
    Oct 31 09:48:33.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 09:48:34.459: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Oct 31 09:48:34.459: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Oct 31 09:48:34.459: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Oct 31 09:48:34.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 09:48:35.388: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Oct 31 09:48:35.388: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Oct 31 09:48:35.388: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Oct 31 09:48:35.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 09:48:36.521: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
    Oct 31 09:48:36.521: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Oct 31 09:48:36.521: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Oct 31 09:48:36.571: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 09:48:36.571: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 09:48:36.571: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Scale down will not halt with unhealthy stateful pod 10/31/23 09:48:36.571
    Oct 31 09:48:36.617: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 09:48:37.570: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 09:48:37.570: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 09:48:37.570: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Oct 31 09:48:37.570: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 09:48:38.602: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 09:48:38.602: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 09:48:38.602: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Oct 31 09:48:38.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-2157 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 09:48:39.528: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 09:48:39.528: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 09:48:39.528: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Oct 31 09:48:39.528: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 09:48:39.536: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 1
    Oct 31 09:48:49.597: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Oct 31 09:48:49.597: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Oct 31 09:48:49.597: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Oct 31 09:48:49.709: INFO: POD   NODE                                          PHASE    GRACE  CONDITIONS
    Oct 31 09:48:49.709: INFO: ss-0  pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:02 +0000 UTC  }]
    Oct 31 09:48:49.709: INFO: ss-1  pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:23 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:23 +0000 UTC  }]
    Oct 31 09:48:49.710: INFO: ss-2  pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:23 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:23 +0000 UTC  }]
    Oct 31 09:48:49.710: INFO: 
    Oct 31 09:48:49.710: INFO: StatefulSet ss has not reached scale 0, at 3
    Oct 31 09:48:50.761: INFO: POD   NODE                                          PHASE    GRACE  CONDITIONS
    Oct 31 09:48:50.761: INFO: ss-0  pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 09:48:02 +0000 UTC  }]
    Oct 31 09:48:50.761: INFO: 
    Oct 31 09:48:50.761: INFO: StatefulSet ss has not reached scale 0, at 1
    Oct 31 09:48:51.799: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.939802746s
    Oct 31 09:48:52.813: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.902411737s
    Oct 31 09:48:53.861: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.888971931s
    Oct 31 09:48:54.872: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.840570198s
    Oct 31 09:48:55.892: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.829922784s
    Oct 31 09:48:56.939: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.809479487s
    Oct 31 09:48:57.991: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.762893046s
    Oct 31 09:48:58.998: INFO: Verifying statefulset ss doesn't scale past 0 for another 711.305425ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2157 10/31/23 09:48:59.998
    Oct 31 09:49:00.005: INFO: Scaling statefulset ss to 0
    Oct 31 09:49:00.162: INFO: Waiting for statefulset status.replicas updated to 0
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Oct 31 09:49:00.212: INFO: Deleting all statefulset in ns statefulset-2157
    Oct 31 09:49:00.264: INFO: Scaling statefulset ss to 0
    Oct 31 09:49:00.422: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 09:49:00.483: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:49:00.711: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-2157" for this suite. 10/31/23 09:49:00.781
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:49:00.856
Oct 31 09:49:00.857: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename statefulset 10/31/23 09:49:00.858
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:49:01.049
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:49:01.189
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-4222 10/31/23 09:49:01.29
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/apps/statefulset.go:306
STEP: Creating a new StatefulSet 10/31/23 09:49:01.355
Oct 31 09:49:01.467: INFO: Found 1 stateful pods, waiting for 3
Oct 31 09:49:11.509: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 09:49:11.509: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 09:49:11.509: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 09:49:11.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-4222 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 09:49:12.644: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 09:49:12.644: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 09:49:12.644: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 10/31/23 09:49:22.769
Oct 31 09:49:22.874: INFO: Updating stateful set ss2
STEP: Creating a new revision 10/31/23 09:49:22.874
STEP: Updating Pods in reverse ordinal order 10/31/23 09:49:33.053
Oct 31 09:49:33.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-4222 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 09:49:33.877: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Oct 31 09:49:33.877: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Oct 31 09:49:33.877: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Oct 31 09:49:44.141: INFO: Waiting for StatefulSet statefulset-4222/ss2 to complete update
Oct 31 09:49:44.141: INFO: Waiting for Pod statefulset-4222/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Oct 31 09:49:44.141: INFO: Waiting for Pod statefulset-4222/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Oct 31 09:49:54.205: INFO: Waiting for StatefulSet statefulset-4222/ss2 to complete update
Oct 31 09:49:54.205: INFO: Waiting for Pod statefulset-4222/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Oct 31 09:50:04.200: INFO: Waiting for StatefulSet statefulset-4222/ss2 to complete update
Oct 31 09:50:04.200: INFO: Waiting for Pod statefulset-4222/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
STEP: Rolling back to a previous revision 10/31/23 09:50:14.198
Oct 31 09:50:14.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-4222 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 09:50:14.983: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 09:50:14.983: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 09:50:14.983: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Oct 31 09:50:25.254: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order 10/31/23 09:50:35.437
Oct 31 09:50:35.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-4222 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 09:50:36.383: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Oct 31 09:50:36.383: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Oct 31 09:50:36.383: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Oct 31 09:50:46.661: INFO: Deleting all statefulset in ns statefulset-4222
Oct 31 09:50:46.713: INFO: Scaling statefulset ss2 to 0
Oct 31 09:50:56.838: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 09:50:56.888: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Oct 31 09:50:57.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-4222" for this suite. 10/31/23 09:50:57.154
------------------------------
â€¢ [SLOW TEST] [116.364 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/apps/statefulset.go:306

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:49:00.856
    Oct 31 09:49:00.857: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename statefulset 10/31/23 09:49:00.858
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:49:01.049
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:49:01.189
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-4222 10/31/23 09:49:01.29
    [It] should perform rolling updates and roll backs of template modifications [Conformance]
      test/e2e/apps/statefulset.go:306
    STEP: Creating a new StatefulSet 10/31/23 09:49:01.355
    Oct 31 09:49:01.467: INFO: Found 1 stateful pods, waiting for 3
    Oct 31 09:49:11.509: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 09:49:11.509: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 09:49:11.509: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 09:49:11.720: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-4222 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 09:49:12.644: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 09:49:12.644: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 09:49:12.644: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 10/31/23 09:49:22.769
    Oct 31 09:49:22.874: INFO: Updating stateful set ss2
    STEP: Creating a new revision 10/31/23 09:49:22.874
    STEP: Updating Pods in reverse ordinal order 10/31/23 09:49:33.053
    Oct 31 09:49:33.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-4222 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 09:49:33.877: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Oct 31 09:49:33.877: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Oct 31 09:49:33.877: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Oct 31 09:49:44.141: INFO: Waiting for StatefulSet statefulset-4222/ss2 to complete update
    Oct 31 09:49:44.141: INFO: Waiting for Pod statefulset-4222/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Oct 31 09:49:44.141: INFO: Waiting for Pod statefulset-4222/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Oct 31 09:49:54.205: INFO: Waiting for StatefulSet statefulset-4222/ss2 to complete update
    Oct 31 09:49:54.205: INFO: Waiting for Pod statefulset-4222/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Oct 31 09:50:04.200: INFO: Waiting for StatefulSet statefulset-4222/ss2 to complete update
    Oct 31 09:50:04.200: INFO: Waiting for Pod statefulset-4222/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    STEP: Rolling back to a previous revision 10/31/23 09:50:14.198
    Oct 31 09:50:14.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-4222 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 09:50:14.983: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 09:50:14.983: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 09:50:14.983: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Oct 31 09:50:25.254: INFO: Updating stateful set ss2
    STEP: Rolling back update in reverse ordinal order 10/31/23 09:50:35.437
    Oct 31 09:50:35.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-4222 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 09:50:36.383: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Oct 31 09:50:36.383: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Oct 31 09:50:36.383: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Oct 31 09:50:46.661: INFO: Deleting all statefulset in ns statefulset-4222
    Oct 31 09:50:46.713: INFO: Scaling statefulset ss2 to 0
    Oct 31 09:50:56.838: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 09:50:56.888: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:50:57.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-4222" for this suite. 10/31/23 09:50:57.154
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:50:57.222
Oct 31 09:50:57.222: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 09:50:57.224
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:50:57.411
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:50:57.539
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:85
Oct 31 09:50:57.688: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:51:56.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-9295" for this suite. 10/31/23 09:51:56.368
------------------------------
â€¢ [SLOW TEST] [59.212 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:85

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:50:57.222
    Oct 31 09:50:57.222: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 09:50:57.224
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:50:57.411
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:50:57.539
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] listing custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:85
    Oct 31 09:50:57.688: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:51:56.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-9295" for this suite. 10/31/23 09:51:56.368
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:51:56.438
Oct 31 09:51:56.438: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 09:51:56.441
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:51:56.586
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:51:56.732
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 09:51:57.121
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:51:57.626
STEP: Deploying the webhook pod 10/31/23 09:51:57.684
STEP: Wait for the deployment to be ready 10/31/23 09:51:57.754
Oct 31 09:51:57.969: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 51, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 51, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 51, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 51, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 09:51:59.979
STEP: Verifying the service has paired with the endpoint 10/31/23 09:52:00.058
Oct 31 09:52:01.058: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197
STEP: Registering the webhook via the AdmissionRegistration API 10/31/23 09:52:01.104
STEP: create a pod that should be denied by the webhook 10/31/23 09:52:02.454
STEP: create a pod that causes the webhook to hang 10/31/23 09:52:02.64
STEP: create a configmap that should be denied by the webhook 10/31/23 09:52:12.771
STEP: create a configmap that should be admitted by the webhook 10/31/23 09:52:13.697
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 10/31/23 09:52:13.757
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 10/31/23 09:52:14.004
STEP: create a namespace that bypass the webhook 10/31/23 09:52:14.1
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 10/31/23 09:52:14.158
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:52:14.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6770" for this suite. 10/31/23 09:52:14.741
STEP: Destroying namespace "webhook-6770-markers" for this suite. 10/31/23 09:52:14.796
------------------------------
â€¢ [SLOW TEST] [18.474 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/apimachinery/webhook.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:51:56.438
    Oct 31 09:51:56.438: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 09:51:56.441
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:51:56.586
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:51:56.732
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 09:51:57.121
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 09:51:57.626
    STEP: Deploying the webhook pod 10/31/23 09:51:57.684
    STEP: Wait for the deployment to be ready 10/31/23 09:51:57.754
    Oct 31 09:51:57.969: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 9, 51, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 51, 57, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 9, 51, 57, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 9, 51, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 09:51:59.979
    STEP: Verifying the service has paired with the endpoint 10/31/23 09:52:00.058
    Oct 31 09:52:01.058: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny pod and configmap creation [Conformance]
      test/e2e/apimachinery/webhook.go:197
    STEP: Registering the webhook via the AdmissionRegistration API 10/31/23 09:52:01.104
    STEP: create a pod that should be denied by the webhook 10/31/23 09:52:02.454
    STEP: create a pod that causes the webhook to hang 10/31/23 09:52:02.64
    STEP: create a configmap that should be denied by the webhook 10/31/23 09:52:12.771
    STEP: create a configmap that should be admitted by the webhook 10/31/23 09:52:13.697
    STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook 10/31/23 09:52:13.757
    STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook 10/31/23 09:52:14.004
    STEP: create a namespace that bypass the webhook 10/31/23 09:52:14.1
    STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace 10/31/23 09:52:14.158
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:52:14.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6770" for this suite. 10/31/23 09:52:14.741
    STEP: Destroying namespace "webhook-6770-markers" for this suite. 10/31/23 09:52:14.796
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:52:14.913
Oct 31 09:52:14.914: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename cronjob 10/31/23 09:52:14.915
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:52:15.162
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:52:15.345
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96
STEP: Creating a suspended cronjob 10/31/23 09:52:15.447
STEP: Ensuring no jobs are scheduled 10/31/23 09:52:15.507
STEP: Ensuring no job exists by listing jobs explicitly 10/31/23 09:57:15.588
STEP: Removing cronjob 10/31/23 09:57:15.677
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Oct 31 09:57:15.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-6463" for this suite. 10/31/23 09:57:15.825
------------------------------
â€¢ [SLOW TEST] [300.972 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/apps/cronjob.go:96

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:52:14.913
    Oct 31 09:52:14.914: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename cronjob 10/31/23 09:52:14.915
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:52:15.162
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:52:15.345
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule jobs when suspended [Slow] [Conformance]
      test/e2e/apps/cronjob.go:96
    STEP: Creating a suspended cronjob 10/31/23 09:52:15.447
    STEP: Ensuring no jobs are scheduled 10/31/23 09:52:15.507
    STEP: Ensuring no job exists by listing jobs explicitly 10/31/23 09:57:15.588
    STEP: Removing cronjob 10/31/23 09:57:15.677
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:57:15.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-6463" for this suite. 10/31/23 09:57:15.825
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:57:15.895
Oct 31 09:57:15.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:57:15.896
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:16.007
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:16.188
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197
STEP: Creating a pod to test emptydir 0644 on node default medium 10/31/23 09:57:16.242
Oct 31 09:57:16.261: INFO: Waiting up to 5m0s for pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843" in namespace "emptydir-6373" to be "Succeeded or Failed"
Oct 31 09:57:16.309: INFO: Pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843": Phase="Pending", Reason="", readiness=false. Elapsed: 47.752666ms
Oct 31 09:57:18.318: INFO: Pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843": Phase="Pending", Reason="", readiness=false. Elapsed: 2.057036443s
Oct 31 09:57:20.317: INFO: Pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.056377881s
STEP: Saw pod success 10/31/23 09:57:20.317
Oct 31 09:57:20.318: INFO: Pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843" satisfied condition "Succeeded or Failed"
Oct 31 09:57:20.371: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-88fb0375-2b1a-45ec-bd3b-d12801c12843 container test-container: <nil>
STEP: delete the pod 10/31/23 09:57:20.702
Oct 31 09:57:20.765: INFO: Waiting for pod pod-88fb0375-2b1a-45ec-bd3b-d12801c12843 to disappear
Oct 31 09:57:20.853: INFO: Pod pod-88fb0375-2b1a-45ec-bd3b-d12801c12843 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:57:20.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-6373" for this suite. 10/31/23 09:57:20.914
------------------------------
â€¢ [SLOW TEST] [5.033 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:197

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:57:15.895
    Oct 31 09:57:15.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:57:15.896
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:16.007
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:16.188
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:197
    STEP: Creating a pod to test emptydir 0644 on node default medium 10/31/23 09:57:16.242
    Oct 31 09:57:16.261: INFO: Waiting up to 5m0s for pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843" in namespace "emptydir-6373" to be "Succeeded or Failed"
    Oct 31 09:57:16.309: INFO: Pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843": Phase="Pending", Reason="", readiness=false. Elapsed: 47.752666ms
    Oct 31 09:57:18.318: INFO: Pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843": Phase="Pending", Reason="", readiness=false. Elapsed: 2.057036443s
    Oct 31 09:57:20.317: INFO: Pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.056377881s
    STEP: Saw pod success 10/31/23 09:57:20.317
    Oct 31 09:57:20.318: INFO: Pod "pod-88fb0375-2b1a-45ec-bd3b-d12801c12843" satisfied condition "Succeeded or Failed"
    Oct 31 09:57:20.371: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-88fb0375-2b1a-45ec-bd3b-d12801c12843 container test-container: <nil>
    STEP: delete the pod 10/31/23 09:57:20.702
    Oct 31 09:57:20.765: INFO: Waiting for pod pod-88fb0375-2b1a-45ec-bd3b-d12801c12843 to disappear
    Oct 31 09:57:20.853: INFO: Pod pod-88fb0375-2b1a-45ec-bd3b-d12801c12843 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:57:20.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-6373" for this suite. 10/31/23 09:57:20.914
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:57:20.929
Oct 31 09:57:20.929: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 09:57:20.93
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:21.102
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:21.301
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217
STEP: Creating a pod to test emptydir 0777 on node default medium 10/31/23 09:57:21.396
Oct 31 09:57:21.415: INFO: Waiting up to 5m0s for pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a" in namespace "emptydir-3744" to be "Succeeded or Failed"
Oct 31 09:57:21.443: INFO: Pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a": Phase="Pending", Reason="", readiness=false. Elapsed: 28.307856ms
Oct 31 09:57:23.455: INFO: Pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.040666371s
Oct 31 09:57:25.493: INFO: Pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.078344816s
STEP: Saw pod success 10/31/23 09:57:25.493
Oct 31 09:57:25.493: INFO: Pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a" satisfied condition "Succeeded or Failed"
Oct 31 09:57:25.500: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-5c88f661-eee9-423b-b00d-e77e50fee69a container test-container: <nil>
STEP: delete the pod 10/31/23 09:57:25.596
Oct 31 09:57:25.659: INFO: Waiting for pod pod-5c88f661-eee9-423b-b00d-e77e50fee69a to disappear
Oct 31 09:57:25.747: INFO: Pod pod-5c88f661-eee9-423b-b00d-e77e50fee69a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 09:57:25.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-3744" for this suite. 10/31/23 09:57:25.803
------------------------------
â€¢ [4.930 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:217

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:57:20.929
    Oct 31 09:57:20.929: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 09:57:20.93
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:21.102
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:21.301
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:217
    STEP: Creating a pod to test emptydir 0777 on node default medium 10/31/23 09:57:21.396
    Oct 31 09:57:21.415: INFO: Waiting up to 5m0s for pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a" in namespace "emptydir-3744" to be "Succeeded or Failed"
    Oct 31 09:57:21.443: INFO: Pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a": Phase="Pending", Reason="", readiness=false. Elapsed: 28.307856ms
    Oct 31 09:57:23.455: INFO: Pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.040666371s
    Oct 31 09:57:25.493: INFO: Pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.078344816s
    STEP: Saw pod success 10/31/23 09:57:25.493
    Oct 31 09:57:25.493: INFO: Pod "pod-5c88f661-eee9-423b-b00d-e77e50fee69a" satisfied condition "Succeeded or Failed"
    Oct 31 09:57:25.500: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-5c88f661-eee9-423b-b00d-e77e50fee69a container test-container: <nil>
    STEP: delete the pod 10/31/23 09:57:25.596
    Oct 31 09:57:25.659: INFO: Waiting for pod pod-5c88f661-eee9-423b-b00d-e77e50fee69a to disappear
    Oct 31 09:57:25.747: INFO: Pod pod-5c88f661-eee9-423b-b00d-e77e50fee69a no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:57:25.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-3744" for this suite. 10/31/23 09:57:25.803
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:57:25.86
Oct 31 09:57:25.860: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename dns 10/31/23 09:57:25.861
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:26.065
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:26.211
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333
STEP: Creating a test externalName service 10/31/23 09:57:26.299
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
 10/31/23 09:57:26.316
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
 10/31/23 09:57:26.316
STEP: creating a pod to probe DNS 10/31/23 09:57:26.316
STEP: submitting the pod to kubernetes 10/31/23 09:57:26.317
Oct 31 09:57:26.367: INFO: Waiting up to 15m0s for pod "dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f" in namespace "dns-603" to be "running"
Oct 31 09:57:26.382: INFO: Pod "dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f": Phase="Pending", Reason="", readiness=false. Elapsed: 14.810681ms
Oct 31 09:57:28.424: INFO: Pod "dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f": Phase="Running", Reason="", readiness=true. Elapsed: 2.056777444s
Oct 31 09:57:28.424: INFO: Pod "dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f" satisfied condition "running"
STEP: retrieving the pod 10/31/23 09:57:28.424
STEP: looking for the results for each expected name from probers 10/31/23 09:57:28.474
Oct 31 09:57:28.763: INFO: DNS probes using dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f succeeded

STEP: deleting the pod 10/31/23 09:57:28.763
STEP: changing the externalName to bar.example.com 10/31/23 09:57:28.807
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
 10/31/23 09:57:28.922
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
 10/31/23 09:57:28.923
STEP: creating a second pod to probe DNS 10/31/23 09:57:28.923
STEP: submitting the pod to kubernetes 10/31/23 09:57:28.923
Oct 31 09:57:29.020: INFO: Waiting up to 15m0s for pod "dns-test-1087342f-4141-47c5-9ee4-398b39640587" in namespace "dns-603" to be "running"
Oct 31 09:57:29.036: INFO: Pod "dns-test-1087342f-4141-47c5-9ee4-398b39640587": Phase="Pending", Reason="", readiness=false. Elapsed: 16.356088ms
Oct 31 09:57:31.046: INFO: Pod "dns-test-1087342f-4141-47c5-9ee4-398b39640587": Phase="Running", Reason="", readiness=true. Elapsed: 2.025934409s
Oct 31 09:57:31.046: INFO: Pod "dns-test-1087342f-4141-47c5-9ee4-398b39640587" satisfied condition "running"
STEP: retrieving the pod 10/31/23 09:57:31.046
STEP: looking for the results for each expected name from probers 10/31/23 09:57:31.106
Oct 31 09:57:31.337: INFO: File wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local from pod  dns-603/dns-test-1087342f-4141-47c5-9ee4-398b39640587 contains 'foo.example.com.
' instead of 'bar.example.com.'
Oct 31 09:57:31.461: INFO: File jessie_udp@dns-test-service-3.dns-603.svc.cluster.local from pod  dns-603/dns-test-1087342f-4141-47c5-9ee4-398b39640587 contains 'foo.example.com.
' instead of 'bar.example.com.'
Oct 31 09:57:31.461: INFO: Lookups using dns-603/dns-test-1087342f-4141-47c5-9ee4-398b39640587 failed for: [wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local jessie_udp@dns-test-service-3.dns-603.svc.cluster.local]

Oct 31 09:57:36.575: INFO: DNS probes using dns-test-1087342f-4141-47c5-9ee4-398b39640587 succeeded

STEP: deleting the pod 10/31/23 09:57:36.575
STEP: changing the service to type=ClusterIP 10/31/23 09:57:36.597
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
 10/31/23 09:57:36.717
STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
 10/31/23 09:57:36.718
STEP: creating a third pod to probe DNS 10/31/23 09:57:36.719
STEP: submitting the pod to kubernetes 10/31/23 09:57:36.81
Oct 31 09:57:36.866: INFO: Waiting up to 15m0s for pod "dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43" in namespace "dns-603" to be "running"
Oct 31 09:57:36.929: INFO: Pod "dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43": Phase="Pending", Reason="", readiness=false. Elapsed: 63.195269ms
Oct 31 09:57:38.940: INFO: Pod "dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43": Phase="Running", Reason="", readiness=true. Elapsed: 2.074251359s
Oct 31 09:57:38.940: INFO: Pod "dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43" satisfied condition "running"
STEP: retrieving the pod 10/31/23 09:57:38.941
STEP: looking for the results for each expected name from probers 10/31/23 09:57:38.991
Oct 31 09:57:39.393: INFO: DNS probes using dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43 succeeded

STEP: deleting the pod 10/31/23 09:57:39.393
STEP: deleting the test externalName service 10/31/23 09:57:39.454
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Oct 31 09:57:39.510: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-603" for this suite. 10/31/23 09:57:39.603
------------------------------
â€¢ [SLOW TEST] [13.803 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/network/dns.go:333

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:57:25.86
    Oct 31 09:57:25.860: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename dns 10/31/23 09:57:25.861
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:26.065
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:26.211
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for ExternalName services [Conformance]
      test/e2e/network/dns.go:333
    STEP: Creating a test externalName service 10/31/23 09:57:26.299
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
     10/31/23 09:57:26.316
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
     10/31/23 09:57:26.316
    STEP: creating a pod to probe DNS 10/31/23 09:57:26.316
    STEP: submitting the pod to kubernetes 10/31/23 09:57:26.317
    Oct 31 09:57:26.367: INFO: Waiting up to 15m0s for pod "dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f" in namespace "dns-603" to be "running"
    Oct 31 09:57:26.382: INFO: Pod "dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f": Phase="Pending", Reason="", readiness=false. Elapsed: 14.810681ms
    Oct 31 09:57:28.424: INFO: Pod "dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f": Phase="Running", Reason="", readiness=true. Elapsed: 2.056777444s
    Oct 31 09:57:28.424: INFO: Pod "dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f" satisfied condition "running"
    STEP: retrieving the pod 10/31/23 09:57:28.424
    STEP: looking for the results for each expected name from probers 10/31/23 09:57:28.474
    Oct 31 09:57:28.763: INFO: DNS probes using dns-test-e11fb815-7091-4851-9cdf-0e96bd9b0c1f succeeded

    STEP: deleting the pod 10/31/23 09:57:28.763
    STEP: changing the externalName to bar.example.com 10/31/23 09:57:28.807
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
     10/31/23 09:57:28.922
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
     10/31/23 09:57:28.923
    STEP: creating a second pod to probe DNS 10/31/23 09:57:28.923
    STEP: submitting the pod to kubernetes 10/31/23 09:57:28.923
    Oct 31 09:57:29.020: INFO: Waiting up to 15m0s for pod "dns-test-1087342f-4141-47c5-9ee4-398b39640587" in namespace "dns-603" to be "running"
    Oct 31 09:57:29.036: INFO: Pod "dns-test-1087342f-4141-47c5-9ee4-398b39640587": Phase="Pending", Reason="", readiness=false. Elapsed: 16.356088ms
    Oct 31 09:57:31.046: INFO: Pod "dns-test-1087342f-4141-47c5-9ee4-398b39640587": Phase="Running", Reason="", readiness=true. Elapsed: 2.025934409s
    Oct 31 09:57:31.046: INFO: Pod "dns-test-1087342f-4141-47c5-9ee4-398b39640587" satisfied condition "running"
    STEP: retrieving the pod 10/31/23 09:57:31.046
    STEP: looking for the results for each expected name from probers 10/31/23 09:57:31.106
    Oct 31 09:57:31.337: INFO: File wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local from pod  dns-603/dns-test-1087342f-4141-47c5-9ee4-398b39640587 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Oct 31 09:57:31.461: INFO: File jessie_udp@dns-test-service-3.dns-603.svc.cluster.local from pod  dns-603/dns-test-1087342f-4141-47c5-9ee4-398b39640587 contains 'foo.example.com.
    ' instead of 'bar.example.com.'
    Oct 31 09:57:31.461: INFO: Lookups using dns-603/dns-test-1087342f-4141-47c5-9ee4-398b39640587 failed for: [wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local jessie_udp@dns-test-service-3.dns-603.svc.cluster.local]

    Oct 31 09:57:36.575: INFO: DNS probes using dns-test-1087342f-4141-47c5-9ee4-398b39640587 succeeded

    STEP: deleting the pod 10/31/23 09:57:36.575
    STEP: changing the service to type=ClusterIP 10/31/23 09:57:36.597
    STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
     10/31/23 09:57:36.717
    STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-603.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-603.svc.cluster.local; sleep 1; done
     10/31/23 09:57:36.718
    STEP: creating a third pod to probe DNS 10/31/23 09:57:36.719
    STEP: submitting the pod to kubernetes 10/31/23 09:57:36.81
    Oct 31 09:57:36.866: INFO: Waiting up to 15m0s for pod "dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43" in namespace "dns-603" to be "running"
    Oct 31 09:57:36.929: INFO: Pod "dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43": Phase="Pending", Reason="", readiness=false. Elapsed: 63.195269ms
    Oct 31 09:57:38.940: INFO: Pod "dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43": Phase="Running", Reason="", readiness=true. Elapsed: 2.074251359s
    Oct 31 09:57:38.940: INFO: Pod "dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43" satisfied condition "running"
    STEP: retrieving the pod 10/31/23 09:57:38.941
    STEP: looking for the results for each expected name from probers 10/31/23 09:57:38.991
    Oct 31 09:57:39.393: INFO: DNS probes using dns-test-03ce2bca-310a-4204-ad0b-ebb6af76ad43 succeeded

    STEP: deleting the pod 10/31/23 09:57:39.393
    STEP: deleting the test externalName service 10/31/23 09:57:39.454
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:57:39.510: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-603" for this suite. 10/31/23 09:57:39.603
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:57:39.673
Oct 31 09:57:39.673: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 09:57:39.674
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:39.818
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:39.951
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46
STEP: Creating secret with name secret-test-a6063ce7-7cc1-450a-807c-5c5c79ff3382 10/31/23 09:57:40.049
STEP: Creating a pod to test consume secrets 10/31/23 09:57:40.097
Oct 31 09:57:40.153: INFO: Waiting up to 5m0s for pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15" in namespace "secrets-1026" to be "Succeeded or Failed"
Oct 31 09:57:40.179: INFO: Pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15": Phase="Pending", Reason="", readiness=false. Elapsed: 26.270163ms
Oct 31 09:57:42.187: INFO: Pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034128741s
Oct 31 09:57:44.189: INFO: Pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.035701927s
STEP: Saw pod success 10/31/23 09:57:44.189
Oct 31 09:57:44.189: INFO: Pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15" satisfied condition "Succeeded or Failed"
Oct 31 09:57:44.247: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15 container secret-env-test: <nil>
STEP: delete the pod 10/31/23 09:57:44.427
Oct 31 09:57:44.494: INFO: Waiting for pod pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15 to disappear
Oct 31 09:57:44.545: INFO: Pod pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 09:57:44.546: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-1026" for this suite. 10/31/23 09:57:44.642
------------------------------
â€¢ [SLOW TEST] [5.095 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/common/node/secrets.go:46

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:57:39.673
    Oct 31 09:57:39.673: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 09:57:39.674
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:39.818
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:39.951
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in env vars [NodeConformance] [Conformance]
      test/e2e/common/node/secrets.go:46
    STEP: Creating secret with name secret-test-a6063ce7-7cc1-450a-807c-5c5c79ff3382 10/31/23 09:57:40.049
    STEP: Creating a pod to test consume secrets 10/31/23 09:57:40.097
    Oct 31 09:57:40.153: INFO: Waiting up to 5m0s for pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15" in namespace "secrets-1026" to be "Succeeded or Failed"
    Oct 31 09:57:40.179: INFO: Pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15": Phase="Pending", Reason="", readiness=false. Elapsed: 26.270163ms
    Oct 31 09:57:42.187: INFO: Pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034128741s
    Oct 31 09:57:44.189: INFO: Pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.035701927s
    STEP: Saw pod success 10/31/23 09:57:44.189
    Oct 31 09:57:44.189: INFO: Pod "pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15" satisfied condition "Succeeded or Failed"
    Oct 31 09:57:44.247: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15 container secret-env-test: <nil>
    STEP: delete the pod 10/31/23 09:57:44.427
    Oct 31 09:57:44.494: INFO: Waiting for pod pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15 to disappear
    Oct 31 09:57:44.545: INFO: Pod pod-secrets-0628f52b-6356-4965-a8e2-573c035abd15 no longer exists
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:57:44.546: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-1026" for this suite. 10/31/23 09:57:44.642
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
[BeforeEach] [sig-apps] DisruptionController
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:57:44.774
Oct 31 09:57:44.774: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename disruption 10/31/23 09:57:44.775
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:44.932
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:45.109
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:72
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164
STEP: Waiting for the pdb to be processed 10/31/23 09:57:45.221
STEP: Updating PodDisruptionBudget status 10/31/23 09:57:45.312
STEP: Waiting for all pods to be running 10/31/23 09:57:45.394
Oct 31 09:57:45.469: INFO: running pods: 0 < 1
STEP: locating a running pod 10/31/23 09:57:47.477
STEP: Waiting for the pdb to be processed 10/31/23 09:57:47.713
STEP: Patching PodDisruptionBudget status 10/31/23 09:57:47.83
STEP: Waiting for the pdb to be processed 10/31/23 09:57:47.933
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/node/init/init.go:32
Oct 31 09:57:48.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] DisruptionController
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] DisruptionController
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] DisruptionController
  tear down framework | framework.go:193
STEP: Destroying namespace "disruption-2675" for this suite. 10/31/23 09:57:48.088
------------------------------
â€¢ [3.414 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/apps/disruption.go:164

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] DisruptionController
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:57:44.774
    Oct 31 09:57:44.774: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename disruption 10/31/23 09:57:44.775
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:44.932
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:45.109
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] DisruptionController
      test/e2e/apps/disruption.go:72
    [It] should update/patch PodDisruptionBudget status [Conformance]
      test/e2e/apps/disruption.go:164
    STEP: Waiting for the pdb to be processed 10/31/23 09:57:45.221
    STEP: Updating PodDisruptionBudget status 10/31/23 09:57:45.312
    STEP: Waiting for all pods to be running 10/31/23 09:57:45.394
    Oct 31 09:57:45.469: INFO: running pods: 0 < 1
    STEP: locating a running pod 10/31/23 09:57:47.477
    STEP: Waiting for the pdb to be processed 10/31/23 09:57:47.713
    STEP: Patching PodDisruptionBudget status 10/31/23 09:57:47.83
    STEP: Waiting for the pdb to be processed 10/31/23 09:57:47.933
    [AfterEach] [sig-apps] DisruptionController
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:57:48.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] DisruptionController
      tear down framework | framework.go:193
    STEP: Destroying namespace "disruption-2675" for this suite. 10/31/23 09:57:48.088
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:177
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:57:48.193
Oct 31 09:57:48.194: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename daemonsets 10/31/23 09:57:48.195
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:48.354
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:48.537
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:157
[It] should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:177
STEP: Creating simple DaemonSet "daemon-set" 10/31/23 09:57:48.89
STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 09:57:48.945
Oct 31 09:57:49.013: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:57:49.013: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 09:57:50.053: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Oct 31 09:57:50.053: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 09:57:51.071: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Oct 31 09:57:51.071: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived. 10/31/23 09:57:51.125
Oct 31 09:57:51.279: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 09:57:51.279: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:57:52.346: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 09:57:52.346: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:57:53.427: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 09:57:53.427: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:57:54.329: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 09:57:54.329: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:57:55.353: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 09:57:55.354: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
Oct 31 09:57:56.417: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Oct 31 09:57:56.417: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:122
STEP: Deleting DaemonSet "daemon-set" 10/31/23 09:57:56.467
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5336, will wait for the garbage collector to delete the pods 10/31/23 09:57:56.468
Oct 31 09:57:56.703: INFO: Deleting DaemonSet.extensions daemon-set took: 81.875315ms
Oct 31 09:57:56.804: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.541515ms
Oct 31 09:57:59.286: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 09:57:59.286: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Oct 31 09:57:59.367: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25160"},"items":null}

Oct 31 09:57:59.515: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25160"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:57:59.695: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-5336" for this suite. 10/31/23 09:57:59.742
------------------------------
â€¢ [SLOW TEST] [11.603 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/apps/daemon_set.go:177

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:57:48.193
    Oct 31 09:57:48.194: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename daemonsets 10/31/23 09:57:48.195
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:48.354
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:57:48.537
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:157
    [It] should run and stop simple daemon [Conformance]
      test/e2e/apps/daemon_set.go:177
    STEP: Creating simple DaemonSet "daemon-set" 10/31/23 09:57:48.89
    STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 09:57:48.945
    Oct 31 09:57:49.013: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:57:49.013: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 09:57:50.053: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Oct 31 09:57:50.053: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 09:57:51.071: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Oct 31 09:57:51.071: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Stop a daemon pod, check that the daemon pod is revived. 10/31/23 09:57:51.125
    Oct 31 09:57:51.279: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 09:57:51.279: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:57:52.346: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 09:57:52.346: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:57:53.427: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 09:57:53.427: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:57:54.329: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 09:57:54.329: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:57:55.353: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 09:57:55.354: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n is running 0 daemon pod, expected 1
    Oct 31 09:57:56.417: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Oct 31 09:57:56.417: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:122
    STEP: Deleting DaemonSet "daemon-set" 10/31/23 09:57:56.467
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5336, will wait for the garbage collector to delete the pods 10/31/23 09:57:56.468
    Oct 31 09:57:56.703: INFO: Deleting DaemonSet.extensions daemon-set took: 81.875315ms
    Oct 31 09:57:56.804: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.541515ms
    Oct 31 09:57:59.286: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 09:57:59.286: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Oct 31 09:57:59.367: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25160"},"items":null}

    Oct 31 09:57:59.515: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25160"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:57:59.695: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-5336" for this suite. 10/31/23 09:57:59.742
  << End Captured GinkgoWriter Output
------------------------------
[sig-auth] ServiceAccounts
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:57:59.8
Oct 31 09:57:59.800: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename svcaccounts 10/31/23 09:57:59.801
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:59.988
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:00.084
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742
Oct 31 09:58:00.233: INFO: Got root ca configmap in namespace "svcaccounts-2597"
Oct 31 09:58:00.321: INFO: Deleted root ca configmap in namespace "svcaccounts-2597"
STEP: waiting for a new root ca configmap created 10/31/23 09:58:00.822
Oct 31 09:58:00.830: INFO: Recreated root ca configmap in namespace "svcaccounts-2597"
Oct 31 09:58:00.925: INFO: Updated root ca configmap in namespace "svcaccounts-2597"
STEP: waiting for the root ca configmap reconciled 10/31/23 09:58:01.426
Oct 31 09:58:01.437: INFO: Reconciled root ca configmap in namespace "svcaccounts-2597"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Oct 31 09:58:01.438: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-2597" for this suite. 10/31/23 09:58:01.504
------------------------------
â€¢ [1.719 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/auth/service_accounts.go:742

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:57:59.8
    Oct 31 09:57:59.800: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename svcaccounts 10/31/23 09:57:59.801
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:57:59.988
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:00.084
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
      test/e2e/auth/service_accounts.go:742
    Oct 31 09:58:00.233: INFO: Got root ca configmap in namespace "svcaccounts-2597"
    Oct 31 09:58:00.321: INFO: Deleted root ca configmap in namespace "svcaccounts-2597"
    STEP: waiting for a new root ca configmap created 10/31/23 09:58:00.822
    Oct 31 09:58:00.830: INFO: Recreated root ca configmap in namespace "svcaccounts-2597"
    Oct 31 09:58:00.925: INFO: Updated root ca configmap in namespace "svcaccounts-2597"
    STEP: waiting for the root ca configmap reconciled 10/31/23 09:58:01.426
    Oct 31 09:58:01.437: INFO: Reconciled root ca configmap in namespace "svcaccounts-2597"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:58:01.438: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-2597" for this suite. 10/31/23 09:58:01.504
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
[BeforeEach] [sig-api-machinery] Discovery
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:58:01.519
Oct 31 09:58:01.519: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename discovery 10/31/23 09:58:01.521
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:01.768
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:01.977
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert 10/31/23 09:58:02.181
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122
Oct 31 09:58:02.749: INFO: Checking APIGroup: apiregistration.k8s.io
Oct 31 09:58:02.840: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Oct 31 09:58:02.840: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Oct 31 09:58:02.840: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Oct 31 09:58:02.840: INFO: Checking APIGroup: apps
Oct 31 09:58:02.956: INFO: PreferredVersion.GroupVersion: apps/v1
Oct 31 09:58:02.956: INFO: Versions found [{apps/v1 v1}]
Oct 31 09:58:02.956: INFO: apps/v1 matches apps/v1
Oct 31 09:58:02.956: INFO: Checking APIGroup: events.k8s.io
Oct 31 09:58:03.106: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Oct 31 09:58:03.106: INFO: Versions found [{events.k8s.io/v1 v1}]
Oct 31 09:58:03.106: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Oct 31 09:58:03.106: INFO: Checking APIGroup: authentication.k8s.io
Oct 31 09:58:03.154: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Oct 31 09:58:03.154: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Oct 31 09:58:03.154: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Oct 31 09:58:03.154: INFO: Checking APIGroup: authorization.k8s.io
Oct 31 09:58:03.241: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Oct 31 09:58:03.241: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Oct 31 09:58:03.241: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Oct 31 09:58:03.241: INFO: Checking APIGroup: autoscaling
Oct 31 09:58:03.336: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Oct 31 09:58:03.336: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
Oct 31 09:58:03.336: INFO: autoscaling/v2 matches autoscaling/v2
Oct 31 09:58:03.337: INFO: Checking APIGroup: batch
Oct 31 09:58:03.384: INFO: PreferredVersion.GroupVersion: batch/v1
Oct 31 09:58:03.385: INFO: Versions found [{batch/v1 v1}]
Oct 31 09:58:03.385: INFO: batch/v1 matches batch/v1
Oct 31 09:58:03.385: INFO: Checking APIGroup: certificates.k8s.io
Oct 31 09:58:03.521: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Oct 31 09:58:03.521: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Oct 31 09:58:03.521: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Oct 31 09:58:03.521: INFO: Checking APIGroup: networking.k8s.io
Oct 31 09:58:03.528: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Oct 31 09:58:03.528: INFO: Versions found [{networking.k8s.io/v1 v1} {networking.k8s.io/v1alpha1 v1alpha1}]
Oct 31 09:58:03.528: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Oct 31 09:58:03.528: INFO: Checking APIGroup: policy
Oct 31 09:58:03.575: INFO: PreferredVersion.GroupVersion: policy/v1
Oct 31 09:58:03.575: INFO: Versions found [{policy/v1 v1}]
Oct 31 09:58:03.575: INFO: policy/v1 matches policy/v1
Oct 31 09:58:03.576: INFO: Checking APIGroup: rbac.authorization.k8s.io
Oct 31 09:58:03.657: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Oct 31 09:58:03.657: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Oct 31 09:58:03.657: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Oct 31 09:58:03.657: INFO: Checking APIGroup: storage.k8s.io
Oct 31 09:58:03.703: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Oct 31 09:58:03.703: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Oct 31 09:58:03.703: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Oct 31 09:58:03.703: INFO: Checking APIGroup: admissionregistration.k8s.io
Oct 31 09:58:03.755: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Oct 31 09:58:03.755: INFO: Versions found [{admissionregistration.k8s.io/v1 v1} {admissionregistration.k8s.io/v1alpha1 v1alpha1}]
Oct 31 09:58:03.756: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Oct 31 09:58:03.756: INFO: Checking APIGroup: apiextensions.k8s.io
Oct 31 09:58:03.784: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Oct 31 09:58:03.784: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Oct 31 09:58:03.784: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Oct 31 09:58:03.784: INFO: Checking APIGroup: scheduling.k8s.io
Oct 31 09:58:03.936: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Oct 31 09:58:03.936: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Oct 31 09:58:03.936: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Oct 31 09:58:03.936: INFO: Checking APIGroup: coordination.k8s.io
Oct 31 09:58:04.074: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Oct 31 09:58:04.074: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Oct 31 09:58:04.074: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Oct 31 09:58:04.074: INFO: Checking APIGroup: node.k8s.io
Oct 31 09:58:04.122: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Oct 31 09:58:04.122: INFO: Versions found [{node.k8s.io/v1 v1}]
Oct 31 09:58:04.122: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Oct 31 09:58:04.122: INFO: Checking APIGroup: discovery.k8s.io
Oct 31 09:58:04.168: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Oct 31 09:58:04.169: INFO: Versions found [{discovery.k8s.io/v1 v1}]
Oct 31 09:58:04.169: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Oct 31 09:58:04.169: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Oct 31 09:58:04.267: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
Oct 31 09:58:04.267: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
Oct 31 09:58:04.267: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
Oct 31 09:58:04.267: INFO: Checking APIGroup: internal.apiserver.k8s.io
Oct 31 09:58:04.321: INFO: PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
Oct 31 09:58:04.321: INFO: Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
Oct 31 09:58:04.321: INFO: internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
Oct 31 09:58:04.321: INFO: Checking APIGroup: resource.k8s.io
Oct 31 09:58:04.368: INFO: PreferredVersion.GroupVersion: resource.k8s.io/v1alpha1
Oct 31 09:58:04.368: INFO: Versions found [{resource.k8s.io/v1alpha1 v1alpha1}]
Oct 31 09:58:04.368: INFO: resource.k8s.io/v1alpha1 matches resource.k8s.io/v1alpha1
Oct 31 09:58:04.368: INFO: Checking APIGroup: snapshot.storage.k8s.io
Oct 31 09:58:04.457: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
Oct 31 09:58:04.457: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
Oct 31 09:58:04.457: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/node/init/init.go:32
Oct 31 09:58:04.457: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Discovery
  tear down framework | framework.go:193
STEP: Destroying namespace "discovery-5617" for this suite. 10/31/23 09:58:04.51
------------------------------
â€¢ [3.046 seconds]
[sig-api-machinery] Discovery
test/e2e/apimachinery/framework.go:23
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/apimachinery/discovery.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Discovery
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:58:01.519
    Oct 31 09:58:01.519: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename discovery 10/31/23 09:58:01.521
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:01.768
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:01.977
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Discovery
      test/e2e/apimachinery/discovery.go:43
    STEP: Setting up server cert 10/31/23 09:58:02.181
    [It] should validate PreferredVersion for each APIGroup [Conformance]
      test/e2e/apimachinery/discovery.go:122
    Oct 31 09:58:02.749: INFO: Checking APIGroup: apiregistration.k8s.io
    Oct 31 09:58:02.840: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
    Oct 31 09:58:02.840: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
    Oct 31 09:58:02.840: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
    Oct 31 09:58:02.840: INFO: Checking APIGroup: apps
    Oct 31 09:58:02.956: INFO: PreferredVersion.GroupVersion: apps/v1
    Oct 31 09:58:02.956: INFO: Versions found [{apps/v1 v1}]
    Oct 31 09:58:02.956: INFO: apps/v1 matches apps/v1
    Oct 31 09:58:02.956: INFO: Checking APIGroup: events.k8s.io
    Oct 31 09:58:03.106: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
    Oct 31 09:58:03.106: INFO: Versions found [{events.k8s.io/v1 v1}]
    Oct 31 09:58:03.106: INFO: events.k8s.io/v1 matches events.k8s.io/v1
    Oct 31 09:58:03.106: INFO: Checking APIGroup: authentication.k8s.io
    Oct 31 09:58:03.154: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
    Oct 31 09:58:03.154: INFO: Versions found [{authentication.k8s.io/v1 v1}]
    Oct 31 09:58:03.154: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
    Oct 31 09:58:03.154: INFO: Checking APIGroup: authorization.k8s.io
    Oct 31 09:58:03.241: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
    Oct 31 09:58:03.241: INFO: Versions found [{authorization.k8s.io/v1 v1}]
    Oct 31 09:58:03.241: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
    Oct 31 09:58:03.241: INFO: Checking APIGroup: autoscaling
    Oct 31 09:58:03.336: INFO: PreferredVersion.GroupVersion: autoscaling/v2
    Oct 31 09:58:03.336: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
    Oct 31 09:58:03.336: INFO: autoscaling/v2 matches autoscaling/v2
    Oct 31 09:58:03.337: INFO: Checking APIGroup: batch
    Oct 31 09:58:03.384: INFO: PreferredVersion.GroupVersion: batch/v1
    Oct 31 09:58:03.385: INFO: Versions found [{batch/v1 v1}]
    Oct 31 09:58:03.385: INFO: batch/v1 matches batch/v1
    Oct 31 09:58:03.385: INFO: Checking APIGroup: certificates.k8s.io
    Oct 31 09:58:03.521: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
    Oct 31 09:58:03.521: INFO: Versions found [{certificates.k8s.io/v1 v1}]
    Oct 31 09:58:03.521: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
    Oct 31 09:58:03.521: INFO: Checking APIGroup: networking.k8s.io
    Oct 31 09:58:03.528: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
    Oct 31 09:58:03.528: INFO: Versions found [{networking.k8s.io/v1 v1} {networking.k8s.io/v1alpha1 v1alpha1}]
    Oct 31 09:58:03.528: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
    Oct 31 09:58:03.528: INFO: Checking APIGroup: policy
    Oct 31 09:58:03.575: INFO: PreferredVersion.GroupVersion: policy/v1
    Oct 31 09:58:03.575: INFO: Versions found [{policy/v1 v1}]
    Oct 31 09:58:03.575: INFO: policy/v1 matches policy/v1
    Oct 31 09:58:03.576: INFO: Checking APIGroup: rbac.authorization.k8s.io
    Oct 31 09:58:03.657: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
    Oct 31 09:58:03.657: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
    Oct 31 09:58:03.657: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
    Oct 31 09:58:03.657: INFO: Checking APIGroup: storage.k8s.io
    Oct 31 09:58:03.703: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
    Oct 31 09:58:03.703: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
    Oct 31 09:58:03.703: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
    Oct 31 09:58:03.703: INFO: Checking APIGroup: admissionregistration.k8s.io
    Oct 31 09:58:03.755: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
    Oct 31 09:58:03.755: INFO: Versions found [{admissionregistration.k8s.io/v1 v1} {admissionregistration.k8s.io/v1alpha1 v1alpha1}]
    Oct 31 09:58:03.756: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
    Oct 31 09:58:03.756: INFO: Checking APIGroup: apiextensions.k8s.io
    Oct 31 09:58:03.784: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
    Oct 31 09:58:03.784: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
    Oct 31 09:58:03.784: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
    Oct 31 09:58:03.784: INFO: Checking APIGroup: scheduling.k8s.io
    Oct 31 09:58:03.936: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
    Oct 31 09:58:03.936: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
    Oct 31 09:58:03.936: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
    Oct 31 09:58:03.936: INFO: Checking APIGroup: coordination.k8s.io
    Oct 31 09:58:04.074: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
    Oct 31 09:58:04.074: INFO: Versions found [{coordination.k8s.io/v1 v1}]
    Oct 31 09:58:04.074: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
    Oct 31 09:58:04.074: INFO: Checking APIGroup: node.k8s.io
    Oct 31 09:58:04.122: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
    Oct 31 09:58:04.122: INFO: Versions found [{node.k8s.io/v1 v1}]
    Oct 31 09:58:04.122: INFO: node.k8s.io/v1 matches node.k8s.io/v1
    Oct 31 09:58:04.122: INFO: Checking APIGroup: discovery.k8s.io
    Oct 31 09:58:04.168: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
    Oct 31 09:58:04.169: INFO: Versions found [{discovery.k8s.io/v1 v1}]
    Oct 31 09:58:04.169: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
    Oct 31 09:58:04.169: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
    Oct 31 09:58:04.267: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
    Oct 31 09:58:04.267: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
    Oct 31 09:58:04.267: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
    Oct 31 09:58:04.267: INFO: Checking APIGroup: internal.apiserver.k8s.io
    Oct 31 09:58:04.321: INFO: PreferredVersion.GroupVersion: internal.apiserver.k8s.io/v1alpha1
    Oct 31 09:58:04.321: INFO: Versions found [{internal.apiserver.k8s.io/v1alpha1 v1alpha1}]
    Oct 31 09:58:04.321: INFO: internal.apiserver.k8s.io/v1alpha1 matches internal.apiserver.k8s.io/v1alpha1
    Oct 31 09:58:04.321: INFO: Checking APIGroup: resource.k8s.io
    Oct 31 09:58:04.368: INFO: PreferredVersion.GroupVersion: resource.k8s.io/v1alpha1
    Oct 31 09:58:04.368: INFO: Versions found [{resource.k8s.io/v1alpha1 v1alpha1}]
    Oct 31 09:58:04.368: INFO: resource.k8s.io/v1alpha1 matches resource.k8s.io/v1alpha1
    Oct 31 09:58:04.368: INFO: Checking APIGroup: snapshot.storage.k8s.io
    Oct 31 09:58:04.457: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
    Oct 31 09:58:04.457: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
    Oct 31 09:58:04.457: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
    [AfterEach] [sig-api-machinery] Discovery
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:58:04.457: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Discovery
      tear down framework | framework.go:193
    STEP: Destroying namespace "discovery-5617" for this suite. 10/31/23 09:58:04.51
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:58:04.567
Oct 31 09:58:04.567: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:58:04.568
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:04.714
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:04.873
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193
STEP: Creating a pod to test downward API volume plugin 10/31/23 09:58:04.972
Oct 31 09:58:05.078: INFO: Waiting up to 5m0s for pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81" in namespace "projected-1587" to be "Succeeded or Failed"
Oct 31 09:58:05.091: INFO: Pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81": Phase="Pending", Reason="", readiness=false. Elapsed: 13.27834ms
Oct 31 09:58:07.127: INFO: Pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81": Phase="Pending", Reason="", readiness=false. Elapsed: 2.049149782s
Oct 31 09:58:09.099: INFO: Pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021500394s
STEP: Saw pod success 10/31/23 09:58:09.099
Oct 31 09:58:09.100: INFO: Pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81" satisfied condition "Succeeded or Failed"
Oct 31 09:58:09.160: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81 container client-container: <nil>
STEP: delete the pod 10/31/23 09:58:09.302
Oct 31 09:58:09.367: INFO: Waiting for pod downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81 to disappear
Oct 31 09:58:09.453: INFO: Pod downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 09:58:09.454: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1587" for this suite. 10/31/23 09:58:09.468
------------------------------
â€¢ [4.941 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:193

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:58:04.567
    Oct 31 09:58:04.567: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:58:04.568
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:04.714
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:04.873
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide container's cpu limit [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:193
    STEP: Creating a pod to test downward API volume plugin 10/31/23 09:58:04.972
    Oct 31 09:58:05.078: INFO: Waiting up to 5m0s for pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81" in namespace "projected-1587" to be "Succeeded or Failed"
    Oct 31 09:58:05.091: INFO: Pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81": Phase="Pending", Reason="", readiness=false. Elapsed: 13.27834ms
    Oct 31 09:58:07.127: INFO: Pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81": Phase="Pending", Reason="", readiness=false. Elapsed: 2.049149782s
    Oct 31 09:58:09.099: INFO: Pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021500394s
    STEP: Saw pod success 10/31/23 09:58:09.099
    Oct 31 09:58:09.100: INFO: Pod "downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81" satisfied condition "Succeeded or Failed"
    Oct 31 09:58:09.160: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81 container client-container: <nil>
    STEP: delete the pod 10/31/23 09:58:09.302
    Oct 31 09:58:09.367: INFO: Waiting for pod downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81 to disappear
    Oct 31 09:58:09.453: INFO: Pod downwardapi-volume-229ea4cf-6acf-4ecc-93ef-baf1e05d7c81 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:58:09.454: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1587" for this suite. 10/31/23 09:58:09.468
  << End Captured GinkgoWriter Output
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:58:09.509
Oct 31 09:58:09.510: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 09:58:09.511
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:09.698
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:09.829
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477
STEP: creating a service externalname-service with the type=ExternalName in namespace services-6150 10/31/23 09:58:09.956
STEP: changing the ExternalName service to type=NodePort 10/31/23 09:58:09.982
STEP: creating replication controller externalname-service in namespace services-6150 10/31/23 09:58:10.085
I1031 09:58:10.118784      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6150, replica count: 2
I1031 09:58:13.170307      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Oct 31 09:58:13.170: INFO: Creating new exec pod
Oct 31 09:58:13.181: INFO: Waiting up to 5m0s for pod "execpodwwvqj" in namespace "services-6150" to be "running"
Oct 31 09:58:13.206: INFO: Pod "execpodwwvqj": Phase="Pending", Reason="", readiness=false. Elapsed: 25.665501ms
Oct 31 09:58:15.215: INFO: Pod "execpodwwvqj": Phase="Running", Reason="", readiness=true. Elapsed: 2.034101422s
Oct 31 09:58:15.215: INFO: Pod "execpodwwvqj" satisfied condition "running"
Oct 31 09:58:16.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6150 exec execpodwwvqj -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Oct 31 09:58:17.166: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Oct 31 09:58:17.166: INFO: stdout: ""
Oct 31 09:58:17.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6150 exec execpodwwvqj -- /bin/sh -x -c nc -v -z -w 2 10.93.203.114 80'
Oct 31 09:58:18.593: INFO: stderr: "+ nc -v -z -w 2 10.93.203.114 80\nConnection to 10.93.203.114 80 port [tcp/http] succeeded!\n"
Oct 31 09:58:18.593: INFO: stdout: ""
Oct 31 09:58:18.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6150 exec execpodwwvqj -- /bin/sh -x -c nc -v -z -w 2 10.20.4.183 31991'
Oct 31 09:58:19.429: INFO: stderr: "+ nc -v -z -w 2 10.20.4.183 31991\nConnection to 10.20.4.183 31991 port [tcp/*] succeeded!\n"
Oct 31 09:58:19.429: INFO: stdout: ""
Oct 31 09:58:19.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6150 exec execpodwwvqj -- /bin/sh -x -c nc -v -z -w 2 10.20.4.182 31991'
Oct 31 09:58:20.351: INFO: stderr: "+ nc -v -z -w 2 10.20.4.182 31991\nConnection to 10.20.4.182 31991 port [tcp/*] succeeded!\n"
Oct 31 09:58:20.351: INFO: stdout: ""
Oct 31 09:58:20.351: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 09:58:20.472: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6150" for this suite. 10/31/23 09:58:20.554
------------------------------
â€¢ [SLOW TEST] [11.100 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/network/service.go:1477

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:58:09.509
    Oct 31 09:58:09.510: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 09:58:09.511
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:09.698
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:09.829
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to NodePort [Conformance]
      test/e2e/network/service.go:1477
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-6150 10/31/23 09:58:09.956
    STEP: changing the ExternalName service to type=NodePort 10/31/23 09:58:09.982
    STEP: creating replication controller externalname-service in namespace services-6150 10/31/23 09:58:10.085
    I1031 09:58:10.118784      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-6150, replica count: 2
    I1031 09:58:13.170307      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Oct 31 09:58:13.170: INFO: Creating new exec pod
    Oct 31 09:58:13.181: INFO: Waiting up to 5m0s for pod "execpodwwvqj" in namespace "services-6150" to be "running"
    Oct 31 09:58:13.206: INFO: Pod "execpodwwvqj": Phase="Pending", Reason="", readiness=false. Elapsed: 25.665501ms
    Oct 31 09:58:15.215: INFO: Pod "execpodwwvqj": Phase="Running", Reason="", readiness=true. Elapsed: 2.034101422s
    Oct 31 09:58:15.215: INFO: Pod "execpodwwvqj" satisfied condition "running"
    Oct 31 09:58:16.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6150 exec execpodwwvqj -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Oct 31 09:58:17.166: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Oct 31 09:58:17.166: INFO: stdout: ""
    Oct 31 09:58:17.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6150 exec execpodwwvqj -- /bin/sh -x -c nc -v -z -w 2 10.93.203.114 80'
    Oct 31 09:58:18.593: INFO: stderr: "+ nc -v -z -w 2 10.93.203.114 80\nConnection to 10.93.203.114 80 port [tcp/http] succeeded!\n"
    Oct 31 09:58:18.593: INFO: stdout: ""
    Oct 31 09:58:18.593: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6150 exec execpodwwvqj -- /bin/sh -x -c nc -v -z -w 2 10.20.4.183 31991'
    Oct 31 09:58:19.429: INFO: stderr: "+ nc -v -z -w 2 10.20.4.183 31991\nConnection to 10.20.4.183 31991 port [tcp/*] succeeded!\n"
    Oct 31 09:58:19.429: INFO: stdout: ""
    Oct 31 09:58:19.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6150 exec execpodwwvqj -- /bin/sh -x -c nc -v -z -w 2 10.20.4.182 31991'
    Oct 31 09:58:20.351: INFO: stderr: "+ nc -v -z -w 2 10.20.4.182 31991\nConnection to 10.20.4.182 31991 port [tcp/*] succeeded!\n"
    Oct 31 09:58:20.351: INFO: stdout: ""
    Oct 31 09:58:20.351: INFO: Cleaning up the ExternalName to NodePort test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:58:20.472: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6150" for this suite. 10/31/23 09:58:20.554
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:58:20.61
Oct 31 09:58:20.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 09:58:20.612
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:20.839
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:20.941
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89
STEP: Creating configMap with name projected-configmap-test-volume-map-9282eb39-2287-41df-98e3-781a4f7507ad 10/31/23 09:58:21.038
STEP: Creating a pod to test consume configMaps 10/31/23 09:58:21.131
Oct 31 09:58:21.196: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb" in namespace "projected-6480" to be "Succeeded or Failed"
Oct 31 09:58:21.209: INFO: Pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb": Phase="Pending", Reason="", readiness=false. Elapsed: 12.471083ms
Oct 31 09:58:23.258: INFO: Pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.061664202s
Oct 31 09:58:25.217: INFO: Pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021185171s
STEP: Saw pod success 10/31/23 09:58:25.217
Oct 31 09:58:25.218: INFO: Pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb" satisfied condition "Succeeded or Failed"
Oct 31 09:58:25.267: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb container agnhost-container: <nil>
STEP: delete the pod 10/31/23 09:58:25.593
Oct 31 09:58:25.697: INFO: Waiting for pod pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb to disappear
Oct 31 09:58:25.791: INFO: Pod pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Oct 31 09:58:25.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6480" for this suite. 10/31/23 09:58:25.804
------------------------------
â€¢ [SLOW TEST] [5.299 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:58:20.61
    Oct 31 09:58:20.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 09:58:20.612
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:20.839
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:20.941
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:89
    STEP: Creating configMap with name projected-configmap-test-volume-map-9282eb39-2287-41df-98e3-781a4f7507ad 10/31/23 09:58:21.038
    STEP: Creating a pod to test consume configMaps 10/31/23 09:58:21.131
    Oct 31 09:58:21.196: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb" in namespace "projected-6480" to be "Succeeded or Failed"
    Oct 31 09:58:21.209: INFO: Pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb": Phase="Pending", Reason="", readiness=false. Elapsed: 12.471083ms
    Oct 31 09:58:23.258: INFO: Pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.061664202s
    Oct 31 09:58:25.217: INFO: Pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021185171s
    STEP: Saw pod success 10/31/23 09:58:25.217
    Oct 31 09:58:25.218: INFO: Pod "pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb" satisfied condition "Succeeded or Failed"
    Oct 31 09:58:25.267: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 09:58:25.593
    Oct 31 09:58:25.697: INFO: Waiting for pod pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb to disappear
    Oct 31 09:58:25.791: INFO: Pod pod-projected-configmaps-8f84af76-e7b8-4458-a12f-d1566bf765cb no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:58:25.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6480" for this suite. 10/31/23 09:58:25.804
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:224
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:58:25.914
Oct 31 09:58:25.914: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-preemption 10/31/23 09:58:25.915
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:26.061
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:26.164
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Oct 31 09:58:26.533: INFO: Waiting up to 1m0s for all nodes to be ready
Oct 31 09:59:26.810: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:224
STEP: Create pods that use 4/5 of node resources. 10/31/23 09:59:26.841
Oct 31 09:59:26.940: INFO: Created pod: pod0-0-sched-preemption-low-priority
Oct 31 09:59:26.995: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Oct 31 09:59:27.054: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Oct 31 09:59:27.116: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Oct 31 09:59:27.223: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Oct 31 09:59:27.271: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 10/31/23 09:59:27.271
Oct 31 09:59:27.274: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-2410" to be "running"
Oct 31 09:59:27.311: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 36.541713ms
Oct 31 09:59:29.327: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.052728799s
Oct 31 09:59:29.327: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Oct 31 09:59:29.327: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
Oct 31 09:59:29.411: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 83.533941ms
Oct 31 09:59:29.411: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Oct 31 09:59:29.411: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
Oct 31 09:59:29.462: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 50.886858ms
Oct 31 09:59:29.462: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Oct 31 09:59:29.462: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
Oct 31 09:59:29.513: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 50.686005ms
Oct 31 09:59:29.513: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
Oct 31 09:59:29.513: INFO: Waiting up to 5m0s for pod "pod2-0-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
Oct 31 09:59:29.604: INFO: Pod "pod2-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 90.705513ms
Oct 31 09:59:29.604: INFO: Pod "pod2-0-sched-preemption-medium-priority" satisfied condition "running"
Oct 31 09:59:29.604: INFO: Waiting up to 5m0s for pod "pod2-1-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
Oct 31 09:59:29.701: INFO: Pod "pod2-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 97.469052ms
Oct 31 09:59:29.702: INFO: Pod "pod2-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a critical pod that use same resources as that of a lower priority pod 10/31/23 09:59:29.702
Oct 31 09:59:29.758: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
Oct 31 09:59:29.790: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 32.836929ms
Oct 31 09:59:31.832: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.074579237s
Oct 31 09:59:33.799: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.040931632s
Oct 31 09:59:33.799: INFO: Pod "critical-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 09:59:34.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-2410" for this suite. 10/31/23 09:59:34.826
------------------------------
â€¢ [SLOW TEST] [68.950 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/scheduling/preemption.go:224

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:58:25.914
    Oct 31 09:58:25.914: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-preemption 10/31/23 09:58:25.915
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:58:26.061
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:58:26.164
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Oct 31 09:58:26.533: INFO: Waiting up to 1m0s for all nodes to be ready
    Oct 31 09:59:26.810: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates lower priority pod preemption by critical pod [Conformance]
      test/e2e/scheduling/preemption.go:224
    STEP: Create pods that use 4/5 of node resources. 10/31/23 09:59:26.841
    Oct 31 09:59:26.940: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Oct 31 09:59:26.995: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Oct 31 09:59:27.054: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Oct 31 09:59:27.116: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    Oct 31 09:59:27.223: INFO: Created pod: pod2-0-sched-preemption-medium-priority
    Oct 31 09:59:27.271: INFO: Created pod: pod2-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 10/31/23 09:59:27.271
    Oct 31 09:59:27.274: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-2410" to be "running"
    Oct 31 09:59:27.311: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 36.541713ms
    Oct 31 09:59:29.327: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.052728799s
    Oct 31 09:59:29.327: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Oct 31 09:59:29.327: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
    Oct 31 09:59:29.411: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 83.533941ms
    Oct 31 09:59:29.411: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Oct 31 09:59:29.411: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
    Oct 31 09:59:29.462: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 50.886858ms
    Oct 31 09:59:29.462: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Oct 31 09:59:29.462: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
    Oct 31 09:59:29.513: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 50.686005ms
    Oct 31 09:59:29.513: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    Oct 31 09:59:29.513: INFO: Waiting up to 5m0s for pod "pod2-0-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
    Oct 31 09:59:29.604: INFO: Pod "pod2-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 90.705513ms
    Oct 31 09:59:29.604: INFO: Pod "pod2-0-sched-preemption-medium-priority" satisfied condition "running"
    Oct 31 09:59:29.604: INFO: Waiting up to 5m0s for pod "pod2-1-sched-preemption-medium-priority" in namespace "sched-preemption-2410" to be "running"
    Oct 31 09:59:29.701: INFO: Pod "pod2-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 97.469052ms
    Oct 31 09:59:29.702: INFO: Pod "pod2-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a critical pod that use same resources as that of a lower priority pod 10/31/23 09:59:29.702
    Oct 31 09:59:29.758: INFO: Waiting up to 2m0s for pod "critical-pod" in namespace "kube-system" to be "running"
    Oct 31 09:59:29.790: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 32.836929ms
    Oct 31 09:59:31.832: INFO: Pod "critical-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.074579237s
    Oct 31 09:59:33.799: INFO: Pod "critical-pod": Phase="Running", Reason="", readiness=true. Elapsed: 4.040931632s
    Oct 31 09:59:33.799: INFO: Pod "critical-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:59:34.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-2410" for this suite. 10/31/23 09:59:34.826
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:59:34.865
Oct 31 09:59:34.865: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 09:59:34.866
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:59:35.103
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:59:35.28
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/kubectl/kubectl.go:1250
STEP: validating cluster-info 10/31/23 09:59:35.336
Oct 31 09:59:35.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-1538 cluster-info'
Oct 31 09:59:35.539: INFO: stderr: ""
Oct 31 09:59:35.539: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.93.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 09:59:35.539: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-1538" for this suite. 10/31/23 09:59:35.59
------------------------------
â€¢ [0.779 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl cluster-info
  test/e2e/kubectl/kubectl.go:1244
    should check if Kubernetes control plane services is included in cluster-info  [Conformance]
    test/e2e/kubectl/kubectl.go:1250

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:59:34.865
    Oct 31 09:59:34.865: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 09:59:34.866
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:59:35.103
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:59:35.28
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
      test/e2e/kubectl/kubectl.go:1250
    STEP: validating cluster-info 10/31/23 09:59:35.336
    Oct 31 09:59:35.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-1538 cluster-info'
    Oct 31 09:59:35.539: INFO: stderr: ""
    Oct 31 09:59:35.539: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.93.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:59:35.539: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-1538" for this suite. 10/31/23 09:59:35.59
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo
  should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:59:35.645
Oct 31 09:59:35.645: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 09:59:35.646
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:59:35.839
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:59:35.992
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:326
[It] should scale a replication controller  [Conformance]
  test/e2e/kubectl/kubectl.go:352
STEP: creating a replication controller 10/31/23 09:59:36.057
Oct 31 09:59:36.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 create -f -'
Oct 31 09:59:37.782: INFO: stderr: ""
Oct 31 09:59:37.782: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up. 10/31/23 09:59:37.782
Oct 31 09:59:37.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Oct 31 09:59:37.980: INFO: stderr: ""
Oct 31 09:59:37.980: INFO: stdout: "update-demo-nautilus-d44f2 update-demo-nautilus-jl9gz "
Oct 31 09:59:37.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:59:38.175: INFO: stderr: ""
Oct 31 09:59:38.175: INFO: stdout: ""
Oct 31 09:59:38.175: INFO: update-demo-nautilus-d44f2 is created but not running
Oct 31 09:59:43.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Oct 31 09:59:43.353: INFO: stderr: ""
Oct 31 09:59:43.353: INFO: stdout: "update-demo-nautilus-d44f2 update-demo-nautilus-jl9gz "
Oct 31 09:59:43.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:59:43.547: INFO: stderr: ""
Oct 31 09:59:43.547: INFO: stdout: "true"
Oct 31 09:59:43.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Oct 31 09:59:43.672: INFO: stderr: ""
Oct 31 09:59:43.672: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Oct 31 09:59:43.672: INFO: validating pod update-demo-nautilus-d44f2
Oct 31 09:59:43.885: INFO: got data: {
  "image": "nautilus.jpg"
}

Oct 31 09:59:43.885: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Oct 31 09:59:43.885: INFO: update-demo-nautilus-d44f2 is verified up and running
Oct 31 09:59:43.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-jl9gz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:59:44.035: INFO: stderr: ""
Oct 31 09:59:44.035: INFO: stdout: "true"
Oct 31 09:59:44.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-jl9gz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Oct 31 09:59:44.229: INFO: stderr: ""
Oct 31 09:59:44.229: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Oct 31 09:59:44.229: INFO: validating pod update-demo-nautilus-jl9gz
Oct 31 09:59:44.375: INFO: got data: {
  "image": "nautilus.jpg"
}

Oct 31 09:59:44.375: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Oct 31 09:59:44.375: INFO: update-demo-nautilus-jl9gz is verified up and running
STEP: scaling down the replication controller 10/31/23 09:59:44.375
Oct 31 09:59:44.378: INFO: scanned /root for discovery docs: <nil>
Oct 31 09:59:44.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Oct 31 09:59:44.740: INFO: stderr: ""
Oct 31 09:59:44.740: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 10/31/23 09:59:44.74
Oct 31 09:59:44.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Oct 31 09:59:45.051: INFO: stderr: ""
Oct 31 09:59:45.051: INFO: stdout: "update-demo-nautilus-d44f2 update-demo-nautilus-jl9gz "
STEP: Replicas for name=update-demo: expected=1 actual=2 10/31/23 09:59:45.051
Oct 31 09:59:50.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Oct 31 09:59:50.234: INFO: stderr: ""
Oct 31 09:59:50.234: INFO: stdout: "update-demo-nautilus-d44f2 "
Oct 31 09:59:50.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:59:50.455: INFO: stderr: ""
Oct 31 09:59:50.455: INFO: stdout: "true"
Oct 31 09:59:50.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Oct 31 09:59:50.645: INFO: stderr: ""
Oct 31 09:59:50.645: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Oct 31 09:59:50.645: INFO: validating pod update-demo-nautilus-d44f2
Oct 31 09:59:50.778: INFO: got data: {
  "image": "nautilus.jpg"
}

Oct 31 09:59:50.778: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Oct 31 09:59:50.778: INFO: update-demo-nautilus-d44f2 is verified up and running
STEP: scaling up the replication controller 10/31/23 09:59:50.778
Oct 31 09:59:50.780: INFO: scanned /root for discovery docs: <nil>
Oct 31 09:59:50.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Oct 31 09:59:52.065: INFO: stderr: ""
Oct 31 09:59:52.065: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up. 10/31/23 09:59:52.065
Oct 31 09:59:52.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Oct 31 09:59:52.236: INFO: stderr: ""
Oct 31 09:59:52.236: INFO: stdout: "update-demo-nautilus-d44f2 update-demo-nautilus-mtr7h "
Oct 31 09:59:52.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:59:52.366: INFO: stderr: ""
Oct 31 09:59:52.366: INFO: stdout: "true"
Oct 31 09:59:52.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Oct 31 09:59:52.597: INFO: stderr: ""
Oct 31 09:59:52.597: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Oct 31 09:59:52.597: INFO: validating pod update-demo-nautilus-d44f2
Oct 31 09:59:52.728: INFO: got data: {
  "image": "nautilus.jpg"
}

Oct 31 09:59:52.728: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Oct 31 09:59:52.728: INFO: update-demo-nautilus-d44f2 is verified up and running
Oct 31 09:59:52.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-mtr7h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Oct 31 09:59:52.913: INFO: stderr: ""
Oct 31 09:59:52.913: INFO: stdout: "true"
Oct 31 09:59:52.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-mtr7h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Oct 31 09:59:53.114: INFO: stderr: ""
Oct 31 09:59:53.114: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
Oct 31 09:59:53.114: INFO: validating pod update-demo-nautilus-mtr7h
Oct 31 09:59:53.273: INFO: got data: {
  "image": "nautilus.jpg"
}

Oct 31 09:59:53.273: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Oct 31 09:59:53.273: INFO: update-demo-nautilus-mtr7h is verified up and running
STEP: using delete to clean up resources 10/31/23 09:59:53.273
Oct 31 09:59:53.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 delete --grace-period=0 --force -f -'
Oct 31 09:59:53.504: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Oct 31 09:59:53.504: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Oct 31 09:59:53.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get rc,svc -l name=update-demo --no-headers'
Oct 31 09:59:53.738: INFO: stderr: "No resources found in kubectl-9150 namespace.\n"
Oct 31 09:59:53.738: INFO: stdout: ""
Oct 31 09:59:53.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Oct 31 09:59:53.880: INFO: stderr: ""
Oct 31 09:59:53.880: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 09:59:53.880: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9150" for this suite. 10/31/23 09:59:53.976
------------------------------
â€¢ [SLOW TEST] [18.385 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:324
    should scale a replication controller  [Conformance]
    test/e2e/kubectl/kubectl.go:352

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:59:35.645
    Oct 31 09:59:35.645: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 09:59:35.646
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:59:35.839
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:59:35.992
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Update Demo
      test/e2e/kubectl/kubectl.go:326
    [It] should scale a replication controller  [Conformance]
      test/e2e/kubectl/kubectl.go:352
    STEP: creating a replication controller 10/31/23 09:59:36.057
    Oct 31 09:59:36.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 create -f -'
    Oct 31 09:59:37.782: INFO: stderr: ""
    Oct 31 09:59:37.782: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 10/31/23 09:59:37.782
    Oct 31 09:59:37.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Oct 31 09:59:37.980: INFO: stderr: ""
    Oct 31 09:59:37.980: INFO: stdout: "update-demo-nautilus-d44f2 update-demo-nautilus-jl9gz "
    Oct 31 09:59:37.980: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:59:38.175: INFO: stderr: ""
    Oct 31 09:59:38.175: INFO: stdout: ""
    Oct 31 09:59:38.175: INFO: update-demo-nautilus-d44f2 is created but not running
    Oct 31 09:59:43.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Oct 31 09:59:43.353: INFO: stderr: ""
    Oct 31 09:59:43.353: INFO: stdout: "update-demo-nautilus-d44f2 update-demo-nautilus-jl9gz "
    Oct 31 09:59:43.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:59:43.547: INFO: stderr: ""
    Oct 31 09:59:43.547: INFO: stdout: "true"
    Oct 31 09:59:43.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Oct 31 09:59:43.672: INFO: stderr: ""
    Oct 31 09:59:43.672: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Oct 31 09:59:43.672: INFO: validating pod update-demo-nautilus-d44f2
    Oct 31 09:59:43.885: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Oct 31 09:59:43.885: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Oct 31 09:59:43.885: INFO: update-demo-nautilus-d44f2 is verified up and running
    Oct 31 09:59:43.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-jl9gz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:59:44.035: INFO: stderr: ""
    Oct 31 09:59:44.035: INFO: stdout: "true"
    Oct 31 09:59:44.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-jl9gz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Oct 31 09:59:44.229: INFO: stderr: ""
    Oct 31 09:59:44.229: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Oct 31 09:59:44.229: INFO: validating pod update-demo-nautilus-jl9gz
    Oct 31 09:59:44.375: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Oct 31 09:59:44.375: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Oct 31 09:59:44.375: INFO: update-demo-nautilus-jl9gz is verified up and running
    STEP: scaling down the replication controller 10/31/23 09:59:44.375
    Oct 31 09:59:44.378: INFO: scanned /root for discovery docs: <nil>
    Oct 31 09:59:44.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
    Oct 31 09:59:44.740: INFO: stderr: ""
    Oct 31 09:59:44.740: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 10/31/23 09:59:44.74
    Oct 31 09:59:44.740: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Oct 31 09:59:45.051: INFO: stderr: ""
    Oct 31 09:59:45.051: INFO: stdout: "update-demo-nautilus-d44f2 update-demo-nautilus-jl9gz "
    STEP: Replicas for name=update-demo: expected=1 actual=2 10/31/23 09:59:45.051
    Oct 31 09:59:50.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Oct 31 09:59:50.234: INFO: stderr: ""
    Oct 31 09:59:50.234: INFO: stdout: "update-demo-nautilus-d44f2 "
    Oct 31 09:59:50.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:59:50.455: INFO: stderr: ""
    Oct 31 09:59:50.455: INFO: stdout: "true"
    Oct 31 09:59:50.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Oct 31 09:59:50.645: INFO: stderr: ""
    Oct 31 09:59:50.645: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Oct 31 09:59:50.645: INFO: validating pod update-demo-nautilus-d44f2
    Oct 31 09:59:50.778: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Oct 31 09:59:50.778: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Oct 31 09:59:50.778: INFO: update-demo-nautilus-d44f2 is verified up and running
    STEP: scaling up the replication controller 10/31/23 09:59:50.778
    Oct 31 09:59:50.780: INFO: scanned /root for discovery docs: <nil>
    Oct 31 09:59:50.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
    Oct 31 09:59:52.065: INFO: stderr: ""
    Oct 31 09:59:52.065: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
    STEP: waiting for all containers in name=update-demo pods to come up. 10/31/23 09:59:52.065
    Oct 31 09:59:52.065: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
    Oct 31 09:59:52.236: INFO: stderr: ""
    Oct 31 09:59:52.236: INFO: stdout: "update-demo-nautilus-d44f2 update-demo-nautilus-mtr7h "
    Oct 31 09:59:52.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:59:52.366: INFO: stderr: ""
    Oct 31 09:59:52.366: INFO: stdout: "true"
    Oct 31 09:59:52.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-d44f2 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Oct 31 09:59:52.597: INFO: stderr: ""
    Oct 31 09:59:52.597: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Oct 31 09:59:52.597: INFO: validating pod update-demo-nautilus-d44f2
    Oct 31 09:59:52.728: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Oct 31 09:59:52.728: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Oct 31 09:59:52.728: INFO: update-demo-nautilus-d44f2 is verified up and running
    Oct 31 09:59:52.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-mtr7h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
    Oct 31 09:59:52.913: INFO: stderr: ""
    Oct 31 09:59:52.913: INFO: stdout: "true"
    Oct 31 09:59:52.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods update-demo-nautilus-mtr7h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
    Oct 31 09:59:53.114: INFO: stderr: ""
    Oct 31 09:59:53.114: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
    Oct 31 09:59:53.114: INFO: validating pod update-demo-nautilus-mtr7h
    Oct 31 09:59:53.273: INFO: got data: {
      "image": "nautilus.jpg"
    }

    Oct 31 09:59:53.273: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
    Oct 31 09:59:53.273: INFO: update-demo-nautilus-mtr7h is verified up and running
    STEP: using delete to clean up resources 10/31/23 09:59:53.273
    Oct 31 09:59:53.273: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 delete --grace-period=0 --force -f -'
    Oct 31 09:59:53.504: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Oct 31 09:59:53.504: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
    Oct 31 09:59:53.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get rc,svc -l name=update-demo --no-headers'
    Oct 31 09:59:53.738: INFO: stderr: "No resources found in kubectl-9150 namespace.\n"
    Oct 31 09:59:53.738: INFO: stdout: ""
    Oct 31 09:59:53.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9150 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Oct 31 09:59:53.880: INFO: stderr: ""
    Oct 31 09:59:53.880: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 09:59:53.880: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9150" for this suite. 10/31/23 09:59:53.976
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 09:59:54.03
Oct 31 09:59:54.030: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:59:54.031
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:59:54.284
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:59:54.449
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 10/31/23 09:59:54.557
Oct 31 09:59:54.558: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:00:02.421: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:00:22.440: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-8059" for this suite. 10/31/23 10:00:22.594
------------------------------
â€¢ [SLOW TEST] [28.664 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 09:59:54.03
    Oct 31 09:59:54.030: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 09:59:54.031
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 09:59:54.284
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 09:59:54.449
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of different groups [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:276
    STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation 10/31/23 09:59:54.557
    Oct 31 09:59:54.558: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:00:02.421: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:00:22.440: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-8059" for this suite. 10/31/23 10:00:22.594
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:00:22.711
Oct 31 10:00:22.711: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename init-container 10/31/23 10:00:22.712
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:22.851
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:22.987
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458
STEP: creating the pod 10/31/23 10:00:23.039
Oct 31 10:00:23.039: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:00:27.185: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-8370" for this suite. 10/31/23 10:00:27.241
------------------------------
â€¢ [4.609 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/common/node/init_container.go:458

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:00:22.711
    Oct 31 10:00:22.711: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename init-container 10/31/23 10:00:22.712
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:22.851
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:22.987
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
      test/e2e/common/node/init_container.go:458
    STEP: creating the pod 10/31/23 10:00:23.039
    Oct 31 10:00:23.039: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:00:27.185: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-8370" for this suite. 10/31/23 10:00:27.241
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:00:27.325
Oct 31 10:00:27.325: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 10:00:27.327
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:27.532
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:27.666
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 10:00:27.917
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:00:28.774
STEP: Deploying the webhook pod 10/31/23 10:00:28.792
STEP: Wait for the deployment to be ready 10/31/23 10:00:28.822
Oct 31 10:00:28.964: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service 10/31/23 10:00:31.077
STEP: Verifying the service has paired with the endpoint 10/31/23 10:00:31.145
Oct 31 10:00:32.146: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 10/31/23 10:00:32.153
STEP: create a configmap that should be updated by the webhook 10/31/23 10:00:33.387
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:00:33.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-6766" for this suite. 10/31/23 10:00:34.118
STEP: Destroying namespace "webhook-6766-markers" for this suite. 10/31/23 10:00:34.174
------------------------------
â€¢ [SLOW TEST] [6.924 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate configmap [Conformance]
  test/e2e/apimachinery/webhook.go:252

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:00:27.325
    Oct 31 10:00:27.325: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 10:00:27.327
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:27.532
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:27.666
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 10:00:27.917
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:00:28.774
    STEP: Deploying the webhook pod 10/31/23 10:00:28.792
    STEP: Wait for the deployment to be ready 10/31/23 10:00:28.822
    Oct 31 10:00:28.964: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
    STEP: Deploying the webhook service 10/31/23 10:00:31.077
    STEP: Verifying the service has paired with the endpoint 10/31/23 10:00:31.145
    Oct 31 10:00:32.146: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate configmap [Conformance]
      test/e2e/apimachinery/webhook.go:252
    STEP: Registering the mutating configmap webhook via the AdmissionRegistration API 10/31/23 10:00:32.153
    STEP: create a configmap that should be updated by the webhook 10/31/23 10:00:33.387
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:00:33.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-6766" for this suite. 10/31/23 10:00:34.118
    STEP: Destroying namespace "webhook-6766-markers" for this suite. 10/31/23 10:00:34.174
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:00:34.261
Oct 31 10:00:34.262: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename proxy 10/31/23 10:00:34.264
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:34.444
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:34.579
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/network/proxy.go:286
Oct 31 10:00:34.718: INFO: Creating pod...
Oct 31 10:00:34.735: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-7312" to be "running"
Oct 31 10:00:34.789: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 54.859108ms
Oct 31 10:00:36.798: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.063295531s
Oct 31 10:00:36.798: INFO: Pod "agnhost" satisfied condition "running"
Oct 31 10:00:36.798: INFO: Creating service...
Oct 31 10:00:36.859: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/DELETE
Oct 31 10:00:37.068: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Oct 31 10:00:37.068: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/GET
Oct 31 10:00:37.248: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Oct 31 10:00:37.248: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/HEAD
Oct 31 10:00:37.428: INFO: http.Client request:HEAD | StatusCode:200
Oct 31 10:00:37.428: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/OPTIONS
Oct 31 10:00:37.517: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Oct 31 10:00:37.517: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/PATCH
Oct 31 10:00:37.693: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Oct 31 10:00:37.693: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/POST
Oct 31 10:00:37.793: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Oct 31 10:00:37.793: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/PUT
Oct 31 10:00:37.929: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Oct 31 10:00:37.929: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/DELETE
Oct 31 10:00:38.060: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Oct 31 10:00:38.060: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/GET
Oct 31 10:00:38.192: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Oct 31 10:00:38.193: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/HEAD
Oct 31 10:00:38.344: INFO: http.Client request:HEAD | StatusCode:200
Oct 31 10:00:38.344: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/OPTIONS
Oct 31 10:00:38.440: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Oct 31 10:00:38.441: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/PATCH
Oct 31 10:00:38.577: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Oct 31 10:00:38.577: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/POST
Oct 31 10:00:38.662: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Oct 31 10:00:38.662: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/PUT
Oct 31 10:00:38.765: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Oct 31 10:00:38.766: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-7312" for this suite. 10/31/23 10:00:38.831
------------------------------
â€¢ [4.621 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
    test/e2e/network/proxy.go:286

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:00:34.261
    Oct 31 10:00:34.262: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename proxy 10/31/23 10:00:34.264
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:34.444
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:34.579
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
      test/e2e/network/proxy.go:286
    Oct 31 10:00:34.718: INFO: Creating pod...
    Oct 31 10:00:34.735: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-7312" to be "running"
    Oct 31 10:00:34.789: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 54.859108ms
    Oct 31 10:00:36.798: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.063295531s
    Oct 31 10:00:36.798: INFO: Pod "agnhost" satisfied condition "running"
    Oct 31 10:00:36.798: INFO: Creating service...
    Oct 31 10:00:36.859: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/DELETE
    Oct 31 10:00:37.068: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Oct 31 10:00:37.068: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/GET
    Oct 31 10:00:37.248: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Oct 31 10:00:37.248: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/HEAD
    Oct 31 10:00:37.428: INFO: http.Client request:HEAD | StatusCode:200
    Oct 31 10:00:37.428: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/OPTIONS
    Oct 31 10:00:37.517: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Oct 31 10:00:37.517: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/PATCH
    Oct 31 10:00:37.693: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Oct 31 10:00:37.693: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/POST
    Oct 31 10:00:37.793: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Oct 31 10:00:37.793: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/pods/agnhost/proxy/some/path/with/PUT
    Oct 31 10:00:37.929: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Oct 31 10:00:37.929: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/DELETE
    Oct 31 10:00:38.060: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Oct 31 10:00:38.060: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/GET
    Oct 31 10:00:38.192: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
    Oct 31 10:00:38.193: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/HEAD
    Oct 31 10:00:38.344: INFO: http.Client request:HEAD | StatusCode:200
    Oct 31 10:00:38.344: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/OPTIONS
    Oct 31 10:00:38.440: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Oct 31 10:00:38.441: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/PATCH
    Oct 31 10:00:38.577: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Oct 31 10:00:38.577: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/POST
    Oct 31 10:00:38.662: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Oct 31 10:00:38.662: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-7312/services/test-service/proxy/some/path/with/PUT
    Oct 31 10:00:38.765: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:00:38.766: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-7312" for this suite. 10/31/23 10:00:38.831
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:00:38.89
Oct 31 10:00:38.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:00:38.891
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:39.124
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:39.275
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/kubectl/kubectl.go:1276
Oct 31 10:00:39.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 create -f -'
Oct 31 10:00:40.253: INFO: stderr: ""
Oct 31 10:00:40.253: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Oct 31 10:00:40.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 create -f -'
Oct 31 10:00:41.380: INFO: stderr: ""
Oct 31 10:00:41.380: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 10/31/23 10:00:41.38
Oct 31 10:00:42.394: INFO: Selector matched 1 pods for map[app:agnhost]
Oct 31 10:00:42.394: INFO: Found 1 / 1
Oct 31 10:00:42.394: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Oct 31 10:00:42.478: INFO: Selector matched 1 pods for map[app:agnhost]
Oct 31 10:00:42.479: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Oct 31 10:00:42.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe pod agnhost-primary-6t72g'
Oct 31 10:00:42.836: INFO: stderr: ""
Oct 31 10:00:42.836: INFO: stdout: "Name:             agnhost-primary-6t72g\nNamespace:        kubectl-8288\nPriority:         0\nService Account:  default\nNode:             pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n/10.20.4.182\nStart Time:       Tue, 31 Oct 2023 10:00:40 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.200.2.132\nIPs:\n  IP:           10.200.2.132\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://c1fa73699fa204c47e093457b3cd6b68141f89256a906d4cb3815603276c01ab\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 31 Oct 2023 10:00:41 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-t88f7 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-t88f7:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-8288/agnhost-primary-6t72g to pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Oct 31 10:00:42.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe rc agnhost-primary'
Oct 31 10:00:43.163: INFO: stderr: ""
Oct 31 10:00:43.163: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8288\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-6t72g\n"
Oct 31 10:00:43.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe service agnhost-primary'
Oct 31 10:00:43.643: INFO: stderr: ""
Oct 31 10:00:43.643: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-8288\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.93.106.67\nIPs:               10.93.106.67\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.200.2.132:6379\nSession Affinity:  None\nEvents:            <none>\n"
Oct 31 10:00:43.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz'
Oct 31 10:00:44.258: INFO: stderr: ""
Oct 31 10:00:44.258: INFO: stdout: "Name:               pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=nix.2c_2g\n                    beta.kubernetes.io/os=linux\n                    bke.bizflycloud.vn/node-category=premium\n                    bke.bizflycloud.vn/node-id=5e7056b6-4e34-42d4-8726-011ff86906f0\n                    bke.bizflycloud.vn/node-name=pool-4a0or6em-hvylrntrzm4xjw3t-node-G2JWpkCz\n                    bke.bizflycloud.vn/pool-id=6540c09e738807f46a925be4\n                    bke.bizflycloud.vn/pool-name=pool-4a0or6em\n                    bke.bizflycloud.vn/vpc-network-id=e84362d6-0632-4950-87ac-e7bc7d74be6d\n                    bke.bizflycloud.vn/vpc-subnet-id=9f30f882-8420-4c1a-b384-d2cf3c30817e\n                    failure-domain.beta.kubernetes.io/region=HN\n                    failure-domain.beta.kubernetes.io/zone=HN1\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=nix.2c_2g\n                    topology.kubernetes.io/region=HN\n                    topology.kubernetes.io/zone=HN1\n                    topology.volume.csi.bizflycloud.vn/zone=HN1\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 10.20.4.137\n                    csi.volume.kubernetes.io/nodeid: {\"volume.csi.bizflycloud.vn\":\"cff17711-1467-4b0a-a633-c8c5e68a9179\"}\n                    kube-router.io/bgp-local-addresses: 0.0.0.0\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 31 Oct 2023 08:57:00 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 31 Oct 2023 10:00:35 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Tue, 31 Oct 2023 09:55:40 +0000   Tue, 31 Oct 2023 08:57:00 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Tue, 31 Oct 2023 09:55:40 +0000   Tue, 31 Oct 2023 08:57:00 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Tue, 31 Oct 2023 09:55:40 +0000   Tue, 31 Oct 2023 08:57:00 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Tue, 31 Oct 2023 09:55:40 +0000   Tue, 31 Oct 2023 08:57:10 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.20.4.137\n  ExternalIP:  103.56.158.63\n  Hostname:    pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      50633164Ki\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 2030644Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    1930m\n  ephemeral-storage:      46663523866\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 1420340Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 c2831ab577b147ac96b8e26b919d75d5\n  System UUID:                cff17711-1467-4b0a-a633-c8c5e68a9179\n  Boot ID:                    96ff2a2f-dbcf-4e1d-ad9d-a3d879d85341\n  Kernel Version:             5.4.0-113-generic\n  OS Image:                   Ubuntu 20.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.22\n  Kubelet Version:            v1.26.9\n  Kube-Proxy Version:         v1.26.9\nPodCIDR:                      10.200.1.0/24\nPodCIDRs:                     10.200.1.0/24\nProviderID:                   bizflycloud://cff17711-1467-4b0a-a633-c8c5e68a9179\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-7d6446f647-hz5j8                                   100m (5%)     0 (0%)      70Mi (5%)        170Mi (12%)    64m\n  kube-system                 csi-bizflycloud-nodeplugin-xkt2t                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         63m\n  kube-system                 kube-router-jdd2v                                          250m (12%)    0 (0%)      250Mi (18%)      0 (0%)         63m\n  proxy-7312                  agnhost                                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         10s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv    0 (0%)        0 (0%)      0 (0%)           0 (0%)         61m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests     Limits\n  --------               --------     ------\n  cpu                    350m (18%)   0 (0%)\n  memory                 320Mi (23%)  170Mi (12%)\n  ephemeral-storage      0 (0%)       0 (0%)\n  hugepages-1Gi          0 (0%)       0 (0%)\n  hugepages-2Mi          0 (0%)       0 (0%)\n  example.com/fakecpu    0            0\n  scheduling.k8s.io/foo  0            0\nEvents:                  <none>\n"
Oct 31 10:00:44.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe namespace kubectl-8288'
Oct 31 10:00:44.761: INFO: stderr: ""
Oct 31 10:00:44.761: INFO: stdout: "Name:         kubectl-8288\nLabels:       e2e-framework=kubectl\n              e2e-run=39bf49b0-9f32-40a3-abf5-1332f7c3fb9d\n              kubernetes.io/metadata.name=kubectl-8288\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:00:44.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-8288" for this suite. 10/31/23 10:00:44.808
------------------------------
â€¢ [SLOW TEST] [6.050 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl describe
  test/e2e/kubectl/kubectl.go:1270
    should check if kubectl describe prints relevant information for rc and pods  [Conformance]
    test/e2e/kubectl/kubectl.go:1276

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:00:38.89
    Oct 31 10:00:38.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:00:38.891
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:39.124
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:39.275
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
      test/e2e/kubectl/kubectl.go:1276
    Oct 31 10:00:39.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 create -f -'
    Oct 31 10:00:40.253: INFO: stderr: ""
    Oct 31 10:00:40.253: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    Oct 31 10:00:40.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 create -f -'
    Oct 31 10:00:41.380: INFO: stderr: ""
    Oct 31 10:00:41.380: INFO: stdout: "service/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 10/31/23 10:00:41.38
    Oct 31 10:00:42.394: INFO: Selector matched 1 pods for map[app:agnhost]
    Oct 31 10:00:42.394: INFO: Found 1 / 1
    Oct 31 10:00:42.394: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Oct 31 10:00:42.478: INFO: Selector matched 1 pods for map[app:agnhost]
    Oct 31 10:00:42.479: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Oct 31 10:00:42.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe pod agnhost-primary-6t72g'
    Oct 31 10:00:42.836: INFO: stderr: ""
    Oct 31 10:00:42.836: INFO: stdout: "Name:             agnhost-primary-6t72g\nNamespace:        kubectl-8288\nPriority:         0\nService Account:  default\nNode:             pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n/10.20.4.182\nStart Time:       Tue, 31 Oct 2023 10:00:40 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.200.2.132\nIPs:\n  IP:           10.200.2.132\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://c1fa73699fa204c47e093457b3cd6b68141f89256a906d4cb3815603276c01ab\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.43\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 31 Oct 2023 10:00:41 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-t88f7 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-t88f7:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-8288/agnhost-primary-6t72g to pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.43\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
    Oct 31 10:00:42.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe rc agnhost-primary'
    Oct 31 10:00:43.163: INFO: stderr: ""
    Oct 31 10:00:43.163: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8288\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.43\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-6t72g\n"
    Oct 31 10:00:43.163: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe service agnhost-primary'
    Oct 31 10:00:43.643: INFO: stderr: ""
    Oct 31 10:00:43.643: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-8288\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.93.106.67\nIPs:               10.93.106.67\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.200.2.132:6379\nSession Affinity:  None\nEvents:            <none>\n"
    Oct 31 10:00:43.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz'
    Oct 31 10:00:44.258: INFO: stderr: ""
    Oct 31 10:00:44.258: INFO: stdout: "Name:               pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=nix.2c_2g\n                    beta.kubernetes.io/os=linux\n                    bke.bizflycloud.vn/node-category=premium\n                    bke.bizflycloud.vn/node-id=5e7056b6-4e34-42d4-8726-011ff86906f0\n                    bke.bizflycloud.vn/node-name=pool-4a0or6em-hvylrntrzm4xjw3t-node-G2JWpkCz\n                    bke.bizflycloud.vn/pool-id=6540c09e738807f46a925be4\n                    bke.bizflycloud.vn/pool-name=pool-4a0or6em\n                    bke.bizflycloud.vn/vpc-network-id=e84362d6-0632-4950-87ac-e7bc7d74be6d\n                    bke.bizflycloud.vn/vpc-subnet-id=9f30f882-8420-4c1a-b384-d2cf3c30817e\n                    failure-domain.beta.kubernetes.io/region=HN\n                    failure-domain.beta.kubernetes.io/zone=HN1\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=nix.2c_2g\n                    topology.kubernetes.io/region=HN\n                    topology.kubernetes.io/zone=HN1\n                    topology.volume.csi.bizflycloud.vn/zone=HN1\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 10.20.4.137\n                    csi.volume.kubernetes.io/nodeid: {\"volume.csi.bizflycloud.vn\":\"cff17711-1467-4b0a-a633-c8c5e68a9179\"}\n                    kube-router.io/bgp-local-addresses: 0.0.0.0\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 31 Oct 2023 08:57:00 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 31 Oct 2023 10:00:35 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Tue, 31 Oct 2023 09:55:40 +0000   Tue, 31 Oct 2023 08:57:00 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Tue, 31 Oct 2023 09:55:40 +0000   Tue, 31 Oct 2023 08:57:00 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Tue, 31 Oct 2023 09:55:40 +0000   Tue, 31 Oct 2023 08:57:00 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Tue, 31 Oct 2023 09:55:40 +0000   Tue, 31 Oct 2023 08:57:10 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.20.4.137\n  ExternalIP:  103.56.158.63\n  Hostname:    pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      50633164Ki\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 2030644Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    1930m\n  ephemeral-storage:      46663523866\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 1420340Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 c2831ab577b147ac96b8e26b919d75d5\n  System UUID:                cff17711-1467-4b0a-a633-c8c5e68a9179\n  Boot ID:                    96ff2a2f-dbcf-4e1d-ad9d-a3d879d85341\n  Kernel Version:             5.4.0-113-generic\n  OS Image:                   Ubuntu 20.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.22\n  Kubelet Version:            v1.26.9\n  Kube-Proxy Version:         v1.26.9\nPodCIDR:                      10.200.1.0/24\nPodCIDRs:                     10.200.1.0/24\nProviderID:                   bizflycloud://cff17711-1467-4b0a-a633-c8c5e68a9179\nNon-terminated Pods:          (5 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-7d6446f647-hz5j8                                   100m (5%)     0 (0%)      70Mi (5%)        170Mi (12%)    64m\n  kube-system                 csi-bizflycloud-nodeplugin-xkt2t                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         63m\n  kube-system                 kube-router-jdd2v                                          250m (12%)    0 (0%)      250Mi (18%)      0 (0%)         63m\n  proxy-7312                  agnhost                                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         10s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv    0 (0%)        0 (0%)      0 (0%)           0 (0%)         61m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests     Limits\n  --------               --------     ------\n  cpu                    350m (18%)   0 (0%)\n  memory                 320Mi (23%)  170Mi (12%)\n  ephemeral-storage      0 (0%)       0 (0%)\n  hugepages-1Gi          0 (0%)       0 (0%)\n  hugepages-2Mi          0 (0%)       0 (0%)\n  example.com/fakecpu    0            0\n  scheduling.k8s.io/foo  0            0\nEvents:                  <none>\n"
    Oct 31 10:00:44.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-8288 describe namespace kubectl-8288'
    Oct 31 10:00:44.761: INFO: stderr: ""
    Oct 31 10:00:44.761: INFO: stdout: "Name:         kubectl-8288\nLabels:       e2e-framework=kubectl\n              e2e-run=39bf49b0-9f32-40a3-abf5-1332f7c3fb9d\n              kubernetes.io/metadata.name=kubectl-8288\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:00:44.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-8288" for this suite. 10/31/23 10:00:44.808
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:00:44.94
Oct 31 10:00:44.942: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename subpath 10/31/23 10:00:44.943
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:45.143
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:45.285
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 10/31/23 10:00:45.351
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/storage/subpath.go:80
STEP: Creating pod pod-subpath-test-configmap-wtgk 10/31/23 10:00:45.516
STEP: Creating a pod to test atomic-volume-subpath 10/31/23 10:00:45.517
Oct 31 10:00:45.586: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-wtgk" in namespace "subpath-1670" to be "Succeeded or Failed"
Oct 31 10:00:45.608: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Pending", Reason="", readiness=false. Elapsed: 21.448759ms
Oct 31 10:00:47.616: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 2.029854873s
Oct 31 10:00:49.661: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 4.074720142s
Oct 31 10:00:51.617: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 6.029957713s
Oct 31 10:00:53.622: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 8.034989819s
Oct 31 10:00:55.621: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 10.033990215s
Oct 31 10:00:57.642: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 12.055704887s
Oct 31 10:00:59.621: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 14.034192414s
Oct 31 10:01:01.617: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 16.030702064s
Oct 31 10:01:03.620: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 18.033210656s
Oct 31 10:01:05.861: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 20.274709089s
Oct 31 10:01:07.618: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=false. Elapsed: 22.031002828s
Oct 31 10:01:09.617: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.030871705s
STEP: Saw pod success 10/31/23 10:01:09.618
Oct 31 10:01:09.618: INFO: Pod "pod-subpath-test-configmap-wtgk" satisfied condition "Succeeded or Failed"
Oct 31 10:01:09.713: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-subpath-test-configmap-wtgk container test-container-subpath-configmap-wtgk: <nil>
STEP: delete the pod 10/31/23 10:01:09.821
Oct 31 10:01:09.887: INFO: Waiting for pod pod-subpath-test-configmap-wtgk to disappear
Oct 31 10:01:09.938: INFO: Pod pod-subpath-test-configmap-wtgk no longer exists
STEP: Deleting pod pod-subpath-test-configmap-wtgk 10/31/23 10:01:09.938
Oct 31 10:01:09.938: INFO: Deleting pod "pod-subpath-test-configmap-wtgk" in namespace "subpath-1670"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Oct 31 10:01:10.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-1670" for this suite. 10/31/23 10:01:10.077
------------------------------
â€¢ [SLOW TEST] [25.249 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/storage/subpath.go:80

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:00:44.94
    Oct 31 10:00:44.942: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename subpath 10/31/23 10:00:44.943
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:00:45.143
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:00:45.285
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 10/31/23 10:00:45.351
    [It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
      test/e2e/storage/subpath.go:80
    STEP: Creating pod pod-subpath-test-configmap-wtgk 10/31/23 10:00:45.516
    STEP: Creating a pod to test atomic-volume-subpath 10/31/23 10:00:45.517
    Oct 31 10:00:45.586: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-wtgk" in namespace "subpath-1670" to be "Succeeded or Failed"
    Oct 31 10:00:45.608: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Pending", Reason="", readiness=false. Elapsed: 21.448759ms
    Oct 31 10:00:47.616: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 2.029854873s
    Oct 31 10:00:49.661: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 4.074720142s
    Oct 31 10:00:51.617: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 6.029957713s
    Oct 31 10:00:53.622: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 8.034989819s
    Oct 31 10:00:55.621: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 10.033990215s
    Oct 31 10:00:57.642: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 12.055704887s
    Oct 31 10:00:59.621: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 14.034192414s
    Oct 31 10:01:01.617: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 16.030702064s
    Oct 31 10:01:03.620: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 18.033210656s
    Oct 31 10:01:05.861: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=true. Elapsed: 20.274709089s
    Oct 31 10:01:07.618: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Running", Reason="", readiness=false. Elapsed: 22.031002828s
    Oct 31 10:01:09.617: INFO: Pod "pod-subpath-test-configmap-wtgk": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.030871705s
    STEP: Saw pod success 10/31/23 10:01:09.618
    Oct 31 10:01:09.618: INFO: Pod "pod-subpath-test-configmap-wtgk" satisfied condition "Succeeded or Failed"
    Oct 31 10:01:09.713: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-subpath-test-configmap-wtgk container test-container-subpath-configmap-wtgk: <nil>
    STEP: delete the pod 10/31/23 10:01:09.821
    Oct 31 10:01:09.887: INFO: Waiting for pod pod-subpath-test-configmap-wtgk to disappear
    Oct 31 10:01:09.938: INFO: Pod pod-subpath-test-configmap-wtgk no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-wtgk 10/31/23 10:01:09.938
    Oct 31 10:01:09.938: INFO: Deleting pod "pod-subpath-test-configmap-wtgk" in namespace "subpath-1670"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:01:10.025: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-1670" for this suite. 10/31/23 10:01:10.077
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:01:10.192
Oct 31 10:01:10.192: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 10:01:10.193
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:10.445
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:10.579
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169
STEP: creating a ConfigMap 10/31/23 10:01:10.721
STEP: fetching the ConfigMap 10/31/23 10:01:10.768
STEP: patching the ConfigMap 10/31/23 10:01:10.859
STEP: listing all ConfigMaps in all namespaces with a label selector 10/31/23 10:01:10.969
STEP: deleting the ConfigMap by collection with a label selector 10/31/23 10:01:11.057
STEP: listing all ConfigMaps in test namespace 10/31/23 10:01:11.193
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 10:01:11.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-3003" for this suite. 10/31/23 10:01:11.386
------------------------------
â€¢ [1.204 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/common/node/configmap.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:01:10.192
    Oct 31 10:01:10.192: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 10:01:10.193
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:10.445
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:10.579
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should run through a ConfigMap lifecycle [Conformance]
      test/e2e/common/node/configmap.go:169
    STEP: creating a ConfigMap 10/31/23 10:01:10.721
    STEP: fetching the ConfigMap 10/31/23 10:01:10.768
    STEP: patching the ConfigMap 10/31/23 10:01:10.859
    STEP: listing all ConfigMaps in all namespaces with a label selector 10/31/23 10:01:10.969
    STEP: deleting the ConfigMap by collection with a label selector 10/31/23 10:01:11.057
    STEP: listing all ConfigMaps in test namespace 10/31/23 10:01:11.193
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:01:11.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-3003" for this suite. 10/31/23 10:01:11.386
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:01:11.399
Oct 31 10:01:11.399: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename statefulset 10/31/23 10:01:11.4
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:11.553
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:11.696
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-3611 10/31/23 10:01:11.75
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/apps/statefulset.go:977
STEP: Creating statefulset ss in namespace statefulset-3611 10/31/23 10:01:11.872
Oct 31 10:01:11.997: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Oct 31 10:01:22.006: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label 10/31/23 10:01:22.106
STEP: Getting /status 10/31/23 10:01:22.166
Oct 31 10:01:22.215: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status 10/31/23 10:01:22.215
Oct 31 10:01:22.278: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated 10/31/23 10:01:22.278
Oct 31 10:01:22.370: INFO: Observed &StatefulSet event: ADDED
Oct 31 10:01:22.370: INFO: Found Statefulset ss in namespace statefulset-3611 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Oct 31 10:01:22.370: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status 10/31/23 10:01:22.37
Oct 31 10:01:22.370: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Oct 31 10:01:22.430: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched 10/31/23 10:01:22.43
Oct 31 10:01:22.476: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Oct 31 10:01:22.476: INFO: Deleting all statefulset in ns statefulset-3611
Oct 31 10:01:22.526: INFO: Scaling statefulset ss to 0
Oct 31 10:01:32.676: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 10:01:32.727: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Oct 31 10:01:32.926: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-3611" for this suite. 10/31/23 10:01:32.984
------------------------------
â€¢ [SLOW TEST] [21.600 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/apps/statefulset.go:977

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:01:11.399
    Oct 31 10:01:11.399: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename statefulset 10/31/23 10:01:11.4
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:11.553
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:11.696
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-3611 10/31/23 10:01:11.75
    [It] should validate Statefulset Status endpoints [Conformance]
      test/e2e/apps/statefulset.go:977
    STEP: Creating statefulset ss in namespace statefulset-3611 10/31/23 10:01:11.872
    Oct 31 10:01:11.997: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Oct 31 10:01:22.006: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Patch Statefulset to include a label 10/31/23 10:01:22.106
    STEP: Getting /status 10/31/23 10:01:22.166
    Oct 31 10:01:22.215: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
    STEP: updating the StatefulSet Status 10/31/23 10:01:22.215
    Oct 31 10:01:22.278: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the statefulset status to be updated 10/31/23 10:01:22.278
    Oct 31 10:01:22.370: INFO: Observed &StatefulSet event: ADDED
    Oct 31 10:01:22.370: INFO: Found Statefulset ss in namespace statefulset-3611 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
    Oct 31 10:01:22.370: INFO: Statefulset ss has an updated status
    STEP: patching the Statefulset Status 10/31/23 10:01:22.37
    Oct 31 10:01:22.370: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
    Oct 31 10:01:22.430: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
    STEP: watching for the Statefulset status to be patched 10/31/23 10:01:22.43
    Oct 31 10:01:22.476: INFO: Observed &StatefulSet event: ADDED
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Oct 31 10:01:22.476: INFO: Deleting all statefulset in ns statefulset-3611
    Oct 31 10:01:22.526: INFO: Scaling statefulset ss to 0
    Oct 31 10:01:32.676: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 10:01:32.727: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:01:32.926: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-3611" for this suite. 10/31/23 10:01:32.984
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] DNS
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:01:33
Oct 31 10:01:33.000: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename dns 10/31/23 10:01:33.002
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:33.223
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:33.358
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 10/31/23 10:01:33.457
STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
 10/31/23 10:01:33.457
STEP: creating a pod to probe DNS 10/31/23 10:01:33.457
STEP: submitting the pod to kubernetes 10/31/23 10:01:33.457
Oct 31 10:01:33.473: INFO: Waiting up to 15m0s for pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da" in namespace "dns-5682" to be "running"
Oct 31 10:01:33.522: INFO: Pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da": Phase="Pending", Reason="", readiness=false. Elapsed: 49.111106ms
Oct 31 10:01:35.530: INFO: Pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da": Phase="Pending", Reason="", readiness=false. Elapsed: 2.056907257s
Oct 31 10:01:37.572: INFO: Pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da": Phase="Running", Reason="", readiness=true. Elapsed: 4.098438621s
Oct 31 10:01:37.572: INFO: Pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da" satisfied condition "running"
STEP: retrieving the pod 10/31/23 10:01:37.572
STEP: looking for the results for each expected name from probers 10/31/23 10:01:37.622
Oct 31 10:01:38.224: INFO: DNS probes using dns-5682/dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da succeeded

STEP: deleting the pod 10/31/23 10:01:38.224
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Oct 31 10:01:38.290: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-5682" for this suite. 10/31/23 10:01:38.36
------------------------------
â€¢ [SLOW TEST] [5.417 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/network/dns.go:50

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:01:33
    Oct 31 10:01:33.000: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename dns 10/31/23 10:01:33.002
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:33.223
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:33.358
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for the cluster  [Conformance]
      test/e2e/network/dns.go:50
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     10/31/23 10:01:33.457
    STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
     10/31/23 10:01:33.457
    STEP: creating a pod to probe DNS 10/31/23 10:01:33.457
    STEP: submitting the pod to kubernetes 10/31/23 10:01:33.457
    Oct 31 10:01:33.473: INFO: Waiting up to 15m0s for pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da" in namespace "dns-5682" to be "running"
    Oct 31 10:01:33.522: INFO: Pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da": Phase="Pending", Reason="", readiness=false. Elapsed: 49.111106ms
    Oct 31 10:01:35.530: INFO: Pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da": Phase="Pending", Reason="", readiness=false. Elapsed: 2.056907257s
    Oct 31 10:01:37.572: INFO: Pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da": Phase="Running", Reason="", readiness=true. Elapsed: 4.098438621s
    Oct 31 10:01:37.572: INFO: Pod "dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da" satisfied condition "running"
    STEP: retrieving the pod 10/31/23 10:01:37.572
    STEP: looking for the results for each expected name from probers 10/31/23 10:01:37.622
    Oct 31 10:01:38.224: INFO: DNS probes using dns-5682/dns-test-58a29ad7-efe3-4c73-bcf4-298014dbe0da succeeded

    STEP: deleting the pod 10/31/23 10:01:38.224
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:01:38.290: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-5682" for this suite. 10/31/23 10:01:38.36
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:01:38.423
Oct 31 10:01:38.424: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename var-expansion 10/31/23 10:01:38.425
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:38.58
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:38.72
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44
STEP: Creating a pod to test env composition 10/31/23 10:01:38.822
Oct 31 10:01:38.835: INFO: Waiting up to 5m0s for pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477" in namespace "var-expansion-9946" to be "Succeeded or Failed"
Oct 31 10:01:38.885: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477": Phase="Pending", Reason="", readiness=false. Elapsed: 49.453554ms
Oct 31 10:01:40.899: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477": Phase="Running", Reason="", readiness=true. Elapsed: 2.064375417s
Oct 31 10:01:42.895: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477": Phase="Running", Reason="", readiness=false. Elapsed: 4.060230331s
Oct 31 10:01:44.893: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.058366366s
STEP: Saw pod success 10/31/23 10:01:44.894
Oct 31 10:01:44.894: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477" satisfied condition "Succeeded or Failed"
Oct 31 10:01:44.942: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod var-expansion-20b633a0-433e-4919-9b36-4c033baa3477 container dapi-container: <nil>
STEP: delete the pod 10/31/23 10:01:45.079
Oct 31 10:01:45.178: INFO: Waiting for pod var-expansion-20b633a0-433e-4919-9b36-4c033baa3477 to disappear
Oct 31 10:01:45.265: INFO: Pod var-expansion-20b633a0-433e-4919-9b36-4c033baa3477 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Oct 31 10:01:45.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-9946" for this suite. 10/31/23 10:01:45.325
------------------------------
â€¢ [SLOW TEST] [6.920 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:01:38.423
    Oct 31 10:01:38.424: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename var-expansion 10/31/23 10:01:38.425
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:38.58
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:38.72
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:44
    STEP: Creating a pod to test env composition 10/31/23 10:01:38.822
    Oct 31 10:01:38.835: INFO: Waiting up to 5m0s for pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477" in namespace "var-expansion-9946" to be "Succeeded or Failed"
    Oct 31 10:01:38.885: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477": Phase="Pending", Reason="", readiness=false. Elapsed: 49.453554ms
    Oct 31 10:01:40.899: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477": Phase="Running", Reason="", readiness=true. Elapsed: 2.064375417s
    Oct 31 10:01:42.895: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477": Phase="Running", Reason="", readiness=false. Elapsed: 4.060230331s
    Oct 31 10:01:44.893: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.058366366s
    STEP: Saw pod success 10/31/23 10:01:44.894
    Oct 31 10:01:44.894: INFO: Pod "var-expansion-20b633a0-433e-4919-9b36-4c033baa3477" satisfied condition "Succeeded or Failed"
    Oct 31 10:01:44.942: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod var-expansion-20b633a0-433e-4919-9b36-4c033baa3477 container dapi-container: <nil>
    STEP: delete the pod 10/31/23 10:01:45.079
    Oct 31 10:01:45.178: INFO: Waiting for pod var-expansion-20b633a0-433e-4919-9b36-4c033baa3477 to disappear
    Oct 31 10:01:45.265: INFO: Pod var-expansion-20b633a0-433e-4919-9b36-4c033baa3477 no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:01:45.265: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-9946" for this suite. 10/31/23 10:01:45.325
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:01:45.348
Oct 31 10:01:45.348: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 10:01:45.349
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:45.535
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:45.678
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249
STEP: Creating a pod to test downward API volume plugin 10/31/23 10:01:45.776
Oct 31 10:01:45.833: INFO: Waiting up to 5m0s for pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3" in namespace "downward-api-9241" to be "Succeeded or Failed"
Oct 31 10:01:45.845: INFO: Pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3": Phase="Pending", Reason="", readiness=false. Elapsed: 11.226003ms
Oct 31 10:01:47.893: INFO: Pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.059476843s
Oct 31 10:01:49.853: INFO: Pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019267952s
STEP: Saw pod success 10/31/23 10:01:49.853
Oct 31 10:01:49.853: INFO: Pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3" satisfied condition "Succeeded or Failed"
Oct 31 10:01:49.906: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3 container client-container: <nil>
STEP: delete the pod 10/31/23 10:01:50.041
Oct 31 10:01:50.103: INFO: Waiting for pod downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3 to disappear
Oct 31 10:01:50.196: INFO: Pod downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 10:01:50.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-9241" for this suite. 10/31/23 10:01:50.25
------------------------------
â€¢ [4.956 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:01:45.348
    Oct 31 10:01:45.348: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 10:01:45.349
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:45.535
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:45.678
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:249
    STEP: Creating a pod to test downward API volume plugin 10/31/23 10:01:45.776
    Oct 31 10:01:45.833: INFO: Waiting up to 5m0s for pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3" in namespace "downward-api-9241" to be "Succeeded or Failed"
    Oct 31 10:01:45.845: INFO: Pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3": Phase="Pending", Reason="", readiness=false. Elapsed: 11.226003ms
    Oct 31 10:01:47.893: INFO: Pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.059476843s
    Oct 31 10:01:49.853: INFO: Pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019267952s
    STEP: Saw pod success 10/31/23 10:01:49.853
    Oct 31 10:01:49.853: INFO: Pod "downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3" satisfied condition "Succeeded or Failed"
    Oct 31 10:01:49.906: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3 container client-container: <nil>
    STEP: delete the pod 10/31/23 10:01:50.041
    Oct 31 10:01:50.103: INFO: Waiting for pod downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3 to disappear
    Oct 31 10:01:50.196: INFO: Pod downwardapi-volume-084fb816-36f7-41ba-b59c-aaf097cbb3a3 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:01:50.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-9241" for this suite. 10/31/23 10:01:50.25
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:01:50.305
Oct 31 10:01:50.305: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 10:01:50.319
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:50.519
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:50.651
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 10/31/23 10:01:50.766
Oct 31 10:01:50.767: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 10/31/23 10:02:10.733
Oct 31 10:02:10.734: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:02:19.269: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:02:37.198: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-7923" for this suite. 10/31/23 10:02:37.3
------------------------------
â€¢ [SLOW TEST] [47.051 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:309

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:01:50.305
    Oct 31 10:01:50.305: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 10:01:50.319
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:01:50.519
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:01:50.651
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for multiple CRDs of same group but different versions [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:309
    STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation 10/31/23 10:01:50.766
    Oct 31 10:01:50.767: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation 10/31/23 10:02:10.733
    Oct 31 10:02:10.734: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:02:19.269: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:02:37.198: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-7923" for this suite. 10/31/23 10:02:37.3
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:02:37.363
Oct 31 10:02:37.363: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename watch 10/31/23 10:02:37.365
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:02:37.569
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:02:37.674
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142
STEP: creating a new configmap 10/31/23 10:02:37.817
STEP: modifying the configmap once 10/31/23 10:02:37.872
STEP: modifying the configmap a second time 10/31/23 10:02:38.061
STEP: deleting the configmap 10/31/23 10:02:38.237
STEP: creating a watch on configmaps from the resource version returned by the first update 10/31/23 10:02:38.295
STEP: Expecting to observe notifications for all changes to the configmap after the first update 10/31/23 10:02:38.345
Oct 31 10:02:38.385: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3351  8292f67f-def7-4747-80a0-8ffbd20ad21b 26895 0 2023-10-31 10:02:37 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-31 10:02:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 10:02:38.386: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3351  8292f67f-def7-4747-80a0-8ffbd20ad21b 26898 0 2023-10-31 10:02:37 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-31 10:02:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Oct 31 10:02:38.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-3351" for this suite. 10/31/23 10:02:38.442
------------------------------
â€¢ [1.090 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/apimachinery/watch.go:142

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:02:37.363
    Oct 31 10:02:37.363: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename watch 10/31/23 10:02:37.365
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:02:37.569
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:02:37.674
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to start watching from a specific resource version [Conformance]
      test/e2e/apimachinery/watch.go:142
    STEP: creating a new configmap 10/31/23 10:02:37.817
    STEP: modifying the configmap once 10/31/23 10:02:37.872
    STEP: modifying the configmap a second time 10/31/23 10:02:38.061
    STEP: deleting the configmap 10/31/23 10:02:38.237
    STEP: creating a watch on configmaps from the resource version returned by the first update 10/31/23 10:02:38.295
    STEP: Expecting to observe notifications for all changes to the configmap after the first update 10/31/23 10:02:38.345
    Oct 31 10:02:38.385: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3351  8292f67f-def7-4747-80a0-8ffbd20ad21b 26895 0 2023-10-31 10:02:37 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-31 10:02:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 10:02:38.386: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-3351  8292f67f-def7-4747-80a0-8ffbd20ad21b 26898 0 2023-10-31 10:02:37 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-10-31 10:02:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:02:38.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-3351" for this suite. 10/31/23 10:02:38.442
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:385
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:02:38.458
Oct 31 10:02:38.458: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename daemonsets 10/31/23 10:02:38.459
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:02:38.739
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:02:38.84
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:157
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:385
Oct 31 10:02:39.270: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:02:39.283
Oct 31 10:02:39.330: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 10:02:39.330: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:02:40.492: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 10:02:40.493: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:02:41.405: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Oct 31 10:02:41.406: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Update daemon pods image. 10/31/23 10:02:41.639
STEP: Check that daemon pods images are updated. 10/31/23 10:02:41.812
Oct 31 10:02:41.843: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:41.844: INFO: Wrong image for pod: daemon-set-dwf4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:42.903: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:42.903: INFO: Wrong image for pod: daemon-set-dwf4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:43.924: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:43.924: INFO: Wrong image for pod: daemon-set-dwf4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:44.926: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:44.926: INFO: Pod daemon-set-c29vc is not available
Oct 31 10:02:44.926: INFO: Wrong image for pod: daemon-set-dwf4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:45.904: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:46.905: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
Oct 31 10:02:46.905: INFO: Pod daemon-set-n6qm8 is not available
Oct 31 10:02:49.913: INFO: Pod daemon-set-tc6qg is not available
STEP: Check that daemon pods are still running on every node of the cluster. 10/31/23 10:02:49.966
Oct 31 10:02:50.072: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 10:02:50.072: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:02:51.155: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Oct 31 10:02:51.155: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:122
STEP: Deleting DaemonSet "daemon-set" 10/31/23 10:02:51.458
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4059, will wait for the garbage collector to delete the pods 10/31/23 10:02:51.459
Oct 31 10:02:51.653: INFO: Deleting DaemonSet.extensions daemon-set took: 88.289498ms
Oct 31 10:02:51.754: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.269744ms
Oct 31 10:02:53.240: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 10:02:53.240: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Oct 31 10:02:53.298: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27069"},"items":null}

Oct 31 10:02:53.349: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27069"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:02:53.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4059" for this suite. 10/31/23 10:02:53.608
------------------------------
â€¢ [SLOW TEST] [15.208 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/apps/daemon_set.go:385

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:02:38.458
    Oct 31 10:02:38.458: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename daemonsets 10/31/23 10:02:38.459
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:02:38.739
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:02:38.84
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:157
    [It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
      test/e2e/apps/daemon_set.go:385
    Oct 31 10:02:39.270: INFO: Creating simple daemon set daemon-set
    STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:02:39.283
    Oct 31 10:02:39.330: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 10:02:39.330: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:02:40.492: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 10:02:40.493: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:02:41.405: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Oct 31 10:02:41.406: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Update daemon pods image. 10/31/23 10:02:41.639
    STEP: Check that daemon pods images are updated. 10/31/23 10:02:41.812
    Oct 31 10:02:41.843: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:41.844: INFO: Wrong image for pod: daemon-set-dwf4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:42.903: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:42.903: INFO: Wrong image for pod: daemon-set-dwf4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:43.924: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:43.924: INFO: Wrong image for pod: daemon-set-dwf4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:44.926: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:44.926: INFO: Pod daemon-set-c29vc is not available
    Oct 31 10:02:44.926: INFO: Wrong image for pod: daemon-set-dwf4w. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:45.904: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:46.905: INFO: Wrong image for pod: daemon-set-7fzgm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.43, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
    Oct 31 10:02:46.905: INFO: Pod daemon-set-n6qm8 is not available
    Oct 31 10:02:49.913: INFO: Pod daemon-set-tc6qg is not available
    STEP: Check that daemon pods are still running on every node of the cluster. 10/31/23 10:02:49.966
    Oct 31 10:02:50.072: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 10:02:50.072: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:02:51.155: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Oct 31 10:02:51.155: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:122
    STEP: Deleting DaemonSet "daemon-set" 10/31/23 10:02:51.458
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4059, will wait for the garbage collector to delete the pods 10/31/23 10:02:51.459
    Oct 31 10:02:51.653: INFO: Deleting DaemonSet.extensions daemon-set took: 88.289498ms
    Oct 31 10:02:51.754: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.269744ms
    Oct 31 10:02:53.240: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 10:02:53.240: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Oct 31 10:02:53.298: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27069"},"items":null}

    Oct 31 10:02:53.349: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27069"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:02:53.555: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4059" for this suite. 10/31/23 10:02:53.608
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:02:53.668
Oct 31 10:02:53.668: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 10:02:53.669
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:02:53.787
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:02:53.972
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162
STEP: Creating the pod 10/31/23 10:02:54.068
Oct 31 10:02:54.125: INFO: Waiting up to 5m0s for pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5" in namespace "projected-7176" to be "running and ready"
Oct 31 10:02:54.147: INFO: Pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.055972ms
Oct 31 10:02:54.148: INFO: The phase of Pod annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:02:56.174: INFO: Pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5": Phase="Running", Reason="", readiness=true. Elapsed: 2.048483255s
Oct 31 10:02:56.174: INFO: The phase of Pod annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5 is Running (Ready = true)
Oct 31 10:02:56.174: INFO: Pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5" satisfied condition "running and ready"
Oct 31 10:02:57.085: INFO: Successfully updated pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 10:02:59.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7176" for this suite. 10/31/23 10:02:59.27
------------------------------
â€¢ [SLOW TEST] [5.612 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:02:53.668
    Oct 31 10:02:53.668: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 10:02:53.669
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:02:53.787
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:02:53.972
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:162
    STEP: Creating the pod 10/31/23 10:02:54.068
    Oct 31 10:02:54.125: INFO: Waiting up to 5m0s for pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5" in namespace "projected-7176" to be "running and ready"
    Oct 31 10:02:54.147: INFO: Pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.055972ms
    Oct 31 10:02:54.148: INFO: The phase of Pod annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:02:56.174: INFO: Pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5": Phase="Running", Reason="", readiness=true. Elapsed: 2.048483255s
    Oct 31 10:02:56.174: INFO: The phase of Pod annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5 is Running (Ready = true)
    Oct 31 10:02:56.174: INFO: Pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5" satisfied condition "running and ready"
    Oct 31 10:02:57.085: INFO: Successfully updated pod "annotationupdate1939dd0c-6e83-4b47-8803-708e1a9761e5"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:02:59.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7176" for this suite. 10/31/23 10:02:59.27
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:02:59.281
Oct 31 10:02:59.281: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 10:02:59.282
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:02:59.455
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:02:59.55
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174
STEP: Creating configMap with name cm-test-opt-del-399b937d-aa44-488d-9e1f-1f03357ea9f9 10/31/23 10:02:59.677
STEP: Creating configMap with name cm-test-opt-upd-f6c41105-5028-487d-aaf2-aec700ec82a6 10/31/23 10:02:59.765
STEP: Creating the pod 10/31/23 10:02:59.856
Oct 31 10:02:59.875: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa" in namespace "projected-8437" to be "running and ready"
Oct 31 10:02:59.891: INFO: Pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa": Phase="Pending", Reason="", readiness=false. Elapsed: 15.584185ms
Oct 31 10:02:59.891: INFO: The phase of Pod pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:03:01.946: INFO: Pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.070040893s
Oct 31 10:03:01.946: INFO: The phase of Pod pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:03:03.899: INFO: Pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa": Phase="Running", Reason="", readiness=true. Elapsed: 4.02376695s
Oct 31 10:03:03.899: INFO: The phase of Pod pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa is Running (Ready = true)
Oct 31 10:03:03.899: INFO: Pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa" satisfied condition "running and ready"
STEP: Deleting configmap cm-test-opt-del-399b937d-aa44-488d-9e1f-1f03357ea9f9 10/31/23 10:03:04.447
STEP: Updating configmap cm-test-opt-upd-f6c41105-5028-487d-aaf2-aec700ec82a6 10/31/23 10:03:04.558
STEP: Creating configMap with name cm-test-opt-create-cacb60a0-5f16-4a70-b87a-7b8f20ac5d67 10/31/23 10:03:04.645
STEP: waiting to observe update in volume 10/31/23 10:03:04.703
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Oct 31 10:04:27.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8437" for this suite. 10/31/23 10:04:27.838
------------------------------
â€¢ [SLOW TEST] [88.609 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:174

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:02:59.281
    Oct 31 10:02:59.281: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 10:02:59.282
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:02:59.455
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:02:59.55
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:174
    STEP: Creating configMap with name cm-test-opt-del-399b937d-aa44-488d-9e1f-1f03357ea9f9 10/31/23 10:02:59.677
    STEP: Creating configMap with name cm-test-opt-upd-f6c41105-5028-487d-aaf2-aec700ec82a6 10/31/23 10:02:59.765
    STEP: Creating the pod 10/31/23 10:02:59.856
    Oct 31 10:02:59.875: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa" in namespace "projected-8437" to be "running and ready"
    Oct 31 10:02:59.891: INFO: Pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa": Phase="Pending", Reason="", readiness=false. Elapsed: 15.584185ms
    Oct 31 10:02:59.891: INFO: The phase of Pod pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:03:01.946: INFO: Pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.070040893s
    Oct 31 10:03:01.946: INFO: The phase of Pod pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:03:03.899: INFO: Pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa": Phase="Running", Reason="", readiness=true. Elapsed: 4.02376695s
    Oct 31 10:03:03.899: INFO: The phase of Pod pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa is Running (Ready = true)
    Oct 31 10:03:03.899: INFO: Pod "pod-projected-configmaps-e9e4f911-b308-4355-a129-05fda8f928fa" satisfied condition "running and ready"
    STEP: Deleting configmap cm-test-opt-del-399b937d-aa44-488d-9e1f-1f03357ea9f9 10/31/23 10:03:04.447
    STEP: Updating configmap cm-test-opt-upd-f6c41105-5028-487d-aaf2-aec700ec82a6 10/31/23 10:03:04.558
    STEP: Creating configMap with name cm-test-opt-create-cacb60a0-5f16-4a70-b87a-7b8f20ac5d67 10/31/23 10:03:04.645
    STEP: waiting to observe update in volume 10/31/23 10:03:04.703
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:04:27.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8437" for this suite. 10/31/23 10:04:27.838
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:04:27.895
Oct 31 10:04:27.896: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:04:27.896
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:28.14
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:28.271
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/kubectl/kubectl.go:931
STEP: create deployment with httpd image 10/31/23 10:04:28.283
Oct 31 10:04:28.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2456 create -f -'
Oct 31 10:04:29.199: INFO: stderr: ""
Oct 31 10:04:29.199: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image 10/31/23 10:04:29.199
Oct 31 10:04:29.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2456 diff -f -'
Oct 31 10:04:30.790: INFO: rc: 1
Oct 31 10:04:30.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2456 delete -f -'
Oct 31 10:04:31.085: INFO: stderr: ""
Oct 31 10:04:31.085: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:04:31.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2456" for this suite. 10/31/23 10:04:31.132
------------------------------
â€¢ [3.255 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl diff
  test/e2e/kubectl/kubectl.go:925
    should check if kubectl diff finds a difference for Deployments [Conformance]
    test/e2e/kubectl/kubectl.go:931

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:04:27.895
    Oct 31 10:04:27.896: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:04:27.896
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:28.14
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:28.271
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl diff finds a difference for Deployments [Conformance]
      test/e2e/kubectl/kubectl.go:931
    STEP: create deployment with httpd image 10/31/23 10:04:28.283
    Oct 31 10:04:28.283: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2456 create -f -'
    Oct 31 10:04:29.199: INFO: stderr: ""
    Oct 31 10:04:29.199: INFO: stdout: "deployment.apps/httpd-deployment created\n"
    STEP: verify diff finds difference between live and declared image 10/31/23 10:04:29.199
    Oct 31 10:04:29.199: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2456 diff -f -'
    Oct 31 10:04:30.790: INFO: rc: 1
    Oct 31 10:04:30.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2456 delete -f -'
    Oct 31 10:04:31.085: INFO: stderr: ""
    Oct 31 10:04:31.085: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:04:31.085: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2456" for this suite. 10/31/23 10:04:31.132
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:04:31.154
Oct 31 10:04:31.154: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:04:31.155
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:31.369
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:31.53
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/kubectl/kubectl.go:962
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 10/31/23 10:04:31.689
Oct 31 10:04:31.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4752 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Oct 31 10:04:31.862: INFO: stderr: ""
Oct 31 10:04:31.862: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run 10/31/23 10:04:31.862
Oct 31 10:04:31.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4752 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
Oct 31 10:04:32.270: INFO: stderr: ""
Oct 31 10:04:32.270: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 10/31/23 10:04:32.27
Oct 31 10:04:32.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4752 delete pods e2e-test-httpd-pod'
Oct 31 10:04:34.432: INFO: stderr: ""
Oct 31 10:04:34.432: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:04:34.432: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-4752" for this suite. 10/31/23 10:04:34.459
------------------------------
â€¢ [3.378 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl server-side dry-run
  test/e2e/kubectl/kubectl.go:956
    should check if kubectl can dry-run update Pods [Conformance]
    test/e2e/kubectl/kubectl.go:962

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:04:31.154
    Oct 31 10:04:31.154: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:04:31.155
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:31.369
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:31.53
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should check if kubectl can dry-run update Pods [Conformance]
      test/e2e/kubectl/kubectl.go:962
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 10/31/23 10:04:31.689
    Oct 31 10:04:31.689: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4752 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Oct 31 10:04:31.862: INFO: stderr: ""
    Oct 31 10:04:31.862: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: replace the image in the pod with server-side dry-run 10/31/23 10:04:31.862
    Oct 31 10:04:31.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4752 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
    Oct 31 10:04:32.270: INFO: stderr: ""
    Oct 31 10:04:32.270: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 10/31/23 10:04:32.27
    Oct 31 10:04:32.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-4752 delete pods e2e-test-httpd-pod'
    Oct 31 10:04:34.432: INFO: stderr: ""
    Oct 31 10:04:34.432: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:04:34.432: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-4752" for this suite. 10/31/23 10:04:34.459
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:04:34.531
Oct 31 10:04:34.531: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 10:04:34.534
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:34.713
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:34.851
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147
STEP: Creating a pod to test emptydir 0777 on tmpfs 10/31/23 10:04:34.946
Oct 31 10:04:35.001: INFO: Waiting up to 5m0s for pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1" in namespace "emptydir-2789" to be "Succeeded or Failed"
Oct 31 10:04:35.024: INFO: Pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1": Phase="Pending", Reason="", readiness=false. Elapsed: 22.495578ms
Oct 31 10:04:37.033: INFO: Pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.031657636s
Oct 31 10:04:39.033: INFO: Pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031709045s
STEP: Saw pod success 10/31/23 10:04:39.033
Oct 31 10:04:39.033: INFO: Pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1" satisfied condition "Succeeded or Failed"
Oct 31 10:04:39.088: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1 container test-container: <nil>
STEP: delete the pod 10/31/23 10:04:39.288
Oct 31 10:04:39.392: INFO: Waiting for pod pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1 to disappear
Oct 31 10:04:39.441: INFO: Pod pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 10:04:39.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-2789" for this suite. 10/31/23 10:04:39.496
------------------------------
â€¢ [4.975 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:147

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:04:34.531
    Oct 31 10:04:34.531: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 10:04:34.534
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:34.713
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:34.851
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:147
    STEP: Creating a pod to test emptydir 0777 on tmpfs 10/31/23 10:04:34.946
    Oct 31 10:04:35.001: INFO: Waiting up to 5m0s for pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1" in namespace "emptydir-2789" to be "Succeeded or Failed"
    Oct 31 10:04:35.024: INFO: Pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1": Phase="Pending", Reason="", readiness=false. Elapsed: 22.495578ms
    Oct 31 10:04:37.033: INFO: Pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.031657636s
    Oct 31 10:04:39.033: INFO: Pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031709045s
    STEP: Saw pod success 10/31/23 10:04:39.033
    Oct 31 10:04:39.033: INFO: Pod "pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1" satisfied condition "Succeeded or Failed"
    Oct 31 10:04:39.088: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1 container test-container: <nil>
    STEP: delete the pod 10/31/23 10:04:39.288
    Oct 31 10:04:39.392: INFO: Waiting for pod pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1 to disappear
    Oct 31 10:04:39.441: INFO: Pod pod-6a037bfa-dd64-47a6-9580-5661a50d0bb1 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:04:39.442: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-2789" for this suite. 10/31/23 10:04:39.496
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:04:39.51
Oct 31 10:04:39.511: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 10:04:39.512
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:39.754
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:39.864
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162
STEP: Creating the pod 10/31/23 10:04:40.018
Oct 31 10:04:40.055: INFO: Waiting up to 5m0s for pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f" in namespace "downward-api-5036" to be "running and ready"
Oct 31 10:04:40.159: INFO: Pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f": Phase="Pending", Reason="", readiness=false. Elapsed: 103.501103ms
Oct 31 10:04:40.159: INFO: The phase of Pod annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:04:42.170: INFO: Pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f": Phase="Running", Reason="", readiness=true. Elapsed: 2.115175846s
Oct 31 10:04:42.170: INFO: The phase of Pod annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f is Running (Ready = true)
Oct 31 10:04:42.170: INFO: Pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f" satisfied condition "running and ready"
Oct 31 10:04:42.889: INFO: Successfully updated pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 10:04:47.147: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-5036" for this suite. 10/31/23 10:04:47.163
------------------------------
â€¢ [SLOW TEST] [7.699 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:162

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:04:39.51
    Oct 31 10:04:39.511: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 10:04:39.512
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:39.754
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:39.864
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should update annotations on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:162
    STEP: Creating the pod 10/31/23 10:04:40.018
    Oct 31 10:04:40.055: INFO: Waiting up to 5m0s for pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f" in namespace "downward-api-5036" to be "running and ready"
    Oct 31 10:04:40.159: INFO: Pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f": Phase="Pending", Reason="", readiness=false. Elapsed: 103.501103ms
    Oct 31 10:04:40.159: INFO: The phase of Pod annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:04:42.170: INFO: Pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f": Phase="Running", Reason="", readiness=true. Elapsed: 2.115175846s
    Oct 31 10:04:42.170: INFO: The phase of Pod annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f is Running (Ready = true)
    Oct 31 10:04:42.170: INFO: Pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f" satisfied condition "running and ready"
    Oct 31 10:04:42.889: INFO: Successfully updated pod "annotationupdate6c780ff9-7913-4fa8-9db8-da238859424f"
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:04:47.147: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-5036" for this suite. 10/31/23 10:04:47.163
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:04:47.214
Oct 31 10:04:47.214: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 10:04:47.215
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:47.366
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:47.501
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236
Oct 31 10:04:47.553: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 10/31/23 10:04:55.686
Oct 31 10:04:55.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 create -f -'
Oct 31 10:04:57.087: INFO: stderr: ""
Oct 31 10:04:57.087: INFO: stdout: "e2e-test-crd-publish-openapi-9460-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Oct 31 10:04:57.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 delete e2e-test-crd-publish-openapi-9460-crds test-cr'
Oct 31 10:04:57.407: INFO: stderr: ""
Oct 31 10:04:57.407: INFO: stdout: "e2e-test-crd-publish-openapi-9460-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Oct 31 10:04:57.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 apply -f -'
Oct 31 10:04:57.953: INFO: stderr: ""
Oct 31 10:04:57.953: INFO: stdout: "e2e-test-crd-publish-openapi-9460-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Oct 31 10:04:57.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 delete e2e-test-crd-publish-openapi-9460-crds test-cr'
Oct 31 10:04:58.224: INFO: stderr: ""
Oct 31 10:04:58.224: INFO: stdout: "e2e-test-crd-publish-openapi-9460-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR 10/31/23 10:04:58.224
Oct 31 10:04:58.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 explain e2e-test-crd-publish-openapi-9460-crds'
Oct 31 10:04:58.577: INFO: stderr: ""
Oct 31 10:04:58.577: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9460-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:01.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-6080" for this suite. 10/31/23 10:05:01.874
------------------------------
â€¢ [SLOW TEST] [14.692 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:236

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:04:47.214
    Oct 31 10:04:47.214: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 10:04:47.215
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:04:47.366
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:04:47.501
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD preserving unknown fields in an embedded object [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:236
    Oct 31 10:04:47.553: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 10/31/23 10:04:55.686
    Oct 31 10:04:55.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 create -f -'
    Oct 31 10:04:57.087: INFO: stderr: ""
    Oct 31 10:04:57.087: INFO: stdout: "e2e-test-crd-publish-openapi-9460-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Oct 31 10:04:57.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 delete e2e-test-crd-publish-openapi-9460-crds test-cr'
    Oct 31 10:04:57.407: INFO: stderr: ""
    Oct 31 10:04:57.407: INFO: stdout: "e2e-test-crd-publish-openapi-9460-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    Oct 31 10:04:57.407: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 apply -f -'
    Oct 31 10:04:57.953: INFO: stderr: ""
    Oct 31 10:04:57.953: INFO: stdout: "e2e-test-crd-publish-openapi-9460-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
    Oct 31 10:04:57.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 --namespace=crd-publish-openapi-6080 delete e2e-test-crd-publish-openapi-9460-crds test-cr'
    Oct 31 10:04:58.224: INFO: stderr: ""
    Oct 31 10:04:58.224: INFO: stdout: "e2e-test-crd-publish-openapi-9460-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR 10/31/23 10:04:58.224
    Oct 31 10:04:58.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-6080 explain e2e-test-crd-publish-openapi-9460-crds'
    Oct 31 10:04:58.577: INFO: stderr: ""
    Oct 31 10:04:58.577: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9460-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:01.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-6080" for this suite. 10/31/23 10:05:01.874
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:01.908
Oct 31 10:05:01.908: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-lifecycle-hook 10/31/23 10:05:01.91
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:02.142
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:02.292
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 10/31/23 10:05:02.493
Oct 31 10:05:02.554: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-6529" to be "running and ready"
Oct 31 10:05:02.585: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 29.965894ms
Oct 31 10:05:02.585: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:05:04.593: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.03799592s
Oct 31 10:05:04.593: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Oct 31 10:05:04.593: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:212
STEP: create the pod with lifecycle hook 10/31/23 10:05:04.69
Oct 31 10:05:04.748: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-6529" to be "running and ready"
Oct 31 10:05:04.767: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 18.704335ms
Oct 31 10:05:04.767: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:05:06.776: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.028299532s
Oct 31 10:05:06.776: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
Oct 31 10:05:06.776: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 10/31/23 10:05:06.879
Oct 31 10:05:06.897: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Oct 31 10:05:06.986: INFO: Pod pod-with-prestop-http-hook still exists
Oct 31 10:05:08.988: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Oct 31 10:05:09.014: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook 10/31/23 10:05:09.014
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:09.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-6529" for this suite. 10/31/23 10:05:09.202
------------------------------
â€¢ [SLOW TEST] [7.398 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:212

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:01.908
    Oct 31 10:05:01.908: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-lifecycle-hook 10/31/23 10:05:01.91
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:02.142
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:02.292
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 10/31/23 10:05:02.493
    Oct 31 10:05:02.554: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-6529" to be "running and ready"
    Oct 31 10:05:02.585: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 29.965894ms
    Oct 31 10:05:02.585: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:05:04.593: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.03799592s
    Oct 31 10:05:04.593: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Oct 31 10:05:04.593: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop http hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:212
    STEP: create the pod with lifecycle hook 10/31/23 10:05:04.69
    Oct 31 10:05:04.748: INFO: Waiting up to 5m0s for pod "pod-with-prestop-http-hook" in namespace "container-lifecycle-hook-6529" to be "running and ready"
    Oct 31 10:05:04.767: INFO: Pod "pod-with-prestop-http-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 18.704335ms
    Oct 31 10:05:04.767: INFO: The phase of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:05:06.776: INFO: Pod "pod-with-prestop-http-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.028299532s
    Oct 31 10:05:06.776: INFO: The phase of Pod pod-with-prestop-http-hook is Running (Ready = true)
    Oct 31 10:05:06.776: INFO: Pod "pod-with-prestop-http-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 10/31/23 10:05:06.879
    Oct 31 10:05:06.897: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Oct 31 10:05:06.986: INFO: Pod pod-with-prestop-http-hook still exists
    Oct 31 10:05:08.988: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
    Oct 31 10:05:09.014: INFO: Pod pod-with-prestop-http-hook no longer exists
    STEP: check prestop hook 10/31/23 10:05:09.014
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:09.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-6529" for this suite. 10/31/23 10:05:09.202
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:09.306
Oct 31 10:05:09.306: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 10:05:09.308
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:09.56
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:09.698
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654
STEP: creating a collection of services 10/31/23 10:05:09.754
Oct 31 10:05:09.754: INFO: Creating e2e-svc-a-hs2zx
Oct 31 10:05:09.817: INFO: Creating e2e-svc-b-9nt57
Oct 31 10:05:09.882: INFO: Creating e2e-svc-c-w94f9
STEP: deleting service collection 10/31/23 10:05:09.992
Oct 31 10:05:10.233: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:10.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4235" for this suite. 10/31/23 10:05:10.288
------------------------------
â€¢ [1.087 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should delete a collection of services [Conformance]
  test/e2e/network/service.go:3654

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:09.306
    Oct 31 10:05:09.306: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 10:05:09.308
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:09.56
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:09.698
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should delete a collection of services [Conformance]
      test/e2e/network/service.go:3654
    STEP: creating a collection of services 10/31/23 10:05:09.754
    Oct 31 10:05:09.754: INFO: Creating e2e-svc-a-hs2zx
    Oct 31 10:05:09.817: INFO: Creating e2e-svc-b-9nt57
    Oct 31 10:05:09.882: INFO: Creating e2e-svc-c-w94f9
    STEP: deleting service collection 10/31/23 10:05:09.992
    Oct 31 10:05:10.233: INFO: Collection of services has been deleted
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:10.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4235" for this suite. 10/31/23 10:05:10.288
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:10.396
Oct 31 10:05:10.396: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 10:05:10.398
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:10.6
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:10.742
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154
STEP: creating a secret 10/31/23 10:05:10.882
STEP: listing secrets in all namespaces to ensure that there are more than zero 10/31/23 10:05:10.934
STEP: patching the secret 10/31/23 10:05:11.034
STEP: deleting the secret using a LabelSelector 10/31/23 10:05:11.183
STEP: listing secrets in all namespaces, searching for label name and value in patch 10/31/23 10:05:11.277
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:11.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-5868" for this suite. 10/31/23 10:05:11.426
------------------------------
â€¢ [1.049 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should patch a secret [Conformance]
  test/e2e/common/node/secrets.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:10.396
    Oct 31 10:05:10.396: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 10:05:10.398
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:10.6
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:10.742
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a secret [Conformance]
      test/e2e/common/node/secrets.go:154
    STEP: creating a secret 10/31/23 10:05:10.882
    STEP: listing secrets in all namespaces to ensure that there are more than zero 10/31/23 10:05:10.934
    STEP: patching the secret 10/31/23 10:05:11.034
    STEP: deleting the secret using a LabelSelector 10/31/23 10:05:11.183
    STEP: listing secrets in all namespaces, searching for label name and value in patch 10/31/23 10:05:11.277
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:11.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-5868" for this suite. 10/31/23 10:05:11.426
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl patch
  should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:11.45
Oct 31 10:05:11.450: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:05:11.452
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:11.701
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:11.837
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1652
STEP: creating Agnhost RC 10/31/23 10:05:11.982
Oct 31 10:05:11.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2359 create -f -'
Oct 31 10:05:13.080: INFO: stderr: ""
Oct 31 10:05:13.080: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 10/31/23 10:05:13.08
Oct 31 10:05:14.129: INFO: Selector matched 1 pods for map[app:agnhost]
Oct 31 10:05:14.129: INFO: Found 0 / 1
Oct 31 10:05:15.087: INFO: Selector matched 1 pods for map[app:agnhost]
Oct 31 10:05:15.087: INFO: Found 1 / 1
Oct 31 10:05:15.087: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods 10/31/23 10:05:15.087
Oct 31 10:05:15.142: INFO: Selector matched 1 pods for map[app:agnhost]
Oct 31 10:05:15.142: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Oct 31 10:05:15.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2359 patch pod agnhost-primary-fvqwz -p {"metadata":{"annotations":{"x":"y"}}}'
Oct 31 10:05:15.384: INFO: stderr: ""
Oct 31 10:05:15.384: INFO: stdout: "pod/agnhost-primary-fvqwz patched\n"
STEP: checking annotations 10/31/23 10:05:15.384
Oct 31 10:05:15.391: INFO: Selector matched 1 pods for map[app:agnhost]
Oct 31 10:05:15.391: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:15.391: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2359" for this suite. 10/31/23 10:05:15.468
------------------------------
â€¢ [4.031 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl patch
  test/e2e/kubectl/kubectl.go:1646
    should add annotations for pods in rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1652

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:11.45
    Oct 31 10:05:11.450: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:05:11.452
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:11.701
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:11.837
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should add annotations for pods in rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1652
    STEP: creating Agnhost RC 10/31/23 10:05:11.982
    Oct 31 10:05:11.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2359 create -f -'
    Oct 31 10:05:13.080: INFO: stderr: ""
    Oct 31 10:05:13.080: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 10/31/23 10:05:13.08
    Oct 31 10:05:14.129: INFO: Selector matched 1 pods for map[app:agnhost]
    Oct 31 10:05:14.129: INFO: Found 0 / 1
    Oct 31 10:05:15.087: INFO: Selector matched 1 pods for map[app:agnhost]
    Oct 31 10:05:15.087: INFO: Found 1 / 1
    Oct 31 10:05:15.087: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    STEP: patching all pods 10/31/23 10:05:15.087
    Oct 31 10:05:15.142: INFO: Selector matched 1 pods for map[app:agnhost]
    Oct 31 10:05:15.142: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Oct 31 10:05:15.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2359 patch pod agnhost-primary-fvqwz -p {"metadata":{"annotations":{"x":"y"}}}'
    Oct 31 10:05:15.384: INFO: stderr: ""
    Oct 31 10:05:15.384: INFO: stdout: "pod/agnhost-primary-fvqwz patched\n"
    STEP: checking annotations 10/31/23 10:05:15.384
    Oct 31 10:05:15.391: INFO: Selector matched 1 pods for map[app:agnhost]
    Oct 31 10:05:15.391: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:15.391: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2359" for this suite. 10/31/23 10:05:15.468
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Container Runtime blackbox test on terminated container
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:15.481
Oct 31 10:05:15.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-runtime 10/31/23 10:05:15.483
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:15.798
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:15.898
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:248
STEP: create the container 10/31/23 10:05:15.996
STEP: wait for the container to reach Succeeded 10/31/23 10:05:16.054
STEP: get the container status 10/31/23 10:05:20.189
STEP: the container should be terminated 10/31/23 10:05:20.242
STEP: the termination message should be set 10/31/23 10:05:20.242
Oct 31 10:05:20.242: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container 10/31/23 10:05:20.242
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:20.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-4097" for this suite. 10/31/23 10:05:20.555
------------------------------
â€¢ [SLOW TEST] [5.124 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    on terminated container
    test/e2e/common/node/runtime.go:137
      should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:15.481
    Oct 31 10:05:15.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-runtime 10/31/23 10:05:15.483
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:15.798
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:15.898
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:248
    STEP: create the container 10/31/23 10:05:15.996
    STEP: wait for the container to reach Succeeded 10/31/23 10:05:16.054
    STEP: get the container status 10/31/23 10:05:20.189
    STEP: the container should be terminated 10/31/23 10:05:20.242
    STEP: the termination message should be set 10/31/23 10:05:20.242
    Oct 31 10:05:20.242: INFO: Expected: &{OK} to match Container's Termination Message: OK --
    STEP: delete the container 10/31/23 10:05:20.242
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:20.460: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-4097" for this suite. 10/31/23 10:05:20.555
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label
  should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:20.61
Oct 31 10:05:20.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:05:20.611
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:20.79
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:20.885
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1494
STEP: creating the pod 10/31/23 10:05:21.027
Oct 31 10:05:21.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 create -f -'
Oct 31 10:05:21.435: INFO: stderr: ""
Oct 31 10:05:21.435: INFO: stdout: "pod/pause created\n"
Oct 31 10:05:21.435: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Oct 31 10:05:21.435: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-2943" to be "running and ready"
Oct 31 10:05:21.448: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 12.29976ms
Oct 31 10:05:21.448: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n' to be 'Running' but was 'Pending'
Oct 31 10:05:23.458: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.022413231s
Oct 31 10:05:23.458: INFO: Pod "pause" satisfied condition "running and ready"
Oct 31 10:05:23.458: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/kubectl/kubectl.go:1509
STEP: adding the label testing-label with value testing-label-value to a pod 10/31/23 10:05:23.458
Oct 31 10:05:23.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 label pods pause testing-label=testing-label-value'
Oct 31 10:05:23.698: INFO: stderr: ""
Oct 31 10:05:23.698: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value 10/31/23 10:05:23.698
Oct 31 10:05:23.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 get pod pause -L testing-label'
Oct 31 10:05:23.885: INFO: stderr: ""
Oct 31 10:05:23.885: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod 10/31/23 10:05:23.885
Oct 31 10:05:23.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 label pods pause testing-label-'
Oct 31 10:05:24.140: INFO: stderr: ""
Oct 31 10:05:24.140: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label 10/31/23 10:05:24.14
Oct 31 10:05:24.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 get pod pause -L testing-label'
Oct 31 10:05:24.337: INFO: stderr: ""
Oct 31 10:05:24.337: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1500
STEP: using delete to clean up resources 10/31/23 10:05:24.337
Oct 31 10:05:24.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 delete --grace-period=0 --force -f -'
Oct 31 10:05:24.561: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Oct 31 10:05:24.561: INFO: stdout: "pod \"pause\" force deleted\n"
Oct 31 10:05:24.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 get rc,svc -l name=pause --no-headers'
Oct 31 10:05:24.766: INFO: stderr: "No resources found in kubectl-2943 namespace.\n"
Oct 31 10:05:24.766: INFO: stdout: ""
Oct 31 10:05:24.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Oct 31 10:05:25.013: INFO: stderr: ""
Oct 31 10:05:25.013: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:25.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2943" for this suite. 10/31/23 10:05:25.077
------------------------------
â€¢ [4.551 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl label
  test/e2e/kubectl/kubectl.go:1492
    should update the label on a resource  [Conformance]
    test/e2e/kubectl/kubectl.go:1509

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:20.61
    Oct 31 10:05:20.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:05:20.611
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:20.79
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:20.885
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1494
    STEP: creating the pod 10/31/23 10:05:21.027
    Oct 31 10:05:21.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 create -f -'
    Oct 31 10:05:21.435: INFO: stderr: ""
    Oct 31 10:05:21.435: INFO: stdout: "pod/pause created\n"
    Oct 31 10:05:21.435: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
    Oct 31 10:05:21.435: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-2943" to be "running and ready"
    Oct 31 10:05:21.448: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 12.29976ms
    Oct 31 10:05:21.448: INFO: Error evaluating pod condition running and ready: want pod 'pause' on 'pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n' to be 'Running' but was 'Pending'
    Oct 31 10:05:23.458: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.022413231s
    Oct 31 10:05:23.458: INFO: Pod "pause" satisfied condition "running and ready"
    Oct 31 10:05:23.458: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
    [It] should update the label on a resource  [Conformance]
      test/e2e/kubectl/kubectl.go:1509
    STEP: adding the label testing-label with value testing-label-value to a pod 10/31/23 10:05:23.458
    Oct 31 10:05:23.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 label pods pause testing-label=testing-label-value'
    Oct 31 10:05:23.698: INFO: stderr: ""
    Oct 31 10:05:23.698: INFO: stdout: "pod/pause labeled\n"
    STEP: verifying the pod has the label testing-label with the value testing-label-value 10/31/23 10:05:23.698
    Oct 31 10:05:23.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 get pod pause -L testing-label'
    Oct 31 10:05:23.885: INFO: stderr: ""
    Oct 31 10:05:23.885: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
    STEP: removing the label testing-label of a pod 10/31/23 10:05:23.885
    Oct 31 10:05:23.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 label pods pause testing-label-'
    Oct 31 10:05:24.140: INFO: stderr: ""
    Oct 31 10:05:24.140: INFO: stdout: "pod/pause unlabeled\n"
    STEP: verifying the pod doesn't have the label testing-label 10/31/23 10:05:24.14
    Oct 31 10:05:24.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 get pod pause -L testing-label'
    Oct 31 10:05:24.337: INFO: stderr: ""
    Oct 31 10:05:24.337: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
    [AfterEach] Kubectl label
      test/e2e/kubectl/kubectl.go:1500
    STEP: using delete to clean up resources 10/31/23 10:05:24.337
    Oct 31 10:05:24.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 delete --grace-period=0 --force -f -'
    Oct 31 10:05:24.561: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
    Oct 31 10:05:24.561: INFO: stdout: "pod \"pause\" force deleted\n"
    Oct 31 10:05:24.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 get rc,svc -l name=pause --no-headers'
    Oct 31 10:05:24.766: INFO: stderr: "No resources found in kubectl-2943 namespace.\n"
    Oct 31 10:05:24.766: INFO: stdout: ""
    Oct 31 10:05:24.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2943 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
    Oct 31 10:05:25.013: INFO: stderr: ""
    Oct 31 10:05:25.013: INFO: stdout: ""
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:25.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2943" for this suite. 10/31/23 10:05:25.077
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:25.162
Oct 31 10:05:25.162: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 10:05:25.164
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:25.362
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:25.515
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803
STEP: Creating a ResourceQuota with best effort scope 10/31/23 10:05:25.651
STEP: Ensuring ResourceQuota status is calculated 10/31/23 10:05:25.74
STEP: Creating a ResourceQuota with not best effort scope 10/31/23 10:05:27.748
STEP: Ensuring ResourceQuota status is calculated 10/31/23 10:05:27.839
STEP: Creating a best-effort pod 10/31/23 10:05:29.888
STEP: Ensuring resource quota with best effort scope captures the pod usage 10/31/23 10:05:29.952
STEP: Ensuring resource quota with not best effort ignored the pod usage 10/31/23 10:05:31.999
STEP: Deleting the pod 10/31/23 10:05:34.006
STEP: Ensuring resource quota status released the pod usage 10/31/23 10:05:34.064
STEP: Creating a not best-effort pod 10/31/23 10:05:36.112
STEP: Ensuring resource quota with not best effort scope captures the pod usage 10/31/23 10:05:36.171
STEP: Ensuring resource quota with best effort scope ignored the pod usage 10/31/23 10:05:38.179
STEP: Deleting the pod 10/31/23 10:05:40.186
STEP: Ensuring resource quota status released the pod usage 10/31/23 10:05:40.255
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:42.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-776" for this suite. 10/31/23 10:05:42.375
------------------------------
â€¢ [SLOW TEST] [17.270 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/apimachinery/resource_quota.go:803

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:25.162
    Oct 31 10:05:25.162: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 10:05:25.164
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:25.362
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:25.515
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with best effort scope. [Conformance]
      test/e2e/apimachinery/resource_quota.go:803
    STEP: Creating a ResourceQuota with best effort scope 10/31/23 10:05:25.651
    STEP: Ensuring ResourceQuota status is calculated 10/31/23 10:05:25.74
    STEP: Creating a ResourceQuota with not best effort scope 10/31/23 10:05:27.748
    STEP: Ensuring ResourceQuota status is calculated 10/31/23 10:05:27.839
    STEP: Creating a best-effort pod 10/31/23 10:05:29.888
    STEP: Ensuring resource quota with best effort scope captures the pod usage 10/31/23 10:05:29.952
    STEP: Ensuring resource quota with not best effort ignored the pod usage 10/31/23 10:05:31.999
    STEP: Deleting the pod 10/31/23 10:05:34.006
    STEP: Ensuring resource quota status released the pod usage 10/31/23 10:05:34.064
    STEP: Creating a not best-effort pod 10/31/23 10:05:36.112
    STEP: Ensuring resource quota with not best effort scope captures the pod usage 10/31/23 10:05:36.171
    STEP: Ensuring resource quota with best effort scope ignored the pod usage 10/31/23 10:05:38.179
    STEP: Deleting the pod 10/31/23 10:05:40.186
    STEP: Ensuring resource quota status released the pod usage 10/31/23 10:05:40.255
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:42.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-776" for this suite. 10/31/23 10:05:42.375
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:42.434
Oct 31 10:05:42.435: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename svcaccounts 10/31/23 10:05:42.436
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:42.626
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:42.809
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810
STEP: Creating ServiceAccount "e2e-sa-qmf8j"  10/31/23 10:05:42.87
Oct 31 10:05:42.957: INFO: AutomountServiceAccountToken: false
STEP: Updating ServiceAccount "e2e-sa-qmf8j"  10/31/23 10:05:42.958
Oct 31 10:05:43.136: INFO: AutomountServiceAccountToken: true
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:43.137: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-4696" for this suite. 10/31/23 10:05:43.191
------------------------------
â€¢ [0.847 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should update a ServiceAccount [Conformance]
  test/e2e/auth/service_accounts.go:810

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:42.434
    Oct 31 10:05:42.435: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename svcaccounts 10/31/23 10:05:42.436
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:42.626
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:42.809
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should update a ServiceAccount [Conformance]
      test/e2e/auth/service_accounts.go:810
    STEP: Creating ServiceAccount "e2e-sa-qmf8j"  10/31/23 10:05:42.87
    Oct 31 10:05:42.957: INFO: AutomountServiceAccountToken: false
    STEP: Updating ServiceAccount "e2e-sa-qmf8j"  10/31/23 10:05:42.958
    Oct 31 10:05:43.136: INFO: AutomountServiceAccountToken: true
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:43.137: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-4696" for this suite. 10/31/23 10:05:43.191
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases
  should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:43.285
Oct 31 10:05:43.285: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubelet-test 10/31/23 10:05:43.287
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:43.402
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:43.561
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should write entries to /etc/hosts [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:148
STEP: Waiting for pod completion 10/31/23 10:05:43.671
Oct 31 10:05:43.671: INFO: Waiting up to 3m0s for pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f" in namespace "kubelet-test-9531" to be "completed"
Oct 31 10:05:43.690: INFO: Pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f": Phase="Pending", Reason="", readiness=false. Elapsed: 18.623911ms
Oct 31 10:05:45.698: INFO: Pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026299824s
Oct 31 10:05:47.697: INFO: Pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025279292s
Oct 31 10:05:47.697: INFO: Pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f" satisfied condition "completed"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Oct 31 10:05:47.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-9531" for this suite. 10/31/23 10:05:47.854
------------------------------
â€¢ [4.588 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling an agnhost Pod with hostAliases
  test/e2e/common/node/kubelet.go:140
    should write entries to /etc/hosts [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:148

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:43.285
    Oct 31 10:05:43.285: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubelet-test 10/31/23 10:05:43.287
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:43.402
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:43.561
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should write entries to /etc/hosts [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:148
    STEP: Waiting for pod completion 10/31/23 10:05:43.671
    Oct 31 10:05:43.671: INFO: Waiting up to 3m0s for pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f" in namespace "kubelet-test-9531" to be "completed"
    Oct 31 10:05:43.690: INFO: Pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f": Phase="Pending", Reason="", readiness=false. Elapsed: 18.623911ms
    Oct 31 10:05:45.698: INFO: Pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026299824s
    Oct 31 10:05:47.697: INFO: Pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025279292s
    Oct 31 10:05:47.697: INFO: Pod "agnhost-host-aliases0f028a82-17f6-4ff2-a0bb-e919ef76a50f" satisfied condition "completed"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:05:47.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-9531" for this suite. 10/31/23 10:05:47.854
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
[BeforeEach] [sig-api-machinery] Aggregator
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:05:47.88
Oct 31 10:05:47.881: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename aggregator 10/31/23 10:05:47.882
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:48.072
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:48.217
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:78
Oct 31 10:05:48.314: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100
STEP: Registering the sample API server. 10/31/23 10:05:48.315
Oct 31 10:05:49.180: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Oct 31 10:05:51.690: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:05:53.701: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:05:55.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:05:57.699: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:05:59.741: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:01.703: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:03.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:05.804: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:07.701: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:09.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:11.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:13.741: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:15.731: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:17.737: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:19.712: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:21.741: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:23.699: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:25.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:27.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:29.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:31.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:33.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:35.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:06:39.177: INFO: Waited 1.412064751s for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com 10/31/23 10:06:40.559
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 10/31/23 10:06:40.609
STEP: List APIServices 10/31/23 10:06:40.676
Oct 31 10:06:40.779: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:68
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/node/init/init.go:32
Oct 31 10:06:42.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Aggregator
  tear down framework | framework.go:193
STEP: Destroying namespace "aggregator-514" for this suite. 10/31/23 10:06:42.668
------------------------------
â€¢ [SLOW TEST] [54.849 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/apimachinery/aggregator.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Aggregator
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:05:47.88
    Oct 31 10:05:47.881: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename aggregator 10/31/23 10:05:47.882
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:05:48.072
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:05:48.217
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:78
    Oct 31 10:05:48.314: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    [It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
      test/e2e/apimachinery/aggregator.go:100
    STEP: Registering the sample API server. 10/31/23 10:05:48.315
    Oct 31 10:05:49.180: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
    Oct 31 10:05:51.690: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:05:53.701: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:05:55.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:05:57.699: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:05:59.741: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:01.703: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:03.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:05.804: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:07.701: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:09.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:11.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:13.741: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:15.731: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:17.737: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:19.712: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:21.741: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:23.699: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:25.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:27.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:29.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:31.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:33.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:35.700: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 5, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-55bd96fd47\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:06:39.177: INFO: Waited 1.412064751s for the sample-apiserver to be ready to handle requests.
    STEP: Read Status for v1alpha1.wardle.example.com 10/31/23 10:06:40.559
    STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' 10/31/23 10:06:40.609
    STEP: List APIServices 10/31/23 10:06:40.676
    Oct 31 10:06:40.779: INFO: Found v1alpha1.wardle.example.com in APIServiceList
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/apimachinery/aggregator.go:68
    [AfterEach] [sig-api-machinery] Aggregator
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:06:42.589: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Aggregator
      tear down framework | framework.go:193
    STEP: Destroying namespace "aggregator-514" for this suite. 10/31/23 10:06:42.668
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:06:42.738
Oct 31 10:06:42.738: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename deployment 10/31/23 10:06:42.739
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:06:42.896
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:06:43
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160
Oct 31 10:06:43.138: INFO: Creating deployment "webserver-deployment"
Oct 31 10:06:43.153: INFO: Waiting for observed generation 1
Oct 31 10:06:45.195: INFO: Waiting for all required pods to come up
Oct 31 10:06:45.258: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running 10/31/23 10:06:45.258
Oct 31 10:06:45.259: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-vq8w4" in namespace "deployment-6582" to be "running"
Oct 31 10:06:45.259: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-h5kzm" in namespace "deployment-6582" to be "running"
Oct 31 10:06:45.259: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-562zt" in namespace "deployment-6582" to be "running"
Oct 31 10:06:45.267: INFO: Pod "webserver-deployment-7f5969cbc7-vq8w4": Phase="Pending", Reason="", readiness=false. Elapsed: 8.594401ms
Oct 31 10:06:45.272: INFO: Pod "webserver-deployment-7f5969cbc7-562zt": Phase="Pending", Reason="", readiness=false. Elapsed: 12.43503ms
Oct 31 10:06:45.280: INFO: Pod "webserver-deployment-7f5969cbc7-h5kzm": Phase="Pending", Reason="", readiness=false. Elapsed: 21.097619ms
Oct 31 10:06:47.276: INFO: Pod "webserver-deployment-7f5969cbc7-vq8w4": Phase="Running", Reason="", readiness=true. Elapsed: 2.016819451s
Oct 31 10:06:47.276: INFO: Pod "webserver-deployment-7f5969cbc7-vq8w4" satisfied condition "running"
Oct 31 10:06:47.277: INFO: Pod "webserver-deployment-7f5969cbc7-562zt": Phase="Running", Reason="", readiness=true. Elapsed: 2.017694006s
Oct 31 10:06:47.277: INFO: Pod "webserver-deployment-7f5969cbc7-562zt" satisfied condition "running"
Oct 31 10:06:47.326: INFO: Pod "webserver-deployment-7f5969cbc7-h5kzm": Phase="Running", Reason="", readiness=true. Elapsed: 2.0673272s
Oct 31 10:06:47.326: INFO: Pod "webserver-deployment-7f5969cbc7-h5kzm" satisfied condition "running"
Oct 31 10:06:47.326: INFO: Waiting for deployment "webserver-deployment" to complete
Oct 31 10:06:47.427: INFO: Updating deployment "webserver-deployment" with a non-existent image
Oct 31 10:06:47.494: INFO: Updating deployment webserver-deployment
Oct 31 10:06:47.494: INFO: Waiting for observed generation 2
Oct 31 10:06:49.557: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Oct 31 10:06:49.608: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Oct 31 10:06:49.661: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Oct 31 10:06:49.810: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Oct 31 10:06:49.810: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Oct 31 10:06:49.903: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Oct 31 10:06:50.011: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Oct 31 10:06:50.011: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Oct 31 10:06:50.075: INFO: Updating deployment webserver-deployment
Oct 31 10:06:50.075: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Oct 31 10:06:50.161: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Oct 31 10:06:52.328: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Oct 31 10:06:52.369: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-6582  99ac5a6b-7cfc-4928-9888-cbe864102b43 28657 3 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006bf1e98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:33,UpdatedReplicas:13,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-10-31 10:06:50 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-10-31 10:06:50 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Oct 31 10:06:52.419: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-6582  428337d2-b171-447d-b1e4-ee90472eeda1 28653 3 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 99ac5a6b-7cfc-4928-9888-cbe864102b43 0xc006df2357 0xc006df2358}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"99ac5a6b-7cfc-4928-9888-cbe864102b43\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006df23f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:13,FullyLabeledReplicas:13,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Oct 31 10:06:52.419: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Oct 31 10:06:52.420: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-6582  78c23458-e8e4-4371-80c4-6e6e426deb5f 28654 3 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 99ac5a6b-7cfc-4928-9888-cbe864102b43 0xc006df2267 0xc006df2268}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"99ac5a6b-7cfc-4928-9888-cbe864102b43\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006df22f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:20,FullyLabeledReplicas:20,ObservedGeneration:3,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Oct 31 10:06:52.468: INFO: Pod "webserver-deployment-7f5969cbc7-25gbf" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-25gbf webserver-deployment-7f5969cbc7- deployment-6582  6ea130aa-6d5f-4fd1-9986-64b655f54a18 28730 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df28f7 0xc006df28f8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zp8w9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zp8w9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.469: INFO: Pod "webserver-deployment-7f5969cbc7-562zt" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-562zt webserver-deployment-7f5969cbc7- deployment-6582  4823a95a-61b1-42e2-a0bc-6118b6cd2f48 28489 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df2ab7 0xc006df2ab8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6wvcq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6wvcq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:10.200.0.68,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c1fb0a9fadbf4572be96cf43bf0b3f7569ef802bde5b3a179108f6c2e02ed2af,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.0.68,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.470: INFO: Pod "webserver-deployment-7f5969cbc7-5t7ch" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-5t7ch webserver-deployment-7f5969cbc7- deployment-6582  b4510e5d-bf5a-4208-a243-abb9cad2b9af 28712 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df2c90 0xc006df2c91}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zktsk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zktsk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.470: INFO: Pod "webserver-deployment-7f5969cbc7-728zr" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-728zr webserver-deployment-7f5969cbc7- deployment-6582  96b4980a-c0da-4f86-b957-465d121b072b 28643 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df2e47 0xc006df2e48}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gpqnv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gpqnv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.471: INFO: Pod "webserver-deployment-7f5969cbc7-9dcz2" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9dcz2 webserver-deployment-7f5969cbc7- deployment-6582  5d36ea0a-2a73-4c45-a205-3301b604e881 28486 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3007 0xc006df3008}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.141\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8hkdx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8hkdx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.141,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://81cab8c770ac07b2681d2bcc939b972d12d4e7b352b4aaa3b66dc354403fe410,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.141,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.472: INFO: Pod "webserver-deployment-7f5969cbc7-9nnp4" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9nnp4 webserver-deployment-7f5969cbc7- deployment-6582  ab242281-3f47-4c63-a9e8-e7c5bab11bab 28724 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df31e7 0xc006df31e8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mmw8k,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mmw8k,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.472: INFO: Pod "webserver-deployment-7f5969cbc7-9v9vt" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9v9vt webserver-deployment-7f5969cbc7- deployment-6582  bd6df87c-e30c-4dae-9dd6-b06d9f9d35f2 28655 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df33a7 0xc006df33a8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qr6n7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qr6n7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.473: INFO: Pod "webserver-deployment-7f5969cbc7-fm6cv" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fm6cv webserver-deployment-7f5969cbc7- deployment-6582  0ab573f2-5ee6-4faf-8bcd-38258ebe4b9a 28695 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3567 0xc006df3568}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nnhx5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nnhx5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.474: INFO: Pod "webserver-deployment-7f5969cbc7-fx8bq" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fx8bq webserver-deployment-7f5969cbc7- deployment-6582  843ae381-fab4-4fe9-a274-61c97b04c041 28688 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3727 0xc006df3728}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z4p64,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z4p64,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.474: INFO: Pod "webserver-deployment-7f5969cbc7-gfqqp" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-gfqqp webserver-deployment-7f5969cbc7- deployment-6582  86d0b483-4731-4e07-aa0c-40fcf16aa104 28751 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df38e7 0xc006df38e8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cmlnq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cmlnq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.475: INFO: Pod "webserver-deployment-7f5969cbc7-h5kzm" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-h5kzm webserver-deployment-7f5969cbc7- deployment-6582  cbe483cb-2f84-461b-bed4-6e26aa697ab2 28493 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3aa7 0xc006df3aa8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.140\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z45tn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z45tn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.140,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c96332a94c93ad12612cd54dabad545dd5a28ca974e5ee019dbbb790bd61f0ec,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.140,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.475: INFO: Pod "webserver-deployment-7f5969cbc7-p66w8" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-p66w8 webserver-deployment-7f5969cbc7- deployment-6582  f71ef0ac-9ef5-423b-8152-6c2ed2529e81 28471 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3c87 0xc006df3c88}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.210\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x6n4q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x6n4q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.210,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://621a572892623d1c9d4370ed702863df979f0358697df53e29b0edfdd396567c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.210,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.476: INFO: Pod "webserver-deployment-7f5969cbc7-qldnx" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qldnx webserver-deployment-7f5969cbc7- deployment-6582  a0342e7d-62d7-4346-9d46-b14dd6a3091b 28690 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3e67 0xc006df3e68}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9ggdw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9ggdw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.482: INFO: Pod "webserver-deployment-7f5969cbc7-qzlmk" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qzlmk webserver-deployment-7f5969cbc7- deployment-6582  3a1f3979-1855-4537-8d11-3ffa5adadc80 28479 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f20027 0xc006f20028}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.211\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-d9sjj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-d9sjj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.211,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://cb345da4cdb48175def49304905117992e8c9c17059ef0be03570a7d4fea0c19,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.211,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.482: INFO: Pod "webserver-deployment-7f5969cbc7-t5xts" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-t5xts webserver-deployment-7f5969cbc7- deployment-6582  e70c3e4e-6ef5-4c2f-ae92-44469b81747d 28709 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f20207 0xc006f20208}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qwvbr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qwvbr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.483: INFO: Pod "webserver-deployment-7f5969cbc7-t7wwd" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-t7wwd webserver-deployment-7f5969cbc7- deployment-6582  0aba31ff-715c-4b1e-a96b-59cc09f74c42 28641 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f203c7 0xc006f203c8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7qw8k,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7qw8k,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.483: INFO: Pod "webserver-deployment-7f5969cbc7-tjl5d" is not available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-tjl5d webserver-deployment-7f5969cbc7- deployment-6582  0bff086f-f019-4c0e-8f5e-d7c92abfd23d 28664 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f20520 0xc006f20521}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-w657h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-w657h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.484: INFO: Pod "webserver-deployment-7f5969cbc7-vfgmn" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vfgmn webserver-deployment-7f5969cbc7- deployment-6582  1be67218-eb58-4cbf-8286-091f14f19426 28465 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f206d7 0xc006f206d8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.212\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cqkk2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cqkk2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.212,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://6b6c41b41d562ae4cc1a873f2b03f4a4823645f44fa71b5d6eca7894afe26f96,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.212,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.484: INFO: Pod "webserver-deployment-7f5969cbc7-vm89h" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vm89h webserver-deployment-7f5969cbc7- deployment-6582  46c48848-49d4-4d4d-b4a0-d109186ffc5b 28447 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f208b7 0xc006f208b8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.67\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r9shv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r9shv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:10.200.0.67,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://df30feccdc55d3e807ea284ae45c1fed78273591d1295e59a5e5c3f82a733a0b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.0.67,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.485: INFO: Pod "webserver-deployment-7f5969cbc7-vq8w4" is available:
&Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vq8w4 webserver-deployment-7f5969cbc7- deployment-6582  a3bbe4ad-4724-468b-8e5a-d0c4339766f6 28496 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f20a90 0xc006f20a91}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.69\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9tsnd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9tsnd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:10.200.0.69,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c59031364b8fdd9c5b045a4f8e6b700b8d1ae1ca6bf6e56a10cff64b96f73bc3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.0.69,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.486: INFO: Pod "webserver-deployment-d9f79cb5-4hx86" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-4hx86 webserver-deployment-d9f79cb5- deployment-6582  3330f85e-8608-4ff9-bb84-2c82a7c468f4 28555 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f20c4f 0xc006f20c60}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9hmqr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9hmqr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.486: INFO: Pod "webserver-deployment-d9f79cb5-4qm9c" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-4qm9c webserver-deployment-d9f79cb5- deployment-6582  b4733886-1e7a-49a6-b374-a9a076017cb1 28746 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f20e1f 0xc006f20e30}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.144\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7t2w4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7t2w4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.144,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.144,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.486: INFO: Pod "webserver-deployment-d9f79cb5-5rvkc" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-5rvkc webserver-deployment-d9f79cb5- deployment-6582  a67203d7-8db3-4017-bec7-f8a24b29c4ff 28662 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f2101f 0xc006f21030}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mzm6g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mzm6g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.487: INFO: Pod "webserver-deployment-d9f79cb5-bbpvc" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-bbpvc webserver-deployment-d9f79cb5- deployment-6582  e378cd71-bc19-4b49-b659-06d04d70bf5b 28703 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f211ef 0xc006f21200}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2wx6c,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2wx6c,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.487: INFO: Pod "webserver-deployment-d9f79cb5-fdsb8" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-fdsb8 webserver-deployment-d9f79cb5- deployment-6582  46859b7c-17ad-4965-bdb8-9a0d62c97410 28665 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f213bf 0xc006f213d0}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lnwtb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lnwtb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.488: INFO: Pod "webserver-deployment-d9f79cb5-g2z5n" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-g2z5n webserver-deployment-d9f79cb5- deployment-6582  87eb7a44-6c3a-4fe5-8c30-1b4fd2d99c9f 28722 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f2158f 0xc006f215a0}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5hw8l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5hw8l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.489: INFO: Pod "webserver-deployment-d9f79cb5-hptmk" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-hptmk webserver-deployment-d9f79cb5- deployment-6582  4f618b7e-49ff-4637-a5c6-69d8c58d33c5 28715 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f2175f 0xc006f21770}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7qtbp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7qtbp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.489: INFO: Pod "webserver-deployment-d9f79cb5-krs6k" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-krs6k webserver-deployment-d9f79cb5- deployment-6582  3eaa15d2-aaa6-417c-99b9-be63b287b445 28731 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f2192f 0xc006f21940}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-n9p82,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-n9p82,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.489: INFO: Pod "webserver-deployment-d9f79cb5-pcsfw" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-pcsfw webserver-deployment-d9f79cb5- deployment-6582  edc3e9b9-3987-47f9-b042-06760dc1bbe1 28559 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f21aff 0xc006f21b10}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9gpw5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9gpw5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.490: INFO: Pod "webserver-deployment-d9f79cb5-r5mv8" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-r5mv8 webserver-deployment-d9f79cb5- deployment-6582  fb82da6c-e999-490d-8cf6-8cda8d05979b 28545 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f21ccf 0xc006f21ce0}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bbf7q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bbf7q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.491: INFO: Pod "webserver-deployment-d9f79cb5-rhnth" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-rhnth webserver-deployment-d9f79cb5- deployment-6582  f610cb98-4128-4f25-90c8-c06ca8b79e65 28719 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f21e9f 0xc006f21eb0}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5n8fz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5n8fz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.492: INFO: Pod "webserver-deployment-d9f79cb5-rmjzn" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-rmjzn webserver-deployment-d9f79cb5- deployment-6582  14674c57-67a4-42e4-83e8-4aa8fdf4bc2f 28640 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f4006f 0xc006f40080}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6bsbg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6bsbg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:06:52.492: INFO: Pod "webserver-deployment-d9f79cb5-x9x9d" is not available:
&Pod{ObjectMeta:{webserver-deployment-d9f79cb5-x9x9d webserver-deployment-d9f79cb5- deployment-6582  a6441925-782b-4d6e-baf7-43f3742d57be 28736 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f4023f 0xc006f40250}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.70\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v2522,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v2522,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:10.200.0.70,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.0.70,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Oct 31 10:06:52.497: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-6582" for this suite. 10/31/23 10:06:52.521
------------------------------
â€¢ [SLOW TEST] [9.868 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/apps/deployment.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:06:42.738
    Oct 31 10:06:42.738: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename deployment 10/31/23 10:06:42.739
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:06:42.896
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:06:43
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should support proportional scaling [Conformance]
      test/e2e/apps/deployment.go:160
    Oct 31 10:06:43.138: INFO: Creating deployment "webserver-deployment"
    Oct 31 10:06:43.153: INFO: Waiting for observed generation 1
    Oct 31 10:06:45.195: INFO: Waiting for all required pods to come up
    Oct 31 10:06:45.258: INFO: Pod name httpd: Found 10 pods out of 10
    STEP: ensuring each pod is running 10/31/23 10:06:45.258
    Oct 31 10:06:45.259: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-vq8w4" in namespace "deployment-6582" to be "running"
    Oct 31 10:06:45.259: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-h5kzm" in namespace "deployment-6582" to be "running"
    Oct 31 10:06:45.259: INFO: Waiting up to 5m0s for pod "webserver-deployment-7f5969cbc7-562zt" in namespace "deployment-6582" to be "running"
    Oct 31 10:06:45.267: INFO: Pod "webserver-deployment-7f5969cbc7-vq8w4": Phase="Pending", Reason="", readiness=false. Elapsed: 8.594401ms
    Oct 31 10:06:45.272: INFO: Pod "webserver-deployment-7f5969cbc7-562zt": Phase="Pending", Reason="", readiness=false. Elapsed: 12.43503ms
    Oct 31 10:06:45.280: INFO: Pod "webserver-deployment-7f5969cbc7-h5kzm": Phase="Pending", Reason="", readiness=false. Elapsed: 21.097619ms
    Oct 31 10:06:47.276: INFO: Pod "webserver-deployment-7f5969cbc7-vq8w4": Phase="Running", Reason="", readiness=true. Elapsed: 2.016819451s
    Oct 31 10:06:47.276: INFO: Pod "webserver-deployment-7f5969cbc7-vq8w4" satisfied condition "running"
    Oct 31 10:06:47.277: INFO: Pod "webserver-deployment-7f5969cbc7-562zt": Phase="Running", Reason="", readiness=true. Elapsed: 2.017694006s
    Oct 31 10:06:47.277: INFO: Pod "webserver-deployment-7f5969cbc7-562zt" satisfied condition "running"
    Oct 31 10:06:47.326: INFO: Pod "webserver-deployment-7f5969cbc7-h5kzm": Phase="Running", Reason="", readiness=true. Elapsed: 2.0673272s
    Oct 31 10:06:47.326: INFO: Pod "webserver-deployment-7f5969cbc7-h5kzm" satisfied condition "running"
    Oct 31 10:06:47.326: INFO: Waiting for deployment "webserver-deployment" to complete
    Oct 31 10:06:47.427: INFO: Updating deployment "webserver-deployment" with a non-existent image
    Oct 31 10:06:47.494: INFO: Updating deployment webserver-deployment
    Oct 31 10:06:47.494: INFO: Waiting for observed generation 2
    Oct 31 10:06:49.557: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
    Oct 31 10:06:49.608: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
    Oct 31 10:06:49.661: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Oct 31 10:06:49.810: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
    Oct 31 10:06:49.810: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
    Oct 31 10:06:49.903: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
    Oct 31 10:06:50.011: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
    Oct 31 10:06:50.011: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
    Oct 31 10:06:50.075: INFO: Updating deployment webserver-deployment
    Oct 31 10:06:50.075: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
    Oct 31 10:06:50.161: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
    Oct 31 10:06:52.328: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Oct 31 10:06:52.369: INFO: Deployment "webserver-deployment":
    &Deployment{ObjectMeta:{webserver-deployment  deployment-6582  99ac5a6b-7cfc-4928-9888-cbe864102b43 28657 3 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006bf1e98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:33,UpdatedReplicas:13,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-10-31 10:06:50 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-d9f79cb5" is progressing.,LastUpdateTime:2023-10-31 10:06:50 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

    Oct 31 10:06:52.419: INFO: New ReplicaSet "webserver-deployment-d9f79cb5" of Deployment "webserver-deployment":
    &ReplicaSet{ObjectMeta:{webserver-deployment-d9f79cb5  deployment-6582  428337d2-b171-447d-b1e4-ee90472eeda1 28653 3 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 99ac5a6b-7cfc-4928-9888-cbe864102b43 0xc006df2357 0xc006df2358}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"99ac5a6b-7cfc-4928-9888-cbe864102b43\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: d9f79cb5,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [] [] []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006df23f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:13,FullyLabeledReplicas:13,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 10:06:52.419: INFO: All old ReplicaSets of Deployment "webserver-deployment":
    Oct 31 10:06:52.420: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-7f5969cbc7  deployment-6582  78c23458-e8e4-4371-80c4-6e6e426deb5f 28654 3 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 99ac5a6b-7cfc-4928-9888-cbe864102b43 0xc006df2267 0xc006df2268}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"99ac5a6b-7cfc-4928-9888-cbe864102b43\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 7f5969cbc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc006df22f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:20,FullyLabeledReplicas:20,ObservedGeneration:3,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 10:06:52.468: INFO: Pod "webserver-deployment-7f5969cbc7-25gbf" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-25gbf webserver-deployment-7f5969cbc7- deployment-6582  6ea130aa-6d5f-4fd1-9986-64b655f54a18 28730 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df28f7 0xc006df28f8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zp8w9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zp8w9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.469: INFO: Pod "webserver-deployment-7f5969cbc7-562zt" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-562zt webserver-deployment-7f5969cbc7- deployment-6582  4823a95a-61b1-42e2-a0bc-6118b6cd2f48 28489 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df2ab7 0xc006df2ab8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.68\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6wvcq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6wvcq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:10.200.0.68,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c1fb0a9fadbf4572be96cf43bf0b3f7569ef802bde5b3a179108f6c2e02ed2af,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.0.68,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.470: INFO: Pod "webserver-deployment-7f5969cbc7-5t7ch" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-5t7ch webserver-deployment-7f5969cbc7- deployment-6582  b4510e5d-bf5a-4208-a243-abb9cad2b9af 28712 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df2c90 0xc006df2c91}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zktsk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zktsk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.470: INFO: Pod "webserver-deployment-7f5969cbc7-728zr" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-728zr webserver-deployment-7f5969cbc7- deployment-6582  96b4980a-c0da-4f86-b957-465d121b072b 28643 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df2e47 0xc006df2e48}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gpqnv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gpqnv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.471: INFO: Pod "webserver-deployment-7f5969cbc7-9dcz2" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9dcz2 webserver-deployment-7f5969cbc7- deployment-6582  5d36ea0a-2a73-4c45-a205-3301b604e881 28486 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3007 0xc006df3008}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.141\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8hkdx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8hkdx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.141,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://81cab8c770ac07b2681d2bcc939b972d12d4e7b352b4aaa3b66dc354403fe410,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.141,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.472: INFO: Pod "webserver-deployment-7f5969cbc7-9nnp4" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9nnp4 webserver-deployment-7f5969cbc7- deployment-6582  ab242281-3f47-4c63-a9e8-e7c5bab11bab 28724 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df31e7 0xc006df31e8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mmw8k,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mmw8k,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.472: INFO: Pod "webserver-deployment-7f5969cbc7-9v9vt" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-9v9vt webserver-deployment-7f5969cbc7- deployment-6582  bd6df87c-e30c-4dae-9dd6-b06d9f9d35f2 28655 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df33a7 0xc006df33a8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qr6n7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qr6n7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.473: INFO: Pod "webserver-deployment-7f5969cbc7-fm6cv" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fm6cv webserver-deployment-7f5969cbc7- deployment-6582  0ab573f2-5ee6-4faf-8bcd-38258ebe4b9a 28695 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3567 0xc006df3568}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-nnhx5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-nnhx5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.474: INFO: Pod "webserver-deployment-7f5969cbc7-fx8bq" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-fx8bq webserver-deployment-7f5969cbc7- deployment-6582  843ae381-fab4-4fe9-a274-61c97b04c041 28688 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3727 0xc006df3728}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z4p64,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z4p64,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.474: INFO: Pod "webserver-deployment-7f5969cbc7-gfqqp" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-gfqqp webserver-deployment-7f5969cbc7- deployment-6582  86d0b483-4731-4e07-aa0c-40fcf16aa104 28751 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df38e7 0xc006df38e8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cmlnq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cmlnq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.475: INFO: Pod "webserver-deployment-7f5969cbc7-h5kzm" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-h5kzm webserver-deployment-7f5969cbc7- deployment-6582  cbe483cb-2f84-461b-bed4-6e26aa697ab2 28493 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3aa7 0xc006df3aa8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.140\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z45tn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z45tn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.140,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c96332a94c93ad12612cd54dabad545dd5a28ca974e5ee019dbbb790bd61f0ec,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.140,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.475: INFO: Pod "webserver-deployment-7f5969cbc7-p66w8" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-p66w8 webserver-deployment-7f5969cbc7- deployment-6582  f71ef0ac-9ef5-423b-8152-6c2ed2529e81 28471 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3c87 0xc006df3c88}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.210\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x6n4q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x6n4q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.210,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://621a572892623d1c9d4370ed702863df979f0358697df53e29b0edfdd396567c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.210,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.476: INFO: Pod "webserver-deployment-7f5969cbc7-qldnx" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qldnx webserver-deployment-7f5969cbc7- deployment-6582  a0342e7d-62d7-4346-9d46-b14dd6a3091b 28690 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006df3e67 0xc006df3e68}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9ggdw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9ggdw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.482: INFO: Pod "webserver-deployment-7f5969cbc7-qzlmk" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-qzlmk webserver-deployment-7f5969cbc7- deployment-6582  3a1f3979-1855-4537-8d11-3ffa5adadc80 28479 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f20027 0xc006f20028}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.211\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-d9sjj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-d9sjj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.211,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://cb345da4cdb48175def49304905117992e8c9c17059ef0be03570a7d4fea0c19,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.211,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.482: INFO: Pod "webserver-deployment-7f5969cbc7-t5xts" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-t5xts webserver-deployment-7f5969cbc7- deployment-6582  e70c3e4e-6ef5-4c2f-ae92-44469b81747d 28709 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f20207 0xc006f20208}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qwvbr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qwvbr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.483: INFO: Pod "webserver-deployment-7f5969cbc7-t7wwd" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-t7wwd webserver-deployment-7f5969cbc7- deployment-6582  0aba31ff-715c-4b1e-a96b-59cc09f74c42 28641 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f203c7 0xc006f203c8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7qw8k,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7qw8k,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.483: INFO: Pod "webserver-deployment-7f5969cbc7-tjl5d" is not available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-tjl5d webserver-deployment-7f5969cbc7- deployment-6582  0bff086f-f019-4c0e-8f5e-d7c92abfd23d 28664 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f20520 0xc006f20521}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-w657h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-w657h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.484: INFO: Pod "webserver-deployment-7f5969cbc7-vfgmn" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vfgmn webserver-deployment-7f5969cbc7- deployment-6582  1be67218-eb58-4cbf-8286-091f14f19426 28465 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f206d7 0xc006f206d8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.212\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-cqkk2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-cqkk2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.212,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://6b6c41b41d562ae4cc1a873f2b03f4a4823645f44fa71b5d6eca7894afe26f96,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.212,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.484: INFO: Pod "webserver-deployment-7f5969cbc7-vm89h" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vm89h webserver-deployment-7f5969cbc7- deployment-6582  46c48848-49d4-4d4d-b4a0-d109186ffc5b 28447 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f208b7 0xc006f208b8}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.67\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-r9shv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-r9shv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:10.200.0.67,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://df30feccdc55d3e807ea284ae45c1fed78273591d1295e59a5e5c3f82a733a0b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.0.67,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.485: INFO: Pod "webserver-deployment-7f5969cbc7-vq8w4" is available:
    &Pod{ObjectMeta:{webserver-deployment-7f5969cbc7-vq8w4 webserver-deployment-7f5969cbc7- deployment-6582  a3bbe4ad-4724-468b-8e5a-d0c4339766f6 28496 0 2023-10-31 10:06:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:7f5969cbc7] map[] [{apps/v1 ReplicaSet webserver-deployment-7f5969cbc7 78c23458-e8e4-4371-80c4-6e6e426deb5f 0xc006f20a90 0xc006f20a91}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78c23458-e8e4-4371-80c4-6e6e426deb5f\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.69\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9tsnd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9tsnd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:10.200.0.69,StartTime:2023-10-31 10:06:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:06:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22,ContainerID:containerd://c59031364b8fdd9c5b045a4f8e6b700b8d1ae1ca6bf6e56a10cff64b96f73bc3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.0.69,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.486: INFO: Pod "webserver-deployment-d9f79cb5-4hx86" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-4hx86 webserver-deployment-d9f79cb5- deployment-6582  3330f85e-8608-4ff9-bb84-2c82a7c468f4 28555 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f20c4f 0xc006f20c60}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9hmqr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9hmqr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.486: INFO: Pod "webserver-deployment-d9f79cb5-4qm9c" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-4qm9c webserver-deployment-d9f79cb5- deployment-6582  b4733886-1e7a-49a6-b374-a9a076017cb1 28746 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f20e1f 0xc006f20e30}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.144\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7t2w4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7t2w4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:10.200.2.144,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.2.144,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.486: INFO: Pod "webserver-deployment-d9f79cb5-5rvkc" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-5rvkc webserver-deployment-d9f79cb5- deployment-6582  a67203d7-8db3-4017-bec7-f8a24b29c4ff 28662 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f2101f 0xc006f21030}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mzm6g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mzm6g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.487: INFO: Pod "webserver-deployment-d9f79cb5-bbpvc" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-bbpvc webserver-deployment-d9f79cb5- deployment-6582  e378cd71-bc19-4b49-b659-06d04d70bf5b 28703 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f211ef 0xc006f21200}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2wx6c,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2wx6c,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.487: INFO: Pod "webserver-deployment-d9f79cb5-fdsb8" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-fdsb8 webserver-deployment-d9f79cb5- deployment-6582  46859b7c-17ad-4965-bdb8-9a0d62c97410 28665 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f213bf 0xc006f213d0}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lnwtb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lnwtb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.488: INFO: Pod "webserver-deployment-d9f79cb5-g2z5n" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-g2z5n webserver-deployment-d9f79cb5- deployment-6582  87eb7a44-6c3a-4fe5-8c30-1b4fd2d99c9f 28722 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f2158f 0xc006f215a0}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5hw8l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5hw8l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.489: INFO: Pod "webserver-deployment-d9f79cb5-hptmk" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-hptmk webserver-deployment-d9f79cb5- deployment-6582  4f618b7e-49ff-4637-a5c6-69d8c58d33c5 28715 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f2175f 0xc006f21770}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7qtbp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7qtbp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.489: INFO: Pod "webserver-deployment-d9f79cb5-krs6k" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-krs6k webserver-deployment-d9f79cb5- deployment-6582  3eaa15d2-aaa6-417c-99b9-be63b287b445 28731 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f2192f 0xc006f21940}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-n9p82,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-n9p82,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.489: INFO: Pod "webserver-deployment-d9f79cb5-pcsfw" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-pcsfw webserver-deployment-d9f79cb5- deployment-6582  edc3e9b9-3987-47f9-b042-06760dc1bbe1 28559 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f21aff 0xc006f21b10}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9gpw5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9gpw5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.490: INFO: Pod "webserver-deployment-d9f79cb5-r5mv8" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-r5mv8 webserver-deployment-d9f79cb5- deployment-6582  fb82da6c-e999-490d-8cf6-8cda8d05979b 28545 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f21ccf 0xc006f21ce0}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bbf7q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bbf7q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.491: INFO: Pod "webserver-deployment-d9f79cb5-rhnth" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-rhnth webserver-deployment-d9f79cb5- deployment-6582  f610cb98-4128-4f25-90c8-c06ca8b79e65 28719 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f21e9f 0xc006f21eb0}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:51 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5n8fz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5n8fz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.492: INFO: Pod "webserver-deployment-d9f79cb5-rmjzn" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-rmjzn webserver-deployment-d9f79cb5- deployment-6582  14674c57-67a4-42e4-83e8-4aa8fdf4bc2f 28640 0 2023-10-31 10:06:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f4006f 0xc006f40080}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:50 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-6bsbg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-6bsbg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:50 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:,StartTime:2023-10-31 10:06:50 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:06:52.492: INFO: Pod "webserver-deployment-d9f79cb5-x9x9d" is not available:
    &Pod{ObjectMeta:{webserver-deployment-d9f79cb5-x9x9d webserver-deployment-d9f79cb5- deployment-6582  a6441925-782b-4d6e-baf7-43f3742d57be 28736 0 2023-10-31 10:06:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:d9f79cb5] map[] [{apps/v1 ReplicaSet webserver-deployment-d9f79cb5 428337d2-b171-447d-b1e4-ee90472eeda1 0xc006f4023f 0xc006f40250}] [] [{kube-controller-manager Update v1 2023-10-31 10:06:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"428337d2-b171-447d-b1e4-ee90472eeda1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:06:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.70\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v2522,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v2522,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:06:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.183,PodIP:10.200.0.70,StartTime:2023-10-31 10:06:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.0.70,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:06:52.497: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-6582" for this suite. 10/31/23 10:06:52.521
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:06:52.612
Oct 31 10:06:52.613: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replicaset 10/31/23 10:06:52.614
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:06:52.769
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:06:52.907
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154
Oct 31 10:06:53.179: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 10/31/23 10:06:53.179
Oct 31 10:06:53.186: INFO: Waiting up to 5m0s for pod "test-rs-4k46l" in namespace "replicaset-4802" to be "running"
Oct 31 10:06:53.202: INFO: Pod "test-rs-4k46l": Phase="Pending", Reason="", readiness=false. Elapsed: 16.35723ms
Oct 31 10:06:55.243: INFO: Pod "test-rs-4k46l": Phase="Pending", Reason="", readiness=false. Elapsed: 2.056750392s
Oct 31 10:06:57.234: INFO: Pod "test-rs-4k46l": Phase="Running", Reason="", readiness=true. Elapsed: 4.047418543s
Oct 31 10:06:57.234: INFO: Pod "test-rs-4k46l" satisfied condition "running"
STEP: Scaling up "test-rs" replicaset  10/31/23 10:06:57.234
Oct 31 10:06:57.266: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet 10/31/23 10:06:57.266
W1031 10:06:57.297576      18 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
Oct 31 10:06:57.318: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 1, AvailableReplicas 1
Oct 31 10:06:57.318: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 1, AvailableReplicas 1
Oct 31 10:06:57.331: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 1, AvailableReplicas 1
Oct 31 10:06:57.449: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 1, AvailableReplicas 1
Oct 31 10:07:00.180: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 2, AvailableReplicas 2
Oct 31 10:07:00.245: INFO: observed Replicaset test-rs in namespace replicaset-4802 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Oct 31 10:07:00.246: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-4802" for this suite. 10/31/23 10:07:00.297
------------------------------
â€¢ [SLOW TEST] [7.752 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/apps/replica_set.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:06:52.612
    Oct 31 10:06:52.613: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replicaset 10/31/23 10:06:52.614
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:06:52.769
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:06:52.907
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replace and Patch tests [Conformance]
      test/e2e/apps/replica_set.go:154
    Oct 31 10:06:53.179: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 10/31/23 10:06:53.179
    Oct 31 10:06:53.186: INFO: Waiting up to 5m0s for pod "test-rs-4k46l" in namespace "replicaset-4802" to be "running"
    Oct 31 10:06:53.202: INFO: Pod "test-rs-4k46l": Phase="Pending", Reason="", readiness=false. Elapsed: 16.35723ms
    Oct 31 10:06:55.243: INFO: Pod "test-rs-4k46l": Phase="Pending", Reason="", readiness=false. Elapsed: 2.056750392s
    Oct 31 10:06:57.234: INFO: Pod "test-rs-4k46l": Phase="Running", Reason="", readiness=true. Elapsed: 4.047418543s
    Oct 31 10:06:57.234: INFO: Pod "test-rs-4k46l" satisfied condition "running"
    STEP: Scaling up "test-rs" replicaset  10/31/23 10:06:57.234
    Oct 31 10:06:57.266: INFO: Updating replica set "test-rs"
    STEP: patching the ReplicaSet 10/31/23 10:06:57.266
    W1031 10:06:57.297576      18 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
    Oct 31 10:06:57.318: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 1, AvailableReplicas 1
    Oct 31 10:06:57.318: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 1, AvailableReplicas 1
    Oct 31 10:06:57.331: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 1, AvailableReplicas 1
    Oct 31 10:06:57.449: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 1, AvailableReplicas 1
    Oct 31 10:07:00.180: INFO: observed ReplicaSet test-rs in namespace replicaset-4802 with ReadyReplicas 2, AvailableReplicas 2
    Oct 31 10:07:00.245: INFO: observed Replicaset test-rs in namespace replicaset-4802 with ReadyReplicas 3 found true
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:07:00.246: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-4802" for this suite. 10/31/23 10:07:00.297
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:07:00.367
Oct 31 10:07:00.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 10:07:00.369
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:07:00.603
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:07:00.785
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787
STEP: creating service endpoint-test2 in namespace services-5022 10/31/23 10:07:00.935
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[] 10/31/23 10:07:00.996
Oct 31 10:07:01.237: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-5022 10/31/23 10:07:01.238
Oct 31 10:07:01.293: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-5022" to be "running and ready"
Oct 31 10:07:01.314: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 20.354104ms
Oct 31 10:07:01.314: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:07:03.325: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.031942011s
Oct 31 10:07:03.325: INFO: The phase of Pod pod1 is Running (Ready = true)
Oct 31 10:07:03.325: INFO: Pod "pod1" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[pod1:[80]] 10/31/23 10:07:03.35
Oct 31 10:07:03.686: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1 10/31/23 10:07:03.686
Oct 31 10:07:03.686: INFO: Creating new exec pod
Oct 31 10:07:03.742: INFO: Waiting up to 5m0s for pod "execpodmcr9h" in namespace "services-5022" to be "running"
Oct 31 10:07:03.769: INFO: Pod "execpodmcr9h": Phase="Pending", Reason="", readiness=false. Elapsed: 26.574318ms
Oct 31 10:07:05.856: INFO: Pod "execpodmcr9h": Phase="Running", Reason="", readiness=true. Elapsed: 2.113546418s
Oct 31 10:07:05.856: INFO: Pod "execpodmcr9h" satisfied condition "running"
Oct 31 10:07:06.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Oct 31 10:07:07.827: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Oct 31 10:07:07.827: INFO: stdout: ""
Oct 31 10:07:07.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 10.93.225.7 80'
Oct 31 10:07:08.724: INFO: stderr: "+ nc -v -z -w 2 10.93.225.7 80\nConnection to 10.93.225.7 80 port [tcp/http] succeeded!\n"
Oct 31 10:07:08.724: INFO: stdout: ""
STEP: Creating pod pod2 in namespace services-5022 10/31/23 10:07:08.724
Oct 31 10:07:08.809: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-5022" to be "running and ready"
Oct 31 10:07:08.839: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 29.49893ms
Oct 31 10:07:08.839: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:07:10.847: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.037401045s
Oct 31 10:07:10.847: INFO: The phase of Pod pod2 is Running (Ready = true)
Oct 31 10:07:10.847: INFO: Pod "pod2" satisfied condition "running and ready"
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[pod1:[80] pod2:[80]] 10/31/23 10:07:10.896
Oct 31 10:07:11.203: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2 10/31/23 10:07:11.203
Oct 31 10:07:12.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Oct 31 10:07:13.201: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Oct 31 10:07:13.202: INFO: stdout: ""
Oct 31 10:07:13.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 10.93.225.7 80'
Oct 31 10:07:14.188: INFO: stderr: "+ nc -v -z -w 2 10.93.225.7 80\nConnection to 10.93.225.7 80 port [tcp/http] succeeded!\n"
Oct 31 10:07:14.188: INFO: stdout: ""
STEP: Deleting pod pod1 in namespace services-5022 10/31/23 10:07:14.188
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[pod2:[80]] 10/31/23 10:07:14.262
Oct 31 10:07:14.554: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2 10/31/23 10:07:14.554
Oct 31 10:07:15.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
Oct 31 10:07:16.360: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Oct 31 10:07:16.360: INFO: stdout: ""
Oct 31 10:07:16.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 10.93.225.7 80'
Oct 31 10:07:17.114: INFO: stderr: "+ nc -v -z -w 2 10.93.225.7 80\nConnection to 10.93.225.7 80 port [tcp/http] succeeded!\n"
Oct 31 10:07:17.114: INFO: stdout: ""
STEP: Deleting pod pod2 in namespace services-5022 10/31/23 10:07:17.114
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[] 10/31/23 10:07:17.178
Oct 31 10:07:17.367: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 10:07:17.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-5022" for this suite. 10/31/23 10:07:17.5
------------------------------
â€¢ [SLOW TEST] [17.147 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/network/service.go:787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:07:00.367
    Oct 31 10:07:00.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 10:07:00.369
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:07:00.603
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:07:00.785
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should serve a basic endpoint from pods  [Conformance]
      test/e2e/network/service.go:787
    STEP: creating service endpoint-test2 in namespace services-5022 10/31/23 10:07:00.935
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[] 10/31/23 10:07:00.996
    Oct 31 10:07:01.237: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[]
    STEP: Creating pod pod1 in namespace services-5022 10/31/23 10:07:01.238
    Oct 31 10:07:01.293: INFO: Waiting up to 5m0s for pod "pod1" in namespace "services-5022" to be "running and ready"
    Oct 31 10:07:01.314: INFO: Pod "pod1": Phase="Pending", Reason="", readiness=false. Elapsed: 20.354104ms
    Oct 31 10:07:01.314: INFO: The phase of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:07:03.325: INFO: Pod "pod1": Phase="Running", Reason="", readiness=true. Elapsed: 2.031942011s
    Oct 31 10:07:03.325: INFO: The phase of Pod pod1 is Running (Ready = true)
    Oct 31 10:07:03.325: INFO: Pod "pod1" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[pod1:[80]] 10/31/23 10:07:03.35
    Oct 31 10:07:03.686: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[pod1:[80]]
    STEP: Checking if the Service forwards traffic to pod1 10/31/23 10:07:03.686
    Oct 31 10:07:03.686: INFO: Creating new exec pod
    Oct 31 10:07:03.742: INFO: Waiting up to 5m0s for pod "execpodmcr9h" in namespace "services-5022" to be "running"
    Oct 31 10:07:03.769: INFO: Pod "execpodmcr9h": Phase="Pending", Reason="", readiness=false. Elapsed: 26.574318ms
    Oct 31 10:07:05.856: INFO: Pod "execpodmcr9h": Phase="Running", Reason="", readiness=true. Elapsed: 2.113546418s
    Oct 31 10:07:05.856: INFO: Pod "execpodmcr9h" satisfied condition "running"
    Oct 31 10:07:06.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Oct 31 10:07:07.827: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Oct 31 10:07:07.827: INFO: stdout: ""
    Oct 31 10:07:07.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 10.93.225.7 80'
    Oct 31 10:07:08.724: INFO: stderr: "+ nc -v -z -w 2 10.93.225.7 80\nConnection to 10.93.225.7 80 port [tcp/http] succeeded!\n"
    Oct 31 10:07:08.724: INFO: stdout: ""
    STEP: Creating pod pod2 in namespace services-5022 10/31/23 10:07:08.724
    Oct 31 10:07:08.809: INFO: Waiting up to 5m0s for pod "pod2" in namespace "services-5022" to be "running and ready"
    Oct 31 10:07:08.839: INFO: Pod "pod2": Phase="Pending", Reason="", readiness=false. Elapsed: 29.49893ms
    Oct 31 10:07:08.839: INFO: The phase of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:07:10.847: INFO: Pod "pod2": Phase="Running", Reason="", readiness=true. Elapsed: 2.037401045s
    Oct 31 10:07:10.847: INFO: The phase of Pod pod2 is Running (Ready = true)
    Oct 31 10:07:10.847: INFO: Pod "pod2" satisfied condition "running and ready"
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[pod1:[80] pod2:[80]] 10/31/23 10:07:10.896
    Oct 31 10:07:11.203: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[pod1:[80] pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod1 and pod2 10/31/23 10:07:11.203
    Oct 31 10:07:12.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Oct 31 10:07:13.201: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Oct 31 10:07:13.202: INFO: stdout: ""
    Oct 31 10:07:13.202: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 10.93.225.7 80'
    Oct 31 10:07:14.188: INFO: stderr: "+ nc -v -z -w 2 10.93.225.7 80\nConnection to 10.93.225.7 80 port [tcp/http] succeeded!\n"
    Oct 31 10:07:14.188: INFO: stdout: ""
    STEP: Deleting pod pod1 in namespace services-5022 10/31/23 10:07:14.188
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[pod2:[80]] 10/31/23 10:07:14.262
    Oct 31 10:07:14.554: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[pod2:[80]]
    STEP: Checking if the Service forwards traffic to pod2 10/31/23 10:07:14.554
    Oct 31 10:07:15.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 endpoint-test2 80'
    Oct 31 10:07:16.360: INFO: stderr: "+ nc -v -z -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
    Oct 31 10:07:16.360: INFO: stdout: ""
    Oct 31 10:07:16.361: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-5022 exec execpodmcr9h -- /bin/sh -x -c nc -v -z -w 2 10.93.225.7 80'
    Oct 31 10:07:17.114: INFO: stderr: "+ nc -v -z -w 2 10.93.225.7 80\nConnection to 10.93.225.7 80 port [tcp/http] succeeded!\n"
    Oct 31 10:07:17.114: INFO: stdout: ""
    STEP: Deleting pod pod2 in namespace services-5022 10/31/23 10:07:17.114
    STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5022 to expose endpoints map[] 10/31/23 10:07:17.178
    Oct 31 10:07:17.367: INFO: successfully validated that service endpoint-test2 in namespace services-5022 exposes endpoints map[]
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:07:17.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-5022" for this suite. 10/31/23 10:07:17.5
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:07:17.523
Oct 31 10:07:17.523: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename events 10/31/23 10:07:17.524
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:07:17.716
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:07:17.897
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98
STEP: creating a test event 10/31/23 10:07:17.949
STEP: listing events in all namespaces 10/31/23 10:07:18.039
STEP: listing events in test namespace 10/31/23 10:07:18.127
STEP: listing events with field selection filtering on source 10/31/23 10:07:18.217
STEP: listing events with field selection filtering on reportingController 10/31/23 10:07:18.315
STEP: getting the test event 10/31/23 10:07:18.407
STEP: patching the test event 10/31/23 10:07:18.465
STEP: getting the test event 10/31/23 10:07:18.557
STEP: updating the test event 10/31/23 10:07:18.651
STEP: getting the test event 10/31/23 10:07:18.745
STEP: deleting the test event 10/31/23 10:07:18.798
STEP: listing events in all namespaces 10/31/23 10:07:18.889
STEP: listing events in test namespace 10/31/23 10:07:18.962
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Oct 31 10:07:19.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-2565" for this suite. 10/31/23 10:07:19.07
------------------------------
â€¢ [1.602 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/instrumentation/events.go:98

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:07:17.523
    Oct 31 10:07:17.523: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename events 10/31/23 10:07:17.524
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:07:17.716
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:07:17.897
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
      test/e2e/instrumentation/events.go:98
    STEP: creating a test event 10/31/23 10:07:17.949
    STEP: listing events in all namespaces 10/31/23 10:07:18.039
    STEP: listing events in test namespace 10/31/23 10:07:18.127
    STEP: listing events with field selection filtering on source 10/31/23 10:07:18.217
    STEP: listing events with field selection filtering on reportingController 10/31/23 10:07:18.315
    STEP: getting the test event 10/31/23 10:07:18.407
    STEP: patching the test event 10/31/23 10:07:18.465
    STEP: getting the test event 10/31/23 10:07:18.557
    STEP: updating the test event 10/31/23 10:07:18.651
    STEP: getting the test event 10/31/23 10:07:18.745
    STEP: deleting the test event 10/31/23 10:07:18.798
    STEP: listing events in all namespaces 10/31/23 10:07:18.889
    STEP: listing events in test namespace 10/31/23 10:07:18.962
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:07:19.016: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-2565" for this suite. 10/31/23 10:07:19.07
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:07:19.126
Oct 31 10:07:19.126: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename statefulset 10/31/23 10:07:19.128
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:07:19.284
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:07:19.418
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-1496 10/31/23 10:07:19.559
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/apps/statefulset.go:317
STEP: Creating a new StatefulSet 10/31/23 10:07:19.573
Oct 31 10:07:19.633: INFO: Found 1 stateful pods, waiting for 3
Oct 31 10:07:29.647: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 10:07:29.647: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 10:07:29.647: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 10/31/23 10:07:29.801
Oct 31 10:07:29.873: INFO: Updating stateful set ss2
STEP: Creating a new revision 10/31/23 10:07:29.873
STEP: Not applying an update when the partition is greater than the number of replicas 10/31/23 10:07:30.064
STEP: Performing a canary update 10/31/23 10:07:30.064
Oct 31 10:07:30.125: INFO: Updating stateful set ss2
Oct 31 10:07:30.181: INFO: Waiting for Pod statefulset-1496/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
STEP: Restoring Pods to the correct revision when they are deleted 10/31/23 10:07:40.238
Oct 31 10:07:40.390: INFO: Found 2 stateful pods, waiting for 3
Oct 31 10:07:50.401: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 10:07:50.401: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 10:07:50.401: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update 10/31/23 10:07:50.505
Oct 31 10:07:50.574: INFO: Updating stateful set ss2
Oct 31 10:07:50.612: INFO: Waiting for Pod statefulset-1496/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
Oct 31 10:08:00.735: INFO: Updating stateful set ss2
Oct 31 10:08:00.819: INFO: Waiting for StatefulSet statefulset-1496/ss2 to complete update
Oct 31 10:08:00.819: INFO: Waiting for Pod statefulset-1496/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Oct 31 10:08:10.895: INFO: Deleting all statefulset in ns statefulset-1496
Oct 31 10:08:10.939: INFO: Scaling statefulset ss2 to 0
Oct 31 10:08:21.040: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 10:08:21.090: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Oct 31 10:08:21.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-1496" for this suite. 10/31/23 10:08:21.368
------------------------------
â€¢ [SLOW TEST] [62.293 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/apps/statefulset.go:317

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:07:19.126
    Oct 31 10:07:19.126: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename statefulset 10/31/23 10:07:19.128
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:07:19.284
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:07:19.418
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-1496 10/31/23 10:07:19.559
    [It] should perform canary updates and phased rolling updates of template modifications [Conformance]
      test/e2e/apps/statefulset.go:317
    STEP: Creating a new StatefulSet 10/31/23 10:07:19.573
    Oct 31 10:07:19.633: INFO: Found 1 stateful pods, waiting for 3
    Oct 31 10:07:29.647: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 10:07:29.647: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 10:07:29.647: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 10/31/23 10:07:29.801
    Oct 31 10:07:29.873: INFO: Updating stateful set ss2
    STEP: Creating a new revision 10/31/23 10:07:29.873
    STEP: Not applying an update when the partition is greater than the number of replicas 10/31/23 10:07:30.064
    STEP: Performing a canary update 10/31/23 10:07:30.064
    Oct 31 10:07:30.125: INFO: Updating stateful set ss2
    Oct 31 10:07:30.181: INFO: Waiting for Pod statefulset-1496/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    STEP: Restoring Pods to the correct revision when they are deleted 10/31/23 10:07:40.238
    Oct 31 10:07:40.390: INFO: Found 2 stateful pods, waiting for 3
    Oct 31 10:07:50.401: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 10:07:50.401: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 10:07:50.401: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Performing a phased rolling update 10/31/23 10:07:50.505
    Oct 31 10:07:50.574: INFO: Updating stateful set ss2
    Oct 31 10:07:50.612: INFO: Waiting for Pod statefulset-1496/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    Oct 31 10:08:00.735: INFO: Updating stateful set ss2
    Oct 31 10:08:00.819: INFO: Waiting for StatefulSet statefulset-1496/ss2 to complete update
    Oct 31 10:08:00.819: INFO: Waiting for Pod statefulset-1496/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Oct 31 10:08:10.895: INFO: Deleting all statefulset in ns statefulset-1496
    Oct 31 10:08:10.939: INFO: Scaling statefulset ss2 to 0
    Oct 31 10:08:21.040: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 10:08:21.090: INFO: Deleting statefulset ss2
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:08:21.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-1496" for this suite. 10/31/23 10:08:21.368
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:08:21.422
Oct 31 10:08:21.422: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 10:08:21.424
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:08:21.624
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:08:21.69
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235
STEP: Creating a pod to test downward API volume plugin 10/31/23 10:08:21.834
Oct 31 10:08:21.849: INFO: Waiting up to 5m0s for pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2" in namespace "downward-api-466" to be "Succeeded or Failed"
Oct 31 10:08:21.867: INFO: Pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2": Phase="Pending", Reason="", readiness=false. Elapsed: 17.761777ms
Oct 31 10:08:23.892: INFO: Pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.042023325s
Oct 31 10:08:25.916: INFO: Pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.066389823s
STEP: Saw pod success 10/31/23 10:08:25.916
Oct 31 10:08:25.917: INFO: Pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2" satisfied condition "Succeeded or Failed"
Oct 31 10:08:25.966: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2 container client-container: <nil>
STEP: delete the pod 10/31/23 10:08:26.359
Oct 31 10:08:26.473: INFO: Waiting for pod downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2 to disappear
Oct 31 10:08:26.565: INFO: Pod downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 10:08:26.566: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-466" for this suite. 10/31/23 10:08:26.65
------------------------------
â€¢ [SLOW TEST] [5.316 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:235

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:08:21.422
    Oct 31 10:08:21.422: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 10:08:21.424
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:08:21.624
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:08:21.69
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide container's memory request [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:235
    STEP: Creating a pod to test downward API volume plugin 10/31/23 10:08:21.834
    Oct 31 10:08:21.849: INFO: Waiting up to 5m0s for pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2" in namespace "downward-api-466" to be "Succeeded or Failed"
    Oct 31 10:08:21.867: INFO: Pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2": Phase="Pending", Reason="", readiness=false. Elapsed: 17.761777ms
    Oct 31 10:08:23.892: INFO: Pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.042023325s
    Oct 31 10:08:25.916: INFO: Pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.066389823s
    STEP: Saw pod success 10/31/23 10:08:25.916
    Oct 31 10:08:25.917: INFO: Pod "downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2" satisfied condition "Succeeded or Failed"
    Oct 31 10:08:25.966: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2 container client-container: <nil>
    STEP: delete the pod 10/31/23 10:08:26.359
    Oct 31 10:08:26.473: INFO: Waiting for pod downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2 to disappear
    Oct 31 10:08:26.565: INFO: Pod downwardapi-volume-82584e58-b3a0-4944-892a-8391761331f2 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:08:26.566: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-466" for this suite. 10/31/23 10:08:26.65
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:08:26.739
Oct 31 10:08:26.740: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 10:08:26.742
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:08:26.899
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:08:27.036
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261
STEP: Creating a pod to test downward API volume plugin 10/31/23 10:08:27.18
Oct 31 10:08:27.204: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11" in namespace "downward-api-656" to be "Succeeded or Failed"
Oct 31 10:08:27.357: INFO: Pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11": Phase="Pending", Reason="", readiness=false. Elapsed: 153.167512ms
Oct 31 10:08:29.385: INFO: Pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11": Phase="Running", Reason="", readiness=true. Elapsed: 2.18101293s
Oct 31 10:08:31.374: INFO: Pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.170368164s
STEP: Saw pod success 10/31/23 10:08:31.374
Oct 31 10:08:31.374: INFO: Pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11" satisfied condition "Succeeded or Failed"
Oct 31 10:08:31.525: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11 container client-container: <nil>
STEP: delete the pod 10/31/23 10:08:31.675
Oct 31 10:08:31.750: INFO: Waiting for pod downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11 to disappear
Oct 31 10:08:31.826: INFO: Pod downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 10:08:31.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-656" for this suite. 10/31/23 10:08:31.878
------------------------------
â€¢ [SLOW TEST] [5.190 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:261

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:08:26.739
    Oct 31 10:08:26.740: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 10:08:26.742
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:08:26.899
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:08:27.036
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:261
    STEP: Creating a pod to test downward API volume plugin 10/31/23 10:08:27.18
    Oct 31 10:08:27.204: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11" in namespace "downward-api-656" to be "Succeeded or Failed"
    Oct 31 10:08:27.357: INFO: Pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11": Phase="Pending", Reason="", readiness=false. Elapsed: 153.167512ms
    Oct 31 10:08:29.385: INFO: Pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11": Phase="Running", Reason="", readiness=true. Elapsed: 2.18101293s
    Oct 31 10:08:31.374: INFO: Pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.170368164s
    STEP: Saw pod success 10/31/23 10:08:31.374
    Oct 31 10:08:31.374: INFO: Pod "downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11" satisfied condition "Succeeded or Failed"
    Oct 31 10:08:31.525: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11 container client-container: <nil>
    STEP: delete the pod 10/31/23 10:08:31.675
    Oct 31 10:08:31.750: INFO: Waiting for pod downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11 to disappear
    Oct 31 10:08:31.826: INFO: Pod downwardapi-volume-9873a848-e008-4980-9f80-ad2052bbbf11 no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:08:31.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-656" for this suite. 10/31/23 10:08:31.878
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
[BeforeEach] version v1
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:08:31.938
Oct 31 10:08:31.938: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename proxy 10/31/23 10:08:31.939
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:08:32.164
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:08:32.3
[BeforeEach] version v1
  test/e2e/framework/metrics/init/init.go:31
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/network/proxy.go:380
Oct 31 10:08:32.353: INFO: Creating pod...
Oct 31 10:08:32.410: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-17" to be "running"
Oct 31 10:08:32.425: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 14.901343ms
Oct 31 10:08:34.435: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.024549871s
Oct 31 10:08:34.435: INFO: Pod "agnhost" satisfied condition "running"
Oct 31 10:08:34.435: INFO: Creating service...
Oct 31 10:08:34.522: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=DELETE
Oct 31 10:08:34.708: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Oct 31 10:08:34.708: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=OPTIONS
Oct 31 10:08:34.847: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Oct 31 10:08:34.847: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=PATCH
Oct 31 10:08:35.023: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Oct 31 10:08:35.024: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=POST
Oct 31 10:08:35.159: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Oct 31 10:08:35.159: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=PUT
Oct 31 10:08:35.317: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Oct 31 10:08:35.318: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=DELETE
Oct 31 10:08:35.451: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Oct 31 10:08:35.451: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=OPTIONS
Oct 31 10:08:35.600: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Oct 31 10:08:35.600: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=PATCH
Oct 31 10:08:35.740: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Oct 31 10:08:35.740: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=POST
Oct 31 10:08:35.879: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Oct 31 10:08:35.879: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=PUT
Oct 31 10:08:36.016: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Oct 31 10:08:36.016: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=GET
Oct 31 10:08:36.103: INFO: http.Client request:GET StatusCode:301
Oct 31 10:08:36.103: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=GET
Oct 31 10:08:36.151: INFO: http.Client request:GET StatusCode:301
Oct 31 10:08:36.151: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=HEAD
Oct 31 10:08:36.160: INFO: http.Client request:HEAD StatusCode:301
Oct 31 10:08:36.160: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=HEAD
Oct 31 10:08:36.167: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/node/init/init.go:32
Oct 31 10:08:36.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] version v1
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] version v1
  dump namespaces | framework.go:196
[DeferCleanup (Each)] version v1
  tear down framework | framework.go:193
STEP: Destroying namespace "proxy-17" for this suite. 10/31/23 10:08:36.179
------------------------------
â€¢ [4.341 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    A set of valid responses are returned for both pod and service Proxy [Conformance]
    test/e2e/network/proxy.go:380

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] version v1
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:08:31.938
    Oct 31 10:08:31.938: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename proxy 10/31/23 10:08:31.939
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:08:32.164
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:08:32.3
    [BeforeEach] version v1
      test/e2e/framework/metrics/init/init.go:31
    [It] A set of valid responses are returned for both pod and service Proxy [Conformance]
      test/e2e/network/proxy.go:380
    Oct 31 10:08:32.353: INFO: Creating pod...
    Oct 31 10:08:32.410: INFO: Waiting up to 5m0s for pod "agnhost" in namespace "proxy-17" to be "running"
    Oct 31 10:08:32.425: INFO: Pod "agnhost": Phase="Pending", Reason="", readiness=false. Elapsed: 14.901343ms
    Oct 31 10:08:34.435: INFO: Pod "agnhost": Phase="Running", Reason="", readiness=true. Elapsed: 2.024549871s
    Oct 31 10:08:34.435: INFO: Pod "agnhost" satisfied condition "running"
    Oct 31 10:08:34.435: INFO: Creating service...
    Oct 31 10:08:34.522: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=DELETE
    Oct 31 10:08:34.708: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Oct 31 10:08:34.708: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=OPTIONS
    Oct 31 10:08:34.847: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Oct 31 10:08:34.847: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=PATCH
    Oct 31 10:08:35.023: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Oct 31 10:08:35.024: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=POST
    Oct 31 10:08:35.159: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Oct 31 10:08:35.159: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=PUT
    Oct 31 10:08:35.317: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Oct 31 10:08:35.318: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=DELETE
    Oct 31 10:08:35.451: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
    Oct 31 10:08:35.451: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=OPTIONS
    Oct 31 10:08:35.600: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
    Oct 31 10:08:35.600: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=PATCH
    Oct 31 10:08:35.740: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
    Oct 31 10:08:35.740: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=POST
    Oct 31 10:08:35.879: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
    Oct 31 10:08:35.879: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=PUT
    Oct 31 10:08:36.016: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
    Oct 31 10:08:36.016: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=GET
    Oct 31 10:08:36.103: INFO: http.Client request:GET StatusCode:301
    Oct 31 10:08:36.103: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=GET
    Oct 31 10:08:36.151: INFO: http.Client request:GET StatusCode:301
    Oct 31 10:08:36.151: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/pods/agnhost/proxy?method=HEAD
    Oct 31 10:08:36.160: INFO: http.Client request:HEAD StatusCode:301
    Oct 31 10:08:36.160: INFO: Starting http.Client for https://10.93.0.1:443/api/v1/namespaces/proxy-17/services/e2e-proxy-test-service/proxy?method=HEAD
    Oct 31 10:08:36.167: INFO: http.Client request:HEAD StatusCode:301
    [AfterEach] version v1
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:08:36.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] version v1
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] version v1
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] version v1
      tear down framework | framework.go:193
    STEP: Destroying namespace "proxy-17" for this suite. 10/31/23 10:08:36.179
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:08:36.281
Oct 31 10:08:36.281: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename subpath 10/31/23 10:08:36.283
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:08:36.478
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:08:36.614
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 10/31/23 10:08:37.008
[It] should support subpaths with projected pod [Conformance]
  test/e2e/storage/subpath.go:106
STEP: Creating pod pod-subpath-test-projected-9hw6 10/31/23 10:08:37.2
STEP: Creating a pod to test atomic-volume-subpath 10/31/23 10:08:37.2
Oct 31 10:08:37.249: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-9hw6" in namespace "subpath-1898" to be "Succeeded or Failed"
Oct 31 10:08:37.263: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Pending", Reason="", readiness=false. Elapsed: 13.151492ms
Oct 31 10:08:39.314: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 2.064086385s
Oct 31 10:08:41.270: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 4.020528152s
Oct 31 10:08:43.273: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 6.023501063s
Oct 31 10:08:45.278: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 8.028205261s
Oct 31 10:08:47.272: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 10.022954923s
Oct 31 10:08:49.271: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 12.021913321s
Oct 31 10:08:51.272: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 14.022328254s
Oct 31 10:08:53.329: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 16.0797546s
Oct 31 10:08:55.275: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 18.025545507s
Oct 31 10:08:57.274: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 20.024948572s
Oct 31 10:08:59.270: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=false. Elapsed: 22.020538706s
Oct 31 10:09:01.292: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.042760396s
STEP: Saw pod success 10/31/23 10:09:01.292
Oct 31 10:09:01.292: INFO: Pod "pod-subpath-test-projected-9hw6" satisfied condition "Succeeded or Failed"
Oct 31 10:09:01.389: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-subpath-test-projected-9hw6 container test-container-subpath-projected-9hw6: <nil>
STEP: delete the pod 10/31/23 10:09:01.624
Oct 31 10:09:01.704: INFO: Waiting for pod pod-subpath-test-projected-9hw6 to disappear
Oct 31 10:09:01.852: INFO: Pod pod-subpath-test-projected-9hw6 no longer exists
STEP: Deleting pod pod-subpath-test-projected-9hw6 10/31/23 10:09:01.853
Oct 31 10:09:01.853: INFO: Deleting pod "pod-subpath-test-projected-9hw6" in namespace "subpath-1898"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:02.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-1898" for this suite. 10/31/23 10:09:02.169
------------------------------
â€¢ [SLOW TEST] [25.943 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/storage/subpath.go:106

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:08:36.281
    Oct 31 10:08:36.281: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename subpath 10/31/23 10:08:36.283
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:08:36.478
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:08:36.614
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 10/31/23 10:08:37.008
    [It] should support subpaths with projected pod [Conformance]
      test/e2e/storage/subpath.go:106
    STEP: Creating pod pod-subpath-test-projected-9hw6 10/31/23 10:08:37.2
    STEP: Creating a pod to test atomic-volume-subpath 10/31/23 10:08:37.2
    Oct 31 10:08:37.249: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-9hw6" in namespace "subpath-1898" to be "Succeeded or Failed"
    Oct 31 10:08:37.263: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Pending", Reason="", readiness=false. Elapsed: 13.151492ms
    Oct 31 10:08:39.314: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 2.064086385s
    Oct 31 10:08:41.270: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 4.020528152s
    Oct 31 10:08:43.273: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 6.023501063s
    Oct 31 10:08:45.278: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 8.028205261s
    Oct 31 10:08:47.272: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 10.022954923s
    Oct 31 10:08:49.271: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 12.021913321s
    Oct 31 10:08:51.272: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 14.022328254s
    Oct 31 10:08:53.329: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 16.0797546s
    Oct 31 10:08:55.275: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 18.025545507s
    Oct 31 10:08:57.274: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=true. Elapsed: 20.024948572s
    Oct 31 10:08:59.270: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Running", Reason="", readiness=false. Elapsed: 22.020538706s
    Oct 31 10:09:01.292: INFO: Pod "pod-subpath-test-projected-9hw6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.042760396s
    STEP: Saw pod success 10/31/23 10:09:01.292
    Oct 31 10:09:01.292: INFO: Pod "pod-subpath-test-projected-9hw6" satisfied condition "Succeeded or Failed"
    Oct 31 10:09:01.389: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-subpath-test-projected-9hw6 container test-container-subpath-projected-9hw6: <nil>
    STEP: delete the pod 10/31/23 10:09:01.624
    Oct 31 10:09:01.704: INFO: Waiting for pod pod-subpath-test-projected-9hw6 to disappear
    Oct 31 10:09:01.852: INFO: Pod pod-subpath-test-projected-9hw6 no longer exists
    STEP: Deleting pod pod-subpath-test-projected-9hw6 10/31/23 10:09:01.853
    Oct 31 10:09:01.853: INFO: Deleting pod "pod-subpath-test-projected-9hw6" in namespace "subpath-1898"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:02.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-1898" for this suite. 10/31/23 10:09:02.169
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-network] Services
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:02.225
Oct 31 10:09:02.225: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 10:09:02.227
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:02.411
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:02.548
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438
STEP: creating a service externalname-service with the type=ExternalName in namespace services-2639 10/31/23 10:09:02.643
STEP: changing the ExternalName service to type=ClusterIP 10/31/23 10:09:02.7
STEP: creating replication controller externalname-service in namespace services-2639 10/31/23 10:09:02.852
I1031 10:09:02.903811      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2639, replica count: 2
I1031 10:09:05.954578      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Oct 31 10:09:05.954: INFO: Creating new exec pod
Oct 31 10:09:05.971: INFO: Waiting up to 5m0s for pod "execpodnhm7p" in namespace "services-2639" to be "running"
Oct 31 10:09:05.987: INFO: Pod "execpodnhm7p": Phase="Pending", Reason="", readiness=false. Elapsed: 15.725588ms
Oct 31 10:09:07.995: INFO: Pod "execpodnhm7p": Phase="Running", Reason="", readiness=true. Elapsed: 2.023979372s
Oct 31 10:09:07.995: INFO: Pod "execpodnhm7p" satisfied condition "running"
Oct 31 10:09:08.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2639 exec execpodnhm7p -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
Oct 31 10:09:09.938: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Oct 31 10:09:09.938: INFO: stdout: ""
Oct 31 10:09:09.938: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2639 exec execpodnhm7p -- /bin/sh -x -c nc -v -z -w 2 10.93.221.76 80'
Oct 31 10:09:10.741: INFO: stderr: "+ nc -v -z -w 2 10.93.221.76 80\nConnection to 10.93.221.76 80 port [tcp/http] succeeded!\n"
Oct 31 10:09:10.741: INFO: stdout: ""
Oct 31 10:09:10.741: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:10.808: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-2639" for this suite. 10/31/23 10:09:10.877
------------------------------
â€¢ [SLOW TEST] [8.672 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/network/service.go:1438

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:02.225
    Oct 31 10:09:02.225: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 10:09:02.227
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:02.411
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:02.548
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ExternalName to ClusterIP [Conformance]
      test/e2e/network/service.go:1438
    STEP: creating a service externalname-service with the type=ExternalName in namespace services-2639 10/31/23 10:09:02.643
    STEP: changing the ExternalName service to type=ClusterIP 10/31/23 10:09:02.7
    STEP: creating replication controller externalname-service in namespace services-2639 10/31/23 10:09:02.852
    I1031 10:09:02.903811      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-2639, replica count: 2
    I1031 10:09:05.954578      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Oct 31 10:09:05.954: INFO: Creating new exec pod
    Oct 31 10:09:05.971: INFO: Waiting up to 5m0s for pod "execpodnhm7p" in namespace "services-2639" to be "running"
    Oct 31 10:09:05.987: INFO: Pod "execpodnhm7p": Phase="Pending", Reason="", readiness=false. Elapsed: 15.725588ms
    Oct 31 10:09:07.995: INFO: Pod "execpodnhm7p": Phase="Running", Reason="", readiness=true. Elapsed: 2.023979372s
    Oct 31 10:09:07.995: INFO: Pod "execpodnhm7p" satisfied condition "running"
    Oct 31 10:09:08.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2639 exec execpodnhm7p -- /bin/sh -x -c nc -v -z -w 2 externalname-service 80'
    Oct 31 10:09:09.938: INFO: stderr: "+ nc -v -z -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
    Oct 31 10:09:09.938: INFO: stdout: ""
    Oct 31 10:09:09.938: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-2639 exec execpodnhm7p -- /bin/sh -x -c nc -v -z -w 2 10.93.221.76 80'
    Oct 31 10:09:10.741: INFO: stderr: "+ nc -v -z -w 2 10.93.221.76 80\nConnection to 10.93.221.76 80 port [tcp/http] succeeded!\n"
    Oct 31 10:09:10.741: INFO: stdout: ""
    Oct 31 10:09:10.741: INFO: Cleaning up the ExternalName to ClusterIP test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:10.808: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-2639" for this suite. 10/31/23 10:09:10.877
  << End Captured GinkgoWriter Output
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:10.897
Oct 31 10:09:10.897: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 10:09:10.899
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:11.059
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:11.193
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57
STEP: Creating secret with name secret-test-1df5c79b-d215-4d1c-998e-2254e1191109 10/31/23 10:09:11.338
STEP: Creating a pod to test consume secrets 10/31/23 10:09:11.398
Oct 31 10:09:11.458: INFO: Waiting up to 5m0s for pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9" in namespace "secrets-1679" to be "Succeeded or Failed"
Oct 31 10:09:11.474: INFO: Pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9": Phase="Pending", Reason="", readiness=false. Elapsed: 16.340437ms
Oct 31 10:09:13.483: INFO: Pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025008863s
Oct 31 10:09:15.483: INFO: Pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024673314s
STEP: Saw pod success 10/31/23 10:09:15.483
Oct 31 10:09:15.483: INFO: Pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9" satisfied condition "Succeeded or Failed"
Oct 31 10:09:15.534: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9 container secret-volume-test: <nil>
STEP: delete the pod 10/31/23 10:09:15.669
Oct 31 10:09:15.738: INFO: Waiting for pod pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9 to disappear
Oct 31 10:09:15.789: INFO: Pod pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:15.790: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-1679" for this suite. 10/31/23 10:09:15.872
------------------------------
â€¢ [4.994 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:57

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:10.897
    Oct 31 10:09:10.897: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 10:09:10.899
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:11.059
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:11.193
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:57
    STEP: Creating secret with name secret-test-1df5c79b-d215-4d1c-998e-2254e1191109 10/31/23 10:09:11.338
    STEP: Creating a pod to test consume secrets 10/31/23 10:09:11.398
    Oct 31 10:09:11.458: INFO: Waiting up to 5m0s for pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9" in namespace "secrets-1679" to be "Succeeded or Failed"
    Oct 31 10:09:11.474: INFO: Pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9": Phase="Pending", Reason="", readiness=false. Elapsed: 16.340437ms
    Oct 31 10:09:13.483: INFO: Pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025008863s
    Oct 31 10:09:15.483: INFO: Pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024673314s
    STEP: Saw pod success 10/31/23 10:09:15.483
    Oct 31 10:09:15.483: INFO: Pod "pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9" satisfied condition "Succeeded or Failed"
    Oct 31 10:09:15.534: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9 container secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 10:09:15.669
    Oct 31 10:09:15.738: INFO: Waiting for pod pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9 to disappear
    Oct 31 10:09:15.789: INFO: Pod pod-secrets-892a217e-d3a8-4729-a163-19999c77b3d9 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:15.790: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-1679" for this suite. 10/31/23 10:09:15.872
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:15.898
Oct 31 10:09:15.898: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename cronjob 10/31/23 10:09:15.899
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:16.018
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:16.258
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319
STEP: Creating a cronjob 10/31/23 10:09:16.303
STEP: creating 10/31/23 10:09:16.303
STEP: getting 10/31/23 10:09:16.356
STEP: listing 10/31/23 10:09:16.433
STEP: watching 10/31/23 10:09:16.45
Oct 31 10:09:16.451: INFO: starting watch
STEP: cluster-wide listing 10/31/23 10:09:16.569
STEP: cluster-wide watching 10/31/23 10:09:16.584
Oct 31 10:09:16.585: INFO: starting watch
STEP: patching 10/31/23 10:09:16.669
STEP: updating 10/31/23 10:09:16.726
Oct 31 10:09:16.849: INFO: waiting for watch events with expected annotations
Oct 31 10:09:16.849: INFO: saw patched and updated annotations
STEP: patching /status 10/31/23 10:09:16.849
STEP: updating /status 10/31/23 10:09:16.909
STEP: get /status 10/31/23 10:09:16.991
STEP: deleting 10/31/23 10:09:17.07
STEP: deleting a collection 10/31/23 10:09:17.321
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:17.415: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-203" for this suite. 10/31/23 10:09:17.468
------------------------------
â€¢ [1.619 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should support CronJob API operations [Conformance]
  test/e2e/apps/cronjob.go:319

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:15.898
    Oct 31 10:09:15.898: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename cronjob 10/31/23 10:09:15.899
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:16.018
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:16.258
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CronJob API operations [Conformance]
      test/e2e/apps/cronjob.go:319
    STEP: Creating a cronjob 10/31/23 10:09:16.303
    STEP: creating 10/31/23 10:09:16.303
    STEP: getting 10/31/23 10:09:16.356
    STEP: listing 10/31/23 10:09:16.433
    STEP: watching 10/31/23 10:09:16.45
    Oct 31 10:09:16.451: INFO: starting watch
    STEP: cluster-wide listing 10/31/23 10:09:16.569
    STEP: cluster-wide watching 10/31/23 10:09:16.584
    Oct 31 10:09:16.585: INFO: starting watch
    STEP: patching 10/31/23 10:09:16.669
    STEP: updating 10/31/23 10:09:16.726
    Oct 31 10:09:16.849: INFO: waiting for watch events with expected annotations
    Oct 31 10:09:16.849: INFO: saw patched and updated annotations
    STEP: patching /status 10/31/23 10:09:16.849
    STEP: updating /status 10/31/23 10:09:16.909
    STEP: get /status 10/31/23 10:09:16.991
    STEP: deleting 10/31/23 10:09:17.07
    STEP: deleting a collection 10/31/23 10:09:17.321
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:17.415: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-203" for this suite. 10/31/23 10:09:17.468
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Containers
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:17.517
Oct 31 10:09:17.517: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename containers 10/31/23 10:09:17.519
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:17.714
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:17.879
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59
STEP: Creating a pod to test override arguments 10/31/23 10:09:18.018
Oct 31 10:09:18.075: INFO: Waiting up to 5m0s for pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122" in namespace "containers-4452" to be "Succeeded or Failed"
Oct 31 10:09:18.100: INFO: Pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122": Phase="Pending", Reason="", readiness=false. Elapsed: 24.565507ms
Oct 31 10:09:20.107: INFO: Pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122": Phase="Pending", Reason="", readiness=false. Elapsed: 2.032000993s
Oct 31 10:09:22.149: INFO: Pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.073516928s
STEP: Saw pod success 10/31/23 10:09:22.149
Oct 31 10:09:22.150: INFO: Pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122" satisfied condition "Succeeded or Failed"
Oct 31 10:09:22.241: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 10:09:22.368
Oct 31 10:09:22.432: INFO: Waiting for pod client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122 to disappear
Oct 31 10:09:22.525: INFO: Pod client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:22.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-4452" for this suite. 10/31/23 10:09:22.597
------------------------------
â€¢ [SLOW TEST] [5.183 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:59

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:17.517
    Oct 31 10:09:17.517: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename containers 10/31/23 10:09:17.519
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:17.714
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:17.879
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:59
    STEP: Creating a pod to test override arguments 10/31/23 10:09:18.018
    Oct 31 10:09:18.075: INFO: Waiting up to 5m0s for pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122" in namespace "containers-4452" to be "Succeeded or Failed"
    Oct 31 10:09:18.100: INFO: Pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122": Phase="Pending", Reason="", readiness=false. Elapsed: 24.565507ms
    Oct 31 10:09:20.107: INFO: Pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122": Phase="Pending", Reason="", readiness=false. Elapsed: 2.032000993s
    Oct 31 10:09:22.149: INFO: Pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.073516928s
    STEP: Saw pod success 10/31/23 10:09:22.149
    Oct 31 10:09:22.150: INFO: Pod "client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122" satisfied condition "Succeeded or Failed"
    Oct 31 10:09:22.241: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 10:09:22.368
    Oct 31 10:09:22.432: INFO: Waiting for pod client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122 to disappear
    Oct 31 10:09:22.525: INFO: Pod client-containers-0e357c5a-bd67-425e-b989-73acfbf0c122 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:22.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-4452" for this suite. 10/31/23 10:09:22.597
  << End Captured GinkgoWriter Output
------------------------------
[sig-cli] Kubectl client Kubectl run pod
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:22.701
Oct 31 10:09:22.701: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:09:22.702
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:22.874
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:23.017
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1700
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/kubectl/kubectl.go:1713
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 10/31/23 10:09:23.116
Oct 31 10:09:23.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3084 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
Oct 31 10:09:23.295: INFO: stderr: ""
Oct 31 10:09:23.295: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created 10/31/23 10:09:23.295
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1704
Oct 31 10:09:23.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3084 delete pods e2e-test-httpd-pod'
Oct 31 10:09:25.638: INFO: stderr: ""
Oct 31 10:09:25.638: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:25.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-3084" for this suite. 10/31/23 10:09:25.654
------------------------------
â€¢ [3.040 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl run pod
  test/e2e/kubectl/kubectl.go:1697
    should create a pod from an image when restart is Never  [Conformance]
    test/e2e/kubectl/kubectl.go:1713

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:22.701
    Oct 31 10:09:22.701: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:09:22.702
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:22.874
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:23.017
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1700
    [It] should create a pod from an image when restart is Never  [Conformance]
      test/e2e/kubectl/kubectl.go:1713
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 10/31/23 10:09:23.116
    Oct 31 10:09:23.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3084 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
    Oct 31 10:09:23.295: INFO: stderr: ""
    Oct 31 10:09:23.295: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod was created 10/31/23 10:09:23.295
    [AfterEach] Kubectl run pod
      test/e2e/kubectl/kubectl.go:1704
    Oct 31 10:09:23.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-3084 delete pods e2e-test-httpd-pod'
    Oct 31 10:09:25.638: INFO: stderr: ""
    Oct 31 10:09:25.638: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:25.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-3084" for this suite. 10/31/23 10:09:25.654
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial]
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:873
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:25.741
Oct 31 10:09:25.741: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename daemonsets 10/31/23 10:09:25.742
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:25.866
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:26.001
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:157
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:873
STEP: Creating simple DaemonSet "daemon-set" 10/31/23 10:09:26.483
STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:09:26.538
Oct 31 10:09:26.657: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 10:09:26.657: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:09:27.810: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 10:09:27.810: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 is running 0 daemon pod, expected 1
Oct 31 10:09:28.697: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Oct 31 10:09:28.697: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status 10/31/23 10:09:28.71
Oct 31 10:09:28.718: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status 10/31/23 10:09:28.718
Oct 31 10:09:28.780: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated 10/31/23 10:09:28.78
Oct 31 10:09:28.822: INFO: Observed &DaemonSet event: ADDED
Oct 31 10:09:28.823: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.823: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.823: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.824: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.827: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.827: INFO: Found daemon set daemon-set in namespace daemonsets-5806 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Oct 31 10:09:28.827: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status 10/31/23 10:09:28.827
STEP: watching for the daemon set status to be patched 10/31/23 10:09:28.937
Oct 31 10:09:28.987: INFO: Observed &DaemonSet event: ADDED
Oct 31 10:09:28.987: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.988: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.988: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.989: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.989: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.989: INFO: Observed daemon set daemon-set in namespace daemonsets-5806 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Oct 31 10:09:28.989: INFO: Observed &DaemonSet event: MODIFIED
Oct 31 10:09:28.989: INFO: Found daemon set daemon-set in namespace daemonsets-5806 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Oct 31 10:09:28.989: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:122
STEP: Deleting DaemonSet "daemon-set" 10/31/23 10:09:29.061
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5806, will wait for the garbage collector to delete the pods 10/31/23 10:09:29.061
Oct 31 10:09:29.235: INFO: Deleting DaemonSet.extensions daemon-set took: 26.78427ms
Oct 31 10:09:29.336: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.982418ms
Oct 31 10:09:31.105: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 10:09:31.105: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Oct 31 10:09:31.154: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30338"},"items":null}

Oct 31 10:09:31.165: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30338"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:31.317: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-5806" for this suite. 10/31/23 10:09:31.367
------------------------------
â€¢ [SLOW TEST] [5.684 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/apps/daemon_set.go:873

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:25.741
    Oct 31 10:09:25.741: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename daemonsets 10/31/23 10:09:25.742
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:25.866
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:26.001
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:157
    [It] should verify changes to a daemon set status [Conformance]
      test/e2e/apps/daemon_set.go:873
    STEP: Creating simple DaemonSet "daemon-set" 10/31/23 10:09:26.483
    STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:09:26.538
    Oct 31 10:09:26.657: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 10:09:26.657: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:09:27.810: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 10:09:27.810: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 is running 0 daemon pod, expected 1
    Oct 31 10:09:28.697: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Oct 31 10:09:28.697: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Getting /status 10/31/23 10:09:28.71
    Oct 31 10:09:28.718: INFO: Daemon Set daemon-set has Conditions: []
    STEP: updating the DaemonSet Status 10/31/23 10:09:28.718
    Oct 31 10:09:28.780: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
    STEP: watching for the daemon set status to be updated 10/31/23 10:09:28.78
    Oct 31 10:09:28.822: INFO: Observed &DaemonSet event: ADDED
    Oct 31 10:09:28.823: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.823: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.823: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.824: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.827: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.827: INFO: Found daemon set daemon-set in namespace daemonsets-5806 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Oct 31 10:09:28.827: INFO: Daemon set daemon-set has an updated status
    STEP: patching the DaemonSet Status 10/31/23 10:09:28.827
    STEP: watching for the daemon set status to be patched 10/31/23 10:09:28.937
    Oct 31 10:09:28.987: INFO: Observed &DaemonSet event: ADDED
    Oct 31 10:09:28.987: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.988: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.988: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.989: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.989: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.989: INFO: Observed daemon set daemon-set in namespace daemonsets-5806 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
    Oct 31 10:09:28.989: INFO: Observed &DaemonSet event: MODIFIED
    Oct 31 10:09:28.989: INFO: Found daemon set daemon-set in namespace daemonsets-5806 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
    Oct 31 10:09:28.989: INFO: Daemon set daemon-set has a patched status
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:122
    STEP: Deleting DaemonSet "daemon-set" 10/31/23 10:09:29.061
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5806, will wait for the garbage collector to delete the pods 10/31/23 10:09:29.061
    Oct 31 10:09:29.235: INFO: Deleting DaemonSet.extensions daemon-set took: 26.78427ms
    Oct 31 10:09:29.336: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.982418ms
    Oct 31 10:09:31.105: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 10:09:31.105: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Oct 31 10:09:31.154: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30338"},"items":null}

    Oct 31 10:09:31.165: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30338"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:31.317: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-5806" for this suite. 10/31/23 10:09:31.367
  << End Captured GinkgoWriter Output
------------------------------
[sig-network] DNS
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:31.43
Oct 31 10:09:31.430: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename dns 10/31/23 10:09:31.432
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:31.596
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:31.793
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248
STEP: Creating a test headless service 10/31/23 10:09:31.847
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1874.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1874.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
 10/31/23 10:09:31.86
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1874.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1874.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
 10/31/23 10:09:31.86
STEP: creating a pod to probe DNS 10/31/23 10:09:31.861
STEP: submitting the pod to kubernetes 10/31/23 10:09:31.861
Oct 31 10:09:31.877: INFO: Waiting up to 15m0s for pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe" in namespace "dns-1874" to be "running"
Oct 31 10:09:31.895: INFO: Pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe": Phase="Pending", Reason="", readiness=false. Elapsed: 17.793933ms
Oct 31 10:09:33.945: INFO: Pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.068037464s
Oct 31 10:09:35.903: INFO: Pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe": Phase="Running", Reason="", readiness=true. Elapsed: 4.025937802s
Oct 31 10:09:35.904: INFO: Pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe" satisfied condition "running"
STEP: retrieving the pod 10/31/23 10:09:35.904
STEP: looking for the results for each expected name from probers 10/31/23 10:09:35.911
Oct 31 10:09:36.503: INFO: DNS probes using dns-1874/dns-test-7b535838-c648-4472-b132-5be9e69c34fe succeeded

STEP: deleting the pod 10/31/23 10:09:36.503
STEP: deleting the test headless service 10/31/23 10:09:36.57
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:36.656: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-1874" for this suite. 10/31/23 10:09:36.762
------------------------------
â€¢ [SLOW TEST] [5.392 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/network/dns.go:248

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:31.43
    Oct 31 10:09:31.430: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename dns 10/31/23 10:09:31.432
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:31.596
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:31.793
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide DNS for pods for Hostname [Conformance]
      test/e2e/network/dns.go:248
    STEP: Creating a test headless service 10/31/23 10:09:31.847
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1874.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1874.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
     10/31/23 10:09:31.86
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1874.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1874.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
     10/31/23 10:09:31.86
    STEP: creating a pod to probe DNS 10/31/23 10:09:31.861
    STEP: submitting the pod to kubernetes 10/31/23 10:09:31.861
    Oct 31 10:09:31.877: INFO: Waiting up to 15m0s for pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe" in namespace "dns-1874" to be "running"
    Oct 31 10:09:31.895: INFO: Pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe": Phase="Pending", Reason="", readiness=false. Elapsed: 17.793933ms
    Oct 31 10:09:33.945: INFO: Pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.068037464s
    Oct 31 10:09:35.903: INFO: Pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe": Phase="Running", Reason="", readiness=true. Elapsed: 4.025937802s
    Oct 31 10:09:35.904: INFO: Pod "dns-test-7b535838-c648-4472-b132-5be9e69c34fe" satisfied condition "running"
    STEP: retrieving the pod 10/31/23 10:09:35.904
    STEP: looking for the results for each expected name from probers 10/31/23 10:09:35.911
    Oct 31 10:09:36.503: INFO: DNS probes using dns-1874/dns-test-7b535838-c648-4472-b132-5be9e69c34fe succeeded

    STEP: deleting the pod 10/31/23 10:09:36.503
    STEP: deleting the test headless service 10/31/23 10:09:36.57
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:36.656: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-1874" for this suite. 10/31/23 10:09:36.762
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:36.823
Oct 31 10:09:36.823: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename watch 10/31/23 10:09:36.824
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:37.009
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:37.134
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191
STEP: creating a watch on configmaps 10/31/23 10:09:37.195
STEP: creating a new configmap 10/31/23 10:09:37.283
STEP: modifying the configmap once 10/31/23 10:09:37.375
STEP: closing the watch once it receives two notifications 10/31/23 10:09:37.515
Oct 31 10:09:37.515: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-134  954ac38f-d843-4ec7-944e-06867851871c 30418 0 2023-10-31 10:09:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-31 10:09:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 10:09:37.516: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-134  954ac38f-d843-4ec7-944e-06867851871c 30419 0 2023-10-31 10:09:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-31 10:09:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed 10/31/23 10:09:37.516
STEP: creating a new watch on configmaps from the last resource version observed by the first watch 10/31/23 10:09:37.723
STEP: deleting the configmap 10/31/23 10:09:37.815
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 10/31/23 10:09:37.907
Oct 31 10:09:37.907: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-134  954ac38f-d843-4ec7-944e-06867851871c 30421 0 2023-10-31 10:09:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-31 10:09:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 10:09:37.908: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-134  954ac38f-d843-4ec7-944e-06867851871c 30423 0 2023-10-31 10:09:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-31 10:09:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:37.908: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-134" for this suite. 10/31/23 10:09:37.966
------------------------------
â€¢ [1.192 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/apimachinery/watch.go:191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:36.823
    Oct 31 10:09:36.823: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename watch 10/31/23 10:09:36.824
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:37.009
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:37.134
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
      test/e2e/apimachinery/watch.go:191
    STEP: creating a watch on configmaps 10/31/23 10:09:37.195
    STEP: creating a new configmap 10/31/23 10:09:37.283
    STEP: modifying the configmap once 10/31/23 10:09:37.375
    STEP: closing the watch once it receives two notifications 10/31/23 10:09:37.515
    Oct 31 10:09:37.515: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-134  954ac38f-d843-4ec7-944e-06867851871c 30418 0 2023-10-31 10:09:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-31 10:09:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 10:09:37.516: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-134  954ac38f-d843-4ec7-944e-06867851871c 30419 0 2023-10-31 10:09:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-31 10:09:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time, while the watch is closed 10/31/23 10:09:37.516
    STEP: creating a new watch on configmaps from the last resource version observed by the first watch 10/31/23 10:09:37.723
    STEP: deleting the configmap 10/31/23 10:09:37.815
    STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed 10/31/23 10:09:37.907
    Oct 31 10:09:37.907: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-134  954ac38f-d843-4ec7-944e-06867851871c 30421 0 2023-10-31 10:09:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-31 10:09:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 10:09:37.908: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-134  954ac38f-d843-4ec7-944e-06867851871c 30423 0 2023-10-31 10:09:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-10-31 10:09:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:37.908: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-134" for this suite. 10/31/23 10:09:37.966
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:38.022
Oct 31 10:09:38.022: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename namespaces 10/31/23 10:09:38.024
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:38.17
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:38.324
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268
STEP: creating a Namespace 10/31/23 10:09:38.417
STEP: patching the Namespace 10/31/23 10:09:38.613
STEP: get the Namespace and ensuring it has the label 10/31/23 10:09:38.67
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:38.759: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-4187" for this suite. 10/31/23 10:09:38.862
STEP: Destroying namespace "nspatchtest-0f052cd1-3ded-4e4f-950d-1204cbb5a164-9153" for this suite. 10/31/23 10:09:38.917
------------------------------
â€¢ [0.949 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should patch a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:268

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:38.022
    Oct 31 10:09:38.022: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename namespaces 10/31/23 10:09:38.024
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:38.17
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:38.324
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should patch a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:268
    STEP: creating a Namespace 10/31/23 10:09:38.417
    STEP: patching the Namespace 10/31/23 10:09:38.613
    STEP: get the Namespace and ensuring it has the label 10/31/23 10:09:38.67
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:38.759: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-4187" for this suite. 10/31/23 10:09:38.862
    STEP: Destroying namespace "nspatchtest-0f052cd1-3ded-4e4f-950d-1204cbb5a164-9153" for this suite. 10/31/23 10:09:38.917
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:38.972
Oct 31 10:09:38.973: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename containers 10/31/23 10:09:38.974
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:39.125
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:39.273
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39
Oct 31 10:09:39.437: INFO: Waiting up to 5m0s for pod "client-containers-21098c84-c6b3-4ae2-8420-f646b0dc13a1" in namespace "containers-7369" to be "running"
Oct 31 10:09:39.489: INFO: Pod "client-containers-21098c84-c6b3-4ae2-8420-f646b0dc13a1": Phase="Pending", Reason="", readiness=false. Elapsed: 51.473596ms
Oct 31 10:09:41.497: INFO: Pod "client-containers-21098c84-c6b3-4ae2-8420-f646b0dc13a1": Phase="Running", Reason="", readiness=true. Elapsed: 2.05971355s
Oct 31 10:09:41.497: INFO: Pod "client-containers-21098c84-c6b3-4ae2-8420-f646b0dc13a1" satisfied condition "running"
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:41.643: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-7369" for this suite. 10/31/23 10:09:41.695
------------------------------
â€¢ [2.771 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:39

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:38.972
    Oct 31 10:09:38.973: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename containers 10/31/23 10:09:38.974
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:39.125
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:39.273
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:39
    Oct 31 10:09:39.437: INFO: Waiting up to 5m0s for pod "client-containers-21098c84-c6b3-4ae2-8420-f646b0dc13a1" in namespace "containers-7369" to be "running"
    Oct 31 10:09:39.489: INFO: Pod "client-containers-21098c84-c6b3-4ae2-8420-f646b0dc13a1": Phase="Pending", Reason="", readiness=false. Elapsed: 51.473596ms
    Oct 31 10:09:41.497: INFO: Pod "client-containers-21098c84-c6b3-4ae2-8420-f646b0dc13a1": Phase="Running", Reason="", readiness=true. Elapsed: 2.05971355s
    Oct 31 10:09:41.497: INFO: Pod "client-containers-21098c84-c6b3-4ae2-8420-f646b0dc13a1" satisfied condition "running"
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:41.643: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-7369" for this suite. 10/31/23 10:09:41.695
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:41.744
Oct 31 10:09:41.744: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 10:09:41.746
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:41.891
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:42.028
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100
STEP: Counting existing ResourceQuota 10/31/23 10:09:42.122
STEP: Creating a ResourceQuota 10/31/23 10:09:47.205
STEP: Ensuring resource quota status is calculated 10/31/23 10:09:47.263
STEP: Creating a Service 10/31/23 10:09:49.272
STEP: Creating a NodePort Service 10/31/23 10:09:49.343
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 10/31/23 10:09:49.453
STEP: Ensuring resource quota status captures service creation 10/31/23 10:09:49.5
STEP: Deleting Services 10/31/23 10:09:51.509
STEP: Ensuring resource quota status released usage 10/31/23 10:09:51.696
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:53.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-4241" for this suite. 10/31/23 10:09:53.762
------------------------------
â€¢ [SLOW TEST] [12.074 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/apimachinery/resource_quota.go:100

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:41.744
    Oct 31 10:09:41.744: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 10:09:41.746
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:41.891
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:42.028
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and capture the life of a service. [Conformance]
      test/e2e/apimachinery/resource_quota.go:100
    STEP: Counting existing ResourceQuota 10/31/23 10:09:42.122
    STEP: Creating a ResourceQuota 10/31/23 10:09:47.205
    STEP: Ensuring resource quota status is calculated 10/31/23 10:09:47.263
    STEP: Creating a Service 10/31/23 10:09:49.272
    STEP: Creating a NodePort Service 10/31/23 10:09:49.343
    STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota 10/31/23 10:09:49.453
    STEP: Ensuring resource quota status captures service creation 10/31/23 10:09:49.5
    STEP: Deleting Services 10/31/23 10:09:51.509
    STEP: Ensuring resource quota status released usage 10/31/23 10:09:51.696
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:53.705: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-4241" for this suite. 10/31/23 10:09:53.762
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:53.824
Oct 31 10:09:53.824: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 10:09:53.826
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:54.02
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:54.114
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67
STEP: Creating projection with secret that has name projected-secret-test-25cc54b8-2741-437d-80eb-ab8e52f3e495 10/31/23 10:09:54.252
STEP: Creating a pod to test consume secrets 10/31/23 10:09:54.34
Oct 31 10:09:54.396: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e" in namespace "projected-7842" to be "Succeeded or Failed"
Oct 31 10:09:54.408: INFO: Pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e": Phase="Pending", Reason="", readiness=false. Elapsed: 11.12212ms
Oct 31 10:09:56.417: INFO: Pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020935216s
Oct 31 10:09:58.416: INFO: Pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019327419s
STEP: Saw pod success 10/31/23 10:09:58.416
Oct 31 10:09:58.416: INFO: Pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e" satisfied condition "Succeeded or Failed"
Oct 31 10:09:58.465: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e container projected-secret-volume-test: <nil>
STEP: delete the pod 10/31/23 10:09:58.603
Oct 31 10:09:58.666: INFO: Waiting for pod pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e to disappear
Oct 31 10:09:58.708: INFO: Pod pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Oct 31 10:09:58.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-7842" for this suite. 10/31/23 10:09:58.803
------------------------------
â€¢ [SLOW TEST] [5.031 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:67

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:53.824
    Oct 31 10:09:53.824: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 10:09:53.826
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:54.02
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:54.114
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:67
    STEP: Creating projection with secret that has name projected-secret-test-25cc54b8-2741-437d-80eb-ab8e52f3e495 10/31/23 10:09:54.252
    STEP: Creating a pod to test consume secrets 10/31/23 10:09:54.34
    Oct 31 10:09:54.396: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e" in namespace "projected-7842" to be "Succeeded or Failed"
    Oct 31 10:09:54.408: INFO: Pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e": Phase="Pending", Reason="", readiness=false. Elapsed: 11.12212ms
    Oct 31 10:09:56.417: INFO: Pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020935216s
    Oct 31 10:09:58.416: INFO: Pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019327419s
    STEP: Saw pod success 10/31/23 10:09:58.416
    Oct 31 10:09:58.416: INFO: Pod "pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e" satisfied condition "Succeeded or Failed"
    Oct 31 10:09:58.465: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e container projected-secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 10:09:58.603
    Oct 31 10:09:58.666: INFO: Waiting for pod pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e to disappear
    Oct 31 10:09:58.708: INFO: Pod pod-projected-secrets-2904f064-4567-4afe-8a1c-ff7d369c6e5e no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:09:58.709: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-7842" for this suite. 10/31/23 10:09:58.803
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] Ingress API
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
[BeforeEach] [sig-network] Ingress API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:09:58.856
Oct 31 10:09:58.856: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename ingress 10/31/23 10:09:58.858
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:59.049
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:59.175
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:31
[It] should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552
STEP: getting /apis 10/31/23 10:09:59.292
STEP: getting /apis/networking.k8s.io 10/31/23 10:09:59.428
STEP: getting /apis/networking.k8s.iov1 10/31/23 10:09:59.516
STEP: creating 10/31/23 10:09:59.583
STEP: getting 10/31/23 10:09:59.829
STEP: listing 10/31/23 10:09:59.921
STEP: watching 10/31/23 10:10:00.011
Oct 31 10:10:00.011: INFO: starting watch
STEP: cluster-wide listing 10/31/23 10:10:00.059
STEP: cluster-wide watching 10/31/23 10:10:00.109
Oct 31 10:10:00.109: INFO: starting watch
STEP: patching 10/31/23 10:10:00.197
STEP: updating 10/31/23 10:10:00.214
Oct 31 10:10:00.462: INFO: waiting for watch events with expected annotations
Oct 31 10:10:00.463: INFO: saw patched and updated annotations
STEP: patching /status 10/31/23 10:10:00.463
STEP: updating /status 10/31/23 10:10:00.505
STEP: get /status 10/31/23 10:10:00.705
STEP: deleting 10/31/23 10:10:00.798
STEP: deleting a collection 10/31/23 10:10:00.993
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/node/init/init.go:32
Oct 31 10:10:01.173: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Ingress API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Ingress API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Ingress API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingress-3597" for this suite. 10/31/23 10:10:01.263
------------------------------
â€¢ [2.441 seconds]
[sig-network] Ingress API
test/e2e/network/common/framework.go:23
  should support creating Ingress API operations [Conformance]
  test/e2e/network/ingress.go:552

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Ingress API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:09:58.856
    Oct 31 10:09:58.856: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename ingress 10/31/23 10:09:58.858
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:09:59.049
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:09:59.175
    [BeforeEach] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:31
    [It] should support creating Ingress API operations [Conformance]
      test/e2e/network/ingress.go:552
    STEP: getting /apis 10/31/23 10:09:59.292
    STEP: getting /apis/networking.k8s.io 10/31/23 10:09:59.428
    STEP: getting /apis/networking.k8s.iov1 10/31/23 10:09:59.516
    STEP: creating 10/31/23 10:09:59.583
    STEP: getting 10/31/23 10:09:59.829
    STEP: listing 10/31/23 10:09:59.921
    STEP: watching 10/31/23 10:10:00.011
    Oct 31 10:10:00.011: INFO: starting watch
    STEP: cluster-wide listing 10/31/23 10:10:00.059
    STEP: cluster-wide watching 10/31/23 10:10:00.109
    Oct 31 10:10:00.109: INFO: starting watch
    STEP: patching 10/31/23 10:10:00.197
    STEP: updating 10/31/23 10:10:00.214
    Oct 31 10:10:00.462: INFO: waiting for watch events with expected annotations
    Oct 31 10:10:00.463: INFO: saw patched and updated annotations
    STEP: patching /status 10/31/23 10:10:00.463
    STEP: updating /status 10/31/23 10:10:00.505
    STEP: get /status 10/31/23 10:10:00.705
    STEP: deleting 10/31/23 10:10:00.798
    STEP: deleting a collection 10/31/23 10:10:00.993
    [AfterEach] [sig-network] Ingress API
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:10:01.173: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Ingress API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Ingress API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Ingress API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingress-3597" for this suite. 10/31/23 10:10:01.263
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:10:01.299
Oct 31 10:10:01.299: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-probe 10/31/23 10:10:01.3
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:01.517
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:01.623
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169
STEP: Creating pod liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69 in namespace container-probe-432 10/31/23 10:10:01.764
Oct 31 10:10:01.784: INFO: Waiting up to 5m0s for pod "liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69" in namespace "container-probe-432" to be "not pending"
Oct 31 10:10:01.800: INFO: Pod "liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69": Phase="Pending", Reason="", readiness=false. Elapsed: 16.04026ms
Oct 31 10:10:03.845: INFO: Pod "liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69": Phase="Running", Reason="", readiness=true. Elapsed: 2.060543297s
Oct 31 10:10:03.845: INFO: Pod "liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69" satisfied condition "not pending"
Oct 31 10:10:03.845: INFO: Started pod liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69 in namespace container-probe-432
STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 10:10:03.845
Oct 31 10:10:03.892: INFO: Initial restart count of pod liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69 is 0
Oct 31 10:10:24.180: INFO: Restart count of pod container-probe-432/liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69 is now 1 (20.288249899s elapsed)
STEP: deleting the pod 10/31/23 10:10:24.18
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Oct 31 10:10:24.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-432" for this suite. 10/31/23 10:10:24.301
------------------------------
â€¢ [SLOW TEST] [23.069 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:169

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:10:01.299
    Oct 31 10:10:01.299: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-probe 10/31/23 10:10:01.3
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:01.517
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:01.623
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:169
    STEP: Creating pod liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69 in namespace container-probe-432 10/31/23 10:10:01.764
    Oct 31 10:10:01.784: INFO: Waiting up to 5m0s for pod "liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69" in namespace "container-probe-432" to be "not pending"
    Oct 31 10:10:01.800: INFO: Pod "liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69": Phase="Pending", Reason="", readiness=false. Elapsed: 16.04026ms
    Oct 31 10:10:03.845: INFO: Pod "liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69": Phase="Running", Reason="", readiness=true. Elapsed: 2.060543297s
    Oct 31 10:10:03.845: INFO: Pod "liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69" satisfied condition "not pending"
    Oct 31 10:10:03.845: INFO: Started pod liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69 in namespace container-probe-432
    STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 10:10:03.845
    Oct 31 10:10:03.892: INFO: Initial restart count of pod liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69 is 0
    Oct 31 10:10:24.180: INFO: Restart count of pod container-probe-432/liveness-7e1c30f9-a017-4ab3-9933-d539b9d31b69 is now 1 (20.288249899s elapsed)
    STEP: deleting the pod 10/31/23 10:10:24.18
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:10:24.248: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-432" for this suite. 10/31/23 10:10:24.301
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-network] Services
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:10:24.37
Oct 31 10:10:24.370: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 10:10:24.372
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:24.563
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:24.701
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191
STEP: creating service in namespace services-1480 10/31/23 10:10:24.858
STEP: creating service affinity-clusterip in namespace services-1480 10/31/23 10:10:24.859
STEP: creating replication controller affinity-clusterip in namespace services-1480 10/31/23 10:10:24.882
I1031 10:10:24.962950      18 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-1480, replica count: 3
I1031 10:10:28.013999      18 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Oct 31 10:10:28.075: INFO: Creating new exec pod
Oct 31 10:10:28.174: INFO: Waiting up to 5m0s for pod "execpod-affinityxkffp" in namespace "services-1480" to be "running"
Oct 31 10:10:28.199: INFO: Pod "execpod-affinityxkffp": Phase="Pending", Reason="", readiness=false. Elapsed: 24.699826ms
Oct 31 10:10:30.212: INFO: Pod "execpod-affinityxkffp": Phase="Running", Reason="", readiness=true. Elapsed: 2.038200381s
Oct 31 10:10:30.212: INFO: Pod "execpod-affinityxkffp" satisfied condition "running"
Oct 31 10:10:31.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-1480 exec execpod-affinityxkffp -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
Oct 31 10:10:32.121: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Oct 31 10:10:32.121: INFO: stdout: ""
Oct 31 10:10:32.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-1480 exec execpod-affinityxkffp -- /bin/sh -x -c nc -v -z -w 2 10.93.220.85 80'
Oct 31 10:10:33.086: INFO: stderr: "+ nc -v -z -w 2 10.93.220.85 80\nConnection to 10.93.220.85 80 port [tcp/http] succeeded!\n"
Oct 31 10:10:33.086: INFO: stdout: ""
Oct 31 10:10:33.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-1480 exec execpod-affinityxkffp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.93.220.85:80/ ; done'
Oct 31 10:10:34.069: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n"
Oct 31 10:10:34.069: INFO: stdout: "\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj"
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
Oct 31 10:10:34.069: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-1480, will wait for the garbage collector to delete the pods 10/31/23 10:10:34.128
Oct 31 10:10:34.305: INFO: Deleting ReplicationController affinity-clusterip took: 60.0651ms
Oct 31 10:10:34.406: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.367877ms
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 10:10:37.348: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-1480" for this suite. 10/31/23 10:10:37.447
------------------------------
â€¢ [SLOW TEST] [13.130 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/network/service.go:2191

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:10:24.37
    Oct 31 10:10:24.370: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 10:10:24.372
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:24.563
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:24.701
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
      test/e2e/network/service.go:2191
    STEP: creating service in namespace services-1480 10/31/23 10:10:24.858
    STEP: creating service affinity-clusterip in namespace services-1480 10/31/23 10:10:24.859
    STEP: creating replication controller affinity-clusterip in namespace services-1480 10/31/23 10:10:24.882
    I1031 10:10:24.962950      18 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-1480, replica count: 3
    I1031 10:10:28.013999      18 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    Oct 31 10:10:28.075: INFO: Creating new exec pod
    Oct 31 10:10:28.174: INFO: Waiting up to 5m0s for pod "execpod-affinityxkffp" in namespace "services-1480" to be "running"
    Oct 31 10:10:28.199: INFO: Pod "execpod-affinityxkffp": Phase="Pending", Reason="", readiness=false. Elapsed: 24.699826ms
    Oct 31 10:10:30.212: INFO: Pod "execpod-affinityxkffp": Phase="Running", Reason="", readiness=true. Elapsed: 2.038200381s
    Oct 31 10:10:30.212: INFO: Pod "execpod-affinityxkffp" satisfied condition "running"
    Oct 31 10:10:31.214: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-1480 exec execpod-affinityxkffp -- /bin/sh -x -c nc -v -z -w 2 affinity-clusterip 80'
    Oct 31 10:10:32.121: INFO: stderr: "+ nc -v -z -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
    Oct 31 10:10:32.121: INFO: stdout: ""
    Oct 31 10:10:32.121: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-1480 exec execpod-affinityxkffp -- /bin/sh -x -c nc -v -z -w 2 10.93.220.85 80'
    Oct 31 10:10:33.086: INFO: stderr: "+ nc -v -z -w 2 10.93.220.85 80\nConnection to 10.93.220.85 80 port [tcp/http] succeeded!\n"
    Oct 31 10:10:33.086: INFO: stdout: ""
    Oct 31 10:10:33.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-1480 exec execpod-affinityxkffp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.93.220.85:80/ ; done'
    Oct 31 10:10:34.069: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.93.220.85:80/\n"
    Oct 31 10:10:34.069: INFO: stdout: "\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj\naffinity-clusterip-r5kxj"
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Received response from host: affinity-clusterip-r5kxj
    Oct 31 10:10:34.069: INFO: Cleaning up the exec pod
    STEP: deleting ReplicationController affinity-clusterip in namespace services-1480, will wait for the garbage collector to delete the pods 10/31/23 10:10:34.128
    Oct 31 10:10:34.305: INFO: Deleting ReplicationController affinity-clusterip took: 60.0651ms
    Oct 31 10:10:34.406: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.367877ms
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:10:37.348: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-1480" for this suite. 10/31/23 10:10:37.447
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:10:37.511
Oct 31 10:10:37.511: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename namespaces 10/31/23 10:10:37.512
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:37.658
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:37.796
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251
STEP: Creating a test namespace 10/31/23 10:10:37.942
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:38.109
STEP: Creating a service in the namespace 10/31/23 10:10:38.27
STEP: Deleting the namespace 10/31/23 10:10:38.336
STEP: Waiting for the namespace to be removed. 10/31/23 10:10:38.39
STEP: Recreating the namespace 10/31/23 10:10:44.458
STEP: Verifying there is no service in the namespace 10/31/23 10:10:44.778
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:10:44.827: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-4530" for this suite. 10/31/23 10:10:44.889
STEP: Destroying namespace "nsdeletetest-6574" for this suite. 10/31/23 10:10:44.997
Oct 31 10:10:45.105: INFO: Namespace nsdeletetest-6574 was already deleted
STEP: Destroying namespace "nsdeletetest-9926" for this suite. 10/31/23 10:10:45.106
------------------------------
â€¢ [SLOW TEST] [7.663 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/apimachinery/namespace.go:251

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:10:37.511
    Oct 31 10:10:37.511: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename namespaces 10/31/23 10:10:37.512
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:37.658
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:37.796
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should ensure that all services are removed when a namespace is deleted [Conformance]
      test/e2e/apimachinery/namespace.go:251
    STEP: Creating a test namespace 10/31/23 10:10:37.942
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:38.109
    STEP: Creating a service in the namespace 10/31/23 10:10:38.27
    STEP: Deleting the namespace 10/31/23 10:10:38.336
    STEP: Waiting for the namespace to be removed. 10/31/23 10:10:38.39
    STEP: Recreating the namespace 10/31/23 10:10:44.458
    STEP: Verifying there is no service in the namespace 10/31/23 10:10:44.778
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:10:44.827: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-4530" for this suite. 10/31/23 10:10:44.889
    STEP: Destroying namespace "nsdeletetest-6574" for this suite. 10/31/23 10:10:44.997
    Oct 31 10:10:45.105: INFO: Namespace nsdeletetest-6574 was already deleted
    STEP: Destroying namespace "nsdeletetest-9926" for this suite. 10/31/23 10:10:45.106
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:10:45.175
Oct 31 10:10:45.175: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:10:45.176
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:45.402
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:45.498
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1572
STEP: creating an pod 10/31/23 10:10:45.646
Oct 31 10:10:45.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Oct 31 10:10:45.801: INFO: stderr: ""
Oct 31 10:10:45.801: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/kubectl/kubectl.go:1592
STEP: Waiting for log generator to start. 10/31/23 10:10:45.801
Oct 31 10:10:45.801: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Oct 31 10:10:45.801: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-419" to be "running and ready, or succeeded"
Oct 31 10:10:45.828: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 26.301269ms
Oct 31 10:10:45.828: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz' to be 'Running' but was 'Pending'
Oct 31 10:10:47.885: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.083247835s
Oct 31 10:10:47.885: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Oct 31 10:10:47.885: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings 10/31/23 10:10:47.885
Oct 31 10:10:47.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator'
Oct 31 10:10:48.250: INFO: stderr: ""
Oct 31 10:10:48.250: INFO: stdout: "I1031 10:10:46.535440       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/cx8 425\nI1031 10:10:46.735635       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/hgm 324\nI1031 10:10:46.936266       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/p8g 348\nI1031 10:10:47.135562       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/w9xw 360\nI1031 10:10:47.335973       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/dvhf 344\nI1031 10:10:47.536413       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/wc7 212\nI1031 10:10:47.735649       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/dqb 336\nI1031 10:10:47.936061       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/tcp 550\nI1031 10:10:48.136481       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/9wms 551\n"
STEP: limiting log lines 10/31/23 10:10:48.25
Oct 31 10:10:48.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --tail=1'
Oct 31 10:10:48.586: INFO: stderr: ""
Oct 31 10:10:48.586: INFO: stdout: "I1031 10:10:48.335907       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/q94 576\n"
Oct 31 10:10:48.586: INFO: got output "I1031 10:10:48.335907       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/q94 576\n"
STEP: limiting log bytes 10/31/23 10:10:48.586
Oct 31 10:10:48.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --limit-bytes=1'
Oct 31 10:10:48.953: INFO: stderr: ""
Oct 31 10:10:48.953: INFO: stdout: "I"
Oct 31 10:10:48.953: INFO: got output "I"
STEP: exposing timestamps 10/31/23 10:10:48.953
Oct 31 10:10:48.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --tail=1 --timestamps'
Oct 31 10:10:49.277: INFO: stderr: ""
Oct 31 10:10:49.277: INFO: stdout: "2023-10-31T17:10:49.136728415+07:00 I1031 10:10:49.136544       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/b9qm 318\n"
Oct 31 10:10:49.277: INFO: got output "2023-10-31T17:10:49.136728415+07:00 I1031 10:10:49.136544       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/b9qm 318\n"
STEP: restricting to a time range 10/31/23 10:10:49.278
Oct 31 10:10:51.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --since=1s'
Oct 31 10:10:52.102: INFO: stderr: ""
Oct 31 10:10:52.102: INFO: stdout: "I1031 10:10:51.135599       1 logs_generator.go:76] 23 POST /api/v1/namespaces/ns/pods/gph2 275\nI1031 10:10:51.335982       1 logs_generator.go:76] 24 PUT /api/v1/namespaces/default/pods/jxf4 588\nI1031 10:10:51.536158       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/ns/pods/6vr 475\nI1031 10:10:51.735548       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/ns/pods/xzc 418\nI1031 10:10:51.936016       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/mmfj 378\n"
Oct 31 10:10:52.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --since=24h'
Oct 31 10:10:52.440: INFO: stderr: ""
Oct 31 10:10:52.440: INFO: stdout: "I1031 10:10:46.535440       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/cx8 425\nI1031 10:10:46.735635       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/hgm 324\nI1031 10:10:46.936266       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/p8g 348\nI1031 10:10:47.135562       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/w9xw 360\nI1031 10:10:47.335973       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/dvhf 344\nI1031 10:10:47.536413       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/wc7 212\nI1031 10:10:47.735649       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/dqb 336\nI1031 10:10:47.936061       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/tcp 550\nI1031 10:10:48.136481       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/9wms 551\nI1031 10:10:48.335907       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/q94 576\nI1031 10:10:48.536303       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/6bq8 297\nI1031 10:10:48.735628       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/rvt 449\nI1031 10:10:48.936091       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/4fvc 585\nI1031 10:10:49.136544       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/b9qm 318\nI1031 10:10:49.335996       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/jq28 306\nI1031 10:10:49.536375       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/xg97 207\nI1031 10:10:49.735689       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/thfz 402\nI1031 10:10:49.936058       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/v57 367\nI1031 10:10:50.136364       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/zh87 421\nI1031 10:10:50.336274       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/kq5 513\nI1031 10:10:50.535548       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/7xq5 300\nI1031 10:10:50.735962       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/5h4 502\nI1031 10:10:50.936351       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/nvsb 368\nI1031 10:10:51.135599       1 logs_generator.go:76] 23 POST /api/v1/namespaces/ns/pods/gph2 275\nI1031 10:10:51.335982       1 logs_generator.go:76] 24 PUT /api/v1/namespaces/default/pods/jxf4 588\nI1031 10:10:51.536158       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/ns/pods/6vr 475\nI1031 10:10:51.735548       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/ns/pods/xzc 418\nI1031 10:10:51.936016       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/mmfj 378\nI1031 10:10:52.136487       1 logs_generator.go:76] 28 GET /api/v1/namespaces/default/pods/fgkz 267\nI1031 10:10:52.335886       1 logs_generator.go:76] 29 GET /api/v1/namespaces/ns/pods/74n 318\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1577
Oct 31 10:10:52.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 delete pod logs-generator'
Oct 31 10:10:54.028: INFO: stderr: ""
Oct 31 10:10:54.028: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:10:54.028: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-419" for this suite. 10/31/23 10:10:54.046
------------------------------
â€¢ [SLOW TEST] [8.934 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1569
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/kubectl/kubectl.go:1592

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:10:45.175
    Oct 31 10:10:45.175: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:10:45.176
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:45.402
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:45.498
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1572
    STEP: creating an pod 10/31/23 10:10:45.646
    Oct 31 10:10:45.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.43 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
    Oct 31 10:10:45.801: INFO: stderr: ""
    Oct 31 10:10:45.801: INFO: stdout: "pod/logs-generator created\n"
    [It] should be able to retrieve and filter logs  [Conformance]
      test/e2e/kubectl/kubectl.go:1592
    STEP: Waiting for log generator to start. 10/31/23 10:10:45.801
    Oct 31 10:10:45.801: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
    Oct 31 10:10:45.801: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-419" to be "running and ready, or succeeded"
    Oct 31 10:10:45.828: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 26.301269ms
    Oct 31 10:10:45.828: INFO: Error evaluating pod condition running and ready, or succeeded: want pod 'logs-generator' on 'pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz' to be 'Running' but was 'Pending'
    Oct 31 10:10:47.885: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.083247835s
    Oct 31 10:10:47.885: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
    Oct 31 10:10:47.885: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
    STEP: checking for a matching strings 10/31/23 10:10:47.885
    Oct 31 10:10:47.885: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator'
    Oct 31 10:10:48.250: INFO: stderr: ""
    Oct 31 10:10:48.250: INFO: stdout: "I1031 10:10:46.535440       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/cx8 425\nI1031 10:10:46.735635       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/hgm 324\nI1031 10:10:46.936266       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/p8g 348\nI1031 10:10:47.135562       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/w9xw 360\nI1031 10:10:47.335973       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/dvhf 344\nI1031 10:10:47.536413       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/wc7 212\nI1031 10:10:47.735649       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/dqb 336\nI1031 10:10:47.936061       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/tcp 550\nI1031 10:10:48.136481       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/9wms 551\n"
    STEP: limiting log lines 10/31/23 10:10:48.25
    Oct 31 10:10:48.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --tail=1'
    Oct 31 10:10:48.586: INFO: stderr: ""
    Oct 31 10:10:48.586: INFO: stdout: "I1031 10:10:48.335907       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/q94 576\n"
    Oct 31 10:10:48.586: INFO: got output "I1031 10:10:48.335907       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/q94 576\n"
    STEP: limiting log bytes 10/31/23 10:10:48.586
    Oct 31 10:10:48.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --limit-bytes=1'
    Oct 31 10:10:48.953: INFO: stderr: ""
    Oct 31 10:10:48.953: INFO: stdout: "I"
    Oct 31 10:10:48.953: INFO: got output "I"
    STEP: exposing timestamps 10/31/23 10:10:48.953
    Oct 31 10:10:48.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --tail=1 --timestamps'
    Oct 31 10:10:49.277: INFO: stderr: ""
    Oct 31 10:10:49.277: INFO: stdout: "2023-10-31T17:10:49.136728415+07:00 I1031 10:10:49.136544       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/b9qm 318\n"
    Oct 31 10:10:49.277: INFO: got output "2023-10-31T17:10:49.136728415+07:00 I1031 10:10:49.136544       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/b9qm 318\n"
    STEP: restricting to a time range 10/31/23 10:10:49.278
    Oct 31 10:10:51.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --since=1s'
    Oct 31 10:10:52.102: INFO: stderr: ""
    Oct 31 10:10:52.102: INFO: stdout: "I1031 10:10:51.135599       1 logs_generator.go:76] 23 POST /api/v1/namespaces/ns/pods/gph2 275\nI1031 10:10:51.335982       1 logs_generator.go:76] 24 PUT /api/v1/namespaces/default/pods/jxf4 588\nI1031 10:10:51.536158       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/ns/pods/6vr 475\nI1031 10:10:51.735548       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/ns/pods/xzc 418\nI1031 10:10:51.936016       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/mmfj 378\n"
    Oct 31 10:10:52.102: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 logs logs-generator logs-generator --since=24h'
    Oct 31 10:10:52.440: INFO: stderr: ""
    Oct 31 10:10:52.440: INFO: stdout: "I1031 10:10:46.535440       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/cx8 425\nI1031 10:10:46.735635       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/hgm 324\nI1031 10:10:46.936266       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/p8g 348\nI1031 10:10:47.135562       1 logs_generator.go:76] 3 GET /api/v1/namespaces/ns/pods/w9xw 360\nI1031 10:10:47.335973       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/dvhf 344\nI1031 10:10:47.536413       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/wc7 212\nI1031 10:10:47.735649       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/dqb 336\nI1031 10:10:47.936061       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/tcp 550\nI1031 10:10:48.136481       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/9wms 551\nI1031 10:10:48.335907       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/q94 576\nI1031 10:10:48.536303       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/6bq8 297\nI1031 10:10:48.735628       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/ns/pods/rvt 449\nI1031 10:10:48.936091       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/4fvc 585\nI1031 10:10:49.136544       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/b9qm 318\nI1031 10:10:49.335996       1 logs_generator.go:76] 14 POST /api/v1/namespaces/ns/pods/jq28 306\nI1031 10:10:49.536375       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/xg97 207\nI1031 10:10:49.735689       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/thfz 402\nI1031 10:10:49.936058       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/v57 367\nI1031 10:10:50.136364       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/zh87 421\nI1031 10:10:50.336274       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/kq5 513\nI1031 10:10:50.535548       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/7xq5 300\nI1031 10:10:50.735962       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/5h4 502\nI1031 10:10:50.936351       1 logs_generator.go:76] 22 PUT /api/v1/namespaces/kube-system/pods/nvsb 368\nI1031 10:10:51.135599       1 logs_generator.go:76] 23 POST /api/v1/namespaces/ns/pods/gph2 275\nI1031 10:10:51.335982       1 logs_generator.go:76] 24 PUT /api/v1/namespaces/default/pods/jxf4 588\nI1031 10:10:51.536158       1 logs_generator.go:76] 25 PUT /api/v1/namespaces/ns/pods/6vr 475\nI1031 10:10:51.735548       1 logs_generator.go:76] 26 PUT /api/v1/namespaces/ns/pods/xzc 418\nI1031 10:10:51.936016       1 logs_generator.go:76] 27 POST /api/v1/namespaces/ns/pods/mmfj 378\nI1031 10:10:52.136487       1 logs_generator.go:76] 28 GET /api/v1/namespaces/default/pods/fgkz 267\nI1031 10:10:52.335886       1 logs_generator.go:76] 29 GET /api/v1/namespaces/ns/pods/74n 318\n"
    [AfterEach] Kubectl logs
      test/e2e/kubectl/kubectl.go:1577
    Oct 31 10:10:52.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-419 delete pod logs-generator'
    Oct 31 10:10:54.028: INFO: stderr: ""
    Oct 31 10:10:54.028: INFO: stdout: "pod \"logs-generator\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:10:54.028: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-419" for this suite. 10/31/23 10:10:54.046
  << End Captured GinkgoWriter Output
------------------------------
[sig-network] IngressClass API
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
[BeforeEach] [sig-network] IngressClass API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:10:54.114
Oct 31 10:10:54.114: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename ingressclass 10/31/23 10:10:54.116
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:54.309
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:54.447
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:211
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223
STEP: getting /apis 10/31/23 10:10:54.541
STEP: getting /apis/networking.k8s.io 10/31/23 10:10:54.645
STEP: getting /apis/networking.k8s.iov1 10/31/23 10:10:54.734
STEP: creating 10/31/23 10:10:54.823
STEP: getting 10/31/23 10:10:55.114
STEP: listing 10/31/23 10:10:55.206
STEP: watching 10/31/23 10:10:55.31
Oct 31 10:10:55.310: INFO: starting watch
STEP: patching 10/31/23 10:10:55.356
STEP: updating 10/31/23 10:10:55.447
Oct 31 10:10:55.533: INFO: waiting for watch events with expected annotations
Oct 31 10:10:55.533: INFO: saw patched and updated annotations
STEP: deleting 10/31/23 10:10:55.534
STEP: deleting a collection 10/31/23 10:10:55.77
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/node/init/init.go:32
Oct 31 10:10:55.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] IngressClass API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] IngressClass API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] IngressClass API
  tear down framework | framework.go:193
STEP: Destroying namespace "ingressclass-1031" for this suite. 10/31/23 10:10:55.967
------------------------------
â€¢ [1.909 seconds]
[sig-network] IngressClass API
test/e2e/network/common/framework.go:23
   should support creating IngressClass API operations [Conformance]
  test/e2e/network/ingressclass.go:223

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] IngressClass API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:10:54.114
    Oct 31 10:10:54.114: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename ingressclass 10/31/23 10:10:54.116
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:54.309
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:54.447
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] IngressClass API
      test/e2e/network/ingressclass.go:211
    [It]  should support creating IngressClass API operations [Conformance]
      test/e2e/network/ingressclass.go:223
    STEP: getting /apis 10/31/23 10:10:54.541
    STEP: getting /apis/networking.k8s.io 10/31/23 10:10:54.645
    STEP: getting /apis/networking.k8s.iov1 10/31/23 10:10:54.734
    STEP: creating 10/31/23 10:10:54.823
    STEP: getting 10/31/23 10:10:55.114
    STEP: listing 10/31/23 10:10:55.206
    STEP: watching 10/31/23 10:10:55.31
    Oct 31 10:10:55.310: INFO: starting watch
    STEP: patching 10/31/23 10:10:55.356
    STEP: updating 10/31/23 10:10:55.447
    Oct 31 10:10:55.533: INFO: waiting for watch events with expected annotations
    Oct 31 10:10:55.533: INFO: saw patched and updated annotations
    STEP: deleting 10/31/23 10:10:55.534
    STEP: deleting a collection 10/31/23 10:10:55.77
    [AfterEach] [sig-network] IngressClass API
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:10:55.913: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] IngressClass API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] IngressClass API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] IngressClass API
      tear down framework | framework.go:193
    STEP: Destroying namespace "ingressclass-1031" for this suite. 10/31/23 10:10:55.967
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:10:56.024
Oct 31 10:10:56.024: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename subpath 10/31/23 10:10:56.026
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:56.214
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:56.361
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 10/31/23 10:10:56.508
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/storage/subpath.go:70
STEP: Creating pod pod-subpath-test-configmap-prcf 10/31/23 10:10:56.624
STEP: Creating a pod to test atomic-volume-subpath 10/31/23 10:10:56.624
Oct 31 10:10:56.753: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-prcf" in namespace "subpath-5326" to be "Succeeded or Failed"
Oct 31 10:10:56.776: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Pending", Reason="", readiness=false. Elapsed: 21.761711ms
Oct 31 10:10:58.791: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 2.037499683s
Oct 31 10:11:00.793: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 4.039410515s
Oct 31 10:11:02.856: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 6.101814896s
Oct 31 10:11:04.784: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 8.029639533s
Oct 31 10:11:06.817: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 10.062744549s
Oct 31 10:11:08.810: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 12.05616233s
Oct 31 10:11:10.825: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 14.071382073s
Oct 31 10:11:12.783: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 16.029044872s
Oct 31 10:11:14.785: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 18.031278968s
Oct 31 10:11:16.787: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 20.033033023s
Oct 31 10:11:18.791: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 22.03688361s
Oct 31 10:11:20.786: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=false. Elapsed: 24.032398792s
Oct 31 10:11:22.833: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.079161703s
STEP: Saw pod success 10/31/23 10:11:22.833
Oct 31 10:11:22.833: INFO: Pod "pod-subpath-test-configmap-prcf" satisfied condition "Succeeded or Failed"
Oct 31 10:11:22.841: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-subpath-test-configmap-prcf container test-container-subpath-configmap-prcf: <nil>
STEP: delete the pod 10/31/23 10:11:22.944
Oct 31 10:11:23.005: INFO: Waiting for pod pod-subpath-test-configmap-prcf to disappear
Oct 31 10:11:23.053: INFO: Pod pod-subpath-test-configmap-prcf no longer exists
STEP: Deleting pod pod-subpath-test-configmap-prcf 10/31/23 10:11:23.053
Oct 31 10:11:23.054: INFO: Deleting pod "pod-subpath-test-configmap-prcf" in namespace "subpath-5326"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Oct 31 10:11:23.148: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-5326" for this suite. 10/31/23 10:11:23.203
------------------------------
â€¢ [SLOW TEST] [27.253 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/storage/subpath.go:70

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:10:56.024
    Oct 31 10:10:56.024: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename subpath 10/31/23 10:10:56.026
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:10:56.214
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:10:56.361
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 10/31/23 10:10:56.508
    [It] should support subpaths with configmap pod [Conformance]
      test/e2e/storage/subpath.go:70
    STEP: Creating pod pod-subpath-test-configmap-prcf 10/31/23 10:10:56.624
    STEP: Creating a pod to test atomic-volume-subpath 10/31/23 10:10:56.624
    Oct 31 10:10:56.753: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-prcf" in namespace "subpath-5326" to be "Succeeded or Failed"
    Oct 31 10:10:56.776: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Pending", Reason="", readiness=false. Elapsed: 21.761711ms
    Oct 31 10:10:58.791: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 2.037499683s
    Oct 31 10:11:00.793: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 4.039410515s
    Oct 31 10:11:02.856: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 6.101814896s
    Oct 31 10:11:04.784: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 8.029639533s
    Oct 31 10:11:06.817: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 10.062744549s
    Oct 31 10:11:08.810: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 12.05616233s
    Oct 31 10:11:10.825: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 14.071382073s
    Oct 31 10:11:12.783: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 16.029044872s
    Oct 31 10:11:14.785: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 18.031278968s
    Oct 31 10:11:16.787: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 20.033033023s
    Oct 31 10:11:18.791: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=true. Elapsed: 22.03688361s
    Oct 31 10:11:20.786: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Running", Reason="", readiness=false. Elapsed: 24.032398792s
    Oct 31 10:11:22.833: INFO: Pod "pod-subpath-test-configmap-prcf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 26.079161703s
    STEP: Saw pod success 10/31/23 10:11:22.833
    Oct 31 10:11:22.833: INFO: Pod "pod-subpath-test-configmap-prcf" satisfied condition "Succeeded or Failed"
    Oct 31 10:11:22.841: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-subpath-test-configmap-prcf container test-container-subpath-configmap-prcf: <nil>
    STEP: delete the pod 10/31/23 10:11:22.944
    Oct 31 10:11:23.005: INFO: Waiting for pod pod-subpath-test-configmap-prcf to disappear
    Oct 31 10:11:23.053: INFO: Pod pod-subpath-test-configmap-prcf no longer exists
    STEP: Deleting pod pod-subpath-test-configmap-prcf 10/31/23 10:11:23.053
    Oct 31 10:11:23.054: INFO: Deleting pod "pod-subpath-test-configmap-prcf" in namespace "subpath-5326"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:11:23.148: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-5326" for this suite. 10/31/23 10:11:23.203
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:11:23.28
Oct 31 10:11:23.280: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 10:11:23.282
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:23.483
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:23.584
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 10:11:23.791
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:11:24.281
STEP: Deploying the webhook pod 10/31/23 10:11:24.366
STEP: Wait for the deployment to be ready 10/31/23 10:11:24.447
Oct 31 10:11:24.714: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 11, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 11, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 11, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 11, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 10:11:26.723
STEP: Verifying the service has paired with the endpoint 10/31/23 10:11:26.797
Oct 31 10:11:27.797: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 10/31/23 10:11:27.808
Oct 31 10:11:29.017: INFO: Waiting for webhook configuration to be ready...
STEP: create a namespace for the webhook 10/31/23 10:11:30.336
STEP: create a configmap should be unconditionally rejected by the webhook 10/31/23 10:11:30.396
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:11:30.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-9489" for this suite. 10/31/23 10:11:31.024
STEP: Destroying namespace "webhook-9489-markers" for this suite. 10/31/23 10:11:31.078
------------------------------
â€¢ [SLOW TEST] [7.852 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/apimachinery/webhook.go:239

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:11:23.28
    Oct 31 10:11:23.280: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 10:11:23.282
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:23.483
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:23.584
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 10:11:23.791
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:11:24.281
    STEP: Deploying the webhook pod 10/31/23 10:11:24.366
    STEP: Wait for the deployment to be ready 10/31/23 10:11:24.447
    Oct 31 10:11:24.714: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 11, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 11, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 11, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 11, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 10:11:26.723
    STEP: Verifying the service has paired with the endpoint 10/31/23 10:11:26.797
    Oct 31 10:11:27.797: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should unconditionally reject operations on fail closed webhook [Conformance]
      test/e2e/apimachinery/webhook.go:239
    STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API 10/31/23 10:11:27.808
    Oct 31 10:11:29.017: INFO: Waiting for webhook configuration to be ready...
    STEP: create a namespace for the webhook 10/31/23 10:11:30.336
    STEP: create a configmap should be unconditionally rejected by the webhook 10/31/23 10:11:30.396
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:11:30.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-9489" for this suite. 10/31/23 10:11:31.024
    STEP: Destroying namespace "webhook-9489-markers" for this suite. 10/31/23 10:11:31.078
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] Pods
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:11:31.133
Oct 31 10:11:31.133: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 10:11:31.134
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:31.386
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:31.538
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896
STEP: creating a Pod with a static label 10/31/23 10:11:31.784
STEP: watching for Pod to be ready 10/31/23 10:11:31.841
Oct 31 10:11:31.856: INFO: observed Pod pod-test in namespace pods-3980 in phase Pending with labels: map[test-pod-static:true] & conditions []
Oct 31 10:11:31.856: INFO: observed Pod pod-test in namespace pods-3980 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  }]
Oct 31 10:11:31.961: INFO: observed Pod pod-test in namespace pods-3980 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  }]
Oct 31 10:11:33.063: INFO: Found Pod pod-test in namespace pods-3980 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:32 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data 10/31/23 10:11:33.076
STEP: getting the Pod and ensuring that it's patched 10/31/23 10:11:33.186
STEP: replacing the Pod's status Ready condition to False 10/31/23 10:11:33.278
STEP: check the Pod again to ensure its Ready conditions are False 10/31/23 10:11:33.372
STEP: deleting the Pod via a Collection with a LabelSelector 10/31/23 10:11:33.373
STEP: watching for the Pod to be deleted 10/31/23 10:11:33.427
Oct 31 10:11:33.476: INFO: observed event type MODIFIED
Oct 31 10:11:35.020: INFO: observed event type MODIFIED
Oct 31 10:11:36.026: INFO: observed event type MODIFIED
Oct 31 10:11:36.086: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 10:11:36.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-3980" for this suite. 10/31/23 10:11:36.163
------------------------------
â€¢ [SLOW TEST] [5.119 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/common/node/pods.go:896

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:11:31.133
    Oct 31 10:11:31.133: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 10:11:31.134
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:31.386
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:31.538
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should run through the lifecycle of Pods and PodStatus [Conformance]
      test/e2e/common/node/pods.go:896
    STEP: creating a Pod with a static label 10/31/23 10:11:31.784
    STEP: watching for Pod to be ready 10/31/23 10:11:31.841
    Oct 31 10:11:31.856: INFO: observed Pod pod-test in namespace pods-3980 in phase Pending with labels: map[test-pod-static:true] & conditions []
    Oct 31 10:11:31.856: INFO: observed Pod pod-test in namespace pods-3980 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  }]
    Oct 31 10:11:31.961: INFO: observed Pod pod-test in namespace pods-3980 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  }]
    Oct 31 10:11:33.063: INFO: Found Pod pod-test in namespace pods-3980 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:32 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:32 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-10-31 10:11:31 +0000 UTC  }]
    STEP: patching the Pod with a new Label and updated data 10/31/23 10:11:33.076
    STEP: getting the Pod and ensuring that it's patched 10/31/23 10:11:33.186
    STEP: replacing the Pod's status Ready condition to False 10/31/23 10:11:33.278
    STEP: check the Pod again to ensure its Ready conditions are False 10/31/23 10:11:33.372
    STEP: deleting the Pod via a Collection with a LabelSelector 10/31/23 10:11:33.373
    STEP: watching for the Pod to be deleted 10/31/23 10:11:33.427
    Oct 31 10:11:33.476: INFO: observed event type MODIFIED
    Oct 31 10:11:35.020: INFO: observed event type MODIFIED
    Oct 31 10:11:36.026: INFO: observed event type MODIFIED
    Oct 31 10:11:36.086: INFO: observed event type MODIFIED
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:11:36.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-3980" for this suite. 10/31/23 10:11:36.163
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:11:36.26
Oct 31 10:11:36.260: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-pred 10/31/23 10:11:36.261
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:36.508
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:36.625
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Oct 31 10:11:36.667: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Oct 31 10:11:36.696: INFO: Waiting for terminating namespaces to be deleted...
Oct 31 10:11:36.799: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz before test
Oct 31 10:11:36.859: INFO: coredns-7d6446f647-hz5j8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:11:36.860: INFO: 	Container coredns ready: true, restart count 0
Oct 31 10:11:36.860: INFO: csi-bizflycloud-nodeplugin-xkt2t from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 10:11:36.860: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 10:11:36.860: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 10:11:36.861: INFO: kube-router-jdd2v from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:11:36.861: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 10:11:36.861: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:11:36.861: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:11:36.861: INFO: 	Container systemd-logs ready: true, restart count 0
Oct 31 10:11:36.862: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n before test
Oct 31 10:11:36.874: INFO: csi-bizflycloud-nodeplugin-x6sjq from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 10:11:36.874: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 10:11:36.874: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 10:11:36.874: INFO: kube-router-p6g8s from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:11:36.874: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 10:11:36.874: INFO: sonobuoy from sonobuoy started at 2023-10-31 08:59:15 +0000 UTC (1 container statuses recorded)
Oct 31 10:11:36.874: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Oct 31 10:11:36.874: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:11:36.874: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:11:36.874: INFO: 	Container systemd-logs ready: true, restart count 0
Oct 31 10:11:36.874: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 before test
Oct 31 10:11:36.962: INFO: coredns-7d6446f647-bmrzn from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:11:36.962: INFO: 	Container coredns ready: true, restart count 0
Oct 31 10:11:36.962: INFO: csi-bizflycloud-nodeplugin-flvf8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 10:11:36.962: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 10:11:36.962: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 10:11:36.962: INFO: kube-router-9x529 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:11:36.962: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 10:11:36.962: INFO: sonobuoy-e2e-job-5096458fae614ffb from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:11:36.962: INFO: 	Container e2e ready: true, restart count 0
Oct 31 10:11:36.962: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:11:36.962: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:11:36.962: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:11:36.962: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331
STEP: verifying the node has the label node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz 10/31/23 10:11:37.004
STEP: verifying the node has the label node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n 10/31/23 10:11:37.097
STEP: verifying the node has the label node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 10/31/23 10:11:37.157
Oct 31 10:11:37.224: INFO: Pod coredns-7d6446f647-bmrzn requesting resource cpu=100m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
Oct 31 10:11:37.224: INFO: Pod coredns-7d6446f647-hz5j8 requesting resource cpu=100m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
Oct 31 10:11:37.224: INFO: Pod csi-bizflycloud-nodeplugin-flvf8 requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
Oct 31 10:11:37.224: INFO: Pod csi-bizflycloud-nodeplugin-x6sjq requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
Oct 31 10:11:37.225: INFO: Pod csi-bizflycloud-nodeplugin-xkt2t requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
Oct 31 10:11:37.225: INFO: Pod kube-router-9x529 requesting resource cpu=250m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
Oct 31 10:11:37.225: INFO: Pod kube-router-jdd2v requesting resource cpu=250m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
Oct 31 10:11:37.225: INFO: Pod kube-router-p6g8s requesting resource cpu=250m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
Oct 31 10:11:37.225: INFO: Pod sonobuoy requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
Oct 31 10:11:37.225: INFO: Pod sonobuoy-e2e-job-5096458fae614ffb requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
Oct 31 10:11:37.225: INFO: Pod sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
Oct 31 10:11:37.225: INFO: Pod sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
Oct 31 10:11:37.225: INFO: Pod sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
STEP: Starting Pods to consume most of the cluster CPU. 10/31/23 10:11:37.226
Oct 31 10:11:37.226: INFO: Creating a pod which consumes cpu=1106m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
Oct 31 10:11:37.281: INFO: Creating a pod which consumes cpu=1176m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
Oct 31 10:11:37.302: INFO: Creating a pod which consumes cpu=1106m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
Oct 31 10:11:37.322: INFO: Waiting up to 5m0s for pod "filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb" in namespace "sched-pred-9227" to be "running"
Oct 31 10:11:37.337: INFO: Pod "filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb": Phase="Pending", Reason="", readiness=false. Elapsed: 14.933883ms
Oct 31 10:11:39.389: INFO: Pod "filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb": Phase="Running", Reason="", readiness=true. Elapsed: 2.067068645s
Oct 31 10:11:39.389: INFO: Pod "filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb" satisfied condition "running"
Oct 31 10:11:39.389: INFO: Waiting up to 5m0s for pod "filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c" in namespace "sched-pred-9227" to be "running"
Oct 31 10:11:39.454: INFO: Pod "filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c": Phase="Running", Reason="", readiness=true. Elapsed: 65.082252ms
Oct 31 10:11:39.454: INFO: Pod "filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c" satisfied condition "running"
Oct 31 10:11:39.454: INFO: Waiting up to 5m0s for pod "filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf" in namespace "sched-pred-9227" to be "running"
Oct 31 10:11:39.507: INFO: Pod "filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf": Phase="Running", Reason="", readiness=true. Elapsed: 52.303866ms
Oct 31 10:11:39.507: INFO: Pod "filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf" satisfied condition "running"
STEP: Creating another pod that requires unavailable amount of CPU. 10/31/23 10:11:39.507
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c.1793297c133b4f62], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9227/filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c to pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n] 10/31/23 10:11:39.561
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c.1793297c34da2d7f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 10/31/23 10:11:39.561
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c.1793297c382b54c8], Reason = [Created], Message = [Created container filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c] 10/31/23 10:11:39.561
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c.1793297c40ba40a9], Reason = [Started], Message = [Started container filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c] 10/31/23 10:11:39.562
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf.1793297c147448e6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9227/filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf to pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9] 10/31/23 10:11:39.562
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf.1793297c32a0d7b9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 10/31/23 10:11:39.562
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf.1793297c3579d9da], Reason = [Created], Message = [Created container filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf] 10/31/23 10:11:39.562
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf.1793297c3cf1e53d], Reason = [Started], Message = [Started container filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf] 10/31/23 10:11:39.562
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb.1793297c122ec54e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9227/filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb to pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz] 10/31/23 10:11:39.562
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb.1793297c317e374a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 10/31/23 10:11:39.562
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb.1793297c3491b2fc], Reason = [Created], Message = [Created container filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb] 10/31/23 10:11:39.562
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb.1793297c3b27aec5], Reason = [Started], Message = [Started container filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb] 10/31/23 10:11:39.562
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.1793297c9fd5073b], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] 10/31/23 10:11:39.68
STEP: removing the label node off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n 10/31/23 10:11:40.681
STEP: verifying the node doesn't have the label node 10/31/23 10:11:40.754
STEP: removing the label node off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 10/31/23 10:11:40.805
STEP: verifying the node doesn't have the label node 10/31/23 10:11:40.873
STEP: removing the label node off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz 10/31/23 10:11:40.883
STEP: verifying the node doesn't have the label node 10/31/23 10:11:41.06
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:11:41.078: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-9227" for this suite. 10/31/23 10:11:41.122
------------------------------
â€¢ [4.911 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/scheduling/predicates.go:331

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:11:36.26
    Oct 31 10:11:36.260: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-pred 10/31/23 10:11:36.261
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:36.508
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:36.625
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Oct 31 10:11:36.667: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Oct 31 10:11:36.696: INFO: Waiting for terminating namespaces to be deleted...
    Oct 31 10:11:36.799: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz before test
    Oct 31 10:11:36.859: INFO: coredns-7d6446f647-hz5j8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:11:36.860: INFO: 	Container coredns ready: true, restart count 0
    Oct 31 10:11:36.860: INFO: csi-bizflycloud-nodeplugin-xkt2t from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 10:11:36.860: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 10:11:36.860: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 10:11:36.861: INFO: kube-router-jdd2v from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:11:36.861: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 10:11:36.861: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:11:36.861: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:11:36.861: INFO: 	Container systemd-logs ready: true, restart count 0
    Oct 31 10:11:36.862: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n before test
    Oct 31 10:11:36.874: INFO: csi-bizflycloud-nodeplugin-x6sjq from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 10:11:36.874: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 10:11:36.874: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 10:11:36.874: INFO: kube-router-p6g8s from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:11:36.874: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 10:11:36.874: INFO: sonobuoy from sonobuoy started at 2023-10-31 08:59:15 +0000 UTC (1 container statuses recorded)
    Oct 31 10:11:36.874: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Oct 31 10:11:36.874: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:11:36.874: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:11:36.874: INFO: 	Container systemd-logs ready: true, restart count 0
    Oct 31 10:11:36.874: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 before test
    Oct 31 10:11:36.962: INFO: coredns-7d6446f647-bmrzn from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:11:36.962: INFO: 	Container coredns ready: true, restart count 0
    Oct 31 10:11:36.962: INFO: csi-bizflycloud-nodeplugin-flvf8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 10:11:36.962: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 10:11:36.962: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 10:11:36.962: INFO: kube-router-9x529 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:11:36.962: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 10:11:36.962: INFO: sonobuoy-e2e-job-5096458fae614ffb from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:11:36.962: INFO: 	Container e2e ready: true, restart count 0
    Oct 31 10:11:36.962: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:11:36.962: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:11:36.962: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:11:36.962: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates resource limits of pods that are allowed to run  [Conformance]
      test/e2e/scheduling/predicates.go:331
    STEP: verifying the node has the label node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz 10/31/23 10:11:37.004
    STEP: verifying the node has the label node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n 10/31/23 10:11:37.097
    STEP: verifying the node has the label node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 10/31/23 10:11:37.157
    Oct 31 10:11:37.224: INFO: Pod coredns-7d6446f647-bmrzn requesting resource cpu=100m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
    Oct 31 10:11:37.224: INFO: Pod coredns-7d6446f647-hz5j8 requesting resource cpu=100m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
    Oct 31 10:11:37.224: INFO: Pod csi-bizflycloud-nodeplugin-flvf8 requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
    Oct 31 10:11:37.224: INFO: Pod csi-bizflycloud-nodeplugin-x6sjq requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
    Oct 31 10:11:37.225: INFO: Pod csi-bizflycloud-nodeplugin-xkt2t requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
    Oct 31 10:11:37.225: INFO: Pod kube-router-9x529 requesting resource cpu=250m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
    Oct 31 10:11:37.225: INFO: Pod kube-router-jdd2v requesting resource cpu=250m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
    Oct 31 10:11:37.225: INFO: Pod kube-router-p6g8s requesting resource cpu=250m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
    Oct 31 10:11:37.225: INFO: Pod sonobuoy requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
    Oct 31 10:11:37.225: INFO: Pod sonobuoy-e2e-job-5096458fae614ffb requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
    Oct 31 10:11:37.225: INFO: Pod sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
    Oct 31 10:11:37.225: INFO: Pod sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
    Oct 31 10:11:37.225: INFO: Pod sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw requesting resource cpu=0m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
    STEP: Starting Pods to consume most of the cluster CPU. 10/31/23 10:11:37.226
    Oct 31 10:11:37.226: INFO: Creating a pod which consumes cpu=1106m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz
    Oct 31 10:11:37.281: INFO: Creating a pod which consumes cpu=1176m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n
    Oct 31 10:11:37.302: INFO: Creating a pod which consumes cpu=1106m on Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9
    Oct 31 10:11:37.322: INFO: Waiting up to 5m0s for pod "filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb" in namespace "sched-pred-9227" to be "running"
    Oct 31 10:11:37.337: INFO: Pod "filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb": Phase="Pending", Reason="", readiness=false. Elapsed: 14.933883ms
    Oct 31 10:11:39.389: INFO: Pod "filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb": Phase="Running", Reason="", readiness=true. Elapsed: 2.067068645s
    Oct 31 10:11:39.389: INFO: Pod "filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb" satisfied condition "running"
    Oct 31 10:11:39.389: INFO: Waiting up to 5m0s for pod "filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c" in namespace "sched-pred-9227" to be "running"
    Oct 31 10:11:39.454: INFO: Pod "filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c": Phase="Running", Reason="", readiness=true. Elapsed: 65.082252ms
    Oct 31 10:11:39.454: INFO: Pod "filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c" satisfied condition "running"
    Oct 31 10:11:39.454: INFO: Waiting up to 5m0s for pod "filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf" in namespace "sched-pred-9227" to be "running"
    Oct 31 10:11:39.507: INFO: Pod "filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf": Phase="Running", Reason="", readiness=true. Elapsed: 52.303866ms
    Oct 31 10:11:39.507: INFO: Pod "filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf" satisfied condition "running"
    STEP: Creating another pod that requires unavailable amount of CPU. 10/31/23 10:11:39.507
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c.1793297c133b4f62], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9227/filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c to pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n] 10/31/23 10:11:39.561
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c.1793297c34da2d7f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 10/31/23 10:11:39.561
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c.1793297c382b54c8], Reason = [Created], Message = [Created container filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c] 10/31/23 10:11:39.561
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c.1793297c40ba40a9], Reason = [Started], Message = [Started container filler-pod-9115495f-1173-451f-bad3-ab3a449d2e2c] 10/31/23 10:11:39.562
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf.1793297c147448e6], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9227/filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf to pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9] 10/31/23 10:11:39.562
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf.1793297c32a0d7b9], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 10/31/23 10:11:39.562
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf.1793297c3579d9da], Reason = [Created], Message = [Created container filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf] 10/31/23 10:11:39.562
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf.1793297c3cf1e53d], Reason = [Started], Message = [Started container filler-pod-a40b10bf-2ed8-47e8-8e26-d056630b62cf] 10/31/23 10:11:39.562
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb.1793297c122ec54e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-9227/filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb to pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz] 10/31/23 10:11:39.562
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb.1793297c317e374a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] 10/31/23 10:11:39.562
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb.1793297c3491b2fc], Reason = [Created], Message = [Created container filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb] 10/31/23 10:11:39.562
    STEP: Considering event: 
    Type = [Normal], Name = [filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb.1793297c3b27aec5], Reason = [Started], Message = [Started container filler-pod-a4c0ce0a-4f7c-4226-87cf-2733210c29bb] 10/31/23 10:11:39.562
    STEP: Considering event: 
    Type = [Warning], Name = [additional-pod.1793297c9fd5073b], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] 10/31/23 10:11:39.68
    STEP: removing the label node off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n 10/31/23 10:11:40.681
    STEP: verifying the node doesn't have the label node 10/31/23 10:11:40.754
    STEP: removing the label node off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 10/31/23 10:11:40.805
    STEP: verifying the node doesn't have the label node 10/31/23 10:11:40.873
    STEP: removing the label node off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz 10/31/23 10:11:40.883
    STEP: verifying the node doesn't have the label node 10/31/23 10:11:41.06
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:11:41.078: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-9227" for this suite. 10/31/23 10:11:41.122
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:11:41.172
Oct 31 10:11:41.173: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename dns 10/31/23 10:11:41.174
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:41.392
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:41.524
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 10/31/23 10:11:41.623
Oct 31 10:11:41.675: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7719  7e7b8c03-2fa3-44c9-9853-40a001a1f5dd 31363 0 2023-10-31 10:11:41 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-10-31 10:11:41 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9sh25,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9sh25,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Oct 31 10:11:41.676: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-7719" to be "running and ready"
Oct 31 10:11:41.717: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 41.314919ms
Oct 31 10:11:41.718: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:11:43.726: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.049454267s
Oct 31 10:11:43.726: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
Oct 31 10:11:43.726: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
STEP: Verifying customized DNS suffix list is configured on pod... 10/31/23 10:11:43.726
Oct 31 10:11:43.726: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7719 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:11:43.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:11:43.727: INFO: ExecWithOptions: Clientset creation
Oct 31 10:11:43.727: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/dns-7719/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod... 10/31/23 10:11:44.53
Oct 31 10:11:44.530: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7719 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:11:44.530: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:11:44.531: INFO: ExecWithOptions: Clientset creation
Oct 31 10:11:44.531: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/dns-7719/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Oct 31 10:11:45.308: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Oct 31 10:11:45.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-7719" for this suite. 10/31/23 10:11:45.441
------------------------------
â€¢ [4.342 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/network/dns.go:411

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:11:41.172
    Oct 31 10:11:41.173: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename dns 10/31/23 10:11:41.174
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:41.392
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:41.524
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should support configurable pod DNS nameservers [Conformance]
      test/e2e/network/dns.go:411
    STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... 10/31/23 10:11:41.623
    Oct 31 10:11:41.675: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7719  7e7b8c03-2fa3-44c9-9853-40a001a1f5dd 31363 0 2023-10-31 10:11:41 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-10-31 10:11:41 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9sh25,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9sh25,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    Oct 31 10:11:41.676: INFO: Waiting up to 5m0s for pod "test-dns-nameservers" in namespace "dns-7719" to be "running and ready"
    Oct 31 10:11:41.717: INFO: Pod "test-dns-nameservers": Phase="Pending", Reason="", readiness=false. Elapsed: 41.314919ms
    Oct 31 10:11:41.718: INFO: The phase of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:11:43.726: INFO: Pod "test-dns-nameservers": Phase="Running", Reason="", readiness=true. Elapsed: 2.049454267s
    Oct 31 10:11:43.726: INFO: The phase of Pod test-dns-nameservers is Running (Ready = true)
    Oct 31 10:11:43.726: INFO: Pod "test-dns-nameservers" satisfied condition "running and ready"
    STEP: Verifying customized DNS suffix list is configured on pod... 10/31/23 10:11:43.726
    Oct 31 10:11:43.726: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7719 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:11:43.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:11:43.727: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:11:43.727: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/dns-7719/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    STEP: Verifying customized DNS server is configured on pod... 10/31/23 10:11:44.53
    Oct 31 10:11:44.530: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7719 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:11:44.530: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:11:44.531: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:11:44.531: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/dns-7719/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Oct 31 10:11:45.308: INFO: Deleting pod test-dns-nameservers...
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:11:45.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-7719" for this suite. 10/31/23 10:11:45.441
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose
  should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:11:45.515
Oct 31 10:11:45.515: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:11:45.517
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:45.723
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:45.871
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should create services for rc  [Conformance]
  test/e2e/kubectl/kubectl.go:1415
STEP: creating Agnhost RC 10/31/23 10:11:45.967
Oct 31 10:11:45.968: INFO: namespace kubectl-6260
Oct 31 10:11:45.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-6260 create -f -'
Oct 31 10:11:47.589: INFO: stderr: ""
Oct 31 10:11:47.589: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start. 10/31/23 10:11:47.589
Oct 31 10:11:48.637: INFO: Selector matched 1 pods for map[app:agnhost]
Oct 31 10:11:48.637: INFO: Found 0 / 1
Oct 31 10:11:49.625: INFO: Selector matched 1 pods for map[app:agnhost]
Oct 31 10:11:49.625: INFO: Found 1 / 1
Oct 31 10:11:49.625: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Oct 31 10:11:49.674: INFO: Selector matched 1 pods for map[app:agnhost]
Oct 31 10:11:49.674: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Oct 31 10:11:49.674: INFO: wait on agnhost-primary startup in kubectl-6260 
Oct 31 10:11:49.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-6260 logs agnhost-primary-mrbd5 agnhost-primary'
Oct 31 10:11:49.999: INFO: stderr: ""
Oct 31 10:11:49.999: INFO: stdout: "Paused\n"
STEP: exposing RC 10/31/23 10:11:49.999
Oct 31 10:11:49.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-6260 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Oct 31 10:11:50.267: INFO: stderr: ""
Oct 31 10:11:50.267: INFO: stdout: "service/rm2 exposed\n"
Oct 31 10:11:50.281: INFO: Service rm2 in namespace kubectl-6260 found.
STEP: exposing service 10/31/23 10:11:52.406
Oct 31 10:11:52.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-6260 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Oct 31 10:11:52.626: INFO: stderr: ""
Oct 31 10:11:52.626: INFO: stdout: "service/rm3 exposed\n"
Oct 31 10:11:52.713: INFO: Service rm3 in namespace kubectl-6260 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:11:54.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-6260" for this suite. 10/31/23 10:11:54.902
------------------------------
â€¢ [SLOW TEST] [9.439 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1409
    should create services for rc  [Conformance]
    test/e2e/kubectl/kubectl.go:1415

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:11:45.515
    Oct 31 10:11:45.515: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:11:45.517
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:45.723
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:45.871
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should create services for rc  [Conformance]
      test/e2e/kubectl/kubectl.go:1415
    STEP: creating Agnhost RC 10/31/23 10:11:45.967
    Oct 31 10:11:45.968: INFO: namespace kubectl-6260
    Oct 31 10:11:45.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-6260 create -f -'
    Oct 31 10:11:47.589: INFO: stderr: ""
    Oct 31 10:11:47.589: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
    STEP: Waiting for Agnhost primary to start. 10/31/23 10:11:47.589
    Oct 31 10:11:48.637: INFO: Selector matched 1 pods for map[app:agnhost]
    Oct 31 10:11:48.637: INFO: Found 0 / 1
    Oct 31 10:11:49.625: INFO: Selector matched 1 pods for map[app:agnhost]
    Oct 31 10:11:49.625: INFO: Found 1 / 1
    Oct 31 10:11:49.625: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
    Oct 31 10:11:49.674: INFO: Selector matched 1 pods for map[app:agnhost]
    Oct 31 10:11:49.674: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
    Oct 31 10:11:49.674: INFO: wait on agnhost-primary startup in kubectl-6260 
    Oct 31 10:11:49.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-6260 logs agnhost-primary-mrbd5 agnhost-primary'
    Oct 31 10:11:49.999: INFO: stderr: ""
    Oct 31 10:11:49.999: INFO: stdout: "Paused\n"
    STEP: exposing RC 10/31/23 10:11:49.999
    Oct 31 10:11:49.999: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-6260 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
    Oct 31 10:11:50.267: INFO: stderr: ""
    Oct 31 10:11:50.267: INFO: stdout: "service/rm2 exposed\n"
    Oct 31 10:11:50.281: INFO: Service rm2 in namespace kubectl-6260 found.
    STEP: exposing service 10/31/23 10:11:52.406
    Oct 31 10:11:52.406: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-6260 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
    Oct 31 10:11:52.626: INFO: stderr: ""
    Oct 31 10:11:52.626: INFO: stdout: "service/rm3 exposed\n"
    Oct 31 10:11:52.713: INFO: Service rm3 in namespace kubectl-6260 found.
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:11:54.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-6260" for this suite. 10/31/23 10:11:54.902
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:11:54.957
Oct 31 10:11:54.957: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename gc 10/31/23 10:11:54.958
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:55.13
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:55.277
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370
STEP: create the rc 10/31/23 10:11:55.428
STEP: delete the rc 10/31/23 10:12:00.524
STEP: wait for the rc to be deleted 10/31/23 10:12:00.688
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 10/31/23 10:12:05.702
STEP: Gathering metrics 10/31/23 10:12:35.728
W1031 10:12:35.782506      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Oct 31 10:12:35.782: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Oct 31 10:12:35.782: INFO: Deleting pod "simpletest.rc-22wcl" in namespace "gc-7849"
Oct 31 10:12:35.865: INFO: Deleting pod "simpletest.rc-26bqv" in namespace "gc-7849"
Oct 31 10:12:35.889: INFO: Deleting pod "simpletest.rc-2dvsc" in namespace "gc-7849"
Oct 31 10:12:35.967: INFO: Deleting pod "simpletest.rc-4ljtj" in namespace "gc-7849"
Oct 31 10:12:36.055: INFO: Deleting pod "simpletest.rc-4m4d9" in namespace "gc-7849"
Oct 31 10:12:36.112: INFO: Deleting pod "simpletest.rc-4mps2" in namespace "gc-7849"
Oct 31 10:12:36.151: INFO: Deleting pod "simpletest.rc-4v5fc" in namespace "gc-7849"
Oct 31 10:12:36.196: INFO: Deleting pod "simpletest.rc-58wm6" in namespace "gc-7849"
Oct 31 10:12:36.222: INFO: Deleting pod "simpletest.rc-5gpsc" in namespace "gc-7849"
Oct 31 10:12:36.390: INFO: Deleting pod "simpletest.rc-5k8k6" in namespace "gc-7849"
Oct 31 10:12:36.533: INFO: Deleting pod "simpletest.rc-5prws" in namespace "gc-7849"
Oct 31 10:12:36.567: INFO: Deleting pod "simpletest.rc-5v96c" in namespace "gc-7849"
Oct 31 10:12:36.633: INFO: Deleting pod "simpletest.rc-5ww4x" in namespace "gc-7849"
Oct 31 10:12:36.705: INFO: Deleting pod "simpletest.rc-5xrlp" in namespace "gc-7849"
Oct 31 10:12:36.729: INFO: Deleting pod "simpletest.rc-67hf9" in namespace "gc-7849"
Oct 31 10:12:36.802: INFO: Deleting pod "simpletest.rc-6c4vj" in namespace "gc-7849"
Oct 31 10:12:36.957: INFO: Deleting pod "simpletest.rc-6drt5" in namespace "gc-7849"
Oct 31 10:12:37.048: INFO: Deleting pod "simpletest.rc-6jbzh" in namespace "gc-7849"
Oct 31 10:12:37.348: INFO: Deleting pod "simpletest.rc-6r26g" in namespace "gc-7849"
Oct 31 10:12:37.365: INFO: Deleting pod "simpletest.rc-77knz" in namespace "gc-7849"
Oct 31 10:12:37.377: INFO: Deleting pod "simpletest.rc-7mjjp" in namespace "gc-7849"
Oct 31 10:12:37.483: INFO: Deleting pod "simpletest.rc-82hsv" in namespace "gc-7849"
Oct 31 10:12:37.509: INFO: Deleting pod "simpletest.rc-88bgt" in namespace "gc-7849"
Oct 31 10:12:37.591: INFO: Deleting pod "simpletest.rc-8qv44" in namespace "gc-7849"
Oct 31 10:12:37.658: INFO: Deleting pod "simpletest.rc-96ssv" in namespace "gc-7849"
Oct 31 10:12:37.689: INFO: Deleting pod "simpletest.rc-9g7c2" in namespace "gc-7849"
Oct 31 10:12:37.744: INFO: Deleting pod "simpletest.rc-9kh84" in namespace "gc-7849"
Oct 31 10:12:37.823: INFO: Deleting pod "simpletest.rc-9prnd" in namespace "gc-7849"
Oct 31 10:12:37.901: INFO: Deleting pod "simpletest.rc-9s6r6" in namespace "gc-7849"
Oct 31 10:12:37.973: INFO: Deleting pod "simpletest.rc-9v84c" in namespace "gc-7849"
Oct 31 10:12:38.074: INFO: Deleting pod "simpletest.rc-9x8kt" in namespace "gc-7849"
Oct 31 10:12:38.122: INFO: Deleting pod "simpletest.rc-b4pfl" in namespace "gc-7849"
Oct 31 10:12:38.163: INFO: Deleting pod "simpletest.rc-bgznt" in namespace "gc-7849"
Oct 31 10:12:38.291: INFO: Deleting pod "simpletest.rc-bmrlw" in namespace "gc-7849"
Oct 31 10:12:38.438: INFO: Deleting pod "simpletest.rc-c488b" in namespace "gc-7849"
Oct 31 10:12:38.529: INFO: Deleting pod "simpletest.rc-c58mw" in namespace "gc-7849"
Oct 31 10:12:38.585: INFO: Deleting pod "simpletest.rc-cnwhh" in namespace "gc-7849"
Oct 31 10:12:38.660: INFO: Deleting pod "simpletest.rc-cxwgl" in namespace "gc-7849"
Oct 31 10:12:38.726: INFO: Deleting pod "simpletest.rc-d24gt" in namespace "gc-7849"
Oct 31 10:12:38.747: INFO: Deleting pod "simpletest.rc-d4q79" in namespace "gc-7849"
Oct 31 10:12:38.805: INFO: Deleting pod "simpletest.rc-d4slc" in namespace "gc-7849"
Oct 31 10:12:38.833: INFO: Deleting pod "simpletest.rc-d9l42" in namespace "gc-7849"
Oct 31 10:12:38.913: INFO: Deleting pod "simpletest.rc-djmvg" in namespace "gc-7849"
Oct 31 10:12:39.007: INFO: Deleting pod "simpletest.rc-dwmr4" in namespace "gc-7849"
Oct 31 10:12:39.073: INFO: Deleting pod "simpletest.rc-fpn22" in namespace "gc-7849"
Oct 31 10:12:39.134: INFO: Deleting pod "simpletest.rc-g9gnd" in namespace "gc-7849"
Oct 31 10:12:39.167: INFO: Deleting pod "simpletest.rc-gsnrx" in namespace "gc-7849"
Oct 31 10:12:39.253: INFO: Deleting pod "simpletest.rc-hksjm" in namespace "gc-7849"
Oct 31 10:12:39.291: INFO: Deleting pod "simpletest.rc-hrn2n" in namespace "gc-7849"
Oct 31 10:12:39.367: INFO: Deleting pod "simpletest.rc-hx8ms" in namespace "gc-7849"
Oct 31 10:12:39.441: INFO: Deleting pod "simpletest.rc-hzxks" in namespace "gc-7849"
Oct 31 10:12:39.521: INFO: Deleting pod "simpletest.rc-j269k" in namespace "gc-7849"
Oct 31 10:12:39.576: INFO: Deleting pod "simpletest.rc-j86q6" in namespace "gc-7849"
Oct 31 10:12:39.628: INFO: Deleting pod "simpletest.rc-jfdw4" in namespace "gc-7849"
Oct 31 10:12:39.701: INFO: Deleting pod "simpletest.rc-jffrr" in namespace "gc-7849"
Oct 31 10:12:39.734: INFO: Deleting pod "simpletest.rc-jgc82" in namespace "gc-7849"
Oct 31 10:12:39.776: INFO: Deleting pod "simpletest.rc-jkbmm" in namespace "gc-7849"
Oct 31 10:12:39.850: INFO: Deleting pod "simpletest.rc-jsz6m" in namespace "gc-7849"
Oct 31 10:12:39.879: INFO: Deleting pod "simpletest.rc-jx425" in namespace "gc-7849"
Oct 31 10:12:40.012: INFO: Deleting pod "simpletest.rc-k8jh6" in namespace "gc-7849"
Oct 31 10:12:40.055: INFO: Deleting pod "simpletest.rc-l7thn" in namespace "gc-7849"
Oct 31 10:12:40.150: INFO: Deleting pod "simpletest.rc-lgwdv" in namespace "gc-7849"
Oct 31 10:12:40.184: INFO: Deleting pod "simpletest.rc-ljlbh" in namespace "gc-7849"
Oct 31 10:12:40.243: INFO: Deleting pod "simpletest.rc-lmxxx" in namespace "gc-7849"
Oct 31 10:12:40.300: INFO: Deleting pod "simpletest.rc-m76dz" in namespace "gc-7849"
Oct 31 10:12:40.412: INFO: Deleting pod "simpletest.rc-mdzgk" in namespace "gc-7849"
Oct 31 10:12:40.441: INFO: Deleting pod "simpletest.rc-mj5nr" in namespace "gc-7849"
Oct 31 10:12:40.486: INFO: Deleting pod "simpletest.rc-mmqfr" in namespace "gc-7849"
Oct 31 10:12:40.578: INFO: Deleting pod "simpletest.rc-mv8j8" in namespace "gc-7849"
Oct 31 10:12:40.716: INFO: Deleting pod "simpletest.rc-ndfn5" in namespace "gc-7849"
Oct 31 10:12:40.754: INFO: Deleting pod "simpletest.rc-nqjqn" in namespace "gc-7849"
Oct 31 10:12:40.806: INFO: Deleting pod "simpletest.rc-nqm5f" in namespace "gc-7849"
Oct 31 10:12:40.859: INFO: Deleting pod "simpletest.rc-nqzsw" in namespace "gc-7849"
Oct 31 10:12:40.987: INFO: Deleting pod "simpletest.rc-pbwjp" in namespace "gc-7849"
Oct 31 10:12:41.084: INFO: Deleting pod "simpletest.rc-px8k4" in namespace "gc-7849"
Oct 31 10:12:41.139: INFO: Deleting pod "simpletest.rc-qjjbz" in namespace "gc-7849"
Oct 31 10:12:41.169: INFO: Deleting pod "simpletest.rc-qsf6b" in namespace "gc-7849"
Oct 31 10:12:41.242: INFO: Deleting pod "simpletest.rc-qxj2c" in namespace "gc-7849"
Oct 31 10:12:41.289: INFO: Deleting pod "simpletest.rc-r27tf" in namespace "gc-7849"
Oct 31 10:12:41.415: INFO: Deleting pod "simpletest.rc-r5k2x" in namespace "gc-7849"
Oct 31 10:12:41.551: INFO: Deleting pod "simpletest.rc-r9dtw" in namespace "gc-7849"
Oct 31 10:12:41.654: INFO: Deleting pod "simpletest.rc-rmrk6" in namespace "gc-7849"
Oct 31 10:12:41.727: INFO: Deleting pod "simpletest.rc-rr6l5" in namespace "gc-7849"
Oct 31 10:12:41.801: INFO: Deleting pod "simpletest.rc-rtv7r" in namespace "gc-7849"
Oct 31 10:12:41.836: INFO: Deleting pod "simpletest.rc-s7ffc" in namespace "gc-7849"
Oct 31 10:12:41.895: INFO: Deleting pod "simpletest.rc-s8kw6" in namespace "gc-7849"
Oct 31 10:12:41.960: INFO: Deleting pod "simpletest.rc-sbn5c" in namespace "gc-7849"
Oct 31 10:12:41.986: INFO: Deleting pod "simpletest.rc-thrjv" in namespace "gc-7849"
Oct 31 10:12:42.054: INFO: Deleting pod "simpletest.rc-v8jmv" in namespace "gc-7849"
Oct 31 10:12:42.115: INFO: Deleting pod "simpletest.rc-vlq8m" in namespace "gc-7849"
Oct 31 10:12:42.194: INFO: Deleting pod "simpletest.rc-vx25m" in namespace "gc-7849"
Oct 31 10:12:42.287: INFO: Deleting pod "simpletest.rc-vzj5b" in namespace "gc-7849"
Oct 31 10:12:42.326: INFO: Deleting pod "simpletest.rc-vzkpv" in namespace "gc-7849"
Oct 31 10:12:42.393: INFO: Deleting pod "simpletest.rc-whbx4" in namespace "gc-7849"
Oct 31 10:12:42.408: INFO: Deleting pod "simpletest.rc-x8c4p" in namespace "gc-7849"
Oct 31 10:12:42.524: INFO: Deleting pod "simpletest.rc-xlgmh" in namespace "gc-7849"
Oct 31 10:12:42.601: INFO: Deleting pod "simpletest.rc-xskft" in namespace "gc-7849"
Oct 31 10:12:42.684: INFO: Deleting pod "simpletest.rc-zmlk8" in namespace "gc-7849"
Oct 31 10:12:42.760: INFO: Deleting pod "simpletest.rc-zrvvt" in namespace "gc-7849"
Oct 31 10:12:42.834: INFO: Deleting pod "simpletest.rc-zzzgt" in namespace "gc-7849"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Oct 31 10:12:42.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-7849" for this suite. 10/31/23 10:12:42.916
------------------------------
â€¢ [SLOW TEST] [48.029 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/apimachinery/garbage_collector.go:370

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:11:54.957
    Oct 31 10:11:54.957: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename gc 10/31/23 10:11:54.958
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:11:55.13
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:11:55.277
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should orphan pods created by rc if delete options say so [Conformance]
      test/e2e/apimachinery/garbage_collector.go:370
    STEP: create the rc 10/31/23 10:11:55.428
    STEP: delete the rc 10/31/23 10:12:00.524
    STEP: wait for the rc to be deleted 10/31/23 10:12:00.688
    STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods 10/31/23 10:12:05.702
    STEP: Gathering metrics 10/31/23 10:12:35.728
    W1031 10:12:35.782506      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Oct 31 10:12:35.782: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Oct 31 10:12:35.782: INFO: Deleting pod "simpletest.rc-22wcl" in namespace "gc-7849"
    Oct 31 10:12:35.865: INFO: Deleting pod "simpletest.rc-26bqv" in namespace "gc-7849"
    Oct 31 10:12:35.889: INFO: Deleting pod "simpletest.rc-2dvsc" in namespace "gc-7849"
    Oct 31 10:12:35.967: INFO: Deleting pod "simpletest.rc-4ljtj" in namespace "gc-7849"
    Oct 31 10:12:36.055: INFO: Deleting pod "simpletest.rc-4m4d9" in namespace "gc-7849"
    Oct 31 10:12:36.112: INFO: Deleting pod "simpletest.rc-4mps2" in namespace "gc-7849"
    Oct 31 10:12:36.151: INFO: Deleting pod "simpletest.rc-4v5fc" in namespace "gc-7849"
    Oct 31 10:12:36.196: INFO: Deleting pod "simpletest.rc-58wm6" in namespace "gc-7849"
    Oct 31 10:12:36.222: INFO: Deleting pod "simpletest.rc-5gpsc" in namespace "gc-7849"
    Oct 31 10:12:36.390: INFO: Deleting pod "simpletest.rc-5k8k6" in namespace "gc-7849"
    Oct 31 10:12:36.533: INFO: Deleting pod "simpletest.rc-5prws" in namespace "gc-7849"
    Oct 31 10:12:36.567: INFO: Deleting pod "simpletest.rc-5v96c" in namespace "gc-7849"
    Oct 31 10:12:36.633: INFO: Deleting pod "simpletest.rc-5ww4x" in namespace "gc-7849"
    Oct 31 10:12:36.705: INFO: Deleting pod "simpletest.rc-5xrlp" in namespace "gc-7849"
    Oct 31 10:12:36.729: INFO: Deleting pod "simpletest.rc-67hf9" in namespace "gc-7849"
    Oct 31 10:12:36.802: INFO: Deleting pod "simpletest.rc-6c4vj" in namespace "gc-7849"
    Oct 31 10:12:36.957: INFO: Deleting pod "simpletest.rc-6drt5" in namespace "gc-7849"
    Oct 31 10:12:37.048: INFO: Deleting pod "simpletest.rc-6jbzh" in namespace "gc-7849"
    Oct 31 10:12:37.348: INFO: Deleting pod "simpletest.rc-6r26g" in namespace "gc-7849"
    Oct 31 10:12:37.365: INFO: Deleting pod "simpletest.rc-77knz" in namespace "gc-7849"
    Oct 31 10:12:37.377: INFO: Deleting pod "simpletest.rc-7mjjp" in namespace "gc-7849"
    Oct 31 10:12:37.483: INFO: Deleting pod "simpletest.rc-82hsv" in namespace "gc-7849"
    Oct 31 10:12:37.509: INFO: Deleting pod "simpletest.rc-88bgt" in namespace "gc-7849"
    Oct 31 10:12:37.591: INFO: Deleting pod "simpletest.rc-8qv44" in namespace "gc-7849"
    Oct 31 10:12:37.658: INFO: Deleting pod "simpletest.rc-96ssv" in namespace "gc-7849"
    Oct 31 10:12:37.689: INFO: Deleting pod "simpletest.rc-9g7c2" in namespace "gc-7849"
    Oct 31 10:12:37.744: INFO: Deleting pod "simpletest.rc-9kh84" in namespace "gc-7849"
    Oct 31 10:12:37.823: INFO: Deleting pod "simpletest.rc-9prnd" in namespace "gc-7849"
    Oct 31 10:12:37.901: INFO: Deleting pod "simpletest.rc-9s6r6" in namespace "gc-7849"
    Oct 31 10:12:37.973: INFO: Deleting pod "simpletest.rc-9v84c" in namespace "gc-7849"
    Oct 31 10:12:38.074: INFO: Deleting pod "simpletest.rc-9x8kt" in namespace "gc-7849"
    Oct 31 10:12:38.122: INFO: Deleting pod "simpletest.rc-b4pfl" in namespace "gc-7849"
    Oct 31 10:12:38.163: INFO: Deleting pod "simpletest.rc-bgznt" in namespace "gc-7849"
    Oct 31 10:12:38.291: INFO: Deleting pod "simpletest.rc-bmrlw" in namespace "gc-7849"
    Oct 31 10:12:38.438: INFO: Deleting pod "simpletest.rc-c488b" in namespace "gc-7849"
    Oct 31 10:12:38.529: INFO: Deleting pod "simpletest.rc-c58mw" in namespace "gc-7849"
    Oct 31 10:12:38.585: INFO: Deleting pod "simpletest.rc-cnwhh" in namespace "gc-7849"
    Oct 31 10:12:38.660: INFO: Deleting pod "simpletest.rc-cxwgl" in namespace "gc-7849"
    Oct 31 10:12:38.726: INFO: Deleting pod "simpletest.rc-d24gt" in namespace "gc-7849"
    Oct 31 10:12:38.747: INFO: Deleting pod "simpletest.rc-d4q79" in namespace "gc-7849"
    Oct 31 10:12:38.805: INFO: Deleting pod "simpletest.rc-d4slc" in namespace "gc-7849"
    Oct 31 10:12:38.833: INFO: Deleting pod "simpletest.rc-d9l42" in namespace "gc-7849"
    Oct 31 10:12:38.913: INFO: Deleting pod "simpletest.rc-djmvg" in namespace "gc-7849"
    Oct 31 10:12:39.007: INFO: Deleting pod "simpletest.rc-dwmr4" in namespace "gc-7849"
    Oct 31 10:12:39.073: INFO: Deleting pod "simpletest.rc-fpn22" in namespace "gc-7849"
    Oct 31 10:12:39.134: INFO: Deleting pod "simpletest.rc-g9gnd" in namespace "gc-7849"
    Oct 31 10:12:39.167: INFO: Deleting pod "simpletest.rc-gsnrx" in namespace "gc-7849"
    Oct 31 10:12:39.253: INFO: Deleting pod "simpletest.rc-hksjm" in namespace "gc-7849"
    Oct 31 10:12:39.291: INFO: Deleting pod "simpletest.rc-hrn2n" in namespace "gc-7849"
    Oct 31 10:12:39.367: INFO: Deleting pod "simpletest.rc-hx8ms" in namespace "gc-7849"
    Oct 31 10:12:39.441: INFO: Deleting pod "simpletest.rc-hzxks" in namespace "gc-7849"
    Oct 31 10:12:39.521: INFO: Deleting pod "simpletest.rc-j269k" in namespace "gc-7849"
    Oct 31 10:12:39.576: INFO: Deleting pod "simpletest.rc-j86q6" in namespace "gc-7849"
    Oct 31 10:12:39.628: INFO: Deleting pod "simpletest.rc-jfdw4" in namespace "gc-7849"
    Oct 31 10:12:39.701: INFO: Deleting pod "simpletest.rc-jffrr" in namespace "gc-7849"
    Oct 31 10:12:39.734: INFO: Deleting pod "simpletest.rc-jgc82" in namespace "gc-7849"
    Oct 31 10:12:39.776: INFO: Deleting pod "simpletest.rc-jkbmm" in namespace "gc-7849"
    Oct 31 10:12:39.850: INFO: Deleting pod "simpletest.rc-jsz6m" in namespace "gc-7849"
    Oct 31 10:12:39.879: INFO: Deleting pod "simpletest.rc-jx425" in namespace "gc-7849"
    Oct 31 10:12:40.012: INFO: Deleting pod "simpletest.rc-k8jh6" in namespace "gc-7849"
    Oct 31 10:12:40.055: INFO: Deleting pod "simpletest.rc-l7thn" in namespace "gc-7849"
    Oct 31 10:12:40.150: INFO: Deleting pod "simpletest.rc-lgwdv" in namespace "gc-7849"
    Oct 31 10:12:40.184: INFO: Deleting pod "simpletest.rc-ljlbh" in namespace "gc-7849"
    Oct 31 10:12:40.243: INFO: Deleting pod "simpletest.rc-lmxxx" in namespace "gc-7849"
    Oct 31 10:12:40.300: INFO: Deleting pod "simpletest.rc-m76dz" in namespace "gc-7849"
    Oct 31 10:12:40.412: INFO: Deleting pod "simpletest.rc-mdzgk" in namespace "gc-7849"
    Oct 31 10:12:40.441: INFO: Deleting pod "simpletest.rc-mj5nr" in namespace "gc-7849"
    Oct 31 10:12:40.486: INFO: Deleting pod "simpletest.rc-mmqfr" in namespace "gc-7849"
    Oct 31 10:12:40.578: INFO: Deleting pod "simpletest.rc-mv8j8" in namespace "gc-7849"
    Oct 31 10:12:40.716: INFO: Deleting pod "simpletest.rc-ndfn5" in namespace "gc-7849"
    Oct 31 10:12:40.754: INFO: Deleting pod "simpletest.rc-nqjqn" in namespace "gc-7849"
    Oct 31 10:12:40.806: INFO: Deleting pod "simpletest.rc-nqm5f" in namespace "gc-7849"
    Oct 31 10:12:40.859: INFO: Deleting pod "simpletest.rc-nqzsw" in namespace "gc-7849"
    Oct 31 10:12:40.987: INFO: Deleting pod "simpletest.rc-pbwjp" in namespace "gc-7849"
    Oct 31 10:12:41.084: INFO: Deleting pod "simpletest.rc-px8k4" in namespace "gc-7849"
    Oct 31 10:12:41.139: INFO: Deleting pod "simpletest.rc-qjjbz" in namespace "gc-7849"
    Oct 31 10:12:41.169: INFO: Deleting pod "simpletest.rc-qsf6b" in namespace "gc-7849"
    Oct 31 10:12:41.242: INFO: Deleting pod "simpletest.rc-qxj2c" in namespace "gc-7849"
    Oct 31 10:12:41.289: INFO: Deleting pod "simpletest.rc-r27tf" in namespace "gc-7849"
    Oct 31 10:12:41.415: INFO: Deleting pod "simpletest.rc-r5k2x" in namespace "gc-7849"
    Oct 31 10:12:41.551: INFO: Deleting pod "simpletest.rc-r9dtw" in namespace "gc-7849"
    Oct 31 10:12:41.654: INFO: Deleting pod "simpletest.rc-rmrk6" in namespace "gc-7849"
    Oct 31 10:12:41.727: INFO: Deleting pod "simpletest.rc-rr6l5" in namespace "gc-7849"
    Oct 31 10:12:41.801: INFO: Deleting pod "simpletest.rc-rtv7r" in namespace "gc-7849"
    Oct 31 10:12:41.836: INFO: Deleting pod "simpletest.rc-s7ffc" in namespace "gc-7849"
    Oct 31 10:12:41.895: INFO: Deleting pod "simpletest.rc-s8kw6" in namespace "gc-7849"
    Oct 31 10:12:41.960: INFO: Deleting pod "simpletest.rc-sbn5c" in namespace "gc-7849"
    Oct 31 10:12:41.986: INFO: Deleting pod "simpletest.rc-thrjv" in namespace "gc-7849"
    Oct 31 10:12:42.054: INFO: Deleting pod "simpletest.rc-v8jmv" in namespace "gc-7849"
    Oct 31 10:12:42.115: INFO: Deleting pod "simpletest.rc-vlq8m" in namespace "gc-7849"
    Oct 31 10:12:42.194: INFO: Deleting pod "simpletest.rc-vx25m" in namespace "gc-7849"
    Oct 31 10:12:42.287: INFO: Deleting pod "simpletest.rc-vzj5b" in namespace "gc-7849"
    Oct 31 10:12:42.326: INFO: Deleting pod "simpletest.rc-vzkpv" in namespace "gc-7849"
    Oct 31 10:12:42.393: INFO: Deleting pod "simpletest.rc-whbx4" in namespace "gc-7849"
    Oct 31 10:12:42.408: INFO: Deleting pod "simpletest.rc-x8c4p" in namespace "gc-7849"
    Oct 31 10:12:42.524: INFO: Deleting pod "simpletest.rc-xlgmh" in namespace "gc-7849"
    Oct 31 10:12:42.601: INFO: Deleting pod "simpletest.rc-xskft" in namespace "gc-7849"
    Oct 31 10:12:42.684: INFO: Deleting pod "simpletest.rc-zmlk8" in namespace "gc-7849"
    Oct 31 10:12:42.760: INFO: Deleting pod "simpletest.rc-zrvvt" in namespace "gc-7849"
    Oct 31 10:12:42.834: INFO: Deleting pod "simpletest.rc-zzzgt" in namespace "gc-7849"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:12:42.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-7849" for this suite. 10/31/23 10:12:42.916
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:12:42.988
Oct 31 10:12:42.988: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubelet-test 10/31/23 10:12:42.989
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:12:43.126
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:12:43.266
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:52
Oct 31 10:12:43.337: INFO: Waiting up to 5m0s for pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef" in namespace "kubelet-test-8808" to be "running and ready"
Oct 31 10:12:43.377: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef": Phase="Pending", Reason="", readiness=false. Elapsed: 39.353226ms
Oct 31 10:12:43.377: INFO: The phase of Pod busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:12:45.412: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.074615771s
Oct 31 10:12:45.412: INFO: The phase of Pod busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:12:47.386: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef": Phase="Pending", Reason="", readiness=false. Elapsed: 4.048476779s
Oct 31 10:12:47.386: INFO: The phase of Pod busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:12:49.386: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef": Phase="Running", Reason="", readiness=true. Elapsed: 6.048804216s
Oct 31 10:12:49.386: INFO: The phase of Pod busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef is Running (Ready = true)
Oct 31 10:12:49.386: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef" satisfied condition "running and ready"
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Oct 31 10:12:49.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-8808" for this suite. 10/31/23 10:12:49.791
------------------------------
â€¢ [SLOW TEST] [6.949 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command in a pod
  test/e2e/common/node/kubelet.go:44
    should print the output to logs [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:12:42.988
    Oct 31 10:12:42.988: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubelet-test 10/31/23 10:12:42.989
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:12:43.126
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:12:43.266
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [It] should print the output to logs [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:52
    Oct 31 10:12:43.337: INFO: Waiting up to 5m0s for pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef" in namespace "kubelet-test-8808" to be "running and ready"
    Oct 31 10:12:43.377: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef": Phase="Pending", Reason="", readiness=false. Elapsed: 39.353226ms
    Oct 31 10:12:43.377: INFO: The phase of Pod busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:12:45.412: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef": Phase="Pending", Reason="", readiness=false. Elapsed: 2.074615771s
    Oct 31 10:12:45.412: INFO: The phase of Pod busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:12:47.386: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef": Phase="Pending", Reason="", readiness=false. Elapsed: 4.048476779s
    Oct 31 10:12:47.386: INFO: The phase of Pod busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:12:49.386: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef": Phase="Running", Reason="", readiness=true. Elapsed: 6.048804216s
    Oct 31 10:12:49.386: INFO: The phase of Pod busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef is Running (Ready = true)
    Oct 31 10:12:49.386: INFO: Pod "busybox-scheduling-889af6bc-f7c2-4b5e-8591-c8a1432e71ef" satisfied condition "running and ready"
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:12:49.743: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-8808" for this suite. 10/31/23 10:12:49.791
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
[BeforeEach] [sig-apps] Job
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:12:49.941
Oct 31 10:12:49.941: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename job 10/31/23 10:12:49.942
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:12:50.158
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:12:50.292
[BeforeEach] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:31
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366
STEP: Creating Indexed job 10/31/23 10:12:50.393
STEP: Ensuring job reaches completions 10/31/23 10:12:50.454
STEP: Ensuring pods with index for job exist 10/31/23 10:13:00.482
[AfterEach] [sig-apps] Job
  test/e2e/framework/node/init/init.go:32
Oct 31 10:13:00.535: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Job
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Job
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Job
  tear down framework | framework.go:193
STEP: Destroying namespace "job-6283" for this suite. 10/31/23 10:13:00.588
------------------------------
â€¢ [SLOW TEST] [10.699 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/apps/job.go:366

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Job
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:12:49.941
    Oct 31 10:12:49.941: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename job 10/31/23 10:12:49.942
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:12:50.158
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:12:50.292
    [BeforeEach] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:31
    [It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
      test/e2e/apps/job.go:366
    STEP: Creating Indexed job 10/31/23 10:12:50.393
    STEP: Ensuring job reaches completions 10/31/23 10:12:50.454
    STEP: Ensuring pods with index for job exist 10/31/23 10:13:00.482
    [AfterEach] [sig-apps] Job
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:13:00.535: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Job
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Job
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Job
      tear down framework | framework.go:193
    STEP: Destroying namespace "job-6283" for this suite. 10/31/23 10:13:00.588
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
[BeforeEach] [sig-storage] CSIInlineVolumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:13:00.646
Oct 31 10:13:00.647: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename csiinlinevolumes 10/31/23 10:13:00.648
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:00.758
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:00.897
[BeforeEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131
STEP: creating 10/31/23 10:13:01.048
STEP: getting 10/31/23 10:13:01.139
STEP: listing in namespace 10/31/23 10:13:01.192
STEP: patching 10/31/23 10:13:01.248
STEP: deleting 10/31/23 10:13:01.268
[AfterEach] [sig-storage] CSIInlineVolumes
  test/e2e/framework/node/init/init.go:32
Oct 31 10:13:01.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
  tear down framework | framework.go:193
STEP: Destroying namespace "csiinlinevolumes-1970" for this suite. 10/31/23 10:13:01.424
------------------------------
â€¢ [0.895 seconds]
[sig-storage] CSIInlineVolumes
test/e2e/storage/utils/framework.go:23
  should support CSIVolumeSource in Pod API [Conformance]
  test/e2e/storage/csi_inline.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIInlineVolumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:13:00.646
    Oct 31 10:13:00.647: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename csiinlinevolumes 10/31/23 10:13:00.648
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:00.758
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:00.897
    [BeforeEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support CSIVolumeSource in Pod API [Conformance]
      test/e2e/storage/csi_inline.go:131
    STEP: creating 10/31/23 10:13:01.048
    STEP: getting 10/31/23 10:13:01.139
    STEP: listing in namespace 10/31/23 10:13:01.192
    STEP: patching 10/31/23 10:13:01.248
    STEP: deleting 10/31/23 10:13:01.268
    [AfterEach] [sig-storage] CSIInlineVolumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:13:01.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIInlineVolumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "csiinlinevolumes-1970" for this suite. 10/31/23 10:13:01.424
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:13:01.544
Oct 31 10:13:01.544: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 10:13:01.546
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:01.682
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:01.842
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690
STEP: Creating a ResourceQuota with terminating scope 10/31/23 10:13:01.947
STEP: Ensuring ResourceQuota status is calculated 10/31/23 10:13:02.041
STEP: Creating a ResourceQuota with not terminating scope 10/31/23 10:13:04.103
STEP: Ensuring ResourceQuota status is calculated 10/31/23 10:13:04.191
STEP: Creating a long running pod 10/31/23 10:13:06.243
STEP: Ensuring resource quota with not terminating scope captures the pod usage 10/31/23 10:13:06.292
STEP: Ensuring resource quota with terminating scope ignored the pod usage 10/31/23 10:13:08.299
STEP: Deleting the pod 10/31/23 10:13:10.347
STEP: Ensuring resource quota status released the pod usage 10/31/23 10:13:10.424
STEP: Creating a terminating pod 10/31/23 10:13:12.527
STEP: Ensuring resource quota with terminating scope captures the pod usage 10/31/23 10:13:12.64
STEP: Ensuring resource quota with not terminating scope ignored the pod usage 10/31/23 10:13:14.648
STEP: Deleting the pod 10/31/23 10:13:16.695
STEP: Ensuring resource quota status released the pod usage 10/31/23 10:13:16.857
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 10:13:18.904: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-200" for this suite. 10/31/23 10:13:18.964
------------------------------
â€¢ [SLOW TEST] [17.476 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/apimachinery/resource_quota.go:690

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:13:01.544
    Oct 31 10:13:01.544: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 10:13:01.546
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:01.682
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:01.842
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify ResourceQuota with terminating scopes. [Conformance]
      test/e2e/apimachinery/resource_quota.go:690
    STEP: Creating a ResourceQuota with terminating scope 10/31/23 10:13:01.947
    STEP: Ensuring ResourceQuota status is calculated 10/31/23 10:13:02.041
    STEP: Creating a ResourceQuota with not terminating scope 10/31/23 10:13:04.103
    STEP: Ensuring ResourceQuota status is calculated 10/31/23 10:13:04.191
    STEP: Creating a long running pod 10/31/23 10:13:06.243
    STEP: Ensuring resource quota with not terminating scope captures the pod usage 10/31/23 10:13:06.292
    STEP: Ensuring resource quota with terminating scope ignored the pod usage 10/31/23 10:13:08.299
    STEP: Deleting the pod 10/31/23 10:13:10.347
    STEP: Ensuring resource quota status released the pod usage 10/31/23 10:13:10.424
    STEP: Creating a terminating pod 10/31/23 10:13:12.527
    STEP: Ensuring resource quota with terminating scope captures the pod usage 10/31/23 10:13:12.64
    STEP: Ensuring resource quota with not terminating scope ignored the pod usage 10/31/23 10:13:14.648
    STEP: Deleting the pod 10/31/23 10:13:16.695
    STEP: Ensuring resource quota status released the pod usage 10/31/23 10:13:16.857
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:13:18.904: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-200" for this suite. 10/31/23 10:13:18.964
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
[BeforeEach] [sig-node] Container Lifecycle Hook
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:13:19.022
Oct 31 10:13:19.023: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-lifecycle-hook 10/31/23 10:13:19.024
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:19.227
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:19.373
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:77
STEP: create the container to handle the HTTPGet hook request. 10/31/23 10:13:19.56
Oct 31 10:13:19.593: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-1788" to be "running and ready"
Oct 31 10:13:19.616: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 22.235664ms
Oct 31 10:13:19.616: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:13:21.630: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.036257922s
Oct 31 10:13:21.639: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
Oct 31 10:13:21.639: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/common/node/lifecycle_hook.go:151
STEP: create the pod with lifecycle hook 10/31/23 10:13:21.684
Oct 31 10:13:21.748: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-1788" to be "running and ready"
Oct 31 10:13:21.778: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 29.428259ms
Oct 31 10:13:21.778: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:13:23.786: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.037459881s
Oct 31 10:13:23.786: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
Oct 31 10:13:23.786: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
STEP: delete the pod with lifecycle hook 10/31/23 10:13:23.834
Oct 31 10:13:23.898: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Oct 31 10:13:23.971: INFO: Pod pod-with-prestop-exec-hook still exists
Oct 31 10:13:25.972: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Oct 31 10:13:26.026: INFO: Pod pod-with-prestop-exec-hook still exists
Oct 31 10:13:27.972: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Oct 31 10:13:27.990: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook 10/31/23 10:13:27.99
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/node/init/init.go:32
Oct 31 10:13:28.208: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
  tear down framework | framework.go:193
STEP: Destroying namespace "container-lifecycle-hook-1788" for this suite. 10/31/23 10:13:28.269
------------------------------
â€¢ [SLOW TEST] [9.309 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/common/node/lifecycle_hook.go:151

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Lifecycle Hook
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:13:19.022
    Oct 31 10:13:19.023: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-lifecycle-hook 10/31/23 10:13:19.024
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:19.227
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:19.373
    [BeforeEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] when create a pod with lifecycle hook
      test/e2e/common/node/lifecycle_hook.go:77
    STEP: create the container to handle the HTTPGet hook request. 10/31/23 10:13:19.56
    Oct 31 10:13:19.593: INFO: Waiting up to 5m0s for pod "pod-handle-http-request" in namespace "container-lifecycle-hook-1788" to be "running and ready"
    Oct 31 10:13:19.616: INFO: Pod "pod-handle-http-request": Phase="Pending", Reason="", readiness=false. Elapsed: 22.235664ms
    Oct 31 10:13:19.616: INFO: The phase of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:13:21.630: INFO: Pod "pod-handle-http-request": Phase="Running", Reason="", readiness=true. Elapsed: 2.036257922s
    Oct 31 10:13:21.639: INFO: The phase of Pod pod-handle-http-request is Running (Ready = true)
    Oct 31 10:13:21.639: INFO: Pod "pod-handle-http-request" satisfied condition "running and ready"
    [It] should execute prestop exec hook properly [NodeConformance] [Conformance]
      test/e2e/common/node/lifecycle_hook.go:151
    STEP: create the pod with lifecycle hook 10/31/23 10:13:21.684
    Oct 31 10:13:21.748: INFO: Waiting up to 5m0s for pod "pod-with-prestop-exec-hook" in namespace "container-lifecycle-hook-1788" to be "running and ready"
    Oct 31 10:13:21.778: INFO: Pod "pod-with-prestop-exec-hook": Phase="Pending", Reason="", readiness=false. Elapsed: 29.428259ms
    Oct 31 10:13:21.778: INFO: The phase of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:13:23.786: INFO: Pod "pod-with-prestop-exec-hook": Phase="Running", Reason="", readiness=true. Elapsed: 2.037459881s
    Oct 31 10:13:23.786: INFO: The phase of Pod pod-with-prestop-exec-hook is Running (Ready = true)
    Oct 31 10:13:23.786: INFO: Pod "pod-with-prestop-exec-hook" satisfied condition "running and ready"
    STEP: delete the pod with lifecycle hook 10/31/23 10:13:23.834
    Oct 31 10:13:23.898: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Oct 31 10:13:23.971: INFO: Pod pod-with-prestop-exec-hook still exists
    Oct 31 10:13:25.972: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Oct 31 10:13:26.026: INFO: Pod pod-with-prestop-exec-hook still exists
    Oct 31 10:13:27.972: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
    Oct 31 10:13:27.990: INFO: Pod pod-with-prestop-exec-hook no longer exists
    STEP: check prestop hook 10/31/23 10:13:27.99
    [AfterEach] [sig-node] Container Lifecycle Hook
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:13:28.208: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Lifecycle Hook
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-lifecycle-hook-1788" for this suite. 10/31/23 10:13:28.269
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] PodTemplates
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:13:28.332
Oct 31 10:13:28.332: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename podtemplate 10/31/23 10:13:28.333
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:28.535
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:28.63
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176
STEP: Create a pod template 10/31/23 10:13:28.673
STEP: Replace a pod template 10/31/23 10:13:28.73
Oct 31 10:13:28.933: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Oct 31 10:13:28.933: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-1126" for this suite. 10/31/23 10:13:28.998
------------------------------
â€¢ [0.806 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should replace a pod template [Conformance]
  test/e2e/common/node/podtemplates.go:176

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:13:28.332
    Oct 31 10:13:28.332: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename podtemplate 10/31/23 10:13:28.333
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:28.535
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:28.63
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace a pod template [Conformance]
      test/e2e/common/node/podtemplates.go:176
    STEP: Create a pod template 10/31/23 10:13:28.673
    STEP: Replace a pod template 10/31/23 10:13:28.73
    Oct 31 10:13:28.933: INFO: Found updated podtemplate annotation: "true"

    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:13:28.933: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-1126" for this suite. 10/31/23 10:13:28.998
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] Variable Expansion
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:13:29.138
Oct 31 10:13:29.138: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename var-expansion 10/31/23 10:13:29.139
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:29.396
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:29.621
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92
STEP: Creating a pod to test substitution in container's args 10/31/23 10:13:29.676
Oct 31 10:13:29.734: INFO: Waiting up to 5m0s for pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce" in namespace "var-expansion-3761" to be "Succeeded or Failed"
Oct 31 10:13:29.763: INFO: Pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce": Phase="Pending", Reason="", readiness=false. Elapsed: 28.586329ms
Oct 31 10:13:31.774: INFO: Pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.039069409s
Oct 31 10:13:33.776: INFO: Pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.041305235s
STEP: Saw pod success 10/31/23 10:13:33.776
Oct 31 10:13:33.777: INFO: Pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce" satisfied condition "Succeeded or Failed"
Oct 31 10:13:33.850: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce container dapi-container: <nil>
STEP: delete the pod 10/31/23 10:13:33.998
Oct 31 10:13:34.090: INFO: Waiting for pod var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce to disappear
Oct 31 10:13:34.192: INFO: Pod var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Oct 31 10:13:34.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-3761" for this suite. 10/31/23 10:13:34.272
------------------------------
â€¢ [SLOW TEST] [5.174 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/common/node/expansion.go:92

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:13:29.138
    Oct 31 10:13:29.138: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename var-expansion 10/31/23 10:13:29.139
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:29.396
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:29.621
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow substituting values in a container's args [NodeConformance] [Conformance]
      test/e2e/common/node/expansion.go:92
    STEP: Creating a pod to test substitution in container's args 10/31/23 10:13:29.676
    Oct 31 10:13:29.734: INFO: Waiting up to 5m0s for pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce" in namespace "var-expansion-3761" to be "Succeeded or Failed"
    Oct 31 10:13:29.763: INFO: Pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce": Phase="Pending", Reason="", readiness=false. Elapsed: 28.586329ms
    Oct 31 10:13:31.774: INFO: Pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.039069409s
    Oct 31 10:13:33.776: INFO: Pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.041305235s
    STEP: Saw pod success 10/31/23 10:13:33.776
    Oct 31 10:13:33.777: INFO: Pod "var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce" satisfied condition "Succeeded or Failed"
    Oct 31 10:13:33.850: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce container dapi-container: <nil>
    STEP: delete the pod 10/31/23 10:13:33.998
    Oct 31 10:13:34.090: INFO: Waiting for pod var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce to disappear
    Oct 31 10:13:34.192: INFO: Pod var-expansion-7996e0ab-a33f-418a-85f3-eb3b6951b4ce no longer exists
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:13:34.192: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-3761" for this suite. 10/31/23 10:13:34.272
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:834
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:13:34.326
Oct 31 10:13:34.326: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename daemonsets 10/31/23 10:13:34.328
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:34.505
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:34.62
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:157
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:834
STEP: Creating simple DaemonSet "daemon-set" 10/31/23 10:13:34.934
STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:13:34.988
Oct 31 10:13:35.143: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 10:13:35.144: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:13:36.274: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Oct 31 10:13:36.274: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:13:37.209: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Oct 31 10:13:37.210: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets 10/31/23 10:13:37.275
STEP: DeleteCollection of the DaemonSets 10/31/23 10:13:37.327
STEP: Verify that ReplicaSets have been deleted 10/31/23 10:13:37.386
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:122
Oct 31 10:13:37.620: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33877"},"items":null}

Oct 31 10:13:37.685: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33877"},"items":[{"metadata":{"name":"daemon-set-89kkq","generateName":"daemon-set-","namespace":"daemonsets-4974","uid":"4317b8a5-b2ed-475e-afba-87a2f554c048","resourceVersion":"33874","creationTimestamp":"2023-10-31T10:13:35Z","deletionTimestamp":"2023-10-31T10:14:07Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2d0c6fe1-eb73-4efb-81cb-27556aef7dad","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2d0c6fe1-eb73-4efb-81cb-27556aef7dad\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.31\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lxjws","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lxjws","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"}],"hostIP":"10.20.4.137","podIP":"10.200.1.31","podIPs":[{"ip":"10.200.1.31"}],"startTime":"2023-10-31T10:13:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-31T10:13:35Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1f0c3414dae55845ae6c1c9bafbd1336fca2c5f10507937d44b0c03b8ff114eb","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-bf2hr","generateName":"daemon-set-","namespace":"daemonsets-4974","uid":"0d35d060-70a1-47e5-9902-81ec9ccc162c","resourceVersion":"33876","creationTimestamp":"2023-10-31T10:13:35Z","deletionTimestamp":"2023-10-31T10:14:07Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2d0c6fe1-eb73-4efb-81cb-27556aef7dad","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2d0c6fe1-eb73-4efb-81cb-27556aef7dad\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.118\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lcftm","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lcftm","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"}],"hostIP":"10.20.4.183","podIP":"10.200.0.118","podIPs":[{"ip":"10.200.0.118"}],"startTime":"2023-10-31T10:13:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-31T10:13:35Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a3c34a9bcc44f1ce5cd3660af80e8a0d42a4a6de1c9d483a7b3fcabf787f7213","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-l9chp","generateName":"daemon-set-","namespace":"daemonsets-4974","uid":"da9e5367-93cf-4f33-ad8a-b6bf3e1cfff6","resourceVersion":"33875","creationTimestamp":"2023-10-31T10:13:35Z","deletionTimestamp":"2023-10-31T10:14:07Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2d0c6fe1-eb73-4efb-81cb-27556aef7dad","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2d0c6fe1-eb73-4efb-81cb-27556aef7dad\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.203\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9shng","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9shng","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"}],"hostIP":"10.20.4.182","podIP":"10.200.2.203","podIPs":[{"ip":"10.200.2.203"}],"startTime":"2023-10-31T10:13:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-31T10:13:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://35ecab88f41cc2ebc9df269705d8bbfc7e47c8781d3f3cf2a5b24edb1635fd29","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:13:37.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-4974" for this suite. 10/31/23 10:13:37.931
------------------------------
â€¢ [3.616 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/apps/daemon_set.go:834

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:13:34.326
    Oct 31 10:13:34.326: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename daemonsets 10/31/23 10:13:34.328
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:34.505
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:34.62
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:157
    [It] should list and delete a collection of DaemonSets [Conformance]
      test/e2e/apps/daemon_set.go:834
    STEP: Creating simple DaemonSet "daemon-set" 10/31/23 10:13:34.934
    STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:13:34.988
    Oct 31 10:13:35.143: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 10:13:35.144: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:13:36.274: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
    Oct 31 10:13:36.274: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:13:37.209: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Oct 31 10:13:37.210: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: listing all DeamonSets 10/31/23 10:13:37.275
    STEP: DeleteCollection of the DaemonSets 10/31/23 10:13:37.327
    STEP: Verify that ReplicaSets have been deleted 10/31/23 10:13:37.386
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:122
    Oct 31 10:13:37.620: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33877"},"items":null}

    Oct 31 10:13:37.685: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33877"},"items":[{"metadata":{"name":"daemon-set-89kkq","generateName":"daemon-set-","namespace":"daemonsets-4974","uid":"4317b8a5-b2ed-475e-afba-87a2f554c048","resourceVersion":"33874","creationTimestamp":"2023-10-31T10:13:35Z","deletionTimestamp":"2023-10-31T10:14:07Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2d0c6fe1-eb73-4efb-81cb-27556aef7dad","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2d0c6fe1-eb73-4efb-81cb-27556aef7dad\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.31\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lxjws","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lxjws","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"}],"hostIP":"10.20.4.137","podIP":"10.200.1.31","podIPs":[{"ip":"10.200.1.31"}],"startTime":"2023-10-31T10:13:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-31T10:13:35Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1f0c3414dae55845ae6c1c9bafbd1336fca2c5f10507937d44b0c03b8ff114eb","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-bf2hr","generateName":"daemon-set-","namespace":"daemonsets-4974","uid":"0d35d060-70a1-47e5-9902-81ec9ccc162c","resourceVersion":"33876","creationTimestamp":"2023-10-31T10:13:35Z","deletionTimestamp":"2023-10-31T10:14:07Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2d0c6fe1-eb73-4efb-81cb-27556aef7dad","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2d0c6fe1-eb73-4efb-81cb-27556aef7dad\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.0.118\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lcftm","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lcftm","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"}],"hostIP":"10.20.4.183","podIP":"10.200.0.118","podIPs":[{"ip":"10.200.0.118"}],"startTime":"2023-10-31T10:13:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-31T10:13:35Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a3c34a9bcc44f1ce5cd3660af80e8a0d42a4a6de1c9d483a7b3fcabf787f7213","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-l9chp","generateName":"daemon-set-","namespace":"daemonsets-4974","uid":"da9e5367-93cf-4f33-ad8a-b6bf3e1cfff6","resourceVersion":"33875","creationTimestamp":"2023-10-31T10:13:35Z","deletionTimestamp":"2023-10-31T10:14:07Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6cff669f8c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"2d0c6fe1-eb73-4efb-81cb-27556aef7dad","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2d0c6fe1-eb73-4efb-81cb-27556aef7dad\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-10-31T10:13:36Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.2.203\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9shng","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9shng","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:36Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-10-31T10:13:35Z"}],"hostIP":"10.20.4.182","podIP":"10.200.2.203","podIPs":[{"ip":"10.200.2.203"}],"startTime":"2023-10-31T10:13:35Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-10-31T10:13:36Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://35ecab88f41cc2ebc9df269705d8bbfc7e47c8781d3f3cf2a5b24edb1635fd29","started":true}],"qosClass":"BestEffort"}}]}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:13:37.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-4974" for this suite. 10/31/23 10:13:37.931
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:13:37.949
Oct 31 10:13:37.949: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replicaset 10/31/23 10:13:37.95
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:38.189
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:38.372
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 10/31/23 10:13:38.456
Oct 31 10:13:38.535: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 10/31/23 10:13:38.535
Oct 31 10:13:38.535: INFO: Waiting up to 5m0s for pod "test-rs-b56s9" in namespace "replicaset-6030" to be "running"
Oct 31 10:13:38.563: INFO: Pod "test-rs-b56s9": Phase="Pending", Reason="", readiness=false. Elapsed: 28.111418ms
Oct 31 10:13:40.572: INFO: Pod "test-rs-b56s9": Phase="Running", Reason="", readiness=true. Elapsed: 2.036637795s
Oct 31 10:13:40.572: INFO: Pod "test-rs-b56s9" satisfied condition "running"
STEP: getting scale subresource 10/31/23 10:13:40.572
STEP: updating a scale subresource 10/31/23 10:13:40.661
STEP: verifying the replicaset Spec.Replicas was modified 10/31/23 10:13:40.727
STEP: Patch a scale subresource 10/31/23 10:13:40.735
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Oct 31 10:13:40.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-6030" for this suite. 10/31/23 10:13:40.818
------------------------------
â€¢ [2.949 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/apps/replica_set.go:143

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:13:37.949
    Oct 31 10:13:37.949: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replicaset 10/31/23 10:13:37.95
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:38.189
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:38.372
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] Replicaset should have a working scale subresource [Conformance]
      test/e2e/apps/replica_set.go:143
    STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota 10/31/23 10:13:38.456
    Oct 31 10:13:38.535: INFO: Pod name sample-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 10/31/23 10:13:38.535
    Oct 31 10:13:38.535: INFO: Waiting up to 5m0s for pod "test-rs-b56s9" in namespace "replicaset-6030" to be "running"
    Oct 31 10:13:38.563: INFO: Pod "test-rs-b56s9": Phase="Pending", Reason="", readiness=false. Elapsed: 28.111418ms
    Oct 31 10:13:40.572: INFO: Pod "test-rs-b56s9": Phase="Running", Reason="", readiness=true. Elapsed: 2.036637795s
    Oct 31 10:13:40.572: INFO: Pod "test-rs-b56s9" satisfied condition "running"
    STEP: getting scale subresource 10/31/23 10:13:40.572
    STEP: updating a scale subresource 10/31/23 10:13:40.661
    STEP: verifying the replicaset Spec.Replicas was modified 10/31/23 10:13:40.727
    STEP: Patch a scale subresource 10/31/23 10:13:40.735
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:13:40.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-6030" for this suite. 10/31/23 10:13:40.818
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] Variable Expansion
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
[BeforeEach] [sig-node] Variable Expansion
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:13:40.901
Oct 31 10:13:40.901: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename var-expansion 10/31/23 10:13:40.905
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:41.087
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:41.256
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:31
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225
STEP: creating the pod with failed condition 10/31/23 10:13:41.36
Oct 31 10:13:41.420: INFO: Waiting up to 2m0s for pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" in namespace "var-expansion-5053" to be "running"
Oct 31 10:13:41.434: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 14.01006ms
Oct 31 10:13:43.526: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 2.105957158s
Oct 31 10:13:45.449: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029508354s
Oct 31 10:13:47.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 6.022565282s
Oct 31 10:13:49.485: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 8.065433432s
Oct 31 10:13:51.448: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 10.02814206s
Oct 31 10:13:53.453: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 12.033580982s
Oct 31 10:13:55.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 14.024425487s
Oct 31 10:13:57.486: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 16.065856888s
Oct 31 10:13:59.451: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 18.031462817s
Oct 31 10:14:01.461: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 20.041738779s
Oct 31 10:14:03.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 22.024227926s
Oct 31 10:14:05.478: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 24.05797712s
Oct 31 10:14:07.445: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 26.025726367s
Oct 31 10:14:09.448: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 28.028709445s
Oct 31 10:14:11.485: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 30.065723336s
Oct 31 10:14:13.452: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 32.031973322s
Oct 31 10:14:15.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 34.023684824s
Oct 31 10:14:17.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 36.022761978s
Oct 31 10:14:19.485: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 38.065695058s
Oct 31 10:14:21.448: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 40.028764323s
Oct 31 10:14:23.441: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 42.021798465s
Oct 31 10:14:25.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 44.022961547s
Oct 31 10:14:27.489: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 46.069678891s
Oct 31 10:14:29.489: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 48.069490589s
Oct 31 10:14:31.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 50.022940254s
Oct 31 10:14:33.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 52.024433474s
Oct 31 10:14:35.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 54.023859454s
Oct 31 10:14:37.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 56.023908347s
Oct 31 10:14:39.462: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 58.042236332s
Oct 31 10:14:41.525: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.105541021s
Oct 31 10:14:43.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.02349131s
Oct 31 10:14:45.455: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.034806557s
Oct 31 10:14:47.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.021808881s
Oct 31 10:14:49.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.023263139s
Oct 31 10:14:51.445: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.025295557s
Oct 31 10:14:53.446: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.026363823s
Oct 31 10:14:55.445: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.024894027s
Oct 31 10:14:57.445: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.025011174s
Oct 31 10:14:59.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.023309949s
Oct 31 10:15:01.509: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.089490314s
Oct 31 10:15:03.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.022429755s
Oct 31 10:15:05.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.024297576s
Oct 31 10:15:07.450: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.03079984s
Oct 31 10:15:09.529: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.109558347s
Oct 31 10:15:11.449: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.029592629s
Oct 31 10:15:13.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.024732155s
Oct 31 10:15:15.446: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.026242382s
Oct 31 10:15:17.493: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.073755074s
Oct 31 10:15:19.448: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.028086724s
Oct 31 10:15:21.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.023489418s
Oct 31 10:15:23.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.024177248s
Oct 31 10:15:25.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.021999208s
Oct 31 10:15:27.450: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.030304761s
Oct 31 10:15:29.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.023039863s
Oct 31 10:15:31.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.022361647s
Oct 31 10:15:33.449: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.02949022s
Oct 31 10:15:35.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.022481741s
Oct 31 10:15:37.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.022237831s
Oct 31 10:15:39.485: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.065567965s
Oct 31 10:15:41.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.022230214s
Oct 31 10:15:41.494: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.073980885s
STEP: updating the pod 10/31/23 10:15:41.494
Oct 31 10:15:42.019: INFO: Successfully updated pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999"
STEP: waiting for pod running 10/31/23 10:15:42.019
Oct 31 10:15:42.019: INFO: Waiting up to 2m0s for pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" in namespace "var-expansion-5053" to be "running"
Oct 31 10:15:42.109: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 90.187407ms
Oct 31 10:15:44.162: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Running", Reason="", readiness=true. Elapsed: 2.142337452s
Oct 31 10:15:44.162: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" satisfied condition "running"
STEP: deleting the pod gracefully 10/31/23 10:15:44.162
Oct 31 10:15:44.162: INFO: Deleting pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" in namespace "var-expansion-5053"
Oct 31 10:15:44.181: INFO: Wait up to 5m0s for pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/node/init/init.go:32
Oct 31 10:16:16.252: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Variable Expansion
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Variable Expansion
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Variable Expansion
  tear down framework | framework.go:193
STEP: Destroying namespace "var-expansion-5053" for this suite. 10/31/23 10:16:16.311
------------------------------
â€¢ [SLOW TEST] [155.521 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/common/node/expansion.go:225

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Variable Expansion
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:13:40.901
    Oct 31 10:13:40.901: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename var-expansion 10/31/23 10:13:40.905
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:13:41.087
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:13:41.256
    [BeforeEach] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:31
    [It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
      test/e2e/common/node/expansion.go:225
    STEP: creating the pod with failed condition 10/31/23 10:13:41.36
    Oct 31 10:13:41.420: INFO: Waiting up to 2m0s for pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" in namespace "var-expansion-5053" to be "running"
    Oct 31 10:13:41.434: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 14.01006ms
    Oct 31 10:13:43.526: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 2.105957158s
    Oct 31 10:13:45.449: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029508354s
    Oct 31 10:13:47.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 6.022565282s
    Oct 31 10:13:49.485: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 8.065433432s
    Oct 31 10:13:51.448: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 10.02814206s
    Oct 31 10:13:53.453: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 12.033580982s
    Oct 31 10:13:55.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 14.024425487s
    Oct 31 10:13:57.486: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 16.065856888s
    Oct 31 10:13:59.451: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 18.031462817s
    Oct 31 10:14:01.461: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 20.041738779s
    Oct 31 10:14:03.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 22.024227926s
    Oct 31 10:14:05.478: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 24.05797712s
    Oct 31 10:14:07.445: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 26.025726367s
    Oct 31 10:14:09.448: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 28.028709445s
    Oct 31 10:14:11.485: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 30.065723336s
    Oct 31 10:14:13.452: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 32.031973322s
    Oct 31 10:14:15.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 34.023684824s
    Oct 31 10:14:17.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 36.022761978s
    Oct 31 10:14:19.485: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 38.065695058s
    Oct 31 10:14:21.448: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 40.028764323s
    Oct 31 10:14:23.441: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 42.021798465s
    Oct 31 10:14:25.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 44.022961547s
    Oct 31 10:14:27.489: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 46.069678891s
    Oct 31 10:14:29.489: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 48.069490589s
    Oct 31 10:14:31.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 50.022940254s
    Oct 31 10:14:33.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 52.024433474s
    Oct 31 10:14:35.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 54.023859454s
    Oct 31 10:14:37.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 56.023908347s
    Oct 31 10:14:39.462: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 58.042236332s
    Oct 31 10:14:41.525: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.105541021s
    Oct 31 10:14:43.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.02349131s
    Oct 31 10:14:45.455: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.034806557s
    Oct 31 10:14:47.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.021808881s
    Oct 31 10:14:49.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.023263139s
    Oct 31 10:14:51.445: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.025295557s
    Oct 31 10:14:53.446: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.026363823s
    Oct 31 10:14:55.445: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.024894027s
    Oct 31 10:14:57.445: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.025011174s
    Oct 31 10:14:59.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.023309949s
    Oct 31 10:15:01.509: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.089490314s
    Oct 31 10:15:03.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.022429755s
    Oct 31 10:15:05.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.024297576s
    Oct 31 10:15:07.450: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.03079984s
    Oct 31 10:15:09.529: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.109558347s
    Oct 31 10:15:11.449: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.029592629s
    Oct 31 10:15:13.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.024732155s
    Oct 31 10:15:15.446: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.026242382s
    Oct 31 10:15:17.493: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.073755074s
    Oct 31 10:15:19.448: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.028086724s
    Oct 31 10:15:21.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.023489418s
    Oct 31 10:15:23.444: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.024177248s
    Oct 31 10:15:25.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.021999208s
    Oct 31 10:15:27.450: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.030304761s
    Oct 31 10:15:29.443: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.023039863s
    Oct 31 10:15:31.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.022361647s
    Oct 31 10:15:33.449: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.02949022s
    Oct 31 10:15:35.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.022481741s
    Oct 31 10:15:37.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.022237831s
    Oct 31 10:15:39.485: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.065567965s
    Oct 31 10:15:41.442: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.022230214s
    Oct 31 10:15:41.494: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.073980885s
    STEP: updating the pod 10/31/23 10:15:41.494
    Oct 31 10:15:42.019: INFO: Successfully updated pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999"
    STEP: waiting for pod running 10/31/23 10:15:42.019
    Oct 31 10:15:42.019: INFO: Waiting up to 2m0s for pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" in namespace "var-expansion-5053" to be "running"
    Oct 31 10:15:42.109: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Pending", Reason="", readiness=false. Elapsed: 90.187407ms
    Oct 31 10:15:44.162: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999": Phase="Running", Reason="", readiness=true. Elapsed: 2.142337452s
    Oct 31 10:15:44.162: INFO: Pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" satisfied condition "running"
    STEP: deleting the pod gracefully 10/31/23 10:15:44.162
    Oct 31 10:15:44.162: INFO: Deleting pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" in namespace "var-expansion-5053"
    Oct 31 10:15:44.181: INFO: Wait up to 5m0s for pod "var-expansion-50f5a40c-e25e-4096-ae4a-730e4b1b0999" to be fully deleted
    [AfterEach] [sig-node] Variable Expansion
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:16:16.252: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Variable Expansion
      tear down framework | framework.go:193
    STEP: Destroying namespace "var-expansion-5053" for this suite. 10/31/23 10:16:16.311
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:16:16.423
Oct 31 10:16:16.423: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 10:16:16.425
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:16.661
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:16.841
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269
Oct 31 10:16:16.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:16:24.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-470" for this suite. 10/31/23 10:16:25.043
------------------------------
â€¢ [SLOW TEST] [8.679 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:269

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:16:16.423
    Oct 31 10:16:16.423: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 10:16:16.425
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:16.661
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:16.841
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] custom resource defaulting for requests and from storage works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:269
    Oct 31 10:16:16.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:16:24.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-470" for this suite. 10/31/23 10:16:25.043
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:16:25.109
Oct 31 10:16:25.109: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 10:16:25.11
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:25.342
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:25.453
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119
STEP: Creating secret with name projected-secret-test-e0ae2e86-32a0-47a8-8bd1-ee3fa659791f 10/31/23 10:16:25.595
STEP: Creating a pod to test consume secrets 10/31/23 10:16:25.689
Oct 31 10:16:25.760: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb" in namespace "projected-6814" to be "Succeeded or Failed"
Oct 31 10:16:25.785: INFO: Pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb": Phase="Pending", Reason="", readiness=false. Elapsed: 24.941192ms
Oct 31 10:16:27.798: INFO: Pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.037531511s
Oct 31 10:16:29.793: INFO: Pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033392965s
STEP: Saw pod success 10/31/23 10:16:29.794
Oct 31 10:16:29.794: INFO: Pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb" satisfied condition "Succeeded or Failed"
Oct 31 10:16:29.843: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb container secret-volume-test: <nil>
STEP: delete the pod 10/31/23 10:16:30.087
Oct 31 10:16:30.120: INFO: Waiting for pod pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb to disappear
Oct 31 10:16:30.172: INFO: Pod pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Oct 31 10:16:30.173: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6814" for this suite. 10/31/23 10:16:30.23
------------------------------
â€¢ [SLOW TEST] [5.173 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:119

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:16:25.109
    Oct 31 10:16:25.109: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 10:16:25.11
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:25.342
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:25.453
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:119
    STEP: Creating secret with name projected-secret-test-e0ae2e86-32a0-47a8-8bd1-ee3fa659791f 10/31/23 10:16:25.595
    STEP: Creating a pod to test consume secrets 10/31/23 10:16:25.689
    Oct 31 10:16:25.760: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb" in namespace "projected-6814" to be "Succeeded or Failed"
    Oct 31 10:16:25.785: INFO: Pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb": Phase="Pending", Reason="", readiness=false. Elapsed: 24.941192ms
    Oct 31 10:16:27.798: INFO: Pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.037531511s
    Oct 31 10:16:29.793: INFO: Pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033392965s
    STEP: Saw pod success 10/31/23 10:16:29.794
    Oct 31 10:16:29.794: INFO: Pod "pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb" satisfied condition "Succeeded or Failed"
    Oct 31 10:16:29.843: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb container secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 10:16:30.087
    Oct 31 10:16:30.120: INFO: Waiting for pod pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb to disappear
    Oct 31 10:16:30.172: INFO: Pod pod-projected-secrets-b8be4abe-00fb-4bb2-a949-3906dd3b9cfb no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:16:30.173: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6814" for this suite. 10/31/23 10:16:30.23
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:16:30.295
Oct 31 10:16:30.295: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename endpointslice 10/31/23 10:16:30.296
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:30.561
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:30.658
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353
STEP: getting /apis 10/31/23 10:16:30.766
STEP: getting /apis/discovery.k8s.io 10/31/23 10:16:30.9
STEP: getting /apis/discovery.k8s.iov1 10/31/23 10:16:30.993
STEP: creating 10/31/23 10:16:31.068
STEP: getting 10/31/23 10:16:31.24
STEP: listing 10/31/23 10:16:31.314
STEP: watching 10/31/23 10:16:31.389
Oct 31 10:16:31.389: INFO: starting watch
STEP: cluster-wide listing 10/31/23 10:16:31.444
STEP: cluster-wide watching 10/31/23 10:16:31.537
Oct 31 10:16:31.537: INFO: starting watch
STEP: patching 10/31/23 10:16:31.585
STEP: updating 10/31/23 10:16:31.66
Oct 31 10:16:31.805: INFO: waiting for watch events with expected annotations
Oct 31 10:16:31.806: INFO: saw patched and updated annotations
STEP: deleting 10/31/23 10:16:31.806
STEP: deleting a collection 10/31/23 10:16:32.077
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Oct 31 10:16:32.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-4966" for this suite. 10/31/23 10:16:32.303
------------------------------
â€¢ [2.068 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/network/endpointslice.go:353

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:16:30.295
    Oct 31 10:16:30.295: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename endpointslice 10/31/23 10:16:30.296
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:30.561
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:30.658
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should support creating EndpointSlice API operations [Conformance]
      test/e2e/network/endpointslice.go:353
    STEP: getting /apis 10/31/23 10:16:30.766
    STEP: getting /apis/discovery.k8s.io 10/31/23 10:16:30.9
    STEP: getting /apis/discovery.k8s.iov1 10/31/23 10:16:30.993
    STEP: creating 10/31/23 10:16:31.068
    STEP: getting 10/31/23 10:16:31.24
    STEP: listing 10/31/23 10:16:31.314
    STEP: watching 10/31/23 10:16:31.389
    Oct 31 10:16:31.389: INFO: starting watch
    STEP: cluster-wide listing 10/31/23 10:16:31.444
    STEP: cluster-wide watching 10/31/23 10:16:31.537
    Oct 31 10:16:31.537: INFO: starting watch
    STEP: patching 10/31/23 10:16:31.585
    STEP: updating 10/31/23 10:16:31.66
    Oct 31 10:16:31.805: INFO: waiting for watch events with expected annotations
    Oct 31 10:16:31.806: INFO: saw patched and updated annotations
    STEP: deleting 10/31/23 10:16:31.806
    STEP: deleting a collection 10/31/23 10:16:32.077
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:16:32.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-4966" for this suite. 10/31/23 10:16:32.303
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:16:32.367
Oct 31 10:16:32.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 10:16:32.369
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:32.559
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:32.741
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/apimachinery/custom_resource_definition.go:58
Oct 31 10:16:32.795: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:16:38.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "custom-resource-definition-3933" for this suite. 10/31/23 10:16:38.804
------------------------------
â€¢ [SLOW TEST] [6.554 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    creating/deleting custom resource definition objects works  [Conformance]
    test/e2e/apimachinery/custom_resource_definition.go:58

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:16:32.367
    Oct 31 10:16:32.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename custom-resource-definition 10/31/23 10:16:32.369
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:32.559
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:32.741
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] creating/deleting custom resource definition objects works  [Conformance]
      test/e2e/apimachinery/custom_resource_definition.go:58
    Oct 31 10:16:32.795: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    [AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:16:38.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "custom-resource-definition-3933" for this suite. 10/31/23 10:16:38.804
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:16:38.923
Oct 31 10:16:38.923: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 10:16:38.924
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:39.126
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:39.273
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249
STEP: Creating a pod to test downward API volume plugin 10/31/23 10:16:39.418
Oct 31 10:16:39.472: INFO: Waiting up to 5m0s for pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8" in namespace "projected-4376" to be "Succeeded or Failed"
Oct 31 10:16:39.488: INFO: Pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8": Phase="Pending", Reason="", readiness=false. Elapsed: 16.84333ms
Oct 31 10:16:41.498: INFO: Pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026777859s
Oct 31 10:16:43.498: INFO: Pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026169596s
STEP: Saw pod success 10/31/23 10:16:43.498
Oct 31 10:16:43.499: INFO: Pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8" satisfied condition "Succeeded or Failed"
Oct 31 10:16:43.586: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8 container client-container: <nil>
STEP: delete the pod 10/31/23 10:16:43.805
Oct 31 10:16:43.880: INFO: Waiting for pod downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8 to disappear
Oct 31 10:16:43.926: INFO: Pod downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 10:16:43.926: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-4376" for this suite. 10/31/23 10:16:43.987
------------------------------
â€¢ [SLOW TEST] [5.081 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:249

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:16:38.923
    Oct 31 10:16:38.923: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 10:16:38.924
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:39.126
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:39.273
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:249
    STEP: Creating a pod to test downward API volume plugin 10/31/23 10:16:39.418
    Oct 31 10:16:39.472: INFO: Waiting up to 5m0s for pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8" in namespace "projected-4376" to be "Succeeded or Failed"
    Oct 31 10:16:39.488: INFO: Pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8": Phase="Pending", Reason="", readiness=false. Elapsed: 16.84333ms
    Oct 31 10:16:41.498: INFO: Pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.026777859s
    Oct 31 10:16:43.498: INFO: Pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026169596s
    STEP: Saw pod success 10/31/23 10:16:43.498
    Oct 31 10:16:43.499: INFO: Pod "downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8" satisfied condition "Succeeded or Failed"
    Oct 31 10:16:43.586: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8 container client-container: <nil>
    STEP: delete the pod 10/31/23 10:16:43.805
    Oct 31 10:16:43.880: INFO: Waiting for pod downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8 to disappear
    Oct 31 10:16:43.926: INFO: Pod downwardapi-volume-969ce776-063b-4ed2-94fe-a999912a55d8 no longer exists
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:16:43.926: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-4376" for this suite. 10/31/23 10:16:43.987
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
[BeforeEach] [sig-node] Container Runtime
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:16:44.008
Oct 31 10:16:44.008: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-runtime 10/31/23 10:16:44.01
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:44.206
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:44.307
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:31
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/common/node/runtime.go:52
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 10/31/23 10:16:44.476
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 10/31/23 10:17:02.85
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 10/31/23 10:17:02.906
STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 10/31/23 10:17:03.055
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 10/31/23 10:17:03.056
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 10/31/23 10:17:03.428
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 10/31/23 10:17:06.474
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 10/31/23 10:17:08.54
STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 10/31/23 10:17:08.647
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 10/31/23 10:17:08.648
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 10/31/23 10:17:08.804
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 10/31/23 10:17:09.831
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 10/31/23 10:17:12.977
STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 10/31/23 10:17:13.125
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 10/31/23 10:17:13.125
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/node/init/init.go:32
Oct 31 10:17:13.539: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Container Runtime
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Container Runtime
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Container Runtime
  tear down framework | framework.go:193
STEP: Destroying namespace "container-runtime-9362" for this suite. 10/31/23 10:17:13.594
------------------------------
â€¢ [SLOW TEST] [29.650 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:44
    when starting a container that exits
    test/e2e/common/node/runtime.go:45
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Container Runtime
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:16:44.008
    Oct 31 10:16:44.008: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-runtime 10/31/23 10:16:44.01
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:16:44.206
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:16:44.307
    [BeforeEach] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:31
    [It] should run with the expected status [NodeConformance] [Conformance]
      test/e2e/common/node/runtime.go:52
    STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' 10/31/23 10:16:44.476
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' 10/31/23 10:17:02.85
    STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition 10/31/23 10:17:02.906
    STEP: Container 'terminate-cmd-rpa': should get the expected 'State' 10/31/23 10:17:03.055
    STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] 10/31/23 10:17:03.056
    STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' 10/31/23 10:17:03.428
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' 10/31/23 10:17:06.474
    STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition 10/31/23 10:17:08.54
    STEP: Container 'terminate-cmd-rpof': should get the expected 'State' 10/31/23 10:17:08.647
    STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] 10/31/23 10:17:08.648
    STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' 10/31/23 10:17:08.804
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' 10/31/23 10:17:09.831
    STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition 10/31/23 10:17:12.977
    STEP: Container 'terminate-cmd-rpn': should get the expected 'State' 10/31/23 10:17:13.125
    STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] 10/31/23 10:17:13.125
    [AfterEach] [sig-node] Container Runtime
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:17:13.539: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Container Runtime
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Container Runtime
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Container Runtime
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-runtime-9362" for this suite. 10/31/23 10:17:13.594
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:17:13.659
Oct 31 10:17:13.659: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-pred 10/31/23 10:17:13.66
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:17:13.887
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:17:13.945
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Oct 31 10:17:14.002: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Oct 31 10:17:14.063: INFO: Waiting for terminating namespaces to be deleted...
Oct 31 10:17:14.114: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz before test
Oct 31 10:17:14.128: INFO: coredns-7d6446f647-hz5j8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:17:14.128: INFO: 	Container coredns ready: true, restart count 0
Oct 31 10:17:14.128: INFO: csi-bizflycloud-nodeplugin-xkt2t from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 10:17:14.128: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 10:17:14.128: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 10:17:14.128: INFO: kube-router-jdd2v from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:17:14.128: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 10:17:14.128: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:17:14.128: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:17:14.128: INFO: 	Container systemd-logs ready: true, restart count 0
Oct 31 10:17:14.128: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n before test
Oct 31 10:17:14.186: INFO: csi-bizflycloud-nodeplugin-x6sjq from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 10:17:14.187: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 10:17:14.187: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 10:17:14.187: INFO: kube-router-p6g8s from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:17:14.187: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 10:17:14.187: INFO: sonobuoy from sonobuoy started at 2023-10-31 08:59:15 +0000 UTC (1 container statuses recorded)
Oct 31 10:17:14.187: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Oct 31 10:17:14.188: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:17:14.188: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:17:14.188: INFO: 	Container systemd-logs ready: true, restart count 0
Oct 31 10:17:14.188: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 before test
Oct 31 10:17:14.241: INFO: coredns-7d6446f647-bmrzn from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:17:14.241: INFO: 	Container coredns ready: true, restart count 0
Oct 31 10:17:14.241: INFO: csi-bizflycloud-nodeplugin-flvf8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 10:17:14.241: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 10:17:14.241: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 10:17:14.241: INFO: kube-router-9x529 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:17:14.241: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 10:17:14.241: INFO: sonobuoy-e2e-job-5096458fae614ffb from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:17:14.241: INFO: 	Container e2e ready: true, restart count 0
Oct 31 10:17:14.241: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:17:14.241: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:17:14.241: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:17:14.242: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704
STEP: Trying to launch a pod without a label to get a node which can launch it. 10/31/23 10:17:14.242
Oct 31 10:17:14.300: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-3160" to be "running"
Oct 31 10:17:14.360: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 59.645876ms
Oct 31 10:17:16.371: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.071439331s
Oct 31 10:17:16.372: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 10/31/23 10:17:16.419
STEP: Trying to apply a random label on the found node. 10/31/23 10:17:16.577
STEP: verifying the node has the label kubernetes.io/e2e-39a4ff55-dbed-4477-a38c-44423f16543a 95 10/31/23 10:17:16.6
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 10/31/23 10:17:16.656
Oct 31 10:17:16.709: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-3160" to be "not pending"
Oct 31 10:17:16.721: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 11.943678ms
Oct 31 10:17:18.763: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.05336773s
Oct 31 10:17:18.763: INFO: Pod "pod4" satisfied condition "not pending"
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.20.4.137 on the node which pod4 resides and expect not scheduled 10/31/23 10:17:18.763
Oct 31 10:17:18.848: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-3160" to be "not pending"
Oct 31 10:17:18.890: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 41.95906ms
Oct 31 10:17:20.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.050674842s
Oct 31 10:17:22.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.049279703s
Oct 31 10:17:24.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.05066125s
Oct 31 10:17:26.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.050346389s
Oct 31 10:17:28.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.049313854s
Oct 31 10:17:30.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.050867432s
Oct 31 10:17:32.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.053041584s
Oct 31 10:17:34.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.050944443s
Oct 31 10:17:36.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.04985094s
Oct 31 10:17:38.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.050055955s
Oct 31 10:17:40.904: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.055961371s
Oct 31 10:17:42.920: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.07161049s
Oct 31 10:17:44.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.050504559s
Oct 31 10:17:46.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.050178424s
Oct 31 10:17:48.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.050963782s
Oct 31 10:17:50.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.05032362s
Oct 31 10:17:52.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.049829545s
Oct 31 10:17:54.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.049856129s
Oct 31 10:17:56.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.050103128s
Oct 31 10:17:58.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.050874822s
Oct 31 10:18:00.903: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.05470759s
Oct 31 10:18:02.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.04895642s
Oct 31 10:18:04.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.048391362s
Oct 31 10:18:06.902: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.053914425s
Oct 31 10:18:08.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.051642965s
Oct 31 10:18:10.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.050776519s
Oct 31 10:18:12.941: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.093005636s
Oct 31 10:18:14.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.04902998s
Oct 31 10:18:16.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.052339083s
Oct 31 10:18:18.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.049764554s
Oct 31 10:18:20.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.053057666s
Oct 31 10:18:22.904: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.055517188s
Oct 31 10:18:24.902: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.053318376s
Oct 31 10:18:26.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.049506347s
Oct 31 10:18:28.905: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.056273368s
Oct 31 10:18:30.908: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.059277271s
Oct 31 10:18:32.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.050052252s
Oct 31 10:18:35.074: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.225584492s
Oct 31 10:18:36.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.050547801s
Oct 31 10:18:38.904: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.055897905s
Oct 31 10:18:40.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.050033479s
Oct 31 10:18:42.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.050354863s
Oct 31 10:18:44.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.049812474s
Oct 31 10:18:46.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.050691548s
Oct 31 10:18:48.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.050451774s
Oct 31 10:18:50.915: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.066957358s
Oct 31 10:18:52.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.049150082s
Oct 31 10:18:54.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.049383756s
Oct 31 10:18:56.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.050692768s
Oct 31 10:18:58.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.052184913s
Oct 31 10:19:00.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.050303645s
Oct 31 10:19:02.940: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.091429729s
Oct 31 10:19:04.912: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.063901569s
Oct 31 10:19:06.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.048869024s
Oct 31 10:19:08.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.05161089s
Oct 31 10:19:10.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.050548422s
Oct 31 10:19:12.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.049859125s
Oct 31 10:19:14.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.048719403s
Oct 31 10:19:16.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.049964966s
Oct 31 10:19:18.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.051334708s
Oct 31 10:19:20.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.049732454s
Oct 31 10:19:22.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.049410569s
Oct 31 10:19:24.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.049891834s
Oct 31 10:19:26.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.049518244s
Oct 31 10:19:28.905: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.056237954s
Oct 31 10:19:30.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.051736055s
Oct 31 10:19:32.928: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.079760493s
Oct 31 10:19:34.924: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.075280869s
Oct 31 10:19:36.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.049750466s
Oct 31 10:19:38.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.048402489s
Oct 31 10:19:40.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.052132019s
Oct 31 10:19:42.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.050039903s
Oct 31 10:19:44.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.052592116s
Oct 31 10:19:46.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.049449681s
Oct 31 10:19:48.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.050963313s
Oct 31 10:19:50.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.049744412s
Oct 31 10:19:52.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.04983511s
Oct 31 10:19:54.906: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.057676346s
Oct 31 10:19:56.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.050145779s
Oct 31 10:19:58.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.0504736s
Oct 31 10:20:00.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.049400056s
Oct 31 10:20:02.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.050321187s
Oct 31 10:20:04.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.051680831s
Oct 31 10:20:06.903: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.054617035s
Oct 31 10:20:08.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.049309565s
Oct 31 10:20:10.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.048561223s
Oct 31 10:20:12.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.049709607s
Oct 31 10:20:14.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.05139722s
Oct 31 10:20:16.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.050397551s
Oct 31 10:20:18.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.052182175s
Oct 31 10:20:20.980: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.131829648s
Oct 31 10:20:22.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.049518173s
Oct 31 10:20:24.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.049832288s
Oct 31 10:20:26.918: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.06961154s
Oct 31 10:20:28.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.051254133s
Oct 31 10:20:30.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.050854459s
Oct 31 10:20:32.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.050387737s
Oct 31 10:20:34.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.049836394s
Oct 31 10:20:36.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.049740218s
Oct 31 10:20:38.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.051688235s
Oct 31 10:20:40.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.050838516s
Oct 31 10:20:42.945: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.096616988s
Oct 31 10:20:44.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.049613023s
Oct 31 10:20:46.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.050961285s
Oct 31 10:20:48.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.051212758s
Oct 31 10:20:50.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.051260269s
Oct 31 10:20:52.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.052995715s
Oct 31 10:20:54.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.049447707s
Oct 31 10:20:56.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.051052329s
Oct 31 10:20:58.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.050652702s
Oct 31 10:21:01.006: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.157174166s
Oct 31 10:21:02.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.049960527s
Oct 31 10:21:04.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.051648296s
Oct 31 10:21:06.913: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.064907842s
Oct 31 10:21:08.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.051741735s
Oct 31 10:21:10.946: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.097609785s
Oct 31 10:21:12.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.049100981s
Oct 31 10:21:14.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.051317807s
Oct 31 10:21:16.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.051204451s
Oct 31 10:21:18.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.05119555s
Oct 31 10:21:20.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.051098149s
Oct 31 10:21:22.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.050514264s
Oct 31 10:21:24.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.05095985s
Oct 31 10:21:26.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.050093385s
Oct 31 10:21:28.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.051423437s
Oct 31 10:21:30.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.05238431s
Oct 31 10:21:32.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.051432712s
Oct 31 10:21:34.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.051618363s
Oct 31 10:21:36.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.05056758s
Oct 31 10:21:38.940: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.092113139s
Oct 31 10:21:40.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.05148059s
Oct 31 10:21:42.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.051225562s
Oct 31 10:21:44.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.049966497s
Oct 31 10:21:46.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.050524623s
Oct 31 10:21:48.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.050585899s
Oct 31 10:21:50.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.051511381s
Oct 31 10:21:52.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.049708748s
Oct 31 10:21:54.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.049563559s
Oct 31 10:21:56.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.050259932s
Oct 31 10:21:58.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.052453875s
Oct 31 10:22:00.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.050190005s
Oct 31 10:22:02.902: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.053958304s
Oct 31 10:22:04.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.053049995s
Oct 31 10:22:06.905: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.056752025s
Oct 31 10:22:08.905: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.056371905s
Oct 31 10:22:10.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.049988419s
Oct 31 10:22:12.913: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.064346409s
Oct 31 10:22:14.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.04984009s
Oct 31 10:22:16.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.050567269s
Oct 31 10:22:18.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.04946602s
Oct 31 10:22:18.948: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.099223008s
STEP: removing the label kubernetes.io/e2e-39a4ff55-dbed-4477-a38c-44423f16543a off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz 10/31/23 10:22:18.948
STEP: verifying the node doesn't have the label kubernetes.io/e2e-39a4ff55-dbed-4477-a38c-44423f16543a 10/31/23 10:22:19.101
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:22:19.193: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-3160" for this suite. 10/31/23 10:22:19.254
------------------------------
â€¢ [SLOW TEST] [305.613 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/scheduling/predicates.go:704

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:17:13.659
    Oct 31 10:17:13.659: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-pred 10/31/23 10:17:13.66
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:17:13.887
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:17:13.945
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Oct 31 10:17:14.002: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Oct 31 10:17:14.063: INFO: Waiting for terminating namespaces to be deleted...
    Oct 31 10:17:14.114: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz before test
    Oct 31 10:17:14.128: INFO: coredns-7d6446f647-hz5j8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:17:14.128: INFO: 	Container coredns ready: true, restart count 0
    Oct 31 10:17:14.128: INFO: csi-bizflycloud-nodeplugin-xkt2t from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 10:17:14.128: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 10:17:14.128: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 10:17:14.128: INFO: kube-router-jdd2v from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:17:14.128: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 10:17:14.128: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:17:14.128: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:17:14.128: INFO: 	Container systemd-logs ready: true, restart count 0
    Oct 31 10:17:14.128: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n before test
    Oct 31 10:17:14.186: INFO: csi-bizflycloud-nodeplugin-x6sjq from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 10:17:14.187: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 10:17:14.187: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 10:17:14.187: INFO: kube-router-p6g8s from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:17:14.187: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 10:17:14.187: INFO: sonobuoy from sonobuoy started at 2023-10-31 08:59:15 +0000 UTC (1 container statuses recorded)
    Oct 31 10:17:14.187: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Oct 31 10:17:14.188: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:17:14.188: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:17:14.188: INFO: 	Container systemd-logs ready: true, restart count 0
    Oct 31 10:17:14.188: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 before test
    Oct 31 10:17:14.241: INFO: coredns-7d6446f647-bmrzn from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:17:14.241: INFO: 	Container coredns ready: true, restart count 0
    Oct 31 10:17:14.241: INFO: csi-bizflycloud-nodeplugin-flvf8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 10:17:14.241: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 10:17:14.241: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 10:17:14.241: INFO: kube-router-9x529 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:17:14.241: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 10:17:14.241: INFO: sonobuoy-e2e-job-5096458fae614ffb from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:17:14.241: INFO: 	Container e2e ready: true, restart count 0
    Oct 31 10:17:14.241: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:17:14.241: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:17:14.241: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:17:14.242: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
      test/e2e/scheduling/predicates.go:704
    STEP: Trying to launch a pod without a label to get a node which can launch it. 10/31/23 10:17:14.242
    Oct 31 10:17:14.300: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-3160" to be "running"
    Oct 31 10:17:14.360: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 59.645876ms
    Oct 31 10:17:16.371: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.071439331s
    Oct 31 10:17:16.372: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 10/31/23 10:17:16.419
    STEP: Trying to apply a random label on the found node. 10/31/23 10:17:16.577
    STEP: verifying the node has the label kubernetes.io/e2e-39a4ff55-dbed-4477-a38c-44423f16543a 95 10/31/23 10:17:16.6
    STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled 10/31/23 10:17:16.656
    Oct 31 10:17:16.709: INFO: Waiting up to 5m0s for pod "pod4" in namespace "sched-pred-3160" to be "not pending"
    Oct 31 10:17:16.721: INFO: Pod "pod4": Phase="Pending", Reason="", readiness=false. Elapsed: 11.943678ms
    Oct 31 10:17:18.763: INFO: Pod "pod4": Phase="Running", Reason="", readiness=true. Elapsed: 2.05336773s
    Oct 31 10:17:18.763: INFO: Pod "pod4" satisfied condition "not pending"
    STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.20.4.137 on the node which pod4 resides and expect not scheduled 10/31/23 10:17:18.763
    Oct 31 10:17:18.848: INFO: Waiting up to 5m0s for pod "pod5" in namespace "sched-pred-3160" to be "not pending"
    Oct 31 10:17:18.890: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 41.95906ms
    Oct 31 10:17:20.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.050674842s
    Oct 31 10:17:22.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4.049279703s
    Oct 31 10:17:24.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 6.05066125s
    Oct 31 10:17:26.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 8.050346389s
    Oct 31 10:17:28.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 10.049313854s
    Oct 31 10:17:30.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 12.050867432s
    Oct 31 10:17:32.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 14.053041584s
    Oct 31 10:17:34.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 16.050944443s
    Oct 31 10:17:36.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.04985094s
    Oct 31 10:17:38.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 20.050055955s
    Oct 31 10:17:40.904: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 22.055961371s
    Oct 31 10:17:42.920: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 24.07161049s
    Oct 31 10:17:44.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 26.050504559s
    Oct 31 10:17:46.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 28.050178424s
    Oct 31 10:17:48.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 30.050963782s
    Oct 31 10:17:50.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 32.05032362s
    Oct 31 10:17:52.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 34.049829545s
    Oct 31 10:17:54.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 36.049856129s
    Oct 31 10:17:56.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 38.050103128s
    Oct 31 10:17:58.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 40.050874822s
    Oct 31 10:18:00.903: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 42.05470759s
    Oct 31 10:18:02.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 44.04895642s
    Oct 31 10:18:04.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 46.048391362s
    Oct 31 10:18:06.902: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 48.053914425s
    Oct 31 10:18:08.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 50.051642965s
    Oct 31 10:18:10.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 52.050776519s
    Oct 31 10:18:12.941: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 54.093005636s
    Oct 31 10:18:14.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 56.04902998s
    Oct 31 10:18:16.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 58.052339083s
    Oct 31 10:18:18.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m0.049764554s
    Oct 31 10:18:20.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m2.053057666s
    Oct 31 10:18:22.904: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m4.055517188s
    Oct 31 10:18:24.902: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m6.053318376s
    Oct 31 10:18:26.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m8.049506347s
    Oct 31 10:18:28.905: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m10.056273368s
    Oct 31 10:18:30.908: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m12.059277271s
    Oct 31 10:18:32.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m14.050052252s
    Oct 31 10:18:35.074: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m16.225584492s
    Oct 31 10:18:36.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m18.050547801s
    Oct 31 10:18:38.904: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m20.055897905s
    Oct 31 10:18:40.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m22.050033479s
    Oct 31 10:18:42.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m24.050354863s
    Oct 31 10:18:44.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m26.049812474s
    Oct 31 10:18:46.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m28.050691548s
    Oct 31 10:18:48.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m30.050451774s
    Oct 31 10:18:50.915: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m32.066957358s
    Oct 31 10:18:52.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m34.049150082s
    Oct 31 10:18:54.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m36.049383756s
    Oct 31 10:18:56.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m38.050692768s
    Oct 31 10:18:58.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m40.052184913s
    Oct 31 10:19:00.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m42.050303645s
    Oct 31 10:19:02.940: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m44.091429729s
    Oct 31 10:19:04.912: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m46.063901569s
    Oct 31 10:19:06.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m48.048869024s
    Oct 31 10:19:08.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m50.05161089s
    Oct 31 10:19:10.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m52.050548422s
    Oct 31 10:19:12.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m54.049859125s
    Oct 31 10:19:14.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m56.048719403s
    Oct 31 10:19:16.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 1m58.049964966s
    Oct 31 10:19:18.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m0.051334708s
    Oct 31 10:19:20.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m2.049732454s
    Oct 31 10:19:22.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m4.049410569s
    Oct 31 10:19:24.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m6.049891834s
    Oct 31 10:19:26.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m8.049518244s
    Oct 31 10:19:28.905: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m10.056237954s
    Oct 31 10:19:30.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m12.051736055s
    Oct 31 10:19:32.928: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m14.079760493s
    Oct 31 10:19:34.924: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m16.075280869s
    Oct 31 10:19:36.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m18.049750466s
    Oct 31 10:19:38.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m20.048402489s
    Oct 31 10:19:40.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m22.052132019s
    Oct 31 10:19:42.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m24.050039903s
    Oct 31 10:19:44.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m26.052592116s
    Oct 31 10:19:46.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m28.049449681s
    Oct 31 10:19:48.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m30.050963313s
    Oct 31 10:19:50.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m32.049744412s
    Oct 31 10:19:52.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m34.04983511s
    Oct 31 10:19:54.906: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m36.057676346s
    Oct 31 10:19:56.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m38.050145779s
    Oct 31 10:19:58.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m40.0504736s
    Oct 31 10:20:00.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m42.049400056s
    Oct 31 10:20:02.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m44.050321187s
    Oct 31 10:20:04.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m46.051680831s
    Oct 31 10:20:06.903: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m48.054617035s
    Oct 31 10:20:08.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m50.049309565s
    Oct 31 10:20:10.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m52.048561223s
    Oct 31 10:20:12.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m54.049709607s
    Oct 31 10:20:14.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m56.05139722s
    Oct 31 10:20:16.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 2m58.050397551s
    Oct 31 10:20:18.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m0.052182175s
    Oct 31 10:20:20.980: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m2.131829648s
    Oct 31 10:20:22.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m4.049518173s
    Oct 31 10:20:24.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m6.049832288s
    Oct 31 10:20:26.918: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m8.06961154s
    Oct 31 10:20:28.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m10.051254133s
    Oct 31 10:20:30.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m12.050854459s
    Oct 31 10:20:32.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m14.050387737s
    Oct 31 10:20:34.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m16.049836394s
    Oct 31 10:20:36.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m18.049740218s
    Oct 31 10:20:38.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m20.051688235s
    Oct 31 10:20:40.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m22.050838516s
    Oct 31 10:20:42.945: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m24.096616988s
    Oct 31 10:20:44.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m26.049613023s
    Oct 31 10:20:46.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m28.050961285s
    Oct 31 10:20:48.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m30.051212758s
    Oct 31 10:20:50.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m32.051260269s
    Oct 31 10:20:52.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m34.052995715s
    Oct 31 10:20:54.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m36.049447707s
    Oct 31 10:20:56.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m38.051052329s
    Oct 31 10:20:58.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m40.050652702s
    Oct 31 10:21:01.006: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m42.157174166s
    Oct 31 10:21:02.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m44.049960527s
    Oct 31 10:21:04.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m46.051648296s
    Oct 31 10:21:06.913: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m48.064907842s
    Oct 31 10:21:08.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m50.051741735s
    Oct 31 10:21:10.946: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m52.097609785s
    Oct 31 10:21:12.897: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m54.049100981s
    Oct 31 10:21:14.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m56.051317807s
    Oct 31 10:21:16.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 3m58.051204451s
    Oct 31 10:21:18.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m0.05119555s
    Oct 31 10:21:20.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m2.051098149s
    Oct 31 10:21:22.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m4.050514264s
    Oct 31 10:21:24.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m6.05095985s
    Oct 31 10:21:26.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m8.050093385s
    Oct 31 10:21:28.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m10.051423437s
    Oct 31 10:21:30.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m12.05238431s
    Oct 31 10:21:32.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m14.051432712s
    Oct 31 10:21:34.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m16.051618363s
    Oct 31 10:21:36.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m18.05056758s
    Oct 31 10:21:38.940: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m20.092113139s
    Oct 31 10:21:40.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m22.05148059s
    Oct 31 10:21:42.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m24.051225562s
    Oct 31 10:21:44.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m26.049966497s
    Oct 31 10:21:46.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m28.050524623s
    Oct 31 10:21:48.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m30.050585899s
    Oct 31 10:21:50.900: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m32.051511381s
    Oct 31 10:21:52.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m34.049708748s
    Oct 31 10:21:54.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m36.049563559s
    Oct 31 10:21:56.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m38.050259932s
    Oct 31 10:21:58.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m40.052453875s
    Oct 31 10:22:00.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m42.050190005s
    Oct 31 10:22:02.902: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m44.053958304s
    Oct 31 10:22:04.901: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m46.053049995s
    Oct 31 10:22:06.905: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m48.056752025s
    Oct 31 10:22:08.905: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m50.056371905s
    Oct 31 10:22:10.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m52.049988419s
    Oct 31 10:22:12.913: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m54.064346409s
    Oct 31 10:22:14.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m56.04984009s
    Oct 31 10:22:16.899: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 4m58.050567269s
    Oct 31 10:22:18.898: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.04946602s
    Oct 31 10:22:18.948: INFO: Pod "pod5": Phase="Pending", Reason="", readiness=false. Elapsed: 5m0.099223008s
    STEP: removing the label kubernetes.io/e2e-39a4ff55-dbed-4477-a38c-44423f16543a off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz 10/31/23 10:22:18.948
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-39a4ff55-dbed-4477-a38c-44423f16543a 10/31/23 10:22:19.101
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:22:19.193: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-3160" for this suite. 10/31/23 10:22:19.254
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Secrets
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:22:19.275
Oct 31 10:22:19.277: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 10:22:19.279
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:22:19.504
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:22:19.647
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205
STEP: Creating secret with name s-test-opt-del-1d6cfb75-ee96-45d9-8423-25f0e0456733 10/31/23 10:22:19.799
STEP: Creating secret with name s-test-opt-upd-7113a432-b23b-432d-925a-3ec8d10e70f3 10/31/23 10:22:19.885
STEP: Creating the pod 10/31/23 10:22:19.899
Oct 31 10:22:19.959: INFO: Waiting up to 5m0s for pod "pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85" in namespace "secrets-6097" to be "running and ready"
Oct 31 10:22:19.976: INFO: Pod "pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85": Phase="Pending", Reason="", readiness=false. Elapsed: 17.088737ms
Oct 31 10:22:19.976: INFO: The phase of Pod pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:22:21.985: INFO: Pod "pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85": Phase="Running", Reason="", readiness=true. Elapsed: 2.025214568s
Oct 31 10:22:21.985: INFO: The phase of Pod pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85 is Running (Ready = true)
Oct 31 10:22:21.985: INFO: Pod "pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85" satisfied condition "running and ready"
STEP: Deleting secret s-test-opt-del-1d6cfb75-ee96-45d9-8423-25f0e0456733 10/31/23 10:22:22.782
STEP: Updating secret s-test-opt-upd-7113a432-b23b-432d-925a-3ec8d10e70f3 10/31/23 10:22:22.833
STEP: Creating secret with name s-test-opt-create-3dfcf6cc-90f1-43b0-8777-dae998e0e92e 10/31/23 10:22:22.955
STEP: waiting to observe update in volume 10/31/23 10:22:23.046
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 10:23:45.666: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-6097" for this suite. 10/31/23 10:23:45.72
------------------------------
â€¢ [SLOW TEST] [86.502 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:205

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:22:19.275
    Oct 31 10:22:19.277: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 10:22:19.279
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:22:19.504
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:22:19.647
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] optional updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:205
    STEP: Creating secret with name s-test-opt-del-1d6cfb75-ee96-45d9-8423-25f0e0456733 10/31/23 10:22:19.799
    STEP: Creating secret with name s-test-opt-upd-7113a432-b23b-432d-925a-3ec8d10e70f3 10/31/23 10:22:19.885
    STEP: Creating the pod 10/31/23 10:22:19.899
    Oct 31 10:22:19.959: INFO: Waiting up to 5m0s for pod "pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85" in namespace "secrets-6097" to be "running and ready"
    Oct 31 10:22:19.976: INFO: Pod "pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85": Phase="Pending", Reason="", readiness=false. Elapsed: 17.088737ms
    Oct 31 10:22:19.976: INFO: The phase of Pod pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:22:21.985: INFO: Pod "pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85": Phase="Running", Reason="", readiness=true. Elapsed: 2.025214568s
    Oct 31 10:22:21.985: INFO: The phase of Pod pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85 is Running (Ready = true)
    Oct 31 10:22:21.985: INFO: Pod "pod-secrets-e050c819-8269-4b86-8214-ac0d90ae7d85" satisfied condition "running and ready"
    STEP: Deleting secret s-test-opt-del-1d6cfb75-ee96-45d9-8423-25f0e0456733 10/31/23 10:22:22.782
    STEP: Updating secret s-test-opt-upd-7113a432-b23b-432d-925a-3ec8d10e70f3 10/31/23 10:22:22.833
    STEP: Creating secret with name s-test-opt-create-3dfcf6cc-90f1-43b0-8777-dae998e0e92e 10/31/23 10:22:22.955
    STEP: waiting to observe update in volume 10/31/23 10:22:23.046
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:23:45.666: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-6097" for this suite. 10/31/23 10:23:45.72
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:23:45.78
Oct 31 10:23:45.781: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 10:23:45.782
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:23:45.942
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:23:46.124
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124
STEP: Creating configMap with name configmap-test-upd-7294437a-8ee7-4211-b2f4-2d8f97dc8969 10/31/23 10:23:46.275
STEP: Creating the pod 10/31/23 10:23:46.322
Oct 31 10:23:46.383: INFO: Waiting up to 5m0s for pod "pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307" in namespace "configmap-6084" to be "running and ready"
Oct 31 10:23:46.405: INFO: Pod "pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307": Phase="Pending", Reason="", readiness=false. Elapsed: 21.249779ms
Oct 31 10:23:46.405: INFO: The phase of Pod pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:23:48.415: INFO: Pod "pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307": Phase="Running", Reason="", readiness=true. Elapsed: 2.030708994s
Oct 31 10:23:48.415: INFO: The phase of Pod pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307 is Running (Ready = true)
Oct 31 10:23:48.415: INFO: Pod "pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307" satisfied condition "running and ready"
STEP: Updating configmap configmap-test-upd-7294437a-8ee7-4211-b2f4-2d8f97dc8969 10/31/23 10:23:48.804
STEP: waiting to observe update in volume 10/31/23 10:23:48.875
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 10:23:53.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6084" for this suite. 10/31/23 10:23:53.321
------------------------------
â€¢ [SLOW TEST] [7.552 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:23:45.78
    Oct 31 10:23:45.781: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 10:23:45.782
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:23:45.942
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:23:46.124
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] updates should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:124
    STEP: Creating configMap with name configmap-test-upd-7294437a-8ee7-4211-b2f4-2d8f97dc8969 10/31/23 10:23:46.275
    STEP: Creating the pod 10/31/23 10:23:46.322
    Oct 31 10:23:46.383: INFO: Waiting up to 5m0s for pod "pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307" in namespace "configmap-6084" to be "running and ready"
    Oct 31 10:23:46.405: INFO: Pod "pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307": Phase="Pending", Reason="", readiness=false. Elapsed: 21.249779ms
    Oct 31 10:23:46.405: INFO: The phase of Pod pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:23:48.415: INFO: Pod "pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307": Phase="Running", Reason="", readiness=true. Elapsed: 2.030708994s
    Oct 31 10:23:48.415: INFO: The phase of Pod pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307 is Running (Ready = true)
    Oct 31 10:23:48.415: INFO: Pod "pod-configmaps-8e990fce-17d1-4127-90e4-b9937d1cc307" satisfied condition "running and ready"
    STEP: Updating configmap configmap-test-upd-7294437a-8ee7-4211-b2f4-2d8f97dc8969 10/31/23 10:23:48.804
    STEP: waiting to observe update in volume 10/31/23 10:23:48.875
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:23:53.267: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6084" for this suite. 10/31/23 10:23:53.321
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
[BeforeEach] [sig-storage] Downward API volume
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:23:53.341
Oct 31 10:23:53.341: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename downward-api 10/31/23 10:23:53.342
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:23:53.522
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:23:53.67
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:44
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68
STEP: Creating a pod to test downward API volume plugin 10/31/23 10:23:53.768
Oct 31 10:23:53.821: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f" in namespace "downward-api-3725" to be "Succeeded or Failed"
Oct 31 10:23:53.862: INFO: Pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f": Phase="Pending", Reason="", readiness=false. Elapsed: 39.919237ms
Oct 31 10:23:55.871: INFO: Pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.049553314s
Oct 31 10:23:57.869: INFO: Pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.047231354s
STEP: Saw pod success 10/31/23 10:23:57.869
Oct 31 10:23:57.870: INFO: Pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f" satisfied condition "Succeeded or Failed"
Oct 31 10:23:57.922: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f container client-container: <nil>
STEP: delete the pod 10/31/23 10:23:58.106
Oct 31 10:23:58.180: INFO: Waiting for pod downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f to disappear
Oct 31 10:23:58.233: INFO: Pod downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/node/init/init.go:32
Oct 31 10:23:58.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Downward API volume
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Downward API volume
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Downward API volume
  tear down framework | framework.go:193
STEP: Destroying namespace "downward-api-3725" for this suite. 10/31/23 10:23:58.291
------------------------------
â€¢ [SLOW TEST] [5.023 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/downwardapi_volume.go:68

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Downward API volume
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:23:53.341
    Oct 31 10:23:53.341: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename downward-api 10/31/23 10:23:53.342
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:23:53.522
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:23:53.67
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Downward API volume
      test/e2e/common/storage/downwardapi_volume.go:44
    [It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/downwardapi_volume.go:68
    STEP: Creating a pod to test downward API volume plugin 10/31/23 10:23:53.768
    Oct 31 10:23:53.821: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f" in namespace "downward-api-3725" to be "Succeeded or Failed"
    Oct 31 10:23:53.862: INFO: Pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f": Phase="Pending", Reason="", readiness=false. Elapsed: 39.919237ms
    Oct 31 10:23:55.871: INFO: Pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.049553314s
    Oct 31 10:23:57.869: INFO: Pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.047231354s
    STEP: Saw pod success 10/31/23 10:23:57.869
    Oct 31 10:23:57.870: INFO: Pod "downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f" satisfied condition "Succeeded or Failed"
    Oct 31 10:23:57.922: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f container client-container: <nil>
    STEP: delete the pod 10/31/23 10:23:58.106
    Oct 31 10:23:58.180: INFO: Waiting for pod downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f to disappear
    Oct 31 10:23:58.233: INFO: Pod downwardapi-volume-bfd1e050-b938-4546-a768-064fe550960f no longer exists
    [AfterEach] [sig-storage] Downward API volume
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:23:58.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Downward API volume
      tear down framework | framework.go:193
    STEP: Destroying namespace "downward-api-3725" for this suite. 10/31/23 10:23:58.291
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch
  watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:23:58.364
Oct 31 10:23:58.364: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-watch 10/31/23 10:23:58.365
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:23:58.484
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:23:58.682
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] watch on custom resource definition objects [Conformance]
  test/e2e/apimachinery/crd_watch.go:51
Oct 31 10:23:58.738: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Creating first CR  10/31/23 10:24:06.543
Oct 31 10:24:06.594: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:06Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:06Z]] name:name1 resourceVersion:36385 uid:63e4cd0d-2049-441d-92ec-9ce3a3ac0ed1] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR 10/31/23 10:24:16.595
Oct 31 10:24:16.734: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:16Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:16Z]] name:name2 resourceVersion:36418 uid:38106aea-1cc4-47f1-9338-c86ab3e59c64] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR 10/31/23 10:24:26.735
Oct 31 10:24:26.754: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:26Z]] name:name1 resourceVersion:36452 uid:63e4cd0d-2049-441d-92ec-9ce3a3ac0ed1] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR 10/31/23 10:24:36.755
Oct 31 10:24:36.787: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:16Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:36Z]] name:name2 resourceVersion:36485 uid:38106aea-1cc4-47f1-9338-c86ab3e59c64] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR 10/31/23 10:24:46.788
Oct 31 10:24:46.835: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:26Z]] name:name1 resourceVersion:36518 uid:63e4cd0d-2049-441d-92ec-9ce3a3ac0ed1] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR 10/31/23 10:24:56.836
Oct 31 10:24:56.886: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:16Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:36Z]] name:name2 resourceVersion:36551 uid:38106aea-1cc4-47f1-9338-c86ab3e59c64] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:25:07.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-watch-1604" for this suite. 10/31/23 10:25:07.078
------------------------------
â€¢ [SLOW TEST] [68.771 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/apimachinery/crd_watch.go:51

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:23:58.364
    Oct 31 10:23:58.364: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-watch 10/31/23 10:23:58.365
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:23:58.484
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:23:58.682
    [BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] watch on custom resource definition objects [Conformance]
      test/e2e/apimachinery/crd_watch.go:51
    Oct 31 10:23:58.738: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Creating first CR  10/31/23 10:24:06.543
    Oct 31 10:24:06.594: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:06Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:06Z]] name:name1 resourceVersion:36385 uid:63e4cd0d-2049-441d-92ec-9ce3a3ac0ed1] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Creating second CR 10/31/23 10:24:16.595
    Oct 31 10:24:16.734: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:16Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:16Z]] name:name2 resourceVersion:36418 uid:38106aea-1cc4-47f1-9338-c86ab3e59c64] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying first CR 10/31/23 10:24:26.735
    Oct 31 10:24:26.754: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:26Z]] name:name1 resourceVersion:36452 uid:63e4cd0d-2049-441d-92ec-9ce3a3ac0ed1] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Modifying second CR 10/31/23 10:24:36.755
    Oct 31 10:24:36.787: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:16Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:36Z]] name:name2 resourceVersion:36485 uid:38106aea-1cc4-47f1-9338-c86ab3e59c64] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting first CR 10/31/23 10:24:46.788
    Oct 31 10:24:46.835: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:06Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:26Z]] name:name1 resourceVersion:36518 uid:63e4cd0d-2049-441d-92ec-9ce3a3ac0ed1] num:map[num1:9223372036854775807 num2:1000000]]}
    STEP: Deleting second CR 10/31/23 10:24:56.836
    Oct 31 10:24:56.886: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-10-31T10:24:16Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-10-31T10:24:36Z]] name:name2 resourceVersion:36551 uid:38106aea-1cc4-47f1-9338-c86ab3e59c64] num:map[num1:9223372036854775807 num2:1000000]]}
    [AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:25:07.013: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-watch-1604" for this suite. 10/31/23 10:25:07.078
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial]
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:305
[BeforeEach] [sig-apps] Daemon set [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:25:07.141
Oct 31 10:25:07.141: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename daemonsets 10/31/23 10:25:07.143
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:25:07.287
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:25:07.464
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:157
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:305
STEP: Creating a simple DaemonSet "daemon-set" 10/31/23 10:25:07.919
STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:25:07.959
Oct 31 10:25:08.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 10:25:08.075: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:25:09.178: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 10:25:09.179: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:25:10.124: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Oct 31 10:25:10.124: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 10/31/23 10:25:10.175
Oct 31 10:25:10.366: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 10:25:10.366: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 is running 0 daemon pod, expected 1
Oct 31 10:25:11.478: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Oct 31 10:25:11.478: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 is running 0 daemon pod, expected 1
Oct 31 10:25:12.434: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Oct 31 10:25:12.435: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted. 10/31/23 10:25:12.435
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:122
STEP: Deleting DaemonSet "daemon-set" 10/31/23 10:25:12.521
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7241, will wait for the garbage collector to delete the pods 10/31/23 10:25:12.521
Oct 31 10:25:12.755: INFO: Deleting DaemonSet.extensions daemon-set took: 84.538333ms
Oct 31 10:25:12.856: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.622859ms
Oct 31 10:25:15.105: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Oct 31 10:25:15.105: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Oct 31 10:25:15.113: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36694"},"items":null}

Oct 31 10:25:15.163: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36694"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:25:15.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "daemonsets-7241" for this suite. 10/31/23 10:25:15.422
------------------------------
â€¢ [SLOW TEST] [8.384 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/apps/daemon_set.go:305

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Daemon set [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:25:07.141
    Oct 31 10:25:07.141: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename daemonsets 10/31/23 10:25:07.143
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:25:07.287
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:25:07.464
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:157
    [It] should retry creating failed daemon pods [Conformance]
      test/e2e/apps/daemon_set.go:305
    STEP: Creating a simple DaemonSet "daemon-set" 10/31/23 10:25:07.919
    STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:25:07.959
    Oct 31 10:25:08.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 10:25:08.075: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:25:09.178: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 10:25:09.179: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:25:10.124: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Oct 31 10:25:10.124: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. 10/31/23 10:25:10.175
    Oct 31 10:25:10.366: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 10:25:10.366: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 is running 0 daemon pod, expected 1
    Oct 31 10:25:11.478: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
    Oct 31 10:25:11.478: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 is running 0 daemon pod, expected 1
    Oct 31 10:25:12.434: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
    Oct 31 10:25:12.435: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
    STEP: Wait for the failed daemon pod to be completely deleted. 10/31/23 10:25:12.435
    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/apps/daemon_set.go:122
    STEP: Deleting DaemonSet "daemon-set" 10/31/23 10:25:12.521
    STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7241, will wait for the garbage collector to delete the pods 10/31/23 10:25:12.521
    Oct 31 10:25:12.755: INFO: Deleting DaemonSet.extensions daemon-set took: 84.538333ms
    Oct 31 10:25:12.856: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.622859ms
    Oct 31 10:25:15.105: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
    Oct 31 10:25:15.105: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
    Oct 31 10:25:15.113: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36694"},"items":null}

    Oct 31 10:25:15.163: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36694"},"items":null}

    [AfterEach] [sig-apps] Daemon set [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:25:15.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Daemon set [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "daemonsets-7241" for this suite. 10/31/23 10:25:15.422
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:25:15.533
Oct 31 10:25:15.533: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 10:25:15.535
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:25:15.677
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:25:15.867
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618
Oct 31 10:25:15.928: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: creating the pod 10/31/23 10:25:15.93
STEP: submitting the pod to kubernetes 10/31/23 10:25:15.93
Oct 31 10:25:15.992: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d" in namespace "pods-2497" to be "running and ready"
Oct 31 10:25:16.006: INFO: Pod "pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d": Phase="Pending", Reason="", readiness=false. Elapsed: 13.277351ms
Oct 31 10:25:16.006: INFO: The phase of Pod pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:25:18.016: INFO: Pod "pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d": Phase="Running", Reason="", readiness=true. Elapsed: 2.023674041s
Oct 31 10:25:18.016: INFO: The phase of Pod pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d is Running (Ready = true)
Oct 31 10:25:18.016: INFO: Pod "pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 10:25:18.224: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-2497" for this suite. 10/31/23 10:25:18.303
------------------------------
â€¢ [2.865 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:618

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:25:15.533
    Oct 31 10:25:15.533: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 10:25:15.535
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:25:15.677
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:25:15.867
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:618
    Oct 31 10:25:15.928: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: creating the pod 10/31/23 10:25:15.93
    STEP: submitting the pod to kubernetes 10/31/23 10:25:15.93
    Oct 31 10:25:15.992: INFO: Waiting up to 5m0s for pod "pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d" in namespace "pods-2497" to be "running and ready"
    Oct 31 10:25:16.006: INFO: Pod "pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d": Phase="Pending", Reason="", readiness=false. Elapsed: 13.277351ms
    Oct 31 10:25:16.006: INFO: The phase of Pod pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:25:18.016: INFO: Pod "pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d": Phase="Running", Reason="", readiness=true. Elapsed: 2.023674041s
    Oct 31 10:25:18.016: INFO: The phase of Pod pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d is Running (Ready = true)
    Oct 31 10:25:18.016: INFO: Pod "pod-logs-websocket-6f1519e1-a8bd-4d9c-bf07-566cce91c11d" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:25:18.224: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-2497" for this suite. 10/31/23 10:25:18.303
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic]
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
[BeforeEach] [sig-apps] StatefulSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:25:18.406
Oct 31 10:25:18.406: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename statefulset 10/31/23 10:25:18.408
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:25:18.659
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:25:18.797
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:98
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:113
STEP: Creating service test in namespace statefulset-9786 10/31/23 10:25:18.935
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/apps/statefulset.go:587
STEP: Initializing watcher for selector baz=blah,foo=bar 10/31/23 10:25:18.963
STEP: Creating stateful set ss in namespace statefulset-9786 10/31/23 10:25:19.054
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9786 10/31/23 10:25:19.118
Oct 31 10:25:19.165: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
Oct 31 10:25:29.190: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 10/31/23 10:25:29.19
Oct 31 10:25:29.268: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 10:25:30.259: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 10:25:30.259: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 10:25:30.259: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Oct 31 10:25:30.307: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Oct 31 10:25:40.316: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Oct 31 10:25:40.316: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 10:25:40.475: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999543s
Oct 31 10:25:41.529: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.950124393s
Oct 31 10:25:42.557: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.896214115s
Oct 31 10:25:43.566: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.86824781s
Oct 31 10:25:44.579: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.859538545s
Oct 31 10:25:45.599: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.845971573s
Oct 31 10:25:46.607: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.826570025s
Oct 31 10:25:47.616: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.818295755s
Oct 31 10:25:48.625: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.809312142s
Oct 31 10:25:49.633: INFO: Verifying statefulset ss doesn't scale past 1 for another 799.950196ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9786 10/31/23 10:25:50.633
Oct 31 10:25:50.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:25:51.510: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Oct 31 10:25:51.510: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Oct 31 10:25:51.510: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Oct 31 10:25:51.636: INFO: Found 1 stateful pods, waiting for 3
Oct 31 10:26:01.649: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 10:26:01.649: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Oct 31 10:26:01.649: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order 10/31/23 10:26:01.65
STEP: Scale down will halt with unhealthy stateful pod 10/31/23 10:26:01.65
Oct 31 10:26:01.742: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 10:26:02.575: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 10:26:02.575: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 10:26:02.575: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Oct 31 10:26:02.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 10:26:03.564: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 10:26:03.564: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 10:26:03.564: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Oct 31 10:26:03.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Oct 31 10:26:04.554: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Oct 31 10:26:04.554: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Oct 31 10:26:04.554: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Oct 31 10:26:04.554: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 10:26:04.606: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 1
Oct 31 10:26:14.662: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Oct 31 10:26:14.662: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Oct 31 10:26:14.662: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Oct 31 10:26:14.778: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999381s
Oct 31 10:26:15.827: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.946653668s
Oct 31 10:26:16.852: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.897803004s
Oct 31 10:26:17.866: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.872694722s
Oct 31 10:26:18.893: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.85923019s
Oct 31 10:26:19.901: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.831566461s
Oct 31 10:26:20.909: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.823833636s
Oct 31 10:26:21.918: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.816041771s
Oct 31 10:26:22.928: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.806111414s
Oct 31 10:26:23.977: INFO: Verifying statefulset ss doesn't scale past 3 for another 796.611141ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9786 10/31/23 10:26:24.978
Oct 31 10:26:24.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:26:25.771: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Oct 31 10:26:25.771: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Oct 31 10:26:25.771: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Oct 31 10:26:25.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:26:26.659: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Oct 31 10:26:26.659: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Oct 31 10:26:26.659: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Oct 31 10:26:26.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:26:27.785: INFO: rc: 1
Oct 31 10:26:27.785: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
error: Internal error occurred: error executing command in container: failed to exec in container: failed to create exec "0131c273ea9b8322dfcf46b59f54c8352b755c18110ff96cf89b961eb88b43fe": task cd191dbbb34118b9280f990c6aed82c247c13d5fb2359d86f4a39b9148e60f6e not found: not found

error:
exit status 1
Oct 31 10:26:37.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:26:38.105: INFO: rc: 1
Oct 31 10:26:38.105: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:26:48.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:26:48.380: INFO: rc: 1
Oct 31 10:26:48.380: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:26:58.382: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:26:58.668: INFO: rc: 1
Oct 31 10:26:58.668: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:27:08.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:27:08.921: INFO: rc: 1
Oct 31 10:27:08.921: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:27:18.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:27:19.225: INFO: rc: 1
Oct 31 10:27:19.225: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:27:29.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:27:29.520: INFO: rc: 1
Oct 31 10:27:29.520: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:27:39.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:27:39.783: INFO: rc: 1
Oct 31 10:27:39.783: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:27:49.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:27:50.090: INFO: rc: 1
Oct 31 10:27:50.090: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:28:00.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:28:00.391: INFO: rc: 1
Oct 31 10:28:00.391: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:28:10.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:28:10.696: INFO: rc: 1
Oct 31 10:28:10.696: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:28:20.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:28:21.117: INFO: rc: 1
Oct 31 10:28:21.117: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:28:31.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:28:31.427: INFO: rc: 1
Oct 31 10:28:31.427: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:28:41.427: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:28:41.686: INFO: rc: 1
Oct 31 10:28:41.686: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:28:51.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:28:51.962: INFO: rc: 1
Oct 31 10:28:51.962: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:29:01.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:29:02.276: INFO: rc: 1
Oct 31 10:29:02.276: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:29:12.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:29:12.540: INFO: rc: 1
Oct 31 10:29:12.540: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:29:22.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:29:22.802: INFO: rc: 1
Oct 31 10:29:22.802: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:29:32.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:29:33.055: INFO: rc: 1
Oct 31 10:29:33.055: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:29:43.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:29:43.325: INFO: rc: 1
Oct 31 10:29:43.325: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:29:53.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:29:53.584: INFO: rc: 1
Oct 31 10:29:53.584: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:30:03.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:30:03.844: INFO: rc: 1
Oct 31 10:30:03.845: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:30:13.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:30:14.116: INFO: rc: 1
Oct 31 10:30:14.116: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:30:24.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:30:24.451: INFO: rc: 1
Oct 31 10:30:24.451: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:30:34.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:30:34.729: INFO: rc: 1
Oct 31 10:30:34.729: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:30:44.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:30:45.009: INFO: rc: 1
Oct 31 10:30:45.009: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:30:55.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:30:55.338: INFO: rc: 1
Oct 31 10:30:55.338: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:31:05.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:31:05.619: INFO: rc: 1
Oct 31 10:31:05.619: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:31:15.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:31:15.882: INFO: rc: 1
Oct 31 10:31:15.882: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:31:25.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:31:26.174: INFO: rc: 1
Oct 31 10:31:26.174: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
Command stdout:

stderr:
Error from server (NotFound): pods "ss-2" not found

error:
exit status 1
Oct 31 10:31:36.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Oct 31 10:31:36.506: INFO: rc: 1
Oct 31 10:31:36.506: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: 
Oct 31 10:31:36.506: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order 10/31/23 10:31:36.662
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:124
Oct 31 10:31:36.662: INFO: Deleting all statefulset in ns statefulset-9786
Oct 31 10:31:36.711: INFO: Scaling statefulset ss to 0
Oct 31 10:31:36.866: INFO: Waiting for statefulset status.replicas updated to 0
Oct 31 10:31:36.919: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/node/init/init.go:32
Oct 31 10:31:37.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] StatefulSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] StatefulSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] StatefulSet
  tear down framework | framework.go:193
STEP: Destroying namespace "statefulset-9786" for this suite. 10/31/23 10:31:37.216
------------------------------
â€¢ [SLOW TEST] [378.863 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:103
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/apps/statefulset.go:587

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] StatefulSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:25:18.406
    Oct 31 10:25:18.406: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename statefulset 10/31/23 10:25:18.408
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:25:18.659
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:25:18.797
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] StatefulSet
      test/e2e/apps/statefulset.go:98
    [BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:113
    STEP: Creating service test in namespace statefulset-9786 10/31/23 10:25:18.935
    [It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
      test/e2e/apps/statefulset.go:587
    STEP: Initializing watcher for selector baz=blah,foo=bar 10/31/23 10:25:18.963
    STEP: Creating stateful set ss in namespace statefulset-9786 10/31/23 10:25:19.054
    STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9786 10/31/23 10:25:19.118
    Oct 31 10:25:19.165: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
    Oct 31 10:25:29.190: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod 10/31/23 10:25:29.19
    Oct 31 10:25:29.268: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 10:25:30.259: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 10:25:30.259: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 10:25:30.259: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Oct 31 10:25:30.307: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
    Oct 31 10:25:40.316: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Oct 31 10:25:40.316: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 10:25:40.475: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999543s
    Oct 31 10:25:41.529: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.950124393s
    Oct 31 10:25:42.557: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.896214115s
    Oct 31 10:25:43.566: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.86824781s
    Oct 31 10:25:44.579: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.859538545s
    Oct 31 10:25:45.599: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.845971573s
    Oct 31 10:25:46.607: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.826570025s
    Oct 31 10:25:47.616: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.818295755s
    Oct 31 10:25:48.625: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.809312142s
    Oct 31 10:25:49.633: INFO: Verifying statefulset ss doesn't scale past 1 for another 799.950196ms
    STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9786 10/31/23 10:25:50.633
    Oct 31 10:25:50.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:25:51.510: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Oct 31 10:25:51.510: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Oct 31 10:25:51.510: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Oct 31 10:25:51.636: INFO: Found 1 stateful pods, waiting for 3
    Oct 31 10:26:01.649: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 10:26:01.649: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
    Oct 31 10:26:01.649: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
    STEP: Verifying that stateful set ss was scaled up in order 10/31/23 10:26:01.65
    STEP: Scale down will halt with unhealthy stateful pod 10/31/23 10:26:01.65
    Oct 31 10:26:01.742: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 10:26:02.575: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 10:26:02.575: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 10:26:02.575: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Oct 31 10:26:02.575: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 10:26:03.564: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 10:26:03.564: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 10:26:03.564: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Oct 31 10:26:03.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
    Oct 31 10:26:04.554: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
    Oct 31 10:26:04.554: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
    Oct 31 10:26:04.554: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

    Oct 31 10:26:04.554: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 10:26:04.606: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 1
    Oct 31 10:26:14.662: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
    Oct 31 10:26:14.662: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
    Oct 31 10:26:14.662: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
    Oct 31 10:26:14.778: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999381s
    Oct 31 10:26:15.827: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.946653668s
    Oct 31 10:26:16.852: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.897803004s
    Oct 31 10:26:17.866: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.872694722s
    Oct 31 10:26:18.893: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.85923019s
    Oct 31 10:26:19.901: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.831566461s
    Oct 31 10:26:20.909: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.823833636s
    Oct 31 10:26:21.918: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.816041771s
    Oct 31 10:26:22.928: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.806111414s
    Oct 31 10:26:23.977: INFO: Verifying statefulset ss doesn't scale past 3 for another 796.611141ms
    STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9786 10/31/23 10:26:24.978
    Oct 31 10:26:24.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:26:25.771: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Oct 31 10:26:25.771: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Oct 31 10:26:25.771: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Oct 31 10:26:25.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:26:26.659: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
    Oct 31 10:26:26.659: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
    Oct 31 10:26:26.659: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

    Oct 31 10:26:26.659: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:26:27.785: INFO: rc: 1
    Oct 31 10:26:27.785: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    error: Internal error occurred: error executing command in container: failed to exec in container: failed to create exec "0131c273ea9b8322dfcf46b59f54c8352b755c18110ff96cf89b961eb88b43fe": task cd191dbbb34118b9280f990c6aed82c247c13d5fb2359d86f4a39b9148e60f6e not found: not found

    error:
    exit status 1
    Oct 31 10:26:37.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:26:38.105: INFO: rc: 1
    Oct 31 10:26:38.105: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:26:48.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:26:48.380: INFO: rc: 1
    Oct 31 10:26:48.380: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:26:58.382: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:26:58.668: INFO: rc: 1
    Oct 31 10:26:58.668: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:27:08.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:27:08.921: INFO: rc: 1
    Oct 31 10:27:08.921: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:27:18.924: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:27:19.225: INFO: rc: 1
    Oct 31 10:27:19.225: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:27:29.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:27:29.520: INFO: rc: 1
    Oct 31 10:27:29.520: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:27:39.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:27:39.783: INFO: rc: 1
    Oct 31 10:27:39.783: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:27:49.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:27:50.090: INFO: rc: 1
    Oct 31 10:27:50.090: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:28:00.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:28:00.391: INFO: rc: 1
    Oct 31 10:28:00.391: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:28:10.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:28:10.696: INFO: rc: 1
    Oct 31 10:28:10.696: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:28:20.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:28:21.117: INFO: rc: 1
    Oct 31 10:28:21.117: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:28:31.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:28:31.427: INFO: rc: 1
    Oct 31 10:28:31.427: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:28:41.427: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:28:41.686: INFO: rc: 1
    Oct 31 10:28:41.686: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:28:51.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:28:51.962: INFO: rc: 1
    Oct 31 10:28:51.962: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:29:01.963: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:29:02.276: INFO: rc: 1
    Oct 31 10:29:02.276: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:29:12.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:29:12.540: INFO: rc: 1
    Oct 31 10:29:12.540: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:29:22.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:29:22.802: INFO: rc: 1
    Oct 31 10:29:22.802: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:29:32.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:29:33.055: INFO: rc: 1
    Oct 31 10:29:33.055: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:29:43.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:29:43.325: INFO: rc: 1
    Oct 31 10:29:43.325: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:29:53.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:29:53.584: INFO: rc: 1
    Oct 31 10:29:53.584: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:30:03.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:30:03.844: INFO: rc: 1
    Oct 31 10:30:03.845: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:30:13.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:30:14.116: INFO: rc: 1
    Oct 31 10:30:14.116: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:30:24.116: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:30:24.451: INFO: rc: 1
    Oct 31 10:30:24.451: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:30:34.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:30:34.729: INFO: rc: 1
    Oct 31 10:30:34.729: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:30:44.729: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:30:45.009: INFO: rc: 1
    Oct 31 10:30:45.009: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:30:55.010: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:30:55.338: INFO: rc: 1
    Oct 31 10:30:55.338: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:31:05.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:31:05.619: INFO: rc: 1
    Oct 31 10:31:05.619: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:31:15.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:31:15.882: INFO: rc: 1
    Oct 31 10:31:15.882: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:31:25.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:31:26.174: INFO: rc: 1
    Oct 31 10:31:26.174: INFO: Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
    Command stdout:

    stderr:
    Error from server (NotFound): pods "ss-2" not found

    error:
    exit status 1
    Oct 31 10:31:36.179: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=statefulset-9786 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
    Oct 31 10:31:36.506: INFO: rc: 1
    Oct 31 10:31:36.506: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: 
    Oct 31 10:31:36.506: INFO: Scaling statefulset ss to 0
    STEP: Verifying that stateful set ss was scaled down in reverse order 10/31/23 10:31:36.662
    [AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
      test/e2e/apps/statefulset.go:124
    Oct 31 10:31:36.662: INFO: Deleting all statefulset in ns statefulset-9786
    Oct 31 10:31:36.711: INFO: Scaling statefulset ss to 0
    Oct 31 10:31:36.866: INFO: Waiting for statefulset status.replicas updated to 0
    Oct 31 10:31:36.919: INFO: Deleting statefulset ss
    [AfterEach] [sig-apps] StatefulSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:31:37.157: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] StatefulSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "statefulset-9786" for this suite. 10/31/23 10:31:37.216
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial]
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:31:37.276
Oct 31 10:31:37.276: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-pred 10/31/23 10:31:37.279
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:37.428
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:37.566
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:97
Oct 31 10:31:37.621: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Oct 31 10:31:37.725: INFO: Waiting for terminating namespaces to be deleted...
Oct 31 10:31:37.817: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz before test
Oct 31 10:31:37.861: INFO: coredns-7d6446f647-hz5j8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:31:37.862: INFO: 	Container coredns ready: true, restart count 0
Oct 31 10:31:37.862: INFO: csi-bizflycloud-nodeplugin-xkt2t from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 10:31:37.862: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 10:31:37.863: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 10:31:37.863: INFO: kube-router-jdd2v from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:31:37.863: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 10:31:37.863: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:31:37.863: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:31:37.864: INFO: 	Container systemd-logs ready: true, restart count 0
Oct 31 10:31:37.864: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n before test
Oct 31 10:31:37.882: INFO: csi-bizflycloud-nodeplugin-x6sjq from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 10:31:37.882: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 10:31:37.882: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 10:31:37.882: INFO: kube-router-p6g8s from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:31:37.882: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 10:31:37.882: INFO: sonobuoy from sonobuoy started at 2023-10-31 08:59:15 +0000 UTC (1 container statuses recorded)
Oct 31 10:31:37.882: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Oct 31 10:31:37.882: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:31:37.882: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:31:37.882: INFO: 	Container systemd-logs ready: true, restart count 0
Oct 31 10:31:37.882: INFO: 
Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 before test
Oct 31 10:31:37.936: INFO: coredns-7d6446f647-bmrzn from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:31:37.936: INFO: 	Container coredns ready: true, restart count 0
Oct 31 10:31:37.936: INFO: csi-bizflycloud-nodeplugin-flvf8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
Oct 31 10:31:37.936: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
Oct 31 10:31:37.936: INFO: 	Container node-driver-registrar ready: true, restart count 0
Oct 31 10:31:37.936: INFO: kube-router-9x529 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
Oct 31 10:31:37.936: INFO: 	Container kube-router ready: true, restart count 0
Oct 31 10:31:37.936: INFO: sonobuoy-e2e-job-5096458fae614ffb from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:31:37.936: INFO: 	Container e2e ready: true, restart count 0
Oct 31 10:31:37.936: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:31:37.936: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
Oct 31 10:31:37.936: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Oct 31 10:31:37.936: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466
STEP: Trying to launch a pod without a label to get a node which can launch it. 10/31/23 10:31:37.936
Oct 31 10:31:37.959: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-6377" to be "running"
Oct 31 10:31:37.975: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 15.673419ms
Oct 31 10:31:39.984: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.02435052s
Oct 31 10:31:39.984: INFO: Pod "without-label" satisfied condition "running"
STEP: Explicitly delete pod here to free the resource it takes. 10/31/23 10:31:40.035
STEP: Trying to apply a random label on the found node. 10/31/23 10:31:40.098
STEP: verifying the node has the label kubernetes.io/e2e-356bcc06-6671-4b27-b12c-5b178f125255 42 10/31/23 10:31:40.13
STEP: Trying to relaunch the pod, now with labels. 10/31/23 10:31:40.138
Oct 31 10:31:40.182: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-6377" to be "not pending"
Oct 31 10:31:40.228: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 45.361467ms
Oct 31 10:31:42.235: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.053127873s
Oct 31 10:31:42.235: INFO: Pod "with-labels" satisfied condition "not pending"
STEP: removing the label kubernetes.io/e2e-356bcc06-6671-4b27-b12c-5b178f125255 off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz 10/31/23 10:31:42.293
STEP: verifying the node doesn't have the label kubernetes.io/e2e-356bcc06-6671-4b27-b12c-5b178f125255 10/31/23 10:31:42.333
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:31:42.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:88
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-pred-6377" for this suite. 10/31/23 10:31:42.478
------------------------------
â€¢ [SLOW TEST] [5.260 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/scheduling/predicates.go:466

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:31:37.276
    Oct 31 10:31:37.276: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-pred 10/31/23 10:31:37.279
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:37.428
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:37.566
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:97
    Oct 31 10:31:37.621: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
    Oct 31 10:31:37.725: INFO: Waiting for terminating namespaces to be deleted...
    Oct 31 10:31:37.817: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz before test
    Oct 31 10:31:37.861: INFO: coredns-7d6446f647-hz5j8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:31:37.862: INFO: 	Container coredns ready: true, restart count 0
    Oct 31 10:31:37.862: INFO: csi-bizflycloud-nodeplugin-xkt2t from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 10:31:37.862: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 10:31:37.863: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 10:31:37.863: INFO: kube-router-jdd2v from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:31:37.863: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 10:31:37.863: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-dqhcv from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:31:37.863: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:31:37.864: INFO: 	Container systemd-logs ready: true, restart count 0
    Oct 31 10:31:37.864: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n before test
    Oct 31 10:31:37.882: INFO: csi-bizflycloud-nodeplugin-x6sjq from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 10:31:37.882: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 10:31:37.882: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 10:31:37.882: INFO: kube-router-p6g8s from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:31:37.882: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 10:31:37.882: INFO: sonobuoy from sonobuoy started at 2023-10-31 08:59:15 +0000 UTC (1 container statuses recorded)
    Oct 31 10:31:37.882: INFO: 	Container kube-sonobuoy ready: true, restart count 0
    Oct 31 10:31:37.882: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-mklhw from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:31:37.882: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:31:37.882: INFO: 	Container systemd-logs ready: true, restart count 0
    Oct 31 10:31:37.882: INFO: 
    Logging pods the apiserver thinks is on node pool-4a0or6em-hvylrntrzm4xjw3t-node-shkdkpg9 before test
    Oct 31 10:31:37.936: INFO: coredns-7d6446f647-bmrzn from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:31:37.936: INFO: 	Container coredns ready: true, restart count 0
    Oct 31 10:31:37.936: INFO: csi-bizflycloud-nodeplugin-flvf8 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (2 container statuses recorded)
    Oct 31 10:31:37.936: INFO: 	Container bizflycloud-csi-plugin ready: true, restart count 0
    Oct 31 10:31:37.936: INFO: 	Container node-driver-registrar ready: true, restart count 0
    Oct 31 10:31:37.936: INFO: kube-router-9x529 from kube-system started at 2023-10-31 08:57:01 +0000 UTC (1 container statuses recorded)
    Oct 31 10:31:37.936: INFO: 	Container kube-router ready: true, restart count 0
    Oct 31 10:31:37.936: INFO: sonobuoy-e2e-job-5096458fae614ffb from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:31:37.936: INFO: 	Container e2e ready: true, restart count 0
    Oct 31 10:31:37.936: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:31:37.936: INFO: sonobuoy-systemd-logs-daemon-set-75aad7405d754110-k6x6s from sonobuoy started at 2023-10-31 08:59:27 +0000 UTC (2 container statuses recorded)
    Oct 31 10:31:37.936: INFO: 	Container sonobuoy-worker ready: true, restart count 0
    Oct 31 10:31:37.936: INFO: 	Container systemd-logs ready: true, restart count 0
    [It] validates that NodeSelector is respected if matching  [Conformance]
      test/e2e/scheduling/predicates.go:466
    STEP: Trying to launch a pod without a label to get a node which can launch it. 10/31/23 10:31:37.936
    Oct 31 10:31:37.959: INFO: Waiting up to 1m0s for pod "without-label" in namespace "sched-pred-6377" to be "running"
    Oct 31 10:31:37.975: INFO: Pod "without-label": Phase="Pending", Reason="", readiness=false. Elapsed: 15.673419ms
    Oct 31 10:31:39.984: INFO: Pod "without-label": Phase="Running", Reason="", readiness=true. Elapsed: 2.02435052s
    Oct 31 10:31:39.984: INFO: Pod "without-label" satisfied condition "running"
    STEP: Explicitly delete pod here to free the resource it takes. 10/31/23 10:31:40.035
    STEP: Trying to apply a random label on the found node. 10/31/23 10:31:40.098
    STEP: verifying the node has the label kubernetes.io/e2e-356bcc06-6671-4b27-b12c-5b178f125255 42 10/31/23 10:31:40.13
    STEP: Trying to relaunch the pod, now with labels. 10/31/23 10:31:40.138
    Oct 31 10:31:40.182: INFO: Waiting up to 5m0s for pod "with-labels" in namespace "sched-pred-6377" to be "not pending"
    Oct 31 10:31:40.228: INFO: Pod "with-labels": Phase="Pending", Reason="", readiness=false. Elapsed: 45.361467ms
    Oct 31 10:31:42.235: INFO: Pod "with-labels": Phase="Running", Reason="", readiness=true. Elapsed: 2.053127873s
    Oct 31 10:31:42.235: INFO: Pod "with-labels" satisfied condition "not pending"
    STEP: removing the label kubernetes.io/e2e-356bcc06-6671-4b27-b12c-5b178f125255 off the node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz 10/31/23 10:31:42.293
    STEP: verifying the node doesn't have the label kubernetes.io/e2e-356bcc06-6671-4b27-b12c-5b178f125255 10/31/23 10:31:42.333
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:31:42.398: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/scheduling/predicates.go:88
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPredicates [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-pred-6377" for this suite. 10/31/23 10:31:42.478
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for Table transformation
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:31:42.537
Oct 31 10:31:42.537: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename tables 10/31/23 10:31:42.539
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:42.742
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:42.882
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/node/init/init.go:32
Oct 31 10:31:43.114: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
  tear down framework | framework.go:193
STEP: Destroying namespace "tables-493" for this suite. 10/31/23 10:31:43.165
------------------------------
â€¢ [0.679 seconds]
[sig-api-machinery] Servers with support for Table transformation
test/e2e/apimachinery/framework.go:23
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/apimachinery/table_conversion.go:154

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:31:42.537
    Oct 31 10:31:42.537: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename tables 10/31/23 10:31:42.539
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:42.742
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:42.882
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/apimachinery/table_conversion.go:49
    [It] should return a 406 for a backend which does not implement metadata [Conformance]
      test/e2e/apimachinery/table_conversion.go:154
    [AfterEach] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:31:43.114: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Servers with support for Table transformation
      tear down framework | framework.go:193
    STEP: Destroying namespace "tables-493" for this suite. 10/31/23 10:31:43.165
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:31:43.216
Oct 31 10:31:43.216: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 10:31:43.218
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:43.404
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:43.537
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187
STEP: Creating a pod to test emptydir 0777 on node default medium 10/31/23 10:31:43.678
Oct 31 10:31:43.693: INFO: Waiting up to 5m0s for pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905" in namespace "emptydir-6207" to be "Succeeded or Failed"
Oct 31 10:31:43.699: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905": Phase="Pending", Reason="", readiness=false. Elapsed: 6.725588ms
Oct 31 10:31:45.712: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019666791s
Oct 31 10:31:47.708: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015320411s
Oct 31 10:31:49.706: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.013267719s
STEP: Saw pod success 10/31/23 10:31:49.706
Oct 31 10:31:49.706: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905" satisfied condition "Succeeded or Failed"
Oct 31 10:31:49.760: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905 container test-container: <nil>
STEP: delete the pod 10/31/23 10:31:50.067
Oct 31 10:31:50.134: INFO: Waiting for pod pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905 to disappear
Oct 31 10:31:50.225: INFO: Pod pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 10:31:50.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-6207" for this suite. 10/31/23 10:31:50.28
------------------------------
â€¢ [SLOW TEST] [7.118 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:187

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:31:43.216
    Oct 31 10:31:43.216: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 10:31:43.218
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:43.404
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:43.537
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:187
    STEP: Creating a pod to test emptydir 0777 on node default medium 10/31/23 10:31:43.678
    Oct 31 10:31:43.693: INFO: Waiting up to 5m0s for pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905" in namespace "emptydir-6207" to be "Succeeded or Failed"
    Oct 31 10:31:43.699: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905": Phase="Pending", Reason="", readiness=false. Elapsed: 6.725588ms
    Oct 31 10:31:45.712: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019666791s
    Oct 31 10:31:47.708: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015320411s
    Oct 31 10:31:49.706: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.013267719s
    STEP: Saw pod success 10/31/23 10:31:49.706
    Oct 31 10:31:49.706: INFO: Pod "pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905" satisfied condition "Succeeded or Failed"
    Oct 31 10:31:49.760: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905 container test-container: <nil>
    STEP: delete the pod 10/31/23 10:31:50.067
    Oct 31 10:31:50.134: INFO: Waiting for pod pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905 to disappear
    Oct 31 10:31:50.225: INFO: Pod pod-46ad76f4-d782-45e5-9dfa-e9923e6f7905 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:31:50.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-6207" for this suite. 10/31/23 10:31:50.28
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server
  should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:31:50.34
Oct 31 10:31:50.341: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:31:50.342
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:50.515
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:50.676
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[It] should support proxy with --port 0  [Conformance]
  test/e2e/kubectl/kubectl.go:1787
STEP: starting the proxy server 10/31/23 10:31:50.775
Oct 31 10:31:50.776: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2890 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output 10/31/23 10:31:50.847
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:31:50.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-2890" for this suite. 10/31/23 10:31:51.013
------------------------------
â€¢ [0.741 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Proxy server
  test/e2e/kubectl/kubectl.go:1780
    should support proxy with --port 0  [Conformance]
    test/e2e/kubectl/kubectl.go:1787

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:31:50.34
    Oct 31 10:31:50.341: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:31:50.342
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:50.515
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:50.676
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [It] should support proxy with --port 0  [Conformance]
      test/e2e/kubectl/kubectl.go:1787
    STEP: starting the proxy server 10/31/23 10:31:50.775
    Oct 31 10:31:50.776: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-2890 proxy -p 0 --disable-filter'
    STEP: curling proxy /api/ output 10/31/23 10:31:50.847
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:31:50.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-2890" for this suite. 10/31/23 10:31:51.013
  << End Captured GinkgoWriter Output
------------------------------
[sig-node] RuntimeClass
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
[BeforeEach] [sig-node] RuntimeClass
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:31:51.083
Oct 31 10:31:51.083: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename runtimeclass 10/31/23 10:31:51.084
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:51.279
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:51.417
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:31
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156
STEP: Deleting RuntimeClass runtimeclass-2460-delete-me 10/31/23 10:31:51.524
STEP: Waiting for the RuntimeClass to disappear 10/31/23 10:31:51.578
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/node/init/init.go:32
Oct 31 10:31:51.758: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] RuntimeClass
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] RuntimeClass
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] RuntimeClass
  tear down framework | framework.go:193
STEP: Destroying namespace "runtimeclass-2460" for this suite. 10/31/23 10:31:51.849
------------------------------
â€¢ [0.823 seconds]
[sig-node] RuntimeClass
test/e2e/common/node/framework.go:23
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/common/node/runtimeclass.go:156

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] RuntimeClass
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:31:51.083
    Oct 31 10:31:51.083: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename runtimeclass 10/31/23 10:31:51.084
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:51.279
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:51.417
    [BeforeEach] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:31
    [It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
      test/e2e/common/node/runtimeclass.go:156
    STEP: Deleting RuntimeClass runtimeclass-2460-delete-me 10/31/23 10:31:51.524
    STEP: Waiting for the RuntimeClass to disappear 10/31/23 10:31:51.578
    [AfterEach] [sig-node] RuntimeClass
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:31:51.758: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] RuntimeClass
      tear down framework | framework.go:193
    STEP: Destroying namespace "runtimeclass-2460" for this suite. 10/31/23 10:31:51.849
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:31:51.908
Oct 31 10:31:51.909: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename svcaccounts 10/31/23 10:31:51.91
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:52.103
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:52.239
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161
Oct 31 10:31:52.586: INFO: created pod pod-service-account-defaultsa
Oct 31 10:31:52.586: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Oct 31 10:31:52.603: INFO: created pod pod-service-account-mountsa
Oct 31 10:31:52.603: INFO: pod pod-service-account-mountsa service account token volume mount: true
Oct 31 10:31:52.644: INFO: created pod pod-service-account-nomountsa
Oct 31 10:31:52.644: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Oct 31 10:31:52.667: INFO: created pod pod-service-account-defaultsa-mountspec
Oct 31 10:31:52.667: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Oct 31 10:31:52.751: INFO: created pod pod-service-account-mountsa-mountspec
Oct 31 10:31:52.752: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Oct 31 10:31:52.774: INFO: created pod pod-service-account-nomountsa-mountspec
Oct 31 10:31:52.774: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Oct 31 10:31:52.858: INFO: created pod pod-service-account-defaultsa-nomountspec
Oct 31 10:31:52.858: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Oct 31 10:31:52.943: INFO: created pod pod-service-account-mountsa-nomountspec
Oct 31 10:31:52.944: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Oct 31 10:31:52.985: INFO: created pod pod-service-account-nomountsa-nomountspec
Oct 31 10:31:52.985: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Oct 31 10:31:52.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-5435" for this suite. 10/31/23 10:31:53.001
------------------------------
â€¢ [1.217 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should allow opting out of API token automount  [Conformance]
  test/e2e/auth/service_accounts.go:161

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:31:51.908
    Oct 31 10:31:51.909: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename svcaccounts 10/31/23 10:31:51.91
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:52.103
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:52.239
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should allow opting out of API token automount  [Conformance]
      test/e2e/auth/service_accounts.go:161
    Oct 31 10:31:52.586: INFO: created pod pod-service-account-defaultsa
    Oct 31 10:31:52.586: INFO: pod pod-service-account-defaultsa service account token volume mount: true
    Oct 31 10:31:52.603: INFO: created pod pod-service-account-mountsa
    Oct 31 10:31:52.603: INFO: pod pod-service-account-mountsa service account token volume mount: true
    Oct 31 10:31:52.644: INFO: created pod pod-service-account-nomountsa
    Oct 31 10:31:52.644: INFO: pod pod-service-account-nomountsa service account token volume mount: false
    Oct 31 10:31:52.667: INFO: created pod pod-service-account-defaultsa-mountspec
    Oct 31 10:31:52.667: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
    Oct 31 10:31:52.751: INFO: created pod pod-service-account-mountsa-mountspec
    Oct 31 10:31:52.752: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
    Oct 31 10:31:52.774: INFO: created pod pod-service-account-nomountsa-mountspec
    Oct 31 10:31:52.774: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
    Oct 31 10:31:52.858: INFO: created pod pod-service-account-defaultsa-nomountspec
    Oct 31 10:31:52.858: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
    Oct 31 10:31:52.943: INFO: created pod pod-service-account-mountsa-nomountspec
    Oct 31 10:31:52.944: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
    Oct 31 10:31:52.985: INFO: created pod pod-service-account-nomountsa-nomountspec
    Oct 31 10:31:52.985: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:31:52.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-5435" for this suite. 10/31/23 10:31:53.001
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:31:53.127
Oct 31 10:31:53.127: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename taint-multiple-pods 10/31/23 10:31:53.128
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:53.303
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:53.477
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:383
Oct 31 10:31:53.610: INFO: Waiting up to 1m0s for all nodes to be ready
Oct 31 10:32:53.882: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455
Oct 31 10:32:53.931: INFO: Starting informer...
STEP: Starting pods... 10/31/23 10:32:53.931
Oct 31 10:32:54.285: INFO: Pod1 is running on pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz. Tainting Node
Oct 31 10:32:54.325: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-3975" to be "running"
Oct 31 10:32:54.373: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 47.843283ms
Oct 31 10:32:56.383: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.057339512s
Oct 31 10:32:56.383: INFO: Pod "taint-eviction-b1" satisfied condition "running"
Oct 31 10:32:56.383: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-3975" to be "running"
Oct 31 10:32:56.432: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 48.318905ms
Oct 31 10:32:56.432: INFO: Pod "taint-eviction-b2" satisfied condition "running"
Oct 31 10:32:56.432: INFO: Pod2 is running on pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz. Tainting Node
STEP: Trying to apply a taint on the Node 10/31/23 10:32:56.432
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 10/31/23 10:32:56.597
STEP: Waiting for Pod1 and Pod2 to be deleted 10/31/23 10:32:56.605
Oct 31 10:33:02.718: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Oct 31 10:33:22.809: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 10/31/23 10:33:22.911
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:33:22.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-multiple-pods-3975" for this suite. 10/31/23 10:33:23.016
------------------------------
â€¢ [SLOW TEST] [89.945 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/node/taints.go:455

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:31:53.127
    Oct 31 10:31:53.127: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename taint-multiple-pods 10/31/23 10:31:53.128
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:31:53.303
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:31:53.477
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/node/taints.go:383
    Oct 31 10:31:53.610: INFO: Waiting up to 1m0s for all nodes to be ready
    Oct 31 10:32:53.882: INFO: Waiting for terminating namespaces to be deleted...
    [It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
      test/e2e/node/taints.go:455
    Oct 31 10:32:53.931: INFO: Starting informer...
    STEP: Starting pods... 10/31/23 10:32:53.931
    Oct 31 10:32:54.285: INFO: Pod1 is running on pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz. Tainting Node
    Oct 31 10:32:54.325: INFO: Waiting up to 5m0s for pod "taint-eviction-b1" in namespace "taint-multiple-pods-3975" to be "running"
    Oct 31 10:32:54.373: INFO: Pod "taint-eviction-b1": Phase="Pending", Reason="", readiness=false. Elapsed: 47.843283ms
    Oct 31 10:32:56.383: INFO: Pod "taint-eviction-b1": Phase="Running", Reason="", readiness=true. Elapsed: 2.057339512s
    Oct 31 10:32:56.383: INFO: Pod "taint-eviction-b1" satisfied condition "running"
    Oct 31 10:32:56.383: INFO: Waiting up to 5m0s for pod "taint-eviction-b2" in namespace "taint-multiple-pods-3975" to be "running"
    Oct 31 10:32:56.432: INFO: Pod "taint-eviction-b2": Phase="Running", Reason="", readiness=true. Elapsed: 48.318905ms
    Oct 31 10:32:56.432: INFO: Pod "taint-eviction-b2" satisfied condition "running"
    Oct 31 10:32:56.432: INFO: Pod2 is running on pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz. Tainting Node
    STEP: Trying to apply a taint on the Node 10/31/23 10:32:56.432
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 10/31/23 10:32:56.597
    STEP: Waiting for Pod1 and Pod2 to be deleted 10/31/23 10:32:56.605
    Oct 31 10:33:02.718: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
    Oct 31 10:33:22.809: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 10/31/23 10:33:22.911
    [AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:33:22.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-multiple-pods-3975" for this suite. 10/31/23 10:33:23.016
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:33:23.074
Oct 31 10:33:23.074: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename init-container 10/31/23 10:33:23.075
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:33:23.214
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:33:23.36
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255
STEP: creating the pod 10/31/23 10:33:23.462
Oct 31 10:33:23.462: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:33:27.765: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-9560" for this suite. 10/31/23 10:33:27.818
------------------------------
â€¢ [4.757 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:255

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:33:23.074
    Oct 31 10:33:23.074: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename init-container 10/31/23 10:33:23.075
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:33:23.214
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:33:23.36
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should invoke init containers on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:255
    STEP: creating the pod 10/31/23 10:33:23.462
    Oct 31 10:33:23.462: INFO: PodSpec: initContainers in spec.initContainers
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:33:27.765: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-9560" for this suite. 10/31/23 10:33:27.818
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:33:27.831
Oct 31 10:33:27.831: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 10:33:27.833
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:33:27.94
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:33:28.054
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175
STEP: Creating configMap with name configmap-test-upd-1f73cd74-dd41-4865-bba5-07b73719b038 10/31/23 10:33:28.229
STEP: Creating the pod 10/31/23 10:33:28.316
Oct 31 10:33:28.380: INFO: Waiting up to 5m0s for pod "pod-configmaps-859b476c-e5a6-4616-a28b-d771f9454b11" in namespace "configmap-1879" to be "running"
Oct 31 10:33:28.403: INFO: Pod "pod-configmaps-859b476c-e5a6-4616-a28b-d771f9454b11": Phase="Pending", Reason="", readiness=false. Elapsed: 21.944302ms
Oct 31 10:33:30.413: INFO: Pod "pod-configmaps-859b476c-e5a6-4616-a28b-d771f9454b11": Phase="Running", Reason="", readiness=false. Elapsed: 2.03232979s
Oct 31 10:33:30.413: INFO: Pod "pod-configmaps-859b476c-e5a6-4616-a28b-d771f9454b11" satisfied condition "running"
STEP: Waiting for pod with text data 10/31/23 10:33:30.413
STEP: Waiting for pod with binary data 10/31/23 10:33:30.664
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 10:33:30.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-1879" for this suite. 10/31/23 10:33:30.861
------------------------------
â€¢ [3.080 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:175

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:33:27.831
    Oct 31 10:33:27.831: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 10:33:27.833
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:33:27.94
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:33:28.054
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] binary data should be reflected in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:175
    STEP: Creating configMap with name configmap-test-upd-1f73cd74-dd41-4865-bba5-07b73719b038 10/31/23 10:33:28.229
    STEP: Creating the pod 10/31/23 10:33:28.316
    Oct 31 10:33:28.380: INFO: Waiting up to 5m0s for pod "pod-configmaps-859b476c-e5a6-4616-a28b-d771f9454b11" in namespace "configmap-1879" to be "running"
    Oct 31 10:33:28.403: INFO: Pod "pod-configmaps-859b476c-e5a6-4616-a28b-d771f9454b11": Phase="Pending", Reason="", readiness=false. Elapsed: 21.944302ms
    Oct 31 10:33:30.413: INFO: Pod "pod-configmaps-859b476c-e5a6-4616-a28b-d771f9454b11": Phase="Running", Reason="", readiness=false. Elapsed: 2.03232979s
    Oct 31 10:33:30.413: INFO: Pod "pod-configmaps-859b476c-e5a6-4616-a28b-d771f9454b11" satisfied condition "running"
    STEP: Waiting for pod with text data 10/31/23 10:33:30.413
    STEP: Waiting for pod with binary data 10/31/23 10:33:30.664
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:33:30.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-1879" for this suite. 10/31/23 10:33:30.861
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
[BeforeEach] [sig-node] Security Context
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:33:30.916
Oct 31 10:33:30.916: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename security-context-test 10/31/23 10:33:30.917
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:33:31.108
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:33:31.241
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:50
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/security_context.go:347
Oct 31 10:33:31.393: INFO: Waiting up to 5m0s for pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0" in namespace "security-context-test-9004" to be "Succeeded or Failed"
Oct 31 10:33:31.541: INFO: Pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0": Phase="Pending", Reason="", readiness=false. Elapsed: 147.910387ms
Oct 31 10:33:33.557: INFO: Pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.163146566s
Oct 31 10:33:35.550: INFO: Pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.156870023s
Oct 31 10:33:35.551: INFO: Pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/node/init/init.go:32
Oct 31 10:33:35.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Security Context
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Security Context
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Security Context
  tear down framework | framework.go:193
STEP: Destroying namespace "security-context-test-9004" for this suite. 10/31/23 10:33:35.611
------------------------------
â€¢ [4.707 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a container with runAsUser
  test/e2e/common/node/security_context.go:309
    should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/node/security_context.go:347

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Security Context
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:33:30.916
    Oct 31 10:33:30.916: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename security-context-test 10/31/23 10:33:30.917
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:33:31.108
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:33:31.241
    [BeforeEach] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Security Context
      test/e2e/common/node/security_context.go:50
    [It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/security_context.go:347
    Oct 31 10:33:31.393: INFO: Waiting up to 5m0s for pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0" in namespace "security-context-test-9004" to be "Succeeded or Failed"
    Oct 31 10:33:31.541: INFO: Pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0": Phase="Pending", Reason="", readiness=false. Elapsed: 147.910387ms
    Oct 31 10:33:33.557: INFO: Pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.163146566s
    Oct 31 10:33:35.550: INFO: Pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.156870023s
    Oct 31 10:33:35.551: INFO: Pod "busybox-user-65534-384a63d5-8865-49de-a2dd-64a5746775b0" satisfied condition "Succeeded or Failed"
    [AfterEach] [sig-node] Security Context
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:33:35.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Security Context
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Security Context
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Security Context
      tear down framework | framework.go:193
    STEP: Destroying namespace "security-context-test-9004" for this suite. 10/31/23 10:33:35.611
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance]
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:33:35.625
Oct 31 10:33:35.625: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename init-container 10/31/23 10:33:35.627
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:33:35.858
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:33:35.993
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:165
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334
STEP: creating the pod 10/31/23 10:33:36.094
Oct 31 10:33:36.095: INFO: PodSpec: initContainers in spec.initContainers
Oct 31 10:34:16.888: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ba116350-52df-4739-968d-4a461336f12b", GenerateName:"", Namespace:"init-container-7784", SelfLink:"", UID:"76eed615-7441-4579-81f3-df14faf5841e", ResourceVersion:"39069", Generation:0, CreationTimestamp:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"94999612"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0065c2630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 31, 10, 34, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0065c2660), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-99n5s", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0033d8640), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-99n5s", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-99n5s", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-99n5s", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000e93e58), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004b501c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000e93ed0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000e93ef0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc000e93ef8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000e93efc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0014feca0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.20.4.137", PodIP:"10.200.1.53", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.200.1.53"}}, StartTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004b502a0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004b50310)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://9e4919b6c30cce84fc53e54496803bcf55f4c4aa9539946503abc2319d4dbefd", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0033d86c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0033d86a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc000e93f7f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:34:16.889: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
  tear down framework | framework.go:193
STEP: Destroying namespace "init-container-7784" for this suite. 10/31/23 10:34:16.937
------------------------------
â€¢ [SLOW TEST] [41.345 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/common/node/init_container.go:334

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:33:35.625
    Oct 31 10:33:35.625: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename init-container 10/31/23 10:33:35.627
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:33:35.858
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:33:35.993
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/common/node/init_container.go:165
    [It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
      test/e2e/common/node/init_container.go:334
    STEP: creating the pod 10/31/23 10:33:36.094
    Oct 31 10:33:36.095: INFO: PodSpec: initContainers in spec.initContainers
    Oct 31 10:34:16.888: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ba116350-52df-4739-968d-4a461336f12b", GenerateName:"", Namespace:"init-container-7784", SelfLink:"", UID:"76eed615-7441-4579-81f3-df14faf5841e", ResourceVersion:"39069", Generation:0, CreationTimestamp:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"94999612"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0065c2630), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.October, 31, 10, 34, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0065c2660), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-99n5s", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0033d8640), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-99n5s", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-99n5s", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-99n5s", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc000e93e58), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc004b501c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000e93ed0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc000e93ef0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc000e93ef8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc000e93efc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0014feca0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.20.4.137", PodIP:"10.200.1.53", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.200.1.53"}}, StartTime:time.Date(2023, time.October, 31, 10, 33, 36, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004b502a0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc004b50310)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://9e4919b6c30cce84fc53e54496803bcf55f4c4aa9539946503abc2319d4dbefd", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0033d86c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0033d86a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc000e93f7f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
    [AfterEach] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:34:16.889: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] InitContainer [NodeConformance]
      tear down framework | framework.go:193
    STEP: Destroying namespace "init-container-7784" for this suite. 10/31/23 10:34:16.937
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
[BeforeEach] [sig-architecture] Conformance Tests
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:34:16.973
Oct 31 10:34:16.973: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename conformance-tests 10/31/23 10:34:16.974
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:17.172
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:17.308
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:31
[It] should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38
STEP: Getting node addresses 10/31/23 10:34:17.458
Oct 31 10:34:17.458: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/node/init/init.go:32
Oct 31 10:34:17.531: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-architecture] Conformance Tests
  tear down framework | framework.go:193
STEP: Destroying namespace "conformance-tests-1768" for this suite. 10/31/23 10:34:17.543
------------------------------
â€¢ [0.668 seconds]
[sig-architecture] Conformance Tests
test/e2e/architecture/framework.go:23
  should have at least two untainted nodes [Conformance]
  test/e2e/architecture/conformance.go:38

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-architecture] Conformance Tests
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:34:16.973
    Oct 31 10:34:16.973: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename conformance-tests 10/31/23 10:34:16.974
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:17.172
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:17.308
    [BeforeEach] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:31
    [It] should have at least two untainted nodes [Conformance]
      test/e2e/architecture/conformance.go:38
    STEP: Getting node addresses 10/31/23 10:34:17.458
    Oct 31 10:34:17.458: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    [AfterEach] [sig-architecture] Conformance Tests
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:34:17.531: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-architecture] Conformance Tests
      tear down framework | framework.go:193
    STEP: Destroying namespace "conformance-tests-1768" for this suite. 10/31/23 10:34:17.543
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:34:17.644
Oct 31 10:34:17.644: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 10:34:17.646
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:17.879
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:18.016
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 10:34:18.934: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-4547" for this suite. 10/31/23 10:34:18.974
------------------------------
â€¢ [1.454 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/secrets_volume.go:386

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:34:17.644
    Oct 31 10:34:17.644: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 10:34:17.646
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:17.879
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:18.016
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/secrets_volume.go:386
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:34:18.934: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-4547" for this suite. 10/31/23 10:34:18.974
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:34:19.103
Oct 31 10:34:19.103: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 10:34:19.105
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:19.217
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:19.355
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 10:34:19.668
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:34:19.929
STEP: Deploying the webhook pod 10/31/23 10:34:20.009
STEP: Wait for the deployment to be ready 10/31/23 10:34:20.119
Oct 31 10:34:20.345: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 34, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 34, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 34, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 34, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 10:34:22.376
STEP: Verifying the service has paired with the endpoint 10/31/23 10:34:22.453
Oct 31 10:34:23.454: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308
STEP: Registering the crd webhook via the AdmissionRegistration API 10/31/23 10:34:23.465
STEP: Creating a custom resource definition that should be denied by the webhook 10/31/23 10:34:24.739
Oct 31 10:34:24.739: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:34:24.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-8763" for this suite. 10/31/23 10:34:25.357
STEP: Destroying namespace "webhook-8763-markers" for this suite. 10/31/23 10:34:25.456
------------------------------
â€¢ [SLOW TEST] [6.406 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should deny crd creation [Conformance]
  test/e2e/apimachinery/webhook.go:308

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:34:19.103
    Oct 31 10:34:19.103: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 10:34:19.105
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:19.217
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:19.355
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 10:34:19.668
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:34:19.929
    STEP: Deploying the webhook pod 10/31/23 10:34:20.009
    STEP: Wait for the deployment to be ready 10/31/23 10:34:20.119
    Oct 31 10:34:20.345: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 34, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 34, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 34, 20, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 34, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 10:34:22.376
    STEP: Verifying the service has paired with the endpoint 10/31/23 10:34:22.453
    Oct 31 10:34:23.454: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should deny crd creation [Conformance]
      test/e2e/apimachinery/webhook.go:308
    STEP: Registering the crd webhook via the AdmissionRegistration API 10/31/23 10:34:23.465
    STEP: Creating a custom resource definition that should be denied by the webhook 10/31/23 10:34:24.739
    Oct 31 10:34:24.739: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:34:24.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-8763" for this suite. 10/31/23 10:34:25.357
    STEP: Destroying namespace "webhook-8763-markers" for this suite. 10/31/23 10:34:25.456
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:34:25.511
Oct 31 10:34:25.512: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 10:34:25.513
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:25.758
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:25.896
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391
STEP: set up a multi version CRD 10/31/23 10:34:25.996
Oct 31 10:34:25.998: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: rename a version 10/31/23 10:34:41.15
STEP: check the new version name is served 10/31/23 10:34:41.284
STEP: check the old version name is removed 10/31/23 10:34:43.857
STEP: check the other version is not changed 10/31/23 10:34:46.132
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:34:53.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-3081" for this suite. 10/31/23 10:34:53.236
------------------------------
â€¢ [SLOW TEST] [27.812 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:391

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:34:25.511
    Oct 31 10:34:25.512: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 10:34:25.513
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:25.758
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:25.896
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] updates the published spec when one version gets renamed [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:391
    STEP: set up a multi version CRD 10/31/23 10:34:25.996
    Oct 31 10:34:25.998: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: rename a version 10/31/23 10:34:41.15
    STEP: check the new version name is served 10/31/23 10:34:41.284
    STEP: check the old version name is removed 10/31/23 10:34:43.857
    STEP: check the other version is not changed 10/31/23 10:34:46.132
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:34:53.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-3081" for this suite. 10/31/23 10:34:53.236
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
[BeforeEach] [sig-api-machinery] ResourceQuota
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:34:53.327
Oct 31 10:34:53.327: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename resourcequota 10/31/23 10:34:53.329
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:53.473
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:53.597
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:31
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75
STEP: Counting existing ResourceQuota 10/31/23 10:34:53.658
STEP: Creating a ResourceQuota 10/31/23 10:34:58.714
STEP: Ensuring resource quota status is calculated 10/31/23 10:34:58.785
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/node/init/init.go:32
Oct 31 10:35:00.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
  tear down framework | framework.go:193
STEP: Destroying namespace "resourcequota-813" for this suite. 10/31/23 10:35:00.861
------------------------------
â€¢ [SLOW TEST] [7.577 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/apimachinery/resource_quota.go:75

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] ResourceQuota
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:34:53.327
    Oct 31 10:34:53.327: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename resourcequota 10/31/23 10:34:53.329
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:34:53.473
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:34:53.597
    [BeforeEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:31
    [It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
      test/e2e/apimachinery/resource_quota.go:75
    STEP: Counting existing ResourceQuota 10/31/23 10:34:53.658
    STEP: Creating a ResourceQuota 10/31/23 10:34:58.714
    STEP: Ensuring resource quota status is calculated 10/31/23 10:34:58.785
    [AfterEach] [sig-api-machinery] ResourceQuota
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:35:00.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] ResourceQuota
      tear down framework | framework.go:193
    STEP: Destroying namespace "resourcequota-813" for this suite. 10/31/23 10:35:00.861
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[BeforeEach] [sig-network] EndpointSlice
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:35:00.914
Oct 31 10:35:00.914: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename endpointslice 10/31/23 10:35:00.915
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:35:01.09
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:35:01.226
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:52
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/node/init/init.go:32
Oct 31 10:35:01.883: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] EndpointSlice
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] EndpointSlice
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] EndpointSlice
  tear down framework | framework.go:193
STEP: Destroying namespace "endpointslice-4926" for this suite. 10/31/23 10:35:01.94
------------------------------
â€¢ [1.120 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/network/endpointslice.go:102

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] EndpointSlice
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:35:00.914
    Oct 31 10:35:00.914: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename endpointslice 10/31/23 10:35:00.915
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:35:01.09
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:35:01.226
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] EndpointSlice
      test/e2e/network/endpointslice.go:52
    [It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
      test/e2e/network/endpointslice.go:102
    [AfterEach] [sig-network] EndpointSlice
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:35:01.883: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] EndpointSlice
      tear down framework | framework.go:193
    STEP: Destroying namespace "endpointslice-4926" for this suite. 10/31/23 10:35:01.94
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:35:02.047
Oct 31 10:35:02.047: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename cronjob 10/31/23 10:35:02.048
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:35:02.185
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:35:02.367
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124
STEP: Creating a ForbidConcurrent cronjob 10/31/23 10:35:02.424
STEP: Ensuring a job is scheduled 10/31/23 10:35:02.479
STEP: Ensuring exactly one is scheduled 10/31/23 10:36:00.491
STEP: Ensuring exactly one running job exists by listing jobs explicitly 10/31/23 10:36:00.548
STEP: Ensuring no more jobs are scheduled 10/31/23 10:36:00.597
STEP: Removing cronjob 10/31/23 10:41:00.666
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:00.764: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-4704" for this suite. 10/31/23 10:41:00.793
------------------------------
â€¢ [SLOW TEST] [358.809 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/apps/cronjob.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:35:02.047
    Oct 31 10:35:02.047: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename cronjob 10/31/23 10:35:02.048
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:35:02.185
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:35:02.367
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
      test/e2e/apps/cronjob.go:124
    STEP: Creating a ForbidConcurrent cronjob 10/31/23 10:35:02.424
    STEP: Ensuring a job is scheduled 10/31/23 10:35:02.479
    STEP: Ensuring exactly one is scheduled 10/31/23 10:36:00.491
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 10/31/23 10:36:00.548
    STEP: Ensuring no more jobs are scheduled 10/31/23 10:36:00.597
    STEP: Removing cronjob 10/31/23 10:41:00.666
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:00.764: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-4704" for this suite. 10/31/23 10:41:00.793
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
[BeforeEach] [sig-storage] Projected configMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:00.861
Oct 31 10:41:00.862: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 10:41:00.863
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:01.074
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:01.206
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375
STEP: Creating configMap with name projected-configmap-test-volume-ac0c739c-8333-494b-944d-8617405a31fc 10/31/23 10:41:01.301
STEP: Creating a pod to test consume configMaps 10/31/23 10:41:01.392
Oct 31 10:41:01.464: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8" in namespace "projected-1791" to be "Succeeded or Failed"
Oct 31 10:41:01.492: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8": Phase="Pending", Reason="", readiness=false. Elapsed: 28.452091ms
Oct 31 10:41:03.501: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8": Phase="Running", Reason="", readiness=true. Elapsed: 2.037225676s
Oct 31 10:41:05.500: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8": Phase="Running", Reason="", readiness=false. Elapsed: 4.036065214s
Oct 31 10:41:07.501: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.037142261s
STEP: Saw pod success 10/31/23 10:41:07.501
Oct 31 10:41:07.501: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8" satisfied condition "Succeeded or Failed"
Oct 31 10:41:07.597: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8 container projected-configmap-volume-test: <nil>
STEP: delete the pod 10/31/23 10:41:07.847
Oct 31 10:41:07.915: INFO: Waiting for pod pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8 to disappear
Oct 31 10:41:07.965: INFO: Pod pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:07.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected configMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected configMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected configMap
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1791" for this suite. 10/31/23 10:41:08.027
------------------------------
â€¢ [SLOW TEST] [7.222 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_configmap.go:375

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected configMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:00.861
    Oct 31 10:41:00.862: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 10:41:00.863
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:01.074
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:01.206
    [BeforeEach] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_configmap.go:375
    STEP: Creating configMap with name projected-configmap-test-volume-ac0c739c-8333-494b-944d-8617405a31fc 10/31/23 10:41:01.301
    STEP: Creating a pod to test consume configMaps 10/31/23 10:41:01.392
    Oct 31 10:41:01.464: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8" in namespace "projected-1791" to be "Succeeded or Failed"
    Oct 31 10:41:01.492: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8": Phase="Pending", Reason="", readiness=false. Elapsed: 28.452091ms
    Oct 31 10:41:03.501: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8": Phase="Running", Reason="", readiness=true. Elapsed: 2.037225676s
    Oct 31 10:41:05.500: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8": Phase="Running", Reason="", readiness=false. Elapsed: 4.036065214s
    Oct 31 10:41:07.501: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.037142261s
    STEP: Saw pod success 10/31/23 10:41:07.501
    Oct 31 10:41:07.501: INFO: Pod "pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8" satisfied condition "Succeeded or Failed"
    Oct 31 10:41:07.597: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8 container projected-configmap-volume-test: <nil>
    STEP: delete the pod 10/31/23 10:41:07.847
    Oct 31 10:41:07.915: INFO: Waiting for pod pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8 to disappear
    Oct 31 10:41:07.965: INFO: Pod pod-projected-configmaps-dbbb6552-2a25-4b6f-be11-6760278f19d8 no longer exists
    [AfterEach] [sig-storage] Projected configMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:07.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected configMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1791" for this suite. 10/31/23 10:41:08.027
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[BeforeEach] [sig-node] Kubelet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:08.084
Oct 31 10:41:08.084: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubelet-test 10/31/23 10:41:08.085
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:08.28
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:08.459
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:41
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:85
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet.go:135
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:08.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Kubelet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Kubelet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Kubelet
  tear down framework | framework.go:193
STEP: Destroying namespace "kubelet-test-7892" for this suite. 10/31/23 10:41:08.696
------------------------------
â€¢ [0.668 seconds]
[sig-node] Kubelet
test/e2e/common/node/framework.go:23
  when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:82
    should be possible to delete [NodeConformance] [Conformance]
    test/e2e/common/node/kubelet.go:135

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Kubelet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:08.084
    Oct 31 10:41:08.084: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubelet-test 10/31/23 10:41:08.085
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:08.28
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:08.459
    [BeforeEach] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Kubelet
      test/e2e/common/node/kubelet.go:41
    [BeforeEach] when scheduling a busybox command that always fails in a pod
      test/e2e/common/node/kubelet.go:85
    [It] should be possible to delete [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet.go:135
    [AfterEach] [sig-node] Kubelet
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:08.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Kubelet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Kubelet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Kubelet
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubelet-test-7892" for this suite. 10/31/23 10:41:08.696
  << End Captured GinkgoWriter Output
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:08.754
Oct 31 10:41:08.754: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename deployment 10/31/23 10:41:08.756
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:08.864
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:08.992
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122
Oct 31 10:41:09.200: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running 10/31/23 10:41:09.2
Oct 31 10:41:09.200: INFO: Waiting up to 5m0s for pod "test-cleanup-controller-7rvlt" in namespace "deployment-8092" to be "running"
Oct 31 10:41:09.283: INFO: Pod "test-cleanup-controller-7rvlt": Phase="Pending", Reason="", readiness=false. Elapsed: 82.329283ms
Oct 31 10:41:11.291: INFO: Pod "test-cleanup-controller-7rvlt": Phase="Running", Reason="", readiness=true. Elapsed: 2.090454671s
Oct 31 10:41:11.291: INFO: Pod "test-cleanup-controller-7rvlt" satisfied condition "running"
Oct 31 10:41:11.291: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 10/31/23 10:41:11.501
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Oct 31 10:41:13.698: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-8092  e1e0da37-8441-43a4-833e-f43065b77d4a 40674 1 2023-10-31 10:41:11 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-10-31 10:41:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:41:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002f57dc8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-10-31 10:41:11 +0000 UTC,LastTransitionTime:2023-10-31 10:41:11 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-cleanup-deployment-7698ff6f6b" has successfully progressed.,LastUpdateTime:2023-10-31 10:41:13 +0000 UTC,LastTransitionTime:2023-10-31 10:41:11 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Oct 31 10:41:13.748: INFO: New ReplicaSet "test-cleanup-deployment-7698ff6f6b" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-7698ff6f6b  deployment-8092  5f1ec1c7-fbc2-4ed8-83c8-694c54ae6934 40664 1 2023-10-31 10:41:11 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment e1e0da37-8441-43a4-833e-f43065b77d4a 0xc0050d41a7 0xc0050d41a8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:41:11 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e1e0da37-8441-43a4-833e-f43065b77d4a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:41:13 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 7698ff6f6b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050d4258 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Oct 31 10:41:13.797: INFO: Pod "test-cleanup-deployment-7698ff6f6b-mjh5h" is available:
&Pod{ObjectMeta:{test-cleanup-deployment-7698ff6f6b-mjh5h test-cleanup-deployment-7698ff6f6b- deployment-8092  68089b4f-976d-4141-abd9-f97c1de06f6f 40663 0 2023-10-31 10:41:11 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [{apps/v1 ReplicaSet test-cleanup-deployment-7698ff6f6b 5f1ec1c7-fbc2-4ed8-83c8-694c54ae6934 0xc0050d45e7 0xc0050d45e8}] [] [{kube-controller-manager Update v1 2023-10-31 10:41:11 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5f1ec1c7-fbc2-4ed8-83c8-694c54ae6934\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:41:13 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.57\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ldhdb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ldhdb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:41:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:41:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:41:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:41:11 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.57,StartTime:2023-10-31 10:41:11 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:41:12 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://e17bb0c3e104ddf8035153791b20ed3c48b140b23272d70feec124150c1a2998,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.57,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:13.797: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-8092" for this suite. 10/31/23 10:41:13.891
------------------------------
â€¢ [SLOW TEST] [5.151 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/apps/deployment.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:08.754
    Oct 31 10:41:08.754: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename deployment 10/31/23 10:41:08.756
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:08.864
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:08.992
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] deployment should delete old replica sets [Conformance]
      test/e2e/apps/deployment.go:122
    Oct 31 10:41:09.200: INFO: Pod name cleanup-pod: Found 1 pods out of 1
    STEP: ensuring each pod is running 10/31/23 10:41:09.2
    Oct 31 10:41:09.200: INFO: Waiting up to 5m0s for pod "test-cleanup-controller-7rvlt" in namespace "deployment-8092" to be "running"
    Oct 31 10:41:09.283: INFO: Pod "test-cleanup-controller-7rvlt": Phase="Pending", Reason="", readiness=false. Elapsed: 82.329283ms
    Oct 31 10:41:11.291: INFO: Pod "test-cleanup-controller-7rvlt": Phase="Running", Reason="", readiness=true. Elapsed: 2.090454671s
    Oct 31 10:41:11.291: INFO: Pod "test-cleanup-controller-7rvlt" satisfied condition "running"
    Oct 31 10:41:11.291: INFO: Creating deployment test-cleanup-deployment
    STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up 10/31/23 10:41:11.501
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Oct 31 10:41:13.698: INFO: Deployment "test-cleanup-deployment":
    &Deployment{ObjectMeta:{test-cleanup-deployment  deployment-8092  e1e0da37-8441-43a4-833e-f43065b77d4a 40674 1 2023-10-31 10:41:11 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[deployment.kubernetes.io/revision:1] [] [] [{e2e.test Update apps/v1 2023-10-31 10:41:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:41:13 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002f57dc8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2023-10-31 10:41:11 +0000 UTC,LastTransitionTime:2023-10-31 10:41:11 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-cleanup-deployment-7698ff6f6b" has successfully progressed.,LastUpdateTime:2023-10-31 10:41:13 +0000 UTC,LastTransitionTime:2023-10-31 10:41:11 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

    Oct 31 10:41:13.748: INFO: New ReplicaSet "test-cleanup-deployment-7698ff6f6b" of Deployment "test-cleanup-deployment":
    &ReplicaSet{ObjectMeta:{test-cleanup-deployment-7698ff6f6b  deployment-8092  5f1ec1c7-fbc2-4ed8-83c8-694c54ae6934 40664 1 2023-10-31 10:41:11 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment e1e0da37-8441-43a4-833e-f43065b77d4a 0xc0050d41a7 0xc0050d41a8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:41:11 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e1e0da37-8441-43a4-833e-f43065b77d4a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:41:13 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 7698ff6f6b,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0050d4258 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 10:41:13.797: INFO: Pod "test-cleanup-deployment-7698ff6f6b-mjh5h" is available:
    &Pod{ObjectMeta:{test-cleanup-deployment-7698ff6f6b-mjh5h test-cleanup-deployment-7698ff6f6b- deployment-8092  68089b4f-976d-4141-abd9-f97c1de06f6f 40663 0 2023-10-31 10:41:11 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:7698ff6f6b] map[] [{apps/v1 ReplicaSet test-cleanup-deployment-7698ff6f6b 5f1ec1c7-fbc2-4ed8-83c8-694c54ae6934 0xc0050d45e7 0xc0050d45e8}] [] [{kube-controller-manager Update v1 2023-10-31 10:41:11 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5f1ec1c7-fbc2-4ed8-83c8-694c54ae6934\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:41:13 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.200.1.57\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ldhdb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ldhdb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:41:11 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:41:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:41:13 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:41:11 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.137,PodIP:10.200.1.57,StartTime:2023-10-31 10:41:11 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2023-10-31 10:41:12 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:registry.k8s.io/e2e-test-images/agnhost:2.43,ImageID:registry.k8s.io/e2e-test-images/agnhost@sha256:16bbf38c463a4223d8cfe4da12bc61010b082a79b4bb003e2d3ba3ece5dd5f9e,ContainerID:containerd://e17bb0c3e104ddf8035153791b20ed3c48b140b23272d70feec124150c1a2998,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:10.200.1.57,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:13.797: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-8092" for this suite. 10/31/23 10:41:13.891
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:13.909
Oct 31 10:41:13.909: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 10:41:13.91
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:14.15
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:14.258
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219
STEP: fetching services 10/31/23 10:41:14.352
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:14.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-4005" for this suite. 10/31/23 10:41:14.464
------------------------------
â€¢ [0.612 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should find a service from listing all namespaces [Conformance]
  test/e2e/network/service.go:3219

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:13.909
    Oct 31 10:41:13.909: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 10:41:13.91
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:14.15
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:14.258
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should find a service from listing all namespaces [Conformance]
      test/e2e/network/service.go:3219
    STEP: fetching services 10/31/23 10:41:14.352
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:14.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-4005" for this suite. 10/31/23 10:41:14.464
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:14.523
Oct 31 10:41:14.523: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 10:41:14.525
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:14.737
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:14.827
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:15.612: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-7747" for this suite. 10/31/23 10:41:15.621
------------------------------
â€¢ [1.130 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/common/storage/configmap_volume.go:504

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:14.523
    Oct 31 10:41:14.523: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 10:41:14.525
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:14.737
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:14.827
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be immutable if `immutable` field is set [Conformance]
      test/e2e/common/storage/configmap_volume.go:504
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:15.612: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-7747" for this suite. 10/31/23 10:41:15.621
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-api-machinery] Watchers
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
[BeforeEach] [sig-api-machinery] Watchers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:15.656
Oct 31 10:41:15.657: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename watch 10/31/23 10:41:15.659
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:15.807
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:15.981
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:31
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257
STEP: creating a watch on configmaps with a certain label 10/31/23 10:41:16.061
STEP: creating a new configmap 10/31/23 10:41:16.149
STEP: modifying the configmap once 10/31/23 10:41:16.238
STEP: changing the label value of the configmap 10/31/23 10:41:16.43
STEP: Expecting to observe a delete notification for the watched object 10/31/23 10:41:16.614
Oct 31 10:41:16.614: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40720 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 10:41:16.614: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40721 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 10:41:16.614: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40722 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time 10/31/23 10:41:16.614
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 10/31/23 10:41:16.758
STEP: changing the label value of the configmap back 10/31/23 10:41:26.759
STEP: modifying the configmap a third time 10/31/23 10:41:26.88
STEP: deleting the configmap 10/31/23 10:41:27.06
STEP: Expecting to observe an add notification for the watched object when the label value was restored 10/31/23 10:41:27.15
Oct 31 10:41:27.150: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40790 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 10:41:27.150: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40791 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Oct 31 10:41:27.150: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40792 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:27.151: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Watchers
  tear down framework | framework.go:193
STEP: Destroying namespace "watch-4646" for this suite. 10/31/23 10:41:27.214
------------------------------
â€¢ [SLOW TEST] [11.572 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/apimachinery/watch.go:257

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Watchers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:15.656
    Oct 31 10:41:15.657: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename watch 10/31/23 10:41:15.659
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:15.807
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:15.981
    [BeforeEach] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:31
    [It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
      test/e2e/apimachinery/watch.go:257
    STEP: creating a watch on configmaps with a certain label 10/31/23 10:41:16.061
    STEP: creating a new configmap 10/31/23 10:41:16.149
    STEP: modifying the configmap once 10/31/23 10:41:16.238
    STEP: changing the label value of the configmap 10/31/23 10:41:16.43
    STEP: Expecting to observe a delete notification for the watched object 10/31/23 10:41:16.614
    Oct 31 10:41:16.614: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40720 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:16 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 10:41:16.614: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40721 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 10:41:16.614: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40722 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
    STEP: modifying the configmap a second time 10/31/23 10:41:16.614
    STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements 10/31/23 10:41:16.758
    STEP: changing the label value of the configmap back 10/31/23 10:41:26.759
    STEP: modifying the configmap a third time 10/31/23 10:41:26.88
    STEP: deleting the configmap 10/31/23 10:41:27.06
    STEP: Expecting to observe an add notification for the watched object when the label value was restored 10/31/23 10:41:27.15
    Oct 31 10:41:27.150: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40790 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 10:41:27.150: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40791 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    Oct 31 10:41:27.150: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4646  fad6c24b-8d52-421f-8af4-152923287803 40792 0 2023-10-31 10:41:16 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-10-31 10:41:27 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
    [AfterEach] [sig-api-machinery] Watchers
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:27.151: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Watchers
      tear down framework | framework.go:193
    STEP: Destroying namespace "watch-4646" for this suite. 10/31/23 10:41:27.214
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:27.229
Oct 31 10:41:27.229: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 10:41:27.231
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:27.423
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:27.565
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97
STEP: Creating a pod to test emptydir 0644 on tmpfs 10/31/23 10:41:27.707
Oct 31 10:41:27.721: INFO: Waiting up to 5m0s for pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5" in namespace "emptydir-7403" to be "Succeeded or Failed"
Oct 31 10:41:27.739: INFO: Pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.047792ms
Oct 31 10:41:29.748: INFO: Pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027100019s
Oct 31 10:41:31.749: INFO: Pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027806317s
STEP: Saw pod success 10/31/23 10:41:31.749
Oct 31 10:41:31.749: INFO: Pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5" satisfied condition "Succeeded or Failed"
Oct 31 10:41:31.798: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5 container test-container: <nil>
STEP: delete the pod 10/31/23 10:41:32.15
Oct 31 10:41:32.227: INFO: Waiting for pod pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5 to disappear
Oct 31 10:41:32.322: INFO: Pod pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:32.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-7403" for this suite. 10/31/23 10:41:32.378
------------------------------
â€¢ [SLOW TEST] [5.208 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:97

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:27.229
    Oct 31 10:41:27.229: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 10:41:27.231
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:27.423
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:27.565
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:97
    STEP: Creating a pod to test emptydir 0644 on tmpfs 10/31/23 10:41:27.707
    Oct 31 10:41:27.721: INFO: Waiting up to 5m0s for pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5" in namespace "emptydir-7403" to be "Succeeded or Failed"
    Oct 31 10:41:27.739: INFO: Pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5": Phase="Pending", Reason="", readiness=false. Elapsed: 18.047792ms
    Oct 31 10:41:29.748: INFO: Pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.027100019s
    Oct 31 10:41:31.749: INFO: Pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027806317s
    STEP: Saw pod success 10/31/23 10:41:31.749
    Oct 31 10:41:31.749: INFO: Pod "pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5" satisfied condition "Succeeded or Failed"
    Oct 31 10:41:31.798: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5 container test-container: <nil>
    STEP: delete the pod 10/31/23 10:41:32.15
    Oct 31 10:41:32.227: INFO: Waiting for pod pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5 to disappear
    Oct 31 10:41:32.322: INFO: Pod pod-6bccdd02-0b03-46c0-ad41-fcad1c6da6e5 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:32.322: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-7403" for this suite. 10/31/23 10:41:32.378
  << End Captured GinkgoWriter Output
------------------------------
SS
------------------------------
[sig-node] PodTemplates
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
[BeforeEach] [sig-node] PodTemplates
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:32.437
Oct 31 10:41:32.437: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename podtemplate 10/31/23 10:41:32.439
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:32.65
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:32.751
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:31
[It] should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122
STEP: Create set of pod templates 10/31/23 10:41:32.847
Oct 31 10:41:32.936: INFO: created test-podtemplate-1
Oct 31 10:41:33.028: INFO: created test-podtemplate-2
Oct 31 10:41:33.116: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace 10/31/23 10:41:33.116
STEP: delete collection of pod templates 10/31/23 10:41:33.172
Oct 31 10:41:33.172: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity 10/31/23 10:41:33.237
Oct 31 10:41:33.237: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:33.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] PodTemplates
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] PodTemplates
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] PodTemplates
  tear down framework | framework.go:193
STEP: Destroying namespace "podtemplate-6440" for this suite. 10/31/23 10:41:33.388
------------------------------
â€¢ [1.020 seconds]
[sig-node] PodTemplates
test/e2e/common/node/framework.go:23
  should delete a collection of pod templates [Conformance]
  test/e2e/common/node/podtemplates.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] PodTemplates
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:32.437
    Oct 31 10:41:32.437: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename podtemplate 10/31/23 10:41:32.439
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:32.65
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:32.751
    [BeforeEach] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:31
    [It] should delete a collection of pod templates [Conformance]
      test/e2e/common/node/podtemplates.go:122
    STEP: Create set of pod templates 10/31/23 10:41:32.847
    Oct 31 10:41:32.936: INFO: created test-podtemplate-1
    Oct 31 10:41:33.028: INFO: created test-podtemplate-2
    Oct 31 10:41:33.116: INFO: created test-podtemplate-3
    STEP: get a list of pod templates with a label in the current namespace 10/31/23 10:41:33.116
    STEP: delete collection of pod templates 10/31/23 10:41:33.172
    Oct 31 10:41:33.172: INFO: requesting DeleteCollection of pod templates
    STEP: check that the list of pod templates matches the requested quantity 10/31/23 10:41:33.237
    Oct 31 10:41:33.237: INFO: requesting list of pod templates to confirm quantity
    [AfterEach] [sig-node] PodTemplates
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:33.370: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] PodTemplates
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] PodTemplates
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] PodTemplates
      tear down framework | framework.go:193
    STEP: Destroying namespace "podtemplate-6440" for this suite. 10/31/23 10:41:33.388
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:33.461
Oct 31 10:41:33.461: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 10:41:33.462
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:33.728
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:33.847
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89
STEP: Creating secret with name secret-test-map-4cbaf017-60a8-40b3-9f71-77410568900f 10/31/23 10:41:33.988
STEP: Creating a pod to test consume secrets 10/31/23 10:41:34.036
Oct 31 10:41:34.099: INFO: Waiting up to 5m0s for pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f" in namespace "secrets-1340" to be "Succeeded or Failed"
Oct 31 10:41:34.111: INFO: Pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f": Phase="Pending", Reason="", readiness=false. Elapsed: 11.835452ms
Oct 31 10:41:36.117: INFO: Pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01810481s
Oct 31 10:41:38.167: INFO: Pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.067716176s
STEP: Saw pod success 10/31/23 10:41:38.167
Oct 31 10:41:38.167: INFO: Pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f" satisfied condition "Succeeded or Failed"
Oct 31 10:41:38.215: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f container secret-volume-test: <nil>
STEP: delete the pod 10/31/23 10:41:38.271
Oct 31 10:41:38.338: INFO: Waiting for pod pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f to disappear
Oct 31 10:41:38.389: INFO: Pod pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:38.389: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-1340" for this suite. 10/31/23 10:41:38.449
------------------------------
â€¢ [SLOW TEST] [5.073 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:33.461
    Oct 31 10:41:33.461: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 10:41:33.462
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:33.728
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:33.847
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:89
    STEP: Creating secret with name secret-test-map-4cbaf017-60a8-40b3-9f71-77410568900f 10/31/23 10:41:33.988
    STEP: Creating a pod to test consume secrets 10/31/23 10:41:34.036
    Oct 31 10:41:34.099: INFO: Waiting up to 5m0s for pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f" in namespace "secrets-1340" to be "Succeeded or Failed"
    Oct 31 10:41:34.111: INFO: Pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f": Phase="Pending", Reason="", readiness=false. Elapsed: 11.835452ms
    Oct 31 10:41:36.117: INFO: Pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01810481s
    Oct 31 10:41:38.167: INFO: Pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.067716176s
    STEP: Saw pod success 10/31/23 10:41:38.167
    Oct 31 10:41:38.167: INFO: Pod "pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f" satisfied condition "Succeeded or Failed"
    Oct 31 10:41:38.215: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f container secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 10:41:38.271
    Oct 31 10:41:38.338: INFO: Waiting for pod pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f to disappear
    Oct 31 10:41:38.389: INFO: Pod pod-secrets-3cb79068-d60f-477b-8b7d-29d20b57873f no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:38.389: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-1340" for this suite. 10/31/23 10:41:38.449
  << End Captured GinkgoWriter Output
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:38.535
Oct 31 10:41:38.535: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 10:41:38.536
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:38.648
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:38.842
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 10:41:39.06
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:41:39.371
STEP: Deploying the webhook pod 10/31/23 10:41:39.392
STEP: Wait for the deployment to be ready 10/31/23 10:41:39.459
Oct 31 10:41:39.710: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 41, 39, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 41, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 41, 39, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 41, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 10:41:41.717
STEP: Verifying the service has paired with the endpoint 10/31/23 10:41:41.785
Oct 31 10:41:42.787: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323
Oct 31 10:41:42.794: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3353-crds.webhook.example.com via the AdmissionRegistration API 10/31/23 10:41:47.993
STEP: Creating a custom resource while v1 is storage version 10/31/23 10:41:48.23
STEP: Patching Custom Resource Definition to set v2 as storage 10/31/23 10:41:50.658
STEP: Patching the custom resource while v2 is storage version 10/31/23 10:41:50.725
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:41:51.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-2130" for this suite. 10/31/23 10:41:51.614
STEP: Destroying namespace "webhook-2130-markers" for this suite. 10/31/23 10:41:51.673
------------------------------
â€¢ [SLOW TEST] [13.203 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/apimachinery/webhook.go:323

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:38.535
    Oct 31 10:41:38.535: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 10:41:38.536
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:38.648
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:38.842
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 10:41:39.06
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:41:39.371
    STEP: Deploying the webhook pod 10/31/23 10:41:39.392
    STEP: Wait for the deployment to be ready 10/31/23 10:41:39.459
    Oct 31 10:41:39.710: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 41, 39, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 41, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 41, 39, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 41, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 10:41:41.717
    STEP: Verifying the service has paired with the endpoint 10/31/23 10:41:41.785
    Oct 31 10:41:42.787: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with different stored version [Conformance]
      test/e2e/apimachinery/webhook.go:323
    Oct 31 10:41:42.794: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3353-crds.webhook.example.com via the AdmissionRegistration API 10/31/23 10:41:47.993
    STEP: Creating a custom resource while v1 is storage version 10/31/23 10:41:48.23
    STEP: Patching Custom Resource Definition to set v2 as storage 10/31/23 10:41:50.658
    STEP: Patching the custom resource while v2 is storage version 10/31/23 10:41:50.725
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:41:51.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-2130" for this suite. 10/31/23 10:41:51.614
    STEP: Destroying namespace "webhook-2130-markers" for this suite. 10/31/23 10:41:51.673
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:41:51.74
Oct 31 10:41:51.740: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 10:41:51.742
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:51.89
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:52.065
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 10:41:52.236
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:41:52.734
STEP: Deploying the webhook pod 10/31/23 10:41:52.782
STEP: Wait for the deployment to be ready 10/31/23 10:41:52.895
Oct 31 10:41:53.006: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 41, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 41, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 41, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 41, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 10:41:55.014
STEP: Verifying the service has paired with the endpoint 10/31/23 10:41:55.079
Oct 31 10:41:56.079: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341
Oct 31 10:41:56.130: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8660-crds.webhook.example.com via the AdmissionRegistration API 10/31/23 10:42:01.486
STEP: Creating a custom resource that should be mutated by the webhook 10/31/23 10:42:01.827
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:42:04.376: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5617" for this suite. 10/31/23 10:42:04.983
STEP: Destroying namespace "webhook-5617-markers" for this suite. 10/31/23 10:42:05.041
------------------------------
â€¢ [SLOW TEST] [13.346 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/apimachinery/webhook.go:341

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:41:51.74
    Oct 31 10:41:51.740: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 10:41:51.742
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:41:51.89
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:41:52.065
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 10:41:52.236
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:41:52.734
    STEP: Deploying the webhook pod 10/31/23 10:41:52.782
    STEP: Wait for the deployment to be ready 10/31/23 10:41:52.895
    Oct 31 10:41:53.006: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 41, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 41, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 41, 52, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 41, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 10:41:55.014
    STEP: Verifying the service has paired with the endpoint 10/31/23 10:41:55.079
    Oct 31 10:41:56.079: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate custom resource with pruning [Conformance]
      test/e2e/apimachinery/webhook.go:341
    Oct 31 10:41:56.130: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8660-crds.webhook.example.com via the AdmissionRegistration API 10/31/23 10:42:01.486
    STEP: Creating a custom resource that should be mutated by the webhook 10/31/23 10:42:01.827
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:42:04.376: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5617" for this suite. 10/31/23 10:42:04.983
    STEP: Destroying namespace "webhook-5617-markers" for this suite. 10/31/23 10:42:05.041
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] ConfigMap
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
[BeforeEach] [sig-node] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:42:05.088
Oct 31 10:42:05.088: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 10:42:05.089
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:42:05.281
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:42:05.424
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93
STEP: Creating configMap configmap-5697/configmap-test-de051511-5984-45f2-8767-6a5cb8ff8261 10/31/23 10:42:05.52
STEP: Creating a pod to test consume configMaps 10/31/23 10:42:05.62
Oct 31 10:42:05.690: INFO: Waiting up to 5m0s for pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb" in namespace "configmap-5697" to be "Succeeded or Failed"
Oct 31 10:42:05.777: INFO: Pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb": Phase="Pending", Reason="", readiness=false. Elapsed: 87.403026ms
Oct 31 10:42:07.785: INFO: Pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.095094718s
Oct 31 10:42:09.891: INFO: Pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.201026648s
STEP: Saw pod success 10/31/23 10:42:09.891
Oct 31 10:42:09.891: INFO: Pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb" satisfied condition "Succeeded or Failed"
Oct 31 10:42:09.981: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb container env-test: <nil>
STEP: delete the pod 10/31/23 10:42:10.079
Oct 31 10:42:10.235: INFO: Waiting for pod pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb to disappear
Oct 31 10:42:10.326: INFO: Pod pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 10:42:10.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-5697" for this suite. 10/31/23 10:42:10.379
------------------------------
â€¢ [SLOW TEST] [5.337 seconds]
[sig-node] ConfigMap
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/common/node/configmap.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:42:05.088
    Oct 31 10:42:05.088: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 10:42:05.089
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:42:05.281
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:42:05.424
    [BeforeEach] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable via the environment [NodeConformance] [Conformance]
      test/e2e/common/node/configmap.go:93
    STEP: Creating configMap configmap-5697/configmap-test-de051511-5984-45f2-8767-6a5cb8ff8261 10/31/23 10:42:05.52
    STEP: Creating a pod to test consume configMaps 10/31/23 10:42:05.62
    Oct 31 10:42:05.690: INFO: Waiting up to 5m0s for pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb" in namespace "configmap-5697" to be "Succeeded or Failed"
    Oct 31 10:42:05.777: INFO: Pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb": Phase="Pending", Reason="", readiness=false. Elapsed: 87.403026ms
    Oct 31 10:42:07.785: INFO: Pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.095094718s
    Oct 31 10:42:09.891: INFO: Pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.201026648s
    STEP: Saw pod success 10/31/23 10:42:09.891
    Oct 31 10:42:09.891: INFO: Pod "pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb" satisfied condition "Succeeded or Failed"
    Oct 31 10:42:09.981: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb container env-test: <nil>
    STEP: delete the pod 10/31/23 10:42:10.079
    Oct 31 10:42:10.235: INFO: Waiting for pod pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb to disappear
    Oct 31 10:42:10.326: INFO: Pod pod-configmaps-cfd8f42f-75f7-4e08-912d-ee379bcbbfdb no longer exists
    [AfterEach] [sig-node] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:42:10.326: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-5697" for this suite. 10/31/23 10:42:10.379
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
[BeforeEach] [sig-node] Probing container
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:42:10.433
Oct 31 10:42:10.433: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename container-probe 10/31/23 10:42:10.434
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:42:10.593
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:42:10.728
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:63
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215
STEP: Creating pod test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91 in namespace container-probe-5751 10/31/23 10:42:10.825
Oct 31 10:42:10.866: INFO: Waiting up to 5m0s for pod "test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91" in namespace "container-probe-5751" to be "not pending"
Oct 31 10:42:10.881: INFO: Pod "test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91": Phase="Pending", Reason="", readiness=false. Elapsed: 15.385542ms
Oct 31 10:42:12.889: INFO: Pod "test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91": Phase="Running", Reason="", readiness=true. Elapsed: 2.023775401s
Oct 31 10:42:12.890: INFO: Pod "test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91" satisfied condition "not pending"
Oct 31 10:42:12.890: INFO: Started pod test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91 in namespace container-probe-5751
STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 10:42:12.89
Oct 31 10:42:12.989: INFO: Initial restart count of pod test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91 is 0
STEP: deleting the pod 10/31/23 10:46:13.371
[AfterEach] [sig-node] Probing container
  test/e2e/framework/node/init/init.go:32
Oct 31 10:46:13.394: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Probing container
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Probing container
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Probing container
  tear down framework | framework.go:193
STEP: Destroying namespace "container-probe-5751" for this suite. 10/31/23 10:46:13.443
------------------------------
â€¢ [SLOW TEST] [243.066 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/common/node/container_probe.go:215

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Probing container
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:42:10.433
    Oct 31 10:42:10.433: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename container-probe 10/31/23 10:42:10.434
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:42:10.593
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:42:10.728
    [BeforeEach] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Probing container
      test/e2e/common/node/container_probe.go:63
    [It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
      test/e2e/common/node/container_probe.go:215
    STEP: Creating pod test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91 in namespace container-probe-5751 10/31/23 10:42:10.825
    Oct 31 10:42:10.866: INFO: Waiting up to 5m0s for pod "test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91" in namespace "container-probe-5751" to be "not pending"
    Oct 31 10:42:10.881: INFO: Pod "test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91": Phase="Pending", Reason="", readiness=false. Elapsed: 15.385542ms
    Oct 31 10:42:12.889: INFO: Pod "test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91": Phase="Running", Reason="", readiness=true. Elapsed: 2.023775401s
    Oct 31 10:42:12.890: INFO: Pod "test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91" satisfied condition "not pending"
    Oct 31 10:42:12.890: INFO: Started pod test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91 in namespace container-probe-5751
    STEP: checking the pod's current state and verifying that restartCount is present 10/31/23 10:42:12.89
    Oct 31 10:42:12.989: INFO: Initial restart count of pod test-webserver-7fffa4e6-3b27-433b-baf5-29e64d5f0c91 is 0
    STEP: deleting the pod 10/31/23 10:46:13.371
    [AfterEach] [sig-node] Probing container
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:46:13.394: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Probing container
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Probing container
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Probing container
      tear down framework | framework.go:193
    STEP: Destroying namespace "container-probe-5751" for this suite. 10/31/23 10:46:13.443
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:46:13.508
Oct 31 10:46:13.508: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pod-network-test 10/31/23 10:46:13.509
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:46:13.691
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:46:13.826
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:105
STEP: Performing setup for networking test in namespace pod-network-test-8262 10/31/23 10:46:13.998
STEP: creating a selector 10/31/23 10:46:13.998
STEP: Creating the service pods in kubernetes 10/31/23 10:46:13.998
Oct 31 10:46:13.998: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Oct 31 10:46:14.157: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-8262" to be "running and ready"
Oct 31 10:46:14.171: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 14.104755ms
Oct 31 10:46:14.171: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:46:16.179: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.02155591s
Oct 31 10:46:16.179: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:18.205: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.047431739s
Oct 31 10:46:18.205: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:20.204: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.04696813s
Oct 31 10:46:20.204: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:22.180: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.022549657s
Oct 31 10:46:22.180: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:24.187: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.03013002s
Oct 31 10:46:24.187: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:26.179: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.022213712s
Oct 31 10:46:26.180: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Oct 31 10:46:26.180: INFO: Pod "netserver-0" satisfied condition "running and ready"
Oct 31 10:46:26.229: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-8262" to be "running and ready"
Oct 31 10:46:26.322: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 92.432721ms
Oct 31 10:46:26.322: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Oct 31 10:46:26.322: INFO: Pod "netserver-1" satisfied condition "running and ready"
Oct 31 10:46:26.370: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-8262" to be "running and ready"
Oct 31 10:46:26.422: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 51.216042ms
Oct 31 10:46:26.422: INFO: The phase of Pod netserver-2 is Running (Ready = true)
Oct 31 10:46:26.422: INFO: Pod "netserver-2" satisfied condition "running and ready"
STEP: Creating test pods 10/31/23 10:46:26.477
Oct 31 10:46:26.586: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-8262" to be "running"
Oct 31 10:46:26.606: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 19.59165ms
Oct 31 10:46:28.643: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.057193756s
Oct 31 10:46:28.644: INFO: Pod "test-container-pod" satisfied condition "running"
Oct 31 10:46:28.695: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-8262" to be "running"
Oct 31 10:46:28.745: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 49.778055ms
Oct 31 10:46:28.745: INFO: Pod "host-test-container-pod" satisfied condition "running"
Oct 31 10:46:28.798: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Oct 31 10:46:28.798: INFO: Going to poll 10.200.1.64 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Oct 31 10:46:28.847: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.1.64:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8262 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:28.847: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:28.848: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:28.848: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-8262/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.1.64%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Oct 31 10:46:29.703: INFO: Found all 1 expected endpoints: [netserver-0]
Oct 31 10:46:29.703: INFO: Going to poll 10.200.2.216 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Oct 31 10:46:29.753: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.2.216:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8262 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:29.753: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:29.755: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:29.755: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-8262/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.2.216%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Oct 31 10:46:30.676: INFO: Found all 1 expected endpoints: [netserver-1]
Oct 31 10:46:30.676: INFO: Going to poll 10.200.0.123 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Oct 31 10:46:30.726: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.0.123:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8262 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:30.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:30.727: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:30.728: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-8262/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.0.123%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Oct 31 10:46:31.414: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Oct 31 10:46:31.414: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-8262" for this suite. 10/31/23 10:46:31.427
------------------------------
â€¢ [SLOW TEST] [18.010 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:105

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:46:13.508
    Oct 31 10:46:13.508: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pod-network-test 10/31/23 10:46:13.509
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:46:13.691
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:46:13.826
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:105
    STEP: Performing setup for networking test in namespace pod-network-test-8262 10/31/23 10:46:13.998
    STEP: creating a selector 10/31/23 10:46:13.998
    STEP: Creating the service pods in kubernetes 10/31/23 10:46:13.998
    Oct 31 10:46:13.998: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Oct 31 10:46:14.157: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-8262" to be "running and ready"
    Oct 31 10:46:14.171: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 14.104755ms
    Oct 31 10:46:14.171: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:46:16.179: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.02155591s
    Oct 31 10:46:16.179: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:18.205: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.047431739s
    Oct 31 10:46:18.205: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:20.204: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.04696813s
    Oct 31 10:46:20.204: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:22.180: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.022549657s
    Oct 31 10:46:22.180: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:24.187: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.03013002s
    Oct 31 10:46:24.187: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:26.179: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.022213712s
    Oct 31 10:46:26.180: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Oct 31 10:46:26.180: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Oct 31 10:46:26.229: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-8262" to be "running and ready"
    Oct 31 10:46:26.322: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 92.432721ms
    Oct 31 10:46:26.322: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Oct 31 10:46:26.322: INFO: Pod "netserver-1" satisfied condition "running and ready"
    Oct 31 10:46:26.370: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-8262" to be "running and ready"
    Oct 31 10:46:26.422: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 51.216042ms
    Oct 31 10:46:26.422: INFO: The phase of Pod netserver-2 is Running (Ready = true)
    Oct 31 10:46:26.422: INFO: Pod "netserver-2" satisfied condition "running and ready"
    STEP: Creating test pods 10/31/23 10:46:26.477
    Oct 31 10:46:26.586: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-8262" to be "running"
    Oct 31 10:46:26.606: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 19.59165ms
    Oct 31 10:46:28.643: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.057193756s
    Oct 31 10:46:28.644: INFO: Pod "test-container-pod" satisfied condition "running"
    Oct 31 10:46:28.695: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-8262" to be "running"
    Oct 31 10:46:28.745: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 49.778055ms
    Oct 31 10:46:28.745: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Oct 31 10:46:28.798: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
    Oct 31 10:46:28.798: INFO: Going to poll 10.200.1.64 on port 8083 at least 0 times, with a maximum of 39 tries before failing
    Oct 31 10:46:28.847: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.1.64:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8262 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:28.847: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:28.848: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:28.848: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-8262/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.1.64%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Oct 31 10:46:29.703: INFO: Found all 1 expected endpoints: [netserver-0]
    Oct 31 10:46:29.703: INFO: Going to poll 10.200.2.216 on port 8083 at least 0 times, with a maximum of 39 tries before failing
    Oct 31 10:46:29.753: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.2.216:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8262 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:29.753: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:29.755: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:29.755: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-8262/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.2.216%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Oct 31 10:46:30.676: INFO: Found all 1 expected endpoints: [netserver-1]
    Oct 31 10:46:30.676: INFO: Going to poll 10.200.0.123 on port 8083 at least 0 times, with a maximum of 39 tries before failing
    Oct 31 10:46:30.726: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.200.0.123:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8262 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:30.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:30.727: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:30.728: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-8262/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.200.0.123%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Oct 31 10:46:31.414: INFO: Found all 1 expected endpoints: [netserver-2]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:46:31.414: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-8262" for this suite. 10/31/23 10:46:31.427
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-node] KubeletManagedEtcHosts
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:46:31.518
Oct 31 10:46:31.518: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 10/31/23 10:46:31.52
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:46:31.71
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:46:31.803
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:31
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63
STEP: Setting up the test 10/31/23 10:46:31.942
STEP: Creating hostNetwork=false pod 10/31/23 10:46:31.942
Oct 31 10:46:31.971: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-5635" to be "running and ready"
Oct 31 10:46:31.989: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 18.200286ms
Oct 31 10:46:31.989: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:46:34.003: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.032405405s
Oct 31 10:46:34.003: INFO: The phase of Pod test-pod is Running (Ready = true)
Oct 31 10:46:34.003: INFO: Pod "test-pod" satisfied condition "running and ready"
STEP: Creating hostNetwork=true pod 10/31/23 10:46:34.059
Oct 31 10:46:34.114: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-5635" to be "running and ready"
Oct 31 10:46:34.172: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 57.890693ms
Oct 31 10:46:34.172: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:46:36.181: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.066984423s
Oct 31 10:46:36.181: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
Oct 31 10:46:36.181: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
STEP: Running the test 10/31/23 10:46:36.229
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 10/31/23 10:46:36.229
Oct 31 10:46:36.229: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:36.229: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:36.230: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:36.230: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Oct 31 10:46:37.013: INFO: Exec stderr: ""
Oct 31 10:46:37.013: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:37.013: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:37.014: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:37.014: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Oct 31 10:46:37.515: INFO: Exec stderr: ""
Oct 31 10:46:37.515: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:37.515: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:37.516: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:37.516: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Oct 31 10:46:38.074: INFO: Exec stderr: ""
Oct 31 10:46:38.074: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:38.075: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:38.076: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:38.076: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Oct 31 10:46:38.738: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 10/31/23 10:46:38.738
Oct 31 10:46:38.738: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:38.739: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:38.740: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:38.741: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Oct 31 10:46:39.443: INFO: Exec stderr: ""
Oct 31 10:46:39.443: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:39.444: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:39.445: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:39.445: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Oct 31 10:46:40.377: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 10/31/23 10:46:40.377
Oct 31 10:46:40.378: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:40.378: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:40.379: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:40.379: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Oct 31 10:46:41.215: INFO: Exec stderr: ""
Oct 31 10:46:41.215: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:41.215: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:41.216: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:41.216: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Oct 31 10:46:41.852: INFO: Exec stderr: ""
Oct 31 10:46:41.852: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:41.852: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:41.853: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:41.853: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Oct 31 10:46:42.478: INFO: Exec stderr: ""
Oct 31 10:46:42.478: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:42.478: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:42.480: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:42.480: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Oct 31 10:46:43.182: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/node/init/init.go:32
Oct 31 10:46:43.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
  tear down framework | framework.go:193
STEP: Destroying namespace "e2e-kubelet-etc-hosts-5635" for this suite. 10/31/23 10:46:43.194
------------------------------
â€¢ [SLOW TEST] [11.719 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/node/kubelet_etc_hosts.go:63

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:46:31.518
    Oct 31 10:46:31.518: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts 10/31/23 10:46:31.52
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:46:31.71
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:46:31.803
    [BeforeEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:31
    [It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/node/kubelet_etc_hosts.go:63
    STEP: Setting up the test 10/31/23 10:46:31.942
    STEP: Creating hostNetwork=false pod 10/31/23 10:46:31.942
    Oct 31 10:46:31.971: INFO: Waiting up to 5m0s for pod "test-pod" in namespace "e2e-kubelet-etc-hosts-5635" to be "running and ready"
    Oct 31 10:46:31.989: INFO: Pod "test-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 18.200286ms
    Oct 31 10:46:31.989: INFO: The phase of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:46:34.003: INFO: Pod "test-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.032405405s
    Oct 31 10:46:34.003: INFO: The phase of Pod test-pod is Running (Ready = true)
    Oct 31 10:46:34.003: INFO: Pod "test-pod" satisfied condition "running and ready"
    STEP: Creating hostNetwork=true pod 10/31/23 10:46:34.059
    Oct 31 10:46:34.114: INFO: Waiting up to 5m0s for pod "test-host-network-pod" in namespace "e2e-kubelet-etc-hosts-5635" to be "running and ready"
    Oct 31 10:46:34.172: INFO: Pod "test-host-network-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 57.890693ms
    Oct 31 10:46:34.172: INFO: The phase of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:46:36.181: INFO: Pod "test-host-network-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.066984423s
    Oct 31 10:46:36.181: INFO: The phase of Pod test-host-network-pod is Running (Ready = true)
    Oct 31 10:46:36.181: INFO: Pod "test-host-network-pod" satisfied condition "running and ready"
    STEP: Running the test 10/31/23 10:46:36.229
    STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false 10/31/23 10:46:36.229
    Oct 31 10:46:36.229: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:36.229: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:36.230: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:36.230: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Oct 31 10:46:37.013: INFO: Exec stderr: ""
    Oct 31 10:46:37.013: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:37.013: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:37.014: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:37.014: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Oct 31 10:46:37.515: INFO: Exec stderr: ""
    Oct 31 10:46:37.515: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:37.515: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:37.516: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:37.516: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Oct 31 10:46:38.074: INFO: Exec stderr: ""
    Oct 31 10:46:38.074: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:38.075: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:38.076: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:38.076: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Oct 31 10:46:38.738: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount 10/31/23 10:46:38.738
    Oct 31 10:46:38.738: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:38.739: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:38.740: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:38.741: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Oct 31 10:46:39.443: INFO: Exec stderr: ""
    Oct 31 10:46:39.443: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:39.444: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:39.445: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:39.445: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
    Oct 31 10:46:40.377: INFO: Exec stderr: ""
    STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true 10/31/23 10:46:40.377
    Oct 31 10:46:40.378: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:40.378: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:40.379: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:40.379: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Oct 31 10:46:41.215: INFO: Exec stderr: ""
    Oct 31 10:46:41.215: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:41.215: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:41.216: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:41.216: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
    Oct 31 10:46:41.852: INFO: Exec stderr: ""
    Oct 31 10:46:41.852: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:41.852: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:41.853: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:41.853: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Oct 31 10:46:42.478: INFO: Exec stderr: ""
    Oct 31 10:46:42.478: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5635 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:42.478: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:42.480: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:42.480: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5635/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
    Oct 31 10:46:43.182: INFO: Exec stderr: ""
    [AfterEach] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:46:43.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] KubeletManagedEtcHosts
      tear down framework | framework.go:193
    STEP: Destroying namespace "e2e-kubelet-etc-hosts-5635" for this suite. 10/31/23 10:46:43.194
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:46:43.243
Oct 31 10:46:43.243: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pod-network-test 10/31/23 10:46:43.244
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:46:43.468
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:46:43.63
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:93
STEP: Performing setup for networking test in namespace pod-network-test-1633 10/31/23 10:46:43.751
STEP: creating a selector 10/31/23 10:46:43.751
STEP: Creating the service pods in kubernetes 10/31/23 10:46:43.751
Oct 31 10:46:43.751: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Oct 31 10:46:43.933: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-1633" to be "running and ready"
Oct 31 10:46:43.946: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 13.06785ms
Oct 31 10:46:43.946: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:46:45.956: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.022919239s
Oct 31 10:46:45.956: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:47.963: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.030290108s
Oct 31 10:46:47.964: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:49.958: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.025008983s
Oct 31 10:46:49.958: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:51.955: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.021556402s
Oct 31 10:46:51.955: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:53.958: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.025280196s
Oct 31 10:46:53.958: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:46:55.997: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.064401706s
Oct 31 10:46:55.997: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Oct 31 10:46:55.997: INFO: Pod "netserver-0" satisfied condition "running and ready"
Oct 31 10:46:56.048: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-1633" to be "running and ready"
Oct 31 10:46:56.105: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 56.546044ms
Oct 31 10:46:56.105: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Oct 31 10:46:56.105: INFO: Pod "netserver-1" satisfied condition "running and ready"
Oct 31 10:46:56.202: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-1633" to be "running and ready"
Oct 31 10:46:56.251: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 49.178858ms
Oct 31 10:46:56.251: INFO: The phase of Pod netserver-2 is Running (Ready = true)
Oct 31 10:46:56.252: INFO: Pod "netserver-2" satisfied condition "running and ready"
STEP: Creating test pods 10/31/23 10:46:56.301
Oct 31 10:46:56.358: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-1633" to be "running"
Oct 31 10:46:56.415: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 56.638454ms
Oct 31 10:46:58.423: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.064370872s
Oct 31 10:46:58.423: INFO: Pod "test-container-pod" satisfied condition "running"
Oct 31 10:46:58.471: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Oct 31 10:46:58.471: INFO: Breadth first check of 10.200.1.66 on host 10.20.4.137...
Oct 31 10:46:58.519: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.1.67:9080/dial?request=hostname&protocol=udp&host=10.200.1.66&port=8081&tries=1'] Namespace:pod-network-test-1633 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:58.519: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:58.520: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:58.521: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-1633/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.1.67%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.1.66%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Oct 31 10:46:59.099: INFO: Waiting for responses: map[]
Oct 31 10:46:59.099: INFO: reached 10.200.1.66 after 0/1 tries
Oct 31 10:46:59.099: INFO: Breadth first check of 10.200.2.218 on host 10.20.4.182...
Oct 31 10:46:59.147: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.1.67:9080/dial?request=hostname&protocol=udp&host=10.200.2.218&port=8081&tries=1'] Namespace:pod-network-test-1633 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:59.147: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:59.149: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:59.149: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-1633/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.1.67%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.2.218%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Oct 31 10:46:59.819: INFO: Waiting for responses: map[]
Oct 31 10:46:59.819: INFO: reached 10.200.2.218 after 0/1 tries
Oct 31 10:46:59.819: INFO: Breadth first check of 10.200.0.124 on host 10.20.4.183...
Oct 31 10:46:59.959: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.1.67:9080/dial?request=hostname&protocol=udp&host=10.200.0.124&port=8081&tries=1'] Namespace:pod-network-test-1633 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:46:59.959: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:46:59.960: INFO: ExecWithOptions: Clientset creation
Oct 31 10:46:59.960: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-1633/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.1.67%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.0.124%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Oct 31 10:47:00.779: INFO: Waiting for responses: map[]
Oct 31 10:47:00.780: INFO: reached 10.200.0.124 after 0/1 tries
Oct 31 10:47:00.780: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Oct 31 10:47:00.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-1633" for this suite. 10/31/23 10:47:00.832
------------------------------
â€¢ [SLOW TEST] [17.607 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:93

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:46:43.243
    Oct 31 10:46:43.243: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pod-network-test 10/31/23 10:46:43.244
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:46:43.468
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:46:43.63
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:93
    STEP: Performing setup for networking test in namespace pod-network-test-1633 10/31/23 10:46:43.751
    STEP: creating a selector 10/31/23 10:46:43.751
    STEP: Creating the service pods in kubernetes 10/31/23 10:46:43.751
    Oct 31 10:46:43.751: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Oct 31 10:46:43.933: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-1633" to be "running and ready"
    Oct 31 10:46:43.946: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 13.06785ms
    Oct 31 10:46:43.946: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:46:45.956: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.022919239s
    Oct 31 10:46:45.956: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:47.963: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.030290108s
    Oct 31 10:46:47.964: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:49.958: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.025008983s
    Oct 31 10:46:49.958: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:51.955: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.021556402s
    Oct 31 10:46:51.955: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:53.958: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.025280196s
    Oct 31 10:46:53.958: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:46:55.997: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 12.064401706s
    Oct 31 10:46:55.997: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Oct 31 10:46:55.997: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Oct 31 10:46:56.048: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-1633" to be "running and ready"
    Oct 31 10:46:56.105: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 56.546044ms
    Oct 31 10:46:56.105: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Oct 31 10:46:56.105: INFO: Pod "netserver-1" satisfied condition "running and ready"
    Oct 31 10:46:56.202: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-1633" to be "running and ready"
    Oct 31 10:46:56.251: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 49.178858ms
    Oct 31 10:46:56.251: INFO: The phase of Pod netserver-2 is Running (Ready = true)
    Oct 31 10:46:56.252: INFO: Pod "netserver-2" satisfied condition "running and ready"
    STEP: Creating test pods 10/31/23 10:46:56.301
    Oct 31 10:46:56.358: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-1633" to be "running"
    Oct 31 10:46:56.415: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 56.638454ms
    Oct 31 10:46:58.423: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.064370872s
    Oct 31 10:46:58.423: INFO: Pod "test-container-pod" satisfied condition "running"
    Oct 31 10:46:58.471: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
    Oct 31 10:46:58.471: INFO: Breadth first check of 10.200.1.66 on host 10.20.4.137...
    Oct 31 10:46:58.519: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.1.67:9080/dial?request=hostname&protocol=udp&host=10.200.1.66&port=8081&tries=1'] Namespace:pod-network-test-1633 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:58.519: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:58.520: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:58.521: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-1633/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.1.67%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.1.66%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Oct 31 10:46:59.099: INFO: Waiting for responses: map[]
    Oct 31 10:46:59.099: INFO: reached 10.200.1.66 after 0/1 tries
    Oct 31 10:46:59.099: INFO: Breadth first check of 10.200.2.218 on host 10.20.4.182...
    Oct 31 10:46:59.147: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.1.67:9080/dial?request=hostname&protocol=udp&host=10.200.2.218&port=8081&tries=1'] Namespace:pod-network-test-1633 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:59.147: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:59.149: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:59.149: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-1633/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.1.67%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.2.218%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Oct 31 10:46:59.819: INFO: Waiting for responses: map[]
    Oct 31 10:46:59.819: INFO: reached 10.200.2.218 after 0/1 tries
    Oct 31 10:46:59.819: INFO: Breadth first check of 10.200.0.124 on host 10.20.4.183...
    Oct 31 10:46:59.959: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.200.1.67:9080/dial?request=hostname&protocol=udp&host=10.200.0.124&port=8081&tries=1'] Namespace:pod-network-test-1633 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:46:59.959: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:46:59.960: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:46:59.960: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-1633/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.200.1.67%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.200.0.124%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
    Oct 31 10:47:00.779: INFO: Waiting for responses: map[]
    Oct 31 10:47:00.780: INFO: reached 10.200.0.124 after 0/1 tries
    Oct 31 10:47:00.780: INFO: Going to retry 0 out of 3 pods....
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:47:00.781: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-1633" for this suite. 10/31/23 10:47:00.832
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
[BeforeEach] [sig-storage] Projected secret
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:47:00.853
Oct 31 10:47:00.853: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 10:47:00.855
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:47:01.004
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:47:01.148
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56
STEP: Creating projection with secret that has name projected-secret-test-9895e71b-a08e-4107-9647-f18b430df974 10/31/23 10:47:01.296
STEP: Creating a pod to test consume secrets 10/31/23 10:47:01.353
Oct 31 10:47:01.420: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375" in namespace "projected-6200" to be "Succeeded or Failed"
Oct 31 10:47:01.443: INFO: Pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375": Phase="Pending", Reason="", readiness=false. Elapsed: 22.580816ms
Oct 31 10:47:03.453: INFO: Pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375": Phase="Pending", Reason="", readiness=false. Elapsed: 2.032480464s
Oct 31 10:47:05.453: INFO: Pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032321004s
STEP: Saw pod success 10/31/23 10:47:05.453
Oct 31 10:47:05.453: INFO: Pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375" satisfied condition "Succeeded or Failed"
Oct 31 10:47:05.503: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375 container projected-secret-volume-test: <nil>
STEP: delete the pod 10/31/23 10:47:05.867
Oct 31 10:47:05.940: INFO: Waiting for pod pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375 to disappear
Oct 31 10:47:06.081: INFO: Pod pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/node/init/init.go:32
Oct 31 10:47:06.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected secret
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected secret
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected secret
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-6200" for this suite. 10/31/23 10:47:06.142
------------------------------
â€¢ [SLOW TEST] [5.362 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_secret.go:56

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected secret
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:47:00.853
    Oct 31 10:47:00.853: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 10:47:00.855
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:47:01.004
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:47:01.148
    [BeforeEach] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_secret.go:56
    STEP: Creating projection with secret that has name projected-secret-test-9895e71b-a08e-4107-9647-f18b430df974 10/31/23 10:47:01.296
    STEP: Creating a pod to test consume secrets 10/31/23 10:47:01.353
    Oct 31 10:47:01.420: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375" in namespace "projected-6200" to be "Succeeded or Failed"
    Oct 31 10:47:01.443: INFO: Pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375": Phase="Pending", Reason="", readiness=false. Elapsed: 22.580816ms
    Oct 31 10:47:03.453: INFO: Pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375": Phase="Pending", Reason="", readiness=false. Elapsed: 2.032480464s
    Oct 31 10:47:05.453: INFO: Pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032321004s
    STEP: Saw pod success 10/31/23 10:47:05.453
    Oct 31 10:47:05.453: INFO: Pod "pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375" satisfied condition "Succeeded or Failed"
    Oct 31 10:47:05.503: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375 container projected-secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 10:47:05.867
    Oct 31 10:47:05.940: INFO: Waiting for pod pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375 to disappear
    Oct 31 10:47:06.081: INFO: Pod pod-projected-secrets-78f3fcd2-0b1e-494b-8d76-1a1f8b676375 no longer exists
    [AfterEach] [sig-storage] Projected secret
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:47:06.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected secret
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected secret
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected secret
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-6200" for this suite. 10/31/23 10:47:06.142
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
[BeforeEach] [sig-network] Services
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:47:06.22
Oct 31 10:47:06.221: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename services 10/31/23 10:47:06.222
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:47:06.393
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:47:06.459
[BeforeEach] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:766
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6356 10/31/23 10:47:06.505
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 10/31/23 10:47:06.562
STEP: creating service externalsvc in namespace services-6356 10/31/23 10:47:06.562
STEP: creating replication controller externalsvc in namespace services-6356 10/31/23 10:47:06.67
I1031 10:47:06.738732      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6356, replica count: 2
I1031 10:47:09.840015      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName 10/31/23 10:47:09.851
Oct 31 10:47:09.998: INFO: Creating new exec pod
Oct 31 10:47:10.019: INFO: Waiting up to 5m0s for pod "execpod54bkm" in namespace "services-6356" to be "running"
Oct 31 10:47:10.034: INFO: Pod "execpod54bkm": Phase="Pending", Reason="", readiness=false. Elapsed: 15.470171ms
Oct 31 10:47:12.042: INFO: Pod "execpod54bkm": Phase="Running", Reason="", readiness=true. Elapsed: 2.022903186s
Oct 31 10:47:12.042: INFO: Pod "execpod54bkm" satisfied condition "running"
Oct 31 10:47:12.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6356 exec execpod54bkm -- /bin/sh -x -c nslookup clusterip-service.services-6356.svc.cluster.local'
Oct 31 10:47:12.897: INFO: stderr: "+ nslookup clusterip-service.services-6356.svc.cluster.local\n"
Oct 31 10:47:12.897: INFO: stdout: "Server:\t\t10.93.0.10\nAddress:\t10.93.0.10#53\n\nclusterip-service.services-6356.svc.cluster.local\tcanonical name = externalsvc.services-6356.svc.cluster.local.\nName:\texternalsvc.services-6356.svc.cluster.local\nAddress: 10.93.255.250\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-6356, will wait for the garbage collector to delete the pods 10/31/23 10:47:12.897
Oct 31 10:47:13.082: INFO: Deleting ReplicationController externalsvc took: 85.044715ms
Oct 31 10:47:13.183: INFO: Terminating ReplicationController externalsvc pods took: 100.822912ms
Oct 31 10:47:15.210: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/node/init/init.go:32
Oct 31 10:47:15.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Services
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Services
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Services
  tear down framework | framework.go:193
STEP: Destroying namespace "services-6356" for this suite. 10/31/23 10:47:15.355
------------------------------
â€¢ [SLOW TEST] [9.159 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/network/service.go:1515

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Services
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:47:06.22
    Oct 31 10:47:06.221: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename services 10/31/23 10:47:06.222
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:47:06.393
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:47:06.459
    [BeforeEach] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-network] Services
      test/e2e/network/service.go:766
    [It] should be able to change the type from ClusterIP to ExternalName [Conformance]
      test/e2e/network/service.go:1515
    STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-6356 10/31/23 10:47:06.505
    STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service 10/31/23 10:47:06.562
    STEP: creating service externalsvc in namespace services-6356 10/31/23 10:47:06.562
    STEP: creating replication controller externalsvc in namespace services-6356 10/31/23 10:47:06.67
    I1031 10:47:06.738732      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-6356, replica count: 2
    I1031 10:47:09.840015      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
    STEP: changing the ClusterIP service to type=ExternalName 10/31/23 10:47:09.851
    Oct 31 10:47:09.998: INFO: Creating new exec pod
    Oct 31 10:47:10.019: INFO: Waiting up to 5m0s for pod "execpod54bkm" in namespace "services-6356" to be "running"
    Oct 31 10:47:10.034: INFO: Pod "execpod54bkm": Phase="Pending", Reason="", readiness=false. Elapsed: 15.470171ms
    Oct 31 10:47:12.042: INFO: Pod "execpod54bkm": Phase="Running", Reason="", readiness=true. Elapsed: 2.022903186s
    Oct 31 10:47:12.042: INFO: Pod "execpod54bkm" satisfied condition "running"
    Oct 31 10:47:12.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=services-6356 exec execpod54bkm -- /bin/sh -x -c nslookup clusterip-service.services-6356.svc.cluster.local'
    Oct 31 10:47:12.897: INFO: stderr: "+ nslookup clusterip-service.services-6356.svc.cluster.local\n"
    Oct 31 10:47:12.897: INFO: stdout: "Server:\t\t10.93.0.10\nAddress:\t10.93.0.10#53\n\nclusterip-service.services-6356.svc.cluster.local\tcanonical name = externalsvc.services-6356.svc.cluster.local.\nName:\texternalsvc.services-6356.svc.cluster.local\nAddress: 10.93.255.250\n\n"
    STEP: deleting ReplicationController externalsvc in namespace services-6356, will wait for the garbage collector to delete the pods 10/31/23 10:47:12.897
    Oct 31 10:47:13.082: INFO: Deleting ReplicationController externalsvc took: 85.044715ms
    Oct 31 10:47:13.183: INFO: Terminating ReplicationController externalsvc pods took: 100.822912ms
    Oct 31 10:47:15.210: INFO: Cleaning up the ClusterIP to ExternalName test service
    [AfterEach] [sig-network] Services
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:47:15.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Services
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Services
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Services
      tear down framework | framework.go:193
    STEP: Destroying namespace "services-6356" for this suite. 10/31/23 10:47:15.355
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial]
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:47:15.38
Oct 31 10:47:15.381: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename taint-single-pod 10/31/23 10:47:15.382
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:47:15.529
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:47:15.665
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:170
Oct 31 10:47:15.802: INFO: Waiting up to 1m0s for all nodes to be ready
Oct 31 10:48:16.088: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293
Oct 31 10:48:16.157: INFO: Starting informer...
STEP: Starting pod... 10/31/23 10:48:16.157
Oct 31 10:48:16.273: INFO: Pod is running on pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz. Tainting Node
STEP: Trying to apply a taint on the Node 10/31/23 10:48:16.274
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 10/31/23 10:48:16.36
STEP: Waiting short time to make sure Pod is queued for deletion 10/31/23 10:48:16.41
Oct 31 10:48:16.410: INFO: Pod wasn't evicted. Proceeding
Oct 31 10:48:16.410: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 10/31/23 10:48:16.569
STEP: Waiting some time to make sure that toleration time passed. 10/31/23 10:48:16.603
Oct 31 10:49:31.603: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:49:31.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "taint-single-pod-5871" for this suite. 10/31/23 10:49:31.622
------------------------------
â€¢ [SLOW TEST] [136.353 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/node/taints.go:293

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:47:15.38
    Oct 31 10:47:15.381: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename taint-single-pod 10/31/23 10:47:15.382
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:47:15.529
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:47:15.665
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/node/taints.go:170
    Oct 31 10:47:15.802: INFO: Waiting up to 1m0s for all nodes to be ready
    Oct 31 10:48:16.088: INFO: Waiting for terminating namespaces to be deleted...
    [It] removing taint cancels eviction [Disruptive] [Conformance]
      test/e2e/node/taints.go:293
    Oct 31 10:48:16.157: INFO: Starting informer...
    STEP: Starting pod... 10/31/23 10:48:16.157
    Oct 31 10:48:16.273: INFO: Pod is running on pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz. Tainting Node
    STEP: Trying to apply a taint on the Node 10/31/23 10:48:16.274
    STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 10/31/23 10:48:16.36
    STEP: Waiting short time to make sure Pod is queued for deletion 10/31/23 10:48:16.41
    Oct 31 10:48:16.410: INFO: Pod wasn't evicted. Proceeding
    Oct 31 10:48:16.410: INFO: Removing taint from Node
    STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute 10/31/23 10:48:16.569
    STEP: Waiting some time to make sure that toleration time passed. 10/31/23 10:48:16.603
    Oct 31 10:49:31.603: INFO: Pod wasn't evicted. Test successful
    [AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:49:31.604: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] NoExecuteTaintManager Single Pod [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "taint-single-pod-5871" for this suite. 10/31/23 10:49:31.622
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
[BeforeEach] [sig-storage] Projected downwardAPI
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:49:31.74
Oct 31 10:49:31.740: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 10:49:31.741
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:32.047
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:32.141
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:44
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130
STEP: Creating the pod 10/31/23 10:49:32.279
Oct 31 10:49:32.333: INFO: Waiting up to 5m0s for pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df" in namespace "projected-1661" to be "running and ready"
Oct 31 10:49:32.373: INFO: Pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df": Phase="Pending", Reason="", readiness=false. Elapsed: 40.271588ms
Oct 31 10:49:32.373: INFO: The phase of Pod labelsupdate20d320cf-521d-457e-8dbc-0841486e42df is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:49:34.381: INFO: Pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df": Phase="Running", Reason="", readiness=true. Elapsed: 2.048086224s
Oct 31 10:49:34.381: INFO: The phase of Pod labelsupdate20d320cf-521d-457e-8dbc-0841486e42df is Running (Ready = true)
Oct 31 10:49:34.381: INFO: Pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df" satisfied condition "running and ready"
Oct 31 10:49:35.201: INFO: Successfully updated pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/node/init/init.go:32
Oct 31 10:49:37.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected downwardAPI
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-1661" for this suite. 10/31/23 10:49:37.531
------------------------------
â€¢ [SLOW TEST] [5.804 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/common/storage/projected_downwardapi.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected downwardAPI
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:49:31.74
    Oct 31 10:49:31.740: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 10:49:31.741
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:32.047
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:32.141
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-storage] Projected downwardAPI
      test/e2e/common/storage/projected_downwardapi.go:44
    [It] should update labels on modification [NodeConformance] [Conformance]
      test/e2e/common/storage/projected_downwardapi.go:130
    STEP: Creating the pod 10/31/23 10:49:32.279
    Oct 31 10:49:32.333: INFO: Waiting up to 5m0s for pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df" in namespace "projected-1661" to be "running and ready"
    Oct 31 10:49:32.373: INFO: Pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df": Phase="Pending", Reason="", readiness=false. Elapsed: 40.271588ms
    Oct 31 10:49:32.373: INFO: The phase of Pod labelsupdate20d320cf-521d-457e-8dbc-0841486e42df is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:49:34.381: INFO: Pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df": Phase="Running", Reason="", readiness=true. Elapsed: 2.048086224s
    Oct 31 10:49:34.381: INFO: The phase of Pod labelsupdate20d320cf-521d-457e-8dbc-0841486e42df is Running (Ready = true)
    Oct 31 10:49:34.381: INFO: Pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df" satisfied condition "running and ready"
    Oct 31 10:49:35.201: INFO: Successfully updated pod "labelsupdate20d320cf-521d-457e-8dbc-0841486e42df"
    [AfterEach] [sig-storage] Projected downwardAPI
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:49:37.465: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected downwardAPI
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-1661" for this suite. 10/31/23 10:49:37.531
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
[BeforeEach] [sig-network] DNS
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:49:37.549
Oct 31 10:49:37.549: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename dns 10/31/23 10:49:37.55
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:37.711
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:37.848
[BeforeEach] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:31
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2745.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2745.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
 10/31/23 10:49:37.983
STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2745.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2745.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
 10/31/23 10:49:37.984
STEP: creating a pod to probe /etc/hosts 10/31/23 10:49:37.984
STEP: submitting the pod to kubernetes 10/31/23 10:49:37.984
Oct 31 10:49:38.005: INFO: Waiting up to 15m0s for pod "dns-test-8796d52d-432e-4fe5-8876-03769973dd4f" in namespace "dns-2745" to be "running"
Oct 31 10:49:38.015: INFO: Pod "dns-test-8796d52d-432e-4fe5-8876-03769973dd4f": Phase="Pending", Reason="", readiness=false. Elapsed: 9.927157ms
Oct 31 10:49:40.030: INFO: Pod "dns-test-8796d52d-432e-4fe5-8876-03769973dd4f": Phase="Running", Reason="", readiness=true. Elapsed: 2.024398349s
Oct 31 10:49:40.030: INFO: Pod "dns-test-8796d52d-432e-4fe5-8876-03769973dd4f" satisfied condition "running"
STEP: retrieving the pod 10/31/23 10:49:40.03
STEP: looking for the results for each expected name from probers 10/31/23 10:49:40.081
Oct 31 10:49:40.723: INFO: DNS probes using dns-2745/dns-test-8796d52d-432e-4fe5-8876-03769973dd4f succeeded

STEP: deleting the pod 10/31/23 10:49:40.723
[AfterEach] [sig-network] DNS
  test/e2e/framework/node/init/init.go:32
Oct 31 10:49:40.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] DNS
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] DNS
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] DNS
  tear down framework | framework.go:193
STEP: Destroying namespace "dns-2745" for this suite. 10/31/23 10:49:40.813
------------------------------
â€¢ [3.319 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/network/dns.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] DNS
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:49:37.549
    Oct 31 10:49:37.549: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename dns 10/31/23 10:49:37.55
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:37.711
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:37.848
    [BeforeEach] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:31
    [It] should provide /etc/hosts entries for the cluster [Conformance]
      test/e2e/network/dns.go:117
    STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2745.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2745.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
     10/31/23 10:49:37.983
    STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2745.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2745.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
     10/31/23 10:49:37.984
    STEP: creating a pod to probe /etc/hosts 10/31/23 10:49:37.984
    STEP: submitting the pod to kubernetes 10/31/23 10:49:37.984
    Oct 31 10:49:38.005: INFO: Waiting up to 15m0s for pod "dns-test-8796d52d-432e-4fe5-8876-03769973dd4f" in namespace "dns-2745" to be "running"
    Oct 31 10:49:38.015: INFO: Pod "dns-test-8796d52d-432e-4fe5-8876-03769973dd4f": Phase="Pending", Reason="", readiness=false. Elapsed: 9.927157ms
    Oct 31 10:49:40.030: INFO: Pod "dns-test-8796d52d-432e-4fe5-8876-03769973dd4f": Phase="Running", Reason="", readiness=true. Elapsed: 2.024398349s
    Oct 31 10:49:40.030: INFO: Pod "dns-test-8796d52d-432e-4fe5-8876-03769973dd4f" satisfied condition "running"
    STEP: retrieving the pod 10/31/23 10:49:40.03
    STEP: looking for the results for each expected name from probers 10/31/23 10:49:40.081
    Oct 31 10:49:40.723: INFO: DNS probes using dns-2745/dns-test-8796d52d-432e-4fe5-8876-03769973dd4f succeeded

    STEP: deleting the pod 10/31/23 10:49:40.723
    [AfterEach] [sig-network] DNS
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:49:40.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] DNS
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] DNS
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] DNS
      tear down framework | framework.go:193
    STEP: Destroying namespace "dns-2745" for this suite. 10/31/23 10:49:40.813
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
[BeforeEach] [sig-auth] ServiceAccounts
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:49:40.88
Oct 31 10:49:40.880: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename svcaccounts 10/31/23 10:49:40.882
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:41.025
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:41.175
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:31
[It] should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78
Oct 31 10:49:41.387: INFO: Waiting up to 5m0s for pod "pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3" in namespace "svcaccounts-7504" to be "running"
Oct 31 10:49:41.407: INFO: Pod "pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3": Phase="Pending", Reason="", readiness=false. Elapsed: 19.249131ms
Oct 31 10:49:43.416: INFO: Pod "pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3": Phase="Running", Reason="", readiness=true. Elapsed: 2.028540094s
Oct 31 10:49:43.416: INFO: Pod "pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3" satisfied condition "running"
STEP: reading a file in the container 10/31/23 10:49:43.416
Oct 31 10:49:43.416: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7504 pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container 10/31/23 10:49:44.191
Oct 31 10:49:44.191: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7504 pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container 10/31/23 10:49:45.222
Oct 31 10:49:45.222: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7504 pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Oct 31 10:49:46.221: INFO: Got root ca configmap in namespace "svcaccounts-7504"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/node/init/init.go:32
Oct 31 10:49:46.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-auth] ServiceAccounts
  tear down framework | framework.go:193
STEP: Destroying namespace "svcaccounts-7504" for this suite. 10/31/23 10:49:46.289
------------------------------
â€¢ [SLOW TEST] [5.500 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  should mount an API token into pods  [Conformance]
  test/e2e/auth/service_accounts.go:78

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-auth] ServiceAccounts
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:49:40.88
    Oct 31 10:49:40.880: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename svcaccounts 10/31/23 10:49:40.882
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:41.025
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:41.175
    [BeforeEach] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:31
    [It] should mount an API token into pods  [Conformance]
      test/e2e/auth/service_accounts.go:78
    Oct 31 10:49:41.387: INFO: Waiting up to 5m0s for pod "pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3" in namespace "svcaccounts-7504" to be "running"
    Oct 31 10:49:41.407: INFO: Pod "pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3": Phase="Pending", Reason="", readiness=false. Elapsed: 19.249131ms
    Oct 31 10:49:43.416: INFO: Pod "pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3": Phase="Running", Reason="", readiness=true. Elapsed: 2.028540094s
    Oct 31 10:49:43.416: INFO: Pod "pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3" satisfied condition "running"
    STEP: reading a file in the container 10/31/23 10:49:43.416
    Oct 31 10:49:43.416: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7504 pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
    STEP: reading a file in the container 10/31/23 10:49:44.191
    Oct 31 10:49:44.191: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7504 pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
    STEP: reading a file in the container 10/31/23 10:49:45.222
    Oct 31 10:49:45.222: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7504 pod-service-account-ee15ef1f-e9ce-4068-90f5-b8255750a5d3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
    Oct 31 10:49:46.221: INFO: Got root ca configmap in namespace "svcaccounts-7504"
    [AfterEach] [sig-auth] ServiceAccounts
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:49:46.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-auth] ServiceAccounts
      tear down framework | framework.go:193
    STEP: Destroying namespace "svcaccounts-7504" for this suite. 10/31/23 10:49:46.289
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:49:46.382
Oct 31 10:49:46.382: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 10:49:46.383
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:46.538
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:46.707
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99
STEP: Creating configMap with name configmap-test-volume-map-0b274ddd-c9a2-498c-938f-5a16fd9523e9 10/31/23 10:49:46.779
STEP: Creating a pod to test consume configMaps 10/31/23 10:49:46.895
Oct 31 10:49:46.954: INFO: Waiting up to 5m0s for pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf" in namespace "configmap-6415" to be "Succeeded or Failed"
Oct 31 10:49:47.014: INFO: Pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf": Phase="Pending", Reason="", readiness=false. Elapsed: 60.159973ms
Oct 31 10:49:49.047: INFO: Pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.092703599s
Oct 31 10:49:51.022: INFO: Pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.06827745s
STEP: Saw pod success 10/31/23 10:49:51.023
Oct 31 10:49:51.023: INFO: Pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf" satisfied condition "Succeeded or Failed"
Oct 31 10:49:51.074: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf container agnhost-container: <nil>
STEP: delete the pod 10/31/23 10:49:51.351
Oct 31 10:49:51.380: INFO: Waiting for pod pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf to disappear
Oct 31 10:49:51.443: INFO: Pod pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 10:49:51.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-6415" for this suite. 10/31/23 10:49:51.545
------------------------------
â€¢ [SLOW TEST] [5.194 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:49:46.382
    Oct 31 10:49:46.382: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 10:49:46.383
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:46.538
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:46.707
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:99
    STEP: Creating configMap with name configmap-test-volume-map-0b274ddd-c9a2-498c-938f-5a16fd9523e9 10/31/23 10:49:46.779
    STEP: Creating a pod to test consume configMaps 10/31/23 10:49:46.895
    Oct 31 10:49:46.954: INFO: Waiting up to 5m0s for pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf" in namespace "configmap-6415" to be "Succeeded or Failed"
    Oct 31 10:49:47.014: INFO: Pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf": Phase="Pending", Reason="", readiness=false. Elapsed: 60.159973ms
    Oct 31 10:49:49.047: INFO: Pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.092703599s
    Oct 31 10:49:51.022: INFO: Pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.06827745s
    STEP: Saw pod success 10/31/23 10:49:51.023
    Oct 31 10:49:51.023: INFO: Pod "pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf" satisfied condition "Succeeded or Failed"
    Oct 31 10:49:51.074: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 10:49:51.351
    Oct 31 10:49:51.380: INFO: Waiting for pod pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf to disappear
    Oct 31 10:49:51.443: INFO: Pod pod-configmaps-a49816aa-0253-4901-97b7-423d741aedcf no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:49:51.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-6415" for this suite. 10/31/23 10:49:51.545
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
[BeforeEach] [sig-api-machinery] Garbage collector
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:49:51.578
Oct 31 10:49:51.578: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename gc 10/31/23 10:49:51.579
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:51.706
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:51.905
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:31
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735
STEP: create the rc1 10/31/23 10:49:52.065
STEP: create the rc2 10/31/23 10:49:52.139
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 10/31/23 10:49:57.25
STEP: delete the rc simpletest-rc-to-be-deleted 10/31/23 10:50:00.476
STEP: wait for the rc to be deleted 10/31/23 10:50:00.543
Oct 31 10:50:05.662: INFO: 69 pods remaining
Oct 31 10:50:05.662: INFO: 69 pods has nil DeletionTimestamp
Oct 31 10:50:05.662: INFO: 
STEP: Gathering metrics 10/31/23 10:50:10.658
W1031 10:50:10.716591      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Oct 31 10:50:10.716: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Oct 31 10:50:10.716: INFO: Deleting pod "simpletest-rc-to-be-deleted-2f7b9" in namespace "gc-8054"
Oct 31 10:50:10.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-2k5b2" in namespace "gc-8054"
Oct 31 10:50:10.850: INFO: Deleting pod "simpletest-rc-to-be-deleted-2wlt8" in namespace "gc-8054"
Oct 31 10:50:10.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xxdw" in namespace "gc-8054"
Oct 31 10:50:10.961: INFO: Deleting pod "simpletest-rc-to-be-deleted-4g6x5" in namespace "gc-8054"
Oct 31 10:50:11.023: INFO: Deleting pod "simpletest-rc-to-be-deleted-5lfbj" in namespace "gc-8054"
Oct 31 10:50:11.078: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pncw" in namespace "gc-8054"
Oct 31 10:50:11.161: INFO: Deleting pod "simpletest-rc-to-be-deleted-6r7v5" in namespace "gc-8054"
Oct 31 10:50:11.219: INFO: Deleting pod "simpletest-rc-to-be-deleted-6sd8q" in namespace "gc-8054"
Oct 31 10:50:11.267: INFO: Deleting pod "simpletest-rc-to-be-deleted-6v5g9" in namespace "gc-8054"
Oct 31 10:50:11.451: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xjgp" in namespace "gc-8054"
Oct 31 10:50:11.575: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xt9k" in namespace "gc-8054"
Oct 31 10:50:11.644: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bfc5" in namespace "gc-8054"
Oct 31 10:50:11.717: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cj9d" in namespace "gc-8054"
Oct 31 10:50:11.798: INFO: Deleting pod "simpletest-rc-to-be-deleted-7k4hf" in namespace "gc-8054"
Oct 31 10:50:11.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-7kkjt" in namespace "gc-8054"
Oct 31 10:50:11.902: INFO: Deleting pod "simpletest-rc-to-be-deleted-87swv" in namespace "gc-8054"
Oct 31 10:50:11.982: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bgpd" in namespace "gc-8054"
Oct 31 10:50:12.027: INFO: Deleting pod "simpletest-rc-to-be-deleted-8h5ct" in namespace "gc-8054"
Oct 31 10:50:12.092: INFO: Deleting pod "simpletest-rc-to-be-deleted-8n6j5" in namespace "gc-8054"
Oct 31 10:50:12.150: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vd4v" in namespace "gc-8054"
Oct 31 10:50:12.185: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vs6b" in namespace "gc-8054"
Oct 31 10:50:12.221: INFO: Deleting pod "simpletest-rc-to-be-deleted-8zxpk" in namespace "gc-8054"
Oct 31 10:50:12.298: INFO: Deleting pod "simpletest-rc-to-be-deleted-99ws9" in namespace "gc-8054"
Oct 31 10:50:12.357: INFO: Deleting pod "simpletest-rc-to-be-deleted-9dbfg" in namespace "gc-8054"
Oct 31 10:50:12.408: INFO: Deleting pod "simpletest-rc-to-be-deleted-9kc9c" in namespace "gc-8054"
Oct 31 10:50:12.602: INFO: Deleting pod "simpletest-rc-to-be-deleted-9lsxb" in namespace "gc-8054"
Oct 31 10:50:12.679: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wxcx" in namespace "gc-8054"
Oct 31 10:50:12.822: INFO: Deleting pod "simpletest-rc-to-be-deleted-b5dm5" in namespace "gc-8054"
Oct 31 10:50:12.923: INFO: Deleting pod "simpletest-rc-to-be-deleted-b6qb8" in namespace "gc-8054"
Oct 31 10:50:12.996: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgrx7" in namespace "gc-8054"
Oct 31 10:50:13.156: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvq95" in namespace "gc-8054"
Oct 31 10:50:13.214: INFO: Deleting pod "simpletest-rc-to-be-deleted-c2lgp" in namespace "gc-8054"
Oct 31 10:50:13.316: INFO: Deleting pod "simpletest-rc-to-be-deleted-d8ft7" in namespace "gc-8054"
Oct 31 10:50:13.400: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgnmc" in namespace "gc-8054"
Oct 31 10:50:13.471: INFO: Deleting pod "simpletest-rc-to-be-deleted-dpvqk" in namespace "gc-8054"
Oct 31 10:50:13.558: INFO: Deleting pod "simpletest-rc-to-be-deleted-dwtzf" in namespace "gc-8054"
Oct 31 10:50:13.586: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzv4z" in namespace "gc-8054"
Oct 31 10:50:13.637: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4gjx" in namespace "gc-8054"
Oct 31 10:50:13.705: INFO: Deleting pod "simpletest-rc-to-be-deleted-f6bqr" in namespace "gc-8054"
Oct 31 10:50:13.770: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmzjd" in namespace "gc-8054"
Oct 31 10:50:13.859: INFO: Deleting pod "simpletest-rc-to-be-deleted-frmts" in namespace "gc-8054"
Oct 31 10:50:13.913: INFO: Deleting pod "simpletest-rc-to-be-deleted-frzhf" in namespace "gc-8054"
Oct 31 10:50:13.944: INFO: Deleting pod "simpletest-rc-to-be-deleted-ftppn" in namespace "gc-8054"
Oct 31 10:50:14.025: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqc2b" in namespace "gc-8054"
Oct 31 10:50:14.054: INFO: Deleting pod "simpletest-rc-to-be-deleted-gzr2m" in namespace "gc-8054"
Oct 31 10:50:14.143: INFO: Deleting pod "simpletest-rc-to-be-deleted-h5jvd" in namespace "gc-8054"
Oct 31 10:50:14.269: INFO: Deleting pod "simpletest-rc-to-be-deleted-hfrwf" in namespace "gc-8054"
Oct 31 10:50:14.497: INFO: Deleting pod "simpletest-rc-to-be-deleted-htb8m" in namespace "gc-8054"
Oct 31 10:50:14.596: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2765" in namespace "gc-8054"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/node/init/init.go:32
Oct 31 10:50:14.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Garbage collector
  tear down framework | framework.go:193
STEP: Destroying namespace "gc-8054" for this suite. 10/31/23 10:50:14.694
------------------------------
â€¢ [SLOW TEST] [23.171 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/apimachinery/garbage_collector.go:735

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Garbage collector
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:49:51.578
    Oct 31 10:49:51.578: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename gc 10/31/23 10:49:51.579
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:49:51.706
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:49:51.905
    [BeforeEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:31
    [It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
      test/e2e/apimachinery/garbage_collector.go:735
    STEP: create the rc1 10/31/23 10:49:52.065
    STEP: create the rc2 10/31/23 10:49:52.139
    STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well 10/31/23 10:49:57.25
    STEP: delete the rc simpletest-rc-to-be-deleted 10/31/23 10:50:00.476
    STEP: wait for the rc to be deleted 10/31/23 10:50:00.543
    Oct 31 10:50:05.662: INFO: 69 pods remaining
    Oct 31 10:50:05.662: INFO: 69 pods has nil DeletionTimestamp
    Oct 31 10:50:05.662: INFO: 
    STEP: Gathering metrics 10/31/23 10:50:10.658
    W1031 10:50:10.716591      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
    Oct 31 10:50:10.716: INFO: For apiserver_request_total:
    For apiserver_request_latency_seconds:
    For apiserver_init_events_total:
    For garbage_collector_attempt_to_delete_queue_latency:
    For garbage_collector_attempt_to_delete_work_duration:
    For garbage_collector_attempt_to_orphan_queue_latency:
    For garbage_collector_attempt_to_orphan_work_duration:
    For garbage_collector_dirty_processing_latency_microseconds:
    For garbage_collector_event_processing_latency_microseconds:
    For garbage_collector_graph_changes_queue_latency:
    For garbage_collector_graph_changes_work_duration:
    For garbage_collector_orphan_processing_latency_microseconds:
    For namespace_queue_latency:
    For namespace_queue_latency_sum:
    For namespace_queue_latency_count:
    For namespace_retries:
    For namespace_work_duration:
    For namespace_work_duration_sum:
    For namespace_work_duration_count:
    For function_duration_seconds:
    For errors_total:
    For evicted_pods_total:

    Oct 31 10:50:10.716: INFO: Deleting pod "simpletest-rc-to-be-deleted-2f7b9" in namespace "gc-8054"
    Oct 31 10:50:10.791: INFO: Deleting pod "simpletest-rc-to-be-deleted-2k5b2" in namespace "gc-8054"
    Oct 31 10:50:10.850: INFO: Deleting pod "simpletest-rc-to-be-deleted-2wlt8" in namespace "gc-8054"
    Oct 31 10:50:10.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xxdw" in namespace "gc-8054"
    Oct 31 10:50:10.961: INFO: Deleting pod "simpletest-rc-to-be-deleted-4g6x5" in namespace "gc-8054"
    Oct 31 10:50:11.023: INFO: Deleting pod "simpletest-rc-to-be-deleted-5lfbj" in namespace "gc-8054"
    Oct 31 10:50:11.078: INFO: Deleting pod "simpletest-rc-to-be-deleted-6pncw" in namespace "gc-8054"
    Oct 31 10:50:11.161: INFO: Deleting pod "simpletest-rc-to-be-deleted-6r7v5" in namespace "gc-8054"
    Oct 31 10:50:11.219: INFO: Deleting pod "simpletest-rc-to-be-deleted-6sd8q" in namespace "gc-8054"
    Oct 31 10:50:11.267: INFO: Deleting pod "simpletest-rc-to-be-deleted-6v5g9" in namespace "gc-8054"
    Oct 31 10:50:11.451: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xjgp" in namespace "gc-8054"
    Oct 31 10:50:11.575: INFO: Deleting pod "simpletest-rc-to-be-deleted-6xt9k" in namespace "gc-8054"
    Oct 31 10:50:11.644: INFO: Deleting pod "simpletest-rc-to-be-deleted-7bfc5" in namespace "gc-8054"
    Oct 31 10:50:11.717: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cj9d" in namespace "gc-8054"
    Oct 31 10:50:11.798: INFO: Deleting pod "simpletest-rc-to-be-deleted-7k4hf" in namespace "gc-8054"
    Oct 31 10:50:11.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-7kkjt" in namespace "gc-8054"
    Oct 31 10:50:11.902: INFO: Deleting pod "simpletest-rc-to-be-deleted-87swv" in namespace "gc-8054"
    Oct 31 10:50:11.982: INFO: Deleting pod "simpletest-rc-to-be-deleted-8bgpd" in namespace "gc-8054"
    Oct 31 10:50:12.027: INFO: Deleting pod "simpletest-rc-to-be-deleted-8h5ct" in namespace "gc-8054"
    Oct 31 10:50:12.092: INFO: Deleting pod "simpletest-rc-to-be-deleted-8n6j5" in namespace "gc-8054"
    Oct 31 10:50:12.150: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vd4v" in namespace "gc-8054"
    Oct 31 10:50:12.185: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vs6b" in namespace "gc-8054"
    Oct 31 10:50:12.221: INFO: Deleting pod "simpletest-rc-to-be-deleted-8zxpk" in namespace "gc-8054"
    Oct 31 10:50:12.298: INFO: Deleting pod "simpletest-rc-to-be-deleted-99ws9" in namespace "gc-8054"
    Oct 31 10:50:12.357: INFO: Deleting pod "simpletest-rc-to-be-deleted-9dbfg" in namespace "gc-8054"
    Oct 31 10:50:12.408: INFO: Deleting pod "simpletest-rc-to-be-deleted-9kc9c" in namespace "gc-8054"
    Oct 31 10:50:12.602: INFO: Deleting pod "simpletest-rc-to-be-deleted-9lsxb" in namespace "gc-8054"
    Oct 31 10:50:12.679: INFO: Deleting pod "simpletest-rc-to-be-deleted-9wxcx" in namespace "gc-8054"
    Oct 31 10:50:12.822: INFO: Deleting pod "simpletest-rc-to-be-deleted-b5dm5" in namespace "gc-8054"
    Oct 31 10:50:12.923: INFO: Deleting pod "simpletest-rc-to-be-deleted-b6qb8" in namespace "gc-8054"
    Oct 31 10:50:12.996: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgrx7" in namespace "gc-8054"
    Oct 31 10:50:13.156: INFO: Deleting pod "simpletest-rc-to-be-deleted-bvq95" in namespace "gc-8054"
    Oct 31 10:50:13.214: INFO: Deleting pod "simpletest-rc-to-be-deleted-c2lgp" in namespace "gc-8054"
    Oct 31 10:50:13.316: INFO: Deleting pod "simpletest-rc-to-be-deleted-d8ft7" in namespace "gc-8054"
    Oct 31 10:50:13.400: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgnmc" in namespace "gc-8054"
    Oct 31 10:50:13.471: INFO: Deleting pod "simpletest-rc-to-be-deleted-dpvqk" in namespace "gc-8054"
    Oct 31 10:50:13.558: INFO: Deleting pod "simpletest-rc-to-be-deleted-dwtzf" in namespace "gc-8054"
    Oct 31 10:50:13.586: INFO: Deleting pod "simpletest-rc-to-be-deleted-dzv4z" in namespace "gc-8054"
    Oct 31 10:50:13.637: INFO: Deleting pod "simpletest-rc-to-be-deleted-f4gjx" in namespace "gc-8054"
    Oct 31 10:50:13.705: INFO: Deleting pod "simpletest-rc-to-be-deleted-f6bqr" in namespace "gc-8054"
    Oct 31 10:50:13.770: INFO: Deleting pod "simpletest-rc-to-be-deleted-fmzjd" in namespace "gc-8054"
    Oct 31 10:50:13.859: INFO: Deleting pod "simpletest-rc-to-be-deleted-frmts" in namespace "gc-8054"
    Oct 31 10:50:13.913: INFO: Deleting pod "simpletest-rc-to-be-deleted-frzhf" in namespace "gc-8054"
    Oct 31 10:50:13.944: INFO: Deleting pod "simpletest-rc-to-be-deleted-ftppn" in namespace "gc-8054"
    Oct 31 10:50:14.025: INFO: Deleting pod "simpletest-rc-to-be-deleted-gqc2b" in namespace "gc-8054"
    Oct 31 10:50:14.054: INFO: Deleting pod "simpletest-rc-to-be-deleted-gzr2m" in namespace "gc-8054"
    Oct 31 10:50:14.143: INFO: Deleting pod "simpletest-rc-to-be-deleted-h5jvd" in namespace "gc-8054"
    Oct 31 10:50:14.269: INFO: Deleting pod "simpletest-rc-to-be-deleted-hfrwf" in namespace "gc-8054"
    Oct 31 10:50:14.497: INFO: Deleting pod "simpletest-rc-to-be-deleted-htb8m" in namespace "gc-8054"
    Oct 31 10:50:14.596: INFO: Deleting pod "simpletest-rc-to-be-deleted-j2765" in namespace "gc-8054"
    [AfterEach] [sig-api-machinery] Garbage collector
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:50:14.660: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Garbage collector
      tear down framework | framework.go:193
    STEP: Destroying namespace "gc-8054" for this suite. 10/31/23 10:50:14.694
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
[BeforeEach] [sig-node] Containers
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:50:14.749
Oct 31 10:50:14.749: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename containers 10/31/23 10:50:14.751
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:50:14.925
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:50:15.001
[BeforeEach] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87
STEP: Creating a pod to test override all 10/31/23 10:50:15.102
Oct 31 10:50:15.165: INFO: Waiting up to 5m0s for pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60" in namespace "containers-3007" to be "Succeeded or Failed"
Oct 31 10:50:15.192: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60": Phase="Pending", Reason="", readiness=false. Elapsed: 27.123511ms
Oct 31 10:50:17.199: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034766179s
Oct 31 10:50:19.206: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60": Phase="Pending", Reason="", readiness=false. Elapsed: 4.041262351s
Oct 31 10:50:21.243: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.078001859s
STEP: Saw pod success 10/31/23 10:50:21.243
Oct 31 10:50:21.243: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60" satisfied condition "Succeeded or Failed"
Oct 31 10:50:21.333: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod client-containers-a5915422-d7a2-49cb-8575-169598c36d60 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 10:50:21.631
Oct 31 10:50:21.774: INFO: Waiting for pod client-containers-a5915422-d7a2-49cb-8575-169598c36d60 to disappear
Oct 31 10:50:21.863: INFO: Pod client-containers-a5915422-d7a2-49cb-8575-169598c36d60 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/node/init/init.go:32
Oct 31 10:50:21.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Containers
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Containers
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Containers
  tear down framework | framework.go:193
STEP: Destroying namespace "containers-3007" for this suite. 10/31/23 10:50:21.948
------------------------------
â€¢ [SLOW TEST] [7.299 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/common/node/containers.go:87

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Containers
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:50:14.749
    Oct 31 10:50:14.749: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename containers 10/31/23 10:50:14.751
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:50:14.925
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:50:15.001
    [BeforeEach] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
      test/e2e/common/node/containers.go:87
    STEP: Creating a pod to test override all 10/31/23 10:50:15.102
    Oct 31 10:50:15.165: INFO: Waiting up to 5m0s for pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60" in namespace "containers-3007" to be "Succeeded or Failed"
    Oct 31 10:50:15.192: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60": Phase="Pending", Reason="", readiness=false. Elapsed: 27.123511ms
    Oct 31 10:50:17.199: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034766179s
    Oct 31 10:50:19.206: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60": Phase="Pending", Reason="", readiness=false. Elapsed: 4.041262351s
    Oct 31 10:50:21.243: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.078001859s
    STEP: Saw pod success 10/31/23 10:50:21.243
    Oct 31 10:50:21.243: INFO: Pod "client-containers-a5915422-d7a2-49cb-8575-169598c36d60" satisfied condition "Succeeded or Failed"
    Oct 31 10:50:21.333: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod client-containers-a5915422-d7a2-49cb-8575-169598c36d60 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 10:50:21.631
    Oct 31 10:50:21.774: INFO: Waiting for pod client-containers-a5915422-d7a2-49cb-8575-169598c36d60 to disappear
    Oct 31 10:50:21.863: INFO: Pod client-containers-a5915422-d7a2-49cb-8575-169598c36d60 no longer exists
    [AfterEach] [sig-node] Containers
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:50:21.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Containers
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Containers
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Containers
      tear down framework | framework.go:193
    STEP: Destroying namespace "containers-3007" for this suite. 10/31/23 10:50:21.948
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:50:22.05
Oct 31 10:50:22.050: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 10:50:22.05
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:50:22.439
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:50:22.575
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99
STEP: Creating secret with name secret-test-835e5e0c-abe4-40b7-880c-3dcfa65f679e 10/31/23 10:50:23.035
STEP: Creating a pod to test consume secrets 10/31/23 10:50:23.128
Oct 31 10:50:23.241: INFO: Waiting up to 5m0s for pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730" in namespace "secrets-840" to be "Succeeded or Failed"
Oct 31 10:50:23.256: INFO: Pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730": Phase="Pending", Reason="", readiness=false. Elapsed: 14.61207ms
Oct 31 10:50:25.272: INFO: Pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030516796s
Oct 31 10:50:27.264: INFO: Pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022630825s
STEP: Saw pod success 10/31/23 10:50:27.264
Oct 31 10:50:27.264: INFO: Pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730" satisfied condition "Succeeded or Failed"
Oct 31 10:50:27.343: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730 container secret-volume-test: <nil>
STEP: delete the pod 10/31/23 10:50:27.573
Oct 31 10:50:27.681: INFO: Waiting for pod pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730 to disappear
Oct 31 10:50:27.769: INFO: Pod pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 10:50:27.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-840" for this suite. 10/31/23 10:50:27.886
STEP: Destroying namespace "secret-namespace-7186" for this suite. 10/31/23 10:50:27.938
------------------------------
â€¢ [SLOW TEST] [5.942 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:99

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:50:22.05
    Oct 31 10:50:22.050: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 10:50:22.05
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:50:22.439
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:50:22.575
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:99
    STEP: Creating secret with name secret-test-835e5e0c-abe4-40b7-880c-3dcfa65f679e 10/31/23 10:50:23.035
    STEP: Creating a pod to test consume secrets 10/31/23 10:50:23.128
    Oct 31 10:50:23.241: INFO: Waiting up to 5m0s for pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730" in namespace "secrets-840" to be "Succeeded or Failed"
    Oct 31 10:50:23.256: INFO: Pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730": Phase="Pending", Reason="", readiness=false. Elapsed: 14.61207ms
    Oct 31 10:50:25.272: INFO: Pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030516796s
    Oct 31 10:50:27.264: INFO: Pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022630825s
    STEP: Saw pod success 10/31/23 10:50:27.264
    Oct 31 10:50:27.264: INFO: Pod "pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730" satisfied condition "Succeeded or Failed"
    Oct 31 10:50:27.343: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730 container secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 10:50:27.573
    Oct 31 10:50:27.681: INFO: Waiting for pod pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730 to disappear
    Oct 31 10:50:27.769: INFO: Pod pod-secrets-b6fb0ae7-4e96-4aa0-8fa4-88f48b5d8730 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:50:27.770: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-840" for this suite. 10/31/23 10:50:27.886
    STEP: Destroying namespace "secret-namespace-7186" for this suite. 10/31/23 10:50:27.938
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:50:27.999
Oct 31 10:50:27.999: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 10:50:28.001
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:50:28.203
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:50:28.346
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[It] works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153
Oct 31 10:50:28.397: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 10/31/23 10:50:36.504
Oct 31 10:50:36.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 --namespace=crd-publish-openapi-4340 create -f -'
Oct 31 10:50:37.701: INFO: stderr: ""
Oct 31 10:50:37.701: INFO: stdout: "e2e-test-crd-publish-openapi-8157-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Oct 31 10:50:37.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 --namespace=crd-publish-openapi-4340 delete e2e-test-crd-publish-openapi-8157-crds test-cr'
Oct 31 10:50:37.995: INFO: stderr: ""
Oct 31 10:50:37.995: INFO: stdout: "e2e-test-crd-publish-openapi-8157-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Oct 31 10:50:37.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 --namespace=crd-publish-openapi-4340 apply -f -'
Oct 31 10:50:38.596: INFO: stderr: ""
Oct 31 10:50:38.596: INFO: stdout: "e2e-test-crd-publish-openapi-8157-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Oct 31 10:50:38.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 --namespace=crd-publish-openapi-4340 delete e2e-test-crd-publish-openapi-8157-crds test-cr'
Oct 31 10:50:38.841: INFO: stderr: ""
Oct 31 10:50:38.841: INFO: stdout: "e2e-test-crd-publish-openapi-8157-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema 10/31/23 10:50:38.841
Oct 31 10:50:38.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 explain e2e-test-crd-publish-openapi-8157-crds'
Oct 31 10:50:39.267: INFO: stderr: ""
Oct 31 10:50:39.267: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-8157-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:50:42.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "crd-publish-openapi-4340" for this suite. 10/31/23 10:50:42.695
------------------------------
â€¢ [SLOW TEST] [14.780 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/apimachinery/crd_publish_openapi.go:153

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:50:27.999
    Oct 31 10:50:27.999: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename crd-publish-openapi 10/31/23 10:50:28.001
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:50:28.203
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:50:28.346
    [BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [It] works for CRD without validation schema [Conformance]
      test/e2e/apimachinery/crd_publish_openapi.go:153
    Oct 31 10:50:28.397: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties 10/31/23 10:50:36.504
    Oct 31 10:50:36.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 --namespace=crd-publish-openapi-4340 create -f -'
    Oct 31 10:50:37.701: INFO: stderr: ""
    Oct 31 10:50:37.701: INFO: stdout: "e2e-test-crd-publish-openapi-8157-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Oct 31 10:50:37.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 --namespace=crd-publish-openapi-4340 delete e2e-test-crd-publish-openapi-8157-crds test-cr'
    Oct 31 10:50:37.995: INFO: stderr: ""
    Oct 31 10:50:37.995: INFO: stdout: "e2e-test-crd-publish-openapi-8157-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    Oct 31 10:50:37.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 --namespace=crd-publish-openapi-4340 apply -f -'
    Oct 31 10:50:38.596: INFO: stderr: ""
    Oct 31 10:50:38.596: INFO: stdout: "e2e-test-crd-publish-openapi-8157-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
    Oct 31 10:50:38.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 --namespace=crd-publish-openapi-4340 delete e2e-test-crd-publish-openapi-8157-crds test-cr'
    Oct 31 10:50:38.841: INFO: stderr: ""
    Oct 31 10:50:38.841: INFO: stdout: "e2e-test-crd-publish-openapi-8157-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
    STEP: kubectl explain works to explain CR without validation schema 10/31/23 10:50:38.841
    Oct 31 10:50:38.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=crd-publish-openapi-4340 explain e2e-test-crd-publish-openapi-8157-crds'
    Oct 31 10:50:39.267: INFO: stderr: ""
    Oct 31 10:50:39.267: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-8157-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
    [AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:50:42.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "crd-publish-openapi-4340" for this suite. 10/31/23 10:50:42.695
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial]
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:130
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:50:42.783
Oct 31 10:50:42.783: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename sched-preemption 10/31/23 10:50:42.784
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:50:43.173
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:50:43.275
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:97
Oct 31 10:50:43.584: INFO: Waiting up to 1m0s for all nodes to be ready
Oct 31 10:51:43.898: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:130
STEP: Create pods that use 4/5 of node resources. 10/31/23 10:51:43.927
Oct 31 10:51:44.045: INFO: Created pod: pod0-0-sched-preemption-low-priority
Oct 31 10:51:44.067: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Oct 31 10:51:44.172: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Oct 31 10:51:44.198: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Oct 31 10:51:44.359: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Oct 31 10:51:44.382: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled. 10/31/23 10:51:44.382
Oct 31 10:51:44.382: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-6937" to be "running"
Oct 31 10:51:44.462: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 80.085698ms
Oct 31 10:51:46.469: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.087577784s
Oct 31 10:51:46.469: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
Oct 31 10:51:46.469: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
Oct 31 10:51:46.541: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 72.149446ms
Oct 31 10:51:46.542: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
Oct 31 10:51:46.542: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
Oct 31 10:51:46.551: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 9.84425ms
Oct 31 10:51:46.551: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
Oct 31 10:51:46.551: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
Oct 31 10:51:46.649: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 97.882323ms
Oct 31 10:51:46.649: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
Oct 31 10:51:46.649: INFO: Waiting up to 5m0s for pod "pod2-0-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
Oct 31 10:51:46.703: INFO: Pod "pod2-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 53.797658ms
Oct 31 10:51:46.704: INFO: Pod "pod2-0-sched-preemption-medium-priority" satisfied condition "running"
Oct 31 10:51:46.704: INFO: Waiting up to 5m0s for pod "pod2-1-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
Oct 31 10:51:46.752: INFO: Pod "pod2-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 48.197911ms
Oct 31 10:51:46.752: INFO: Pod "pod2-1-sched-preemption-medium-priority" satisfied condition "running"
STEP: Run a high priority pod that has same requirements as that of lower priority pod 10/31/23 10:51:46.752
Oct 31 10:51:46.815: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-6937" to be "running"
Oct 31 10:51:46.898: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 82.944781ms
Oct 31 10:51:48.906: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.091463249s
Oct 31 10:51:50.913: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.09793612s
Oct 31 10:51:52.907: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.091946801s
Oct 31 10:51:52.907: INFO: Pod "preemptor-pod" satisfied condition "running"
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:51:53.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:84
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "sched-preemption-6937" for this suite. 10/31/23 10:51:53.832
------------------------------
â€¢ [SLOW TEST] [71.106 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/scheduling/preemption.go:130

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:50:42.783
    Oct 31 10:50:42.783: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename sched-preemption 10/31/23 10:50:42.784
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:50:43.173
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:50:43.275
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:97
    Oct 31 10:50:43.584: INFO: Waiting up to 1m0s for all nodes to be ready
    Oct 31 10:51:43.898: INFO: Waiting for terminating namespaces to be deleted...
    [It] validates basic preemption works [Conformance]
      test/e2e/scheduling/preemption.go:130
    STEP: Create pods that use 4/5 of node resources. 10/31/23 10:51:43.927
    Oct 31 10:51:44.045: INFO: Created pod: pod0-0-sched-preemption-low-priority
    Oct 31 10:51:44.067: INFO: Created pod: pod0-1-sched-preemption-medium-priority
    Oct 31 10:51:44.172: INFO: Created pod: pod1-0-sched-preemption-medium-priority
    Oct 31 10:51:44.198: INFO: Created pod: pod1-1-sched-preemption-medium-priority
    Oct 31 10:51:44.359: INFO: Created pod: pod2-0-sched-preemption-medium-priority
    Oct 31 10:51:44.382: INFO: Created pod: pod2-1-sched-preemption-medium-priority
    STEP: Wait for pods to be scheduled. 10/31/23 10:51:44.382
    Oct 31 10:51:44.382: INFO: Waiting up to 5m0s for pod "pod0-0-sched-preemption-low-priority" in namespace "sched-preemption-6937" to be "running"
    Oct 31 10:51:44.462: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Pending", Reason="", readiness=false. Elapsed: 80.085698ms
    Oct 31 10:51:46.469: INFO: Pod "pod0-0-sched-preemption-low-priority": Phase="Running", Reason="", readiness=true. Elapsed: 2.087577784s
    Oct 31 10:51:46.469: INFO: Pod "pod0-0-sched-preemption-low-priority" satisfied condition "running"
    Oct 31 10:51:46.469: INFO: Waiting up to 5m0s for pod "pod0-1-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
    Oct 31 10:51:46.541: INFO: Pod "pod0-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 72.149446ms
    Oct 31 10:51:46.542: INFO: Pod "pod0-1-sched-preemption-medium-priority" satisfied condition "running"
    Oct 31 10:51:46.542: INFO: Waiting up to 5m0s for pod "pod1-0-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
    Oct 31 10:51:46.551: INFO: Pod "pod1-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 9.84425ms
    Oct 31 10:51:46.551: INFO: Pod "pod1-0-sched-preemption-medium-priority" satisfied condition "running"
    Oct 31 10:51:46.551: INFO: Waiting up to 5m0s for pod "pod1-1-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
    Oct 31 10:51:46.649: INFO: Pod "pod1-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 97.882323ms
    Oct 31 10:51:46.649: INFO: Pod "pod1-1-sched-preemption-medium-priority" satisfied condition "running"
    Oct 31 10:51:46.649: INFO: Waiting up to 5m0s for pod "pod2-0-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
    Oct 31 10:51:46.703: INFO: Pod "pod2-0-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 53.797658ms
    Oct 31 10:51:46.704: INFO: Pod "pod2-0-sched-preemption-medium-priority" satisfied condition "running"
    Oct 31 10:51:46.704: INFO: Waiting up to 5m0s for pod "pod2-1-sched-preemption-medium-priority" in namespace "sched-preemption-6937" to be "running"
    Oct 31 10:51:46.752: INFO: Pod "pod2-1-sched-preemption-medium-priority": Phase="Running", Reason="", readiness=true. Elapsed: 48.197911ms
    Oct 31 10:51:46.752: INFO: Pod "pod2-1-sched-preemption-medium-priority" satisfied condition "running"
    STEP: Run a high priority pod that has same requirements as that of lower priority pod 10/31/23 10:51:46.752
    Oct 31 10:51:46.815: INFO: Waiting up to 2m0s for pod "preemptor-pod" in namespace "sched-preemption-6937" to be "running"
    Oct 31 10:51:46.898: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 82.944781ms
    Oct 31 10:51:48.906: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 2.091463249s
    Oct 31 10:51:50.913: INFO: Pod "preemptor-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 4.09793612s
    Oct 31 10:51:52.907: INFO: Pod "preemptor-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.091946801s
    Oct 31 10:51:52.907: INFO: Pod "preemptor-pod" satisfied condition "running"
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:51:53.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/scheduling/preemption.go:84
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-scheduling] SchedulerPreemption [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "sched-preemption-6937" for this suite. 10/31/23 10:51:53.832
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
[BeforeEach] [sig-storage] ConfigMap
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:51:53.89
Oct 31 10:51:53.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename configmap 10/31/23 10:51:53.892
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:51:54.122
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:51:54.217
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89
STEP: Creating configMap with name configmap-test-volume-map-8ad17ab4-53f7-482a-a569-55c9a7c58f0e 10/31/23 10:51:54.298
STEP: Creating a pod to test consume configMaps 10/31/23 10:51:54.389
Oct 31 10:51:54.414: INFO: Waiting up to 5m0s for pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1" in namespace "configmap-912" to be "Succeeded or Failed"
Oct 31 10:51:54.462: INFO: Pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1": Phase="Pending", Reason="", readiness=false. Elapsed: 48.694321ms
Oct 31 10:51:56.513: INFO: Pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1": Phase="Running", Reason="", readiness=false. Elapsed: 2.099609209s
Oct 31 10:51:58.471: INFO: Pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.057615609s
STEP: Saw pod success 10/31/23 10:51:58.471
Oct 31 10:51:58.471: INFO: Pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1" satisfied condition "Succeeded or Failed"
Oct 31 10:51:58.523: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1 container agnhost-container: <nil>
STEP: delete the pod 10/31/23 10:51:58.764
Oct 31 10:51:58.842: INFO: Waiting for pod pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1 to disappear
Oct 31 10:51:58.950: INFO: Pod pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/node/init/init.go:32
Oct 31 10:51:58.951: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] ConfigMap
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] ConfigMap
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] ConfigMap
  tear down framework | framework.go:193
STEP: Destroying namespace "configmap-912" for this suite. 10/31/23 10:51:58.993
------------------------------
â€¢ [SLOW TEST] [5.177 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/common/storage/configmap_volume.go:89

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] ConfigMap
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:51:53.89
    Oct 31 10:51:53.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename configmap 10/31/23 10:51:53.892
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:51:54.122
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:51:54.217
    [BeforeEach] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
      test/e2e/common/storage/configmap_volume.go:89
    STEP: Creating configMap with name configmap-test-volume-map-8ad17ab4-53f7-482a-a569-55c9a7c58f0e 10/31/23 10:51:54.298
    STEP: Creating a pod to test consume configMaps 10/31/23 10:51:54.389
    Oct 31 10:51:54.414: INFO: Waiting up to 5m0s for pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1" in namespace "configmap-912" to be "Succeeded or Failed"
    Oct 31 10:51:54.462: INFO: Pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1": Phase="Pending", Reason="", readiness=false. Elapsed: 48.694321ms
    Oct 31 10:51:56.513: INFO: Pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1": Phase="Running", Reason="", readiness=false. Elapsed: 2.099609209s
    Oct 31 10:51:58.471: INFO: Pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.057615609s
    STEP: Saw pod success 10/31/23 10:51:58.471
    Oct 31 10:51:58.471: INFO: Pod "pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1" satisfied condition "Succeeded or Failed"
    Oct 31 10:51:58.523: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1 container agnhost-container: <nil>
    STEP: delete the pod 10/31/23 10:51:58.764
    Oct 31 10:51:58.842: INFO: Waiting for pod pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1 to disappear
    Oct 31 10:51:58.950: INFO: Pod pod-configmaps-1850dbdb-9e23-46ce-99c0-557d12dd44d1 no longer exists
    [AfterEach] [sig-storage] ConfigMap
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:51:58.951: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] ConfigMap
      tear down framework | framework.go:193
    STEP: Destroying namespace "configmap-912" for this suite. 10/31/23 10:51:58.993
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
[BeforeEach] [sig-apps] CronJob
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:51:59.068
Oct 31 10:51:59.068: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename cronjob 10/31/23 10:51:59.073
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:51:59.279
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:51:59.42
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:31
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160
STEP: Creating a ReplaceConcurrent cronjob 10/31/23 10:51:59.542
STEP: Ensuring a job is scheduled 10/31/23 10:51:59.601
STEP: Ensuring exactly one is scheduled 10/31/23 10:52:01.634
STEP: Ensuring exactly one running job exists by listing jobs explicitly 10/31/23 10:52:01.712
STEP: Ensuring the job is replaced with a new one 10/31/23 10:52:01.762
STEP: Removing cronjob 10/31/23 10:53:01.784
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/node/init/init.go:32
Oct 31 10:53:01.869: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] CronJob
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] CronJob
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] CronJob
  tear down framework | framework.go:193
STEP: Destroying namespace "cronjob-6967" for this suite. 10/31/23 10:53:01.922
------------------------------
â€¢ [SLOW TEST] [62.921 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/apps/cronjob.go:160

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] CronJob
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:51:59.068
    Oct 31 10:51:59.068: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename cronjob 10/31/23 10:51:59.073
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:51:59.279
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:51:59.42
    [BeforeEach] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:31
    [It] should replace jobs when ReplaceConcurrent [Conformance]
      test/e2e/apps/cronjob.go:160
    STEP: Creating a ReplaceConcurrent cronjob 10/31/23 10:51:59.542
    STEP: Ensuring a job is scheduled 10/31/23 10:51:59.601
    STEP: Ensuring exactly one is scheduled 10/31/23 10:52:01.634
    STEP: Ensuring exactly one running job exists by listing jobs explicitly 10/31/23 10:52:01.712
    STEP: Ensuring the job is replaced with a new one 10/31/23 10:52:01.762
    STEP: Removing cronjob 10/31/23 10:53:01.784
    [AfterEach] [sig-apps] CronJob
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:53:01.869: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] CronJob
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] CronJob
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] CronJob
      tear down framework | framework.go:193
    STEP: Destroying namespace "cronjob-6967" for this suite. 10/31/23 10:53:01.922
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
[BeforeEach] [sig-network] Networking
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:53:01.997
Oct 31 10:53:01.997: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pod-network-test 10/31/23 10:53:01.998
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:53:02.177
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:53:02.313
[BeforeEach] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:31
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/network/networking.go:122
STEP: Performing setup for networking test in namespace pod-network-test-355 10/31/23 10:53:02.462
STEP: creating a selector 10/31/23 10:53:02.462
STEP: Creating the service pods in kubernetes 10/31/23 10:53:02.463
Oct 31 10:53:02.463: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Oct 31 10:53:02.611: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-355" to be "running and ready"
Oct 31 10:53:02.623: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 11.848448ms
Oct 31 10:53:02.623: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:53:04.637: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.02603848s
Oct 31 10:53:04.637: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:06.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.02311427s
Oct 31 10:53:06.635: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:08.673: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.062068857s
Oct 31 10:53:08.674: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:10.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.022211952s
Oct 31 10:53:10.634: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:12.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.020736421s
Oct 31 10:53:12.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:14.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.020961989s
Oct 31 10:53:14.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:16.630: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.018849677s
Oct 31 10:53:16.630: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:18.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.0208214s
Oct 31 10:53:18.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:20.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.020385056s
Oct 31 10:53:20.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:22.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.02016869s
Oct 31 10:53:22.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
Oct 31 10:53:24.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.022269488s
Oct 31 10:53:24.634: INFO: The phase of Pod netserver-0 is Running (Ready = true)
Oct 31 10:53:24.634: INFO: Pod "netserver-0" satisfied condition "running and ready"
Oct 31 10:53:24.685: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-355" to be "running and ready"
Oct 31 10:53:24.756: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 70.554265ms
Oct 31 10:53:24.756: INFO: The phase of Pod netserver-1 is Running (Ready = false)
Oct 31 10:53:26.768: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 2.08332119s
Oct 31 10:53:26.768: INFO: The phase of Pod netserver-1 is Running (Ready = false)
Oct 31 10:53:28.785: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 4.100392422s
Oct 31 10:53:28.785: INFO: The phase of Pod netserver-1 is Running (Ready = false)
Oct 31 10:53:30.764: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 6.079068106s
Oct 31 10:53:30.764: INFO: The phase of Pod netserver-1 is Running (Ready = false)
Oct 31 10:53:32.809: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 8.124278519s
Oct 31 10:53:32.809: INFO: The phase of Pod netserver-1 is Running (Ready = false)
Oct 31 10:53:34.768: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 10.083423547s
Oct 31 10:53:34.769: INFO: The phase of Pod netserver-1 is Running (Ready = false)
Oct 31 10:53:36.764: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 12.078711671s
Oct 31 10:53:36.764: INFO: The phase of Pod netserver-1 is Running (Ready = false)
Oct 31 10:53:38.764: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 14.078870933s
Oct 31 10:53:38.764: INFO: The phase of Pod netserver-1 is Running (Ready = true)
Oct 31 10:53:38.764: INFO: Pod "netserver-1" satisfied condition "running and ready"
Oct 31 10:53:38.812: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-355" to be "running and ready"
Oct 31 10:53:38.905: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 93.060441ms
Oct 31 10:53:38.906: INFO: The phase of Pod netserver-2 is Running (Ready = true)
Oct 31 10:53:38.906: INFO: Pod "netserver-2" satisfied condition "running and ready"
STEP: Creating test pods 10/31/23 10:53:38.973
Oct 31 10:53:39.096: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-355" to be "running"
Oct 31 10:53:39.111: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 14.924506ms
Oct 31 10:53:41.119: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.022674981s
Oct 31 10:53:41.119: INFO: Pod "test-container-pod" satisfied condition "running"
Oct 31 10:53:41.213: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-355" to be "running"
Oct 31 10:53:41.220: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.895404ms
Oct 31 10:53:41.220: INFO: Pod "host-test-container-pod" satisfied condition "running"
Oct 31 10:53:41.290: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Oct 31 10:53:41.290: INFO: Going to poll 10.200.1.113 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Oct 31 10:53:41.341: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.1.113 8081 | grep -v '^\s*$'] Namespace:pod-network-test-355 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:53:41.341: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:53:41.342: INFO: ExecWithOptions: Clientset creation
Oct 31 10:53:41.342: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-355/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.1.113+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Oct 31 10:53:43.160: INFO: Found all 1 expected endpoints: [netserver-0]
Oct 31 10:53:43.160: INFO: Going to poll 10.200.2.8 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Oct 31 10:53:43.229: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.2.8 8081 | grep -v '^\s*$'] Namespace:pod-network-test-355 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:53:43.229: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:53:43.231: INFO: ExecWithOptions: Clientset creation
Oct 31 10:53:43.231: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-355/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.2.8+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Oct 31 10:53:44.999: INFO: Found all 1 expected endpoints: [netserver-1]
Oct 31 10:53:44.999: INFO: Going to poll 10.200.0.160 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Oct 31 10:53:45.089: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.0.160 8081 | grep -v '^\s*$'] Namespace:pod-network-test-355 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Oct 31 10:53:45.089: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
Oct 31 10:53:45.090: INFO: ExecWithOptions: Clientset creation
Oct 31 10:53:45.090: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-355/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.0.160+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Oct 31 10:53:46.663: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/node/init/init.go:32
Oct 31 10:53:46.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-network] Networking
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-network] Networking
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-network] Networking
  tear down framework | framework.go:193
STEP: Destroying namespace "pod-network-test-355" for this suite. 10/31/23 10:53:46.719
------------------------------
â€¢ [SLOW TEST] [44.769 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/common/network/networking.go:122

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-network] Networking
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:53:01.997
    Oct 31 10:53:01.997: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pod-network-test 10/31/23 10:53:01.998
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:53:02.177
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:53:02.313
    [BeforeEach] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:31
    [It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/network/networking.go:122
    STEP: Performing setup for networking test in namespace pod-network-test-355 10/31/23 10:53:02.462
    STEP: creating a selector 10/31/23 10:53:02.462
    STEP: Creating the service pods in kubernetes 10/31/23 10:53:02.463
    Oct 31 10:53:02.463: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
    Oct 31 10:53:02.611: INFO: Waiting up to 5m0s for pod "netserver-0" in namespace "pod-network-test-355" to be "running and ready"
    Oct 31 10:53:02.623: INFO: Pod "netserver-0": Phase="Pending", Reason="", readiness=false. Elapsed: 11.848448ms
    Oct 31 10:53:02.623: INFO: The phase of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:53:04.637: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 2.02603848s
    Oct 31 10:53:04.637: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:06.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 4.02311427s
    Oct 31 10:53:06.635: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:08.673: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 6.062068857s
    Oct 31 10:53:08.674: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:10.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 8.022211952s
    Oct 31 10:53:10.634: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:12.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 10.020736421s
    Oct 31 10:53:12.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:14.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 12.020961989s
    Oct 31 10:53:14.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:16.630: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 14.018849677s
    Oct 31 10:53:16.630: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:18.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 16.0208214s
    Oct 31 10:53:18.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:20.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 18.020385056s
    Oct 31 10:53:20.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:22.632: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=false. Elapsed: 20.02016869s
    Oct 31 10:53:22.632: INFO: The phase of Pod netserver-0 is Running (Ready = false)
    Oct 31 10:53:24.634: INFO: Pod "netserver-0": Phase="Running", Reason="", readiness=true. Elapsed: 22.022269488s
    Oct 31 10:53:24.634: INFO: The phase of Pod netserver-0 is Running (Ready = true)
    Oct 31 10:53:24.634: INFO: Pod "netserver-0" satisfied condition "running and ready"
    Oct 31 10:53:24.685: INFO: Waiting up to 5m0s for pod "netserver-1" in namespace "pod-network-test-355" to be "running and ready"
    Oct 31 10:53:24.756: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 70.554265ms
    Oct 31 10:53:24.756: INFO: The phase of Pod netserver-1 is Running (Ready = false)
    Oct 31 10:53:26.768: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 2.08332119s
    Oct 31 10:53:26.768: INFO: The phase of Pod netserver-1 is Running (Ready = false)
    Oct 31 10:53:28.785: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 4.100392422s
    Oct 31 10:53:28.785: INFO: The phase of Pod netserver-1 is Running (Ready = false)
    Oct 31 10:53:30.764: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 6.079068106s
    Oct 31 10:53:30.764: INFO: The phase of Pod netserver-1 is Running (Ready = false)
    Oct 31 10:53:32.809: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 8.124278519s
    Oct 31 10:53:32.809: INFO: The phase of Pod netserver-1 is Running (Ready = false)
    Oct 31 10:53:34.768: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 10.083423547s
    Oct 31 10:53:34.769: INFO: The phase of Pod netserver-1 is Running (Ready = false)
    Oct 31 10:53:36.764: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=false. Elapsed: 12.078711671s
    Oct 31 10:53:36.764: INFO: The phase of Pod netserver-1 is Running (Ready = false)
    Oct 31 10:53:38.764: INFO: Pod "netserver-1": Phase="Running", Reason="", readiness=true. Elapsed: 14.078870933s
    Oct 31 10:53:38.764: INFO: The phase of Pod netserver-1 is Running (Ready = true)
    Oct 31 10:53:38.764: INFO: Pod "netserver-1" satisfied condition "running and ready"
    Oct 31 10:53:38.812: INFO: Waiting up to 5m0s for pod "netserver-2" in namespace "pod-network-test-355" to be "running and ready"
    Oct 31 10:53:38.905: INFO: Pod "netserver-2": Phase="Running", Reason="", readiness=true. Elapsed: 93.060441ms
    Oct 31 10:53:38.906: INFO: The phase of Pod netserver-2 is Running (Ready = true)
    Oct 31 10:53:38.906: INFO: Pod "netserver-2" satisfied condition "running and ready"
    STEP: Creating test pods 10/31/23 10:53:38.973
    Oct 31 10:53:39.096: INFO: Waiting up to 5m0s for pod "test-container-pod" in namespace "pod-network-test-355" to be "running"
    Oct 31 10:53:39.111: INFO: Pod "test-container-pod": Phase="Pending", Reason="", readiness=false. Elapsed: 14.924506ms
    Oct 31 10:53:41.119: INFO: Pod "test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 2.022674981s
    Oct 31 10:53:41.119: INFO: Pod "test-container-pod" satisfied condition "running"
    Oct 31 10:53:41.213: INFO: Waiting up to 5m0s for pod "host-test-container-pod" in namespace "pod-network-test-355" to be "running"
    Oct 31 10:53:41.220: INFO: Pod "host-test-container-pod": Phase="Running", Reason="", readiness=true. Elapsed: 6.895404ms
    Oct 31 10:53:41.220: INFO: Pod "host-test-container-pod" satisfied condition "running"
    Oct 31 10:53:41.290: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
    Oct 31 10:53:41.290: INFO: Going to poll 10.200.1.113 on port 8081 at least 0 times, with a maximum of 39 tries before failing
    Oct 31 10:53:41.341: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.1.113 8081 | grep -v '^\s*$'] Namespace:pod-network-test-355 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:53:41.341: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:53:41.342: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:53:41.342: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-355/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.1.113+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Oct 31 10:53:43.160: INFO: Found all 1 expected endpoints: [netserver-0]
    Oct 31 10:53:43.160: INFO: Going to poll 10.200.2.8 on port 8081 at least 0 times, with a maximum of 39 tries before failing
    Oct 31 10:53:43.229: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.2.8 8081 | grep -v '^\s*$'] Namespace:pod-network-test-355 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:53:43.229: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:53:43.231: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:53:43.231: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-355/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.2.8+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Oct 31 10:53:44.999: INFO: Found all 1 expected endpoints: [netserver-1]
    Oct 31 10:53:44.999: INFO: Going to poll 10.200.0.160 on port 8081 at least 0 times, with a maximum of 39 tries before failing
    Oct 31 10:53:45.089: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.200.0.160 8081 | grep -v '^\s*$'] Namespace:pod-network-test-355 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
    Oct 31 10:53:45.089: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    Oct 31 10:53:45.090: INFO: ExecWithOptions: Clientset creation
    Oct 31 10:53:45.090: INFO: ExecWithOptions: execute(POST https://10.93.0.1:443/api/v1/namespaces/pod-network-test-355/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.200.0.160+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
    Oct 31 10:53:46.663: INFO: Found all 1 expected endpoints: [netserver-2]
    [AfterEach] [sig-network] Networking
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:53:46.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-network] Networking
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-network] Networking
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-network] Networking
      tear down framework | framework.go:193
    STEP: Destroying namespace "pod-network-test-355" for this suite. 10/31/23 10:53:46.719
  << End Captured GinkgoWriter Output
------------------------------
SSSS
------------------------------
[sig-node] Secrets
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
[BeforeEach] [sig-node] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:53:46.767
Oct 31 10:53:46.767: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 10:53:46.769
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:53:46.916
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:53:47.051
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140
STEP: Creating projection with secret that has name secret-emptykey-test-9359f034-051a-4c3c-8b86-33480645007f 10/31/23 10:53:47.152
[AfterEach] [sig-node] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 10:53:47.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-5430" for this suite. 10/31/23 10:53:47.296
------------------------------
â€¢ [0.587 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/common/node/secrets.go:140

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:53:46.767
    Oct 31 10:53:46.767: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 10:53:46.769
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:53:46.916
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:53:47.051
    [BeforeEach] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should fail to create secret due to empty secret key [Conformance]
      test/e2e/common/node/secrets.go:140
    STEP: Creating projection with secret that has name secret-emptykey-test-9359f034-051a-4c3c-8b86-33480645007f 10/31/23 10:53:47.152
    [AfterEach] [sig-node] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:53:47.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-5430" for this suite. 10/31/23 10:53:47.296
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial]
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:53:47.357
Oct 31 10:53:47.357: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename namespaces 10/31/23 10:53:47.359
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:53:47.517
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:53:47.656
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:31
[It] should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394
STEP: Creating namespace "e2e-ns-cst59" 10/31/23 10:53:47.749
Oct 31 10:53:47.949: INFO: Namespace "e2e-ns-cst59-4505" has []v1.FinalizerName{"kubernetes"}
STEP: Adding e2e finalizer to namespace "e2e-ns-cst59-4505" 10/31/23 10:53:47.949
Oct 31 10:53:48.094: INFO: Namespace "e2e-ns-cst59-4505" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
STEP: Removing e2e finalizer from namespace "e2e-ns-cst59-4505" 10/31/23 10:53:48.094
Oct 31 10:53:48.243: INFO: Namespace "e2e-ns-cst59-4505" has []v1.FinalizerName{"kubernetes"}
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:53:48.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "namespaces-5338" for this suite. 10/31/23 10:53:48.3
STEP: Destroying namespace "e2e-ns-cst59-4505" for this suite. 10/31/23 10:53:48.323
------------------------------
â€¢ [1.026 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should apply a finalizer to a Namespace [Conformance]
  test/e2e/apimachinery/namespace.go:394

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:53:47.357
    Oct 31 10:53:47.357: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename namespaces 10/31/23 10:53:47.359
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:53:47.517
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:53:47.656
    [BeforeEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [It] should apply a finalizer to a Namespace [Conformance]
      test/e2e/apimachinery/namespace.go:394
    STEP: Creating namespace "e2e-ns-cst59" 10/31/23 10:53:47.749
    Oct 31 10:53:47.949: INFO: Namespace "e2e-ns-cst59-4505" has []v1.FinalizerName{"kubernetes"}
    STEP: Adding e2e finalizer to namespace "e2e-ns-cst59-4505" 10/31/23 10:53:47.949
    Oct 31 10:53:48.094: INFO: Namespace "e2e-ns-cst59-4505" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
    STEP: Removing e2e finalizer from namespace "e2e-ns-cst59-4505" 10/31/23 10:53:48.094
    Oct 31 10:53:48.243: INFO: Namespace "e2e-ns-cst59-4505" has []v1.FinalizerName{"kubernetes"}
    [AfterEach] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:53:48.243: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] Namespaces [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "namespaces-5338" for this suite. 10/31/23 10:53:48.3
    STEP: Destroying namespace "e2e-ns-cst59-4505" for this suite. 10/31/23 10:53:48.323
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes
  should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
[BeforeEach] [sig-storage] Subpath
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:53:48.395
Oct 31 10:53:48.395: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename subpath 10/31/23 10:53:48.396
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:53:48.557
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:53:48.731
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data 10/31/23 10:53:48.785
[It] should support subpaths with secret pod [Conformance]
  test/e2e/storage/subpath.go:60
STEP: Creating pod pod-subpath-test-secret-sxqc 10/31/23 10:53:49.007
STEP: Creating a pod to test atomic-volume-subpath 10/31/23 10:53:49.007
Oct 31 10:53:49.068: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-sxqc" in namespace "subpath-476" to be "Succeeded or Failed"
Oct 31 10:53:49.246: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Pending", Reason="", readiness=false. Elapsed: 177.403329ms
Oct 31 10:53:51.262: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 2.194031307s
Oct 31 10:53:53.256: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 4.18798191s
Oct 31 10:53:55.254: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 6.186240409s
Oct 31 10:53:57.254: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 8.185816971s
Oct 31 10:53:59.256: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 10.188121929s
Oct 31 10:54:01.255: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 12.187052329s
Oct 31 10:54:03.257: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 14.188460605s
Oct 31 10:54:05.297: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 16.229202113s
Oct 31 10:54:07.255: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 18.186535841s
Oct 31 10:54:09.256: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 20.187673876s
Oct 31 10:54:11.257: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=false. Elapsed: 22.188619919s
Oct 31 10:54:13.253: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.185186759s
STEP: Saw pod success 10/31/23 10:54:13.253
Oct 31 10:54:13.254: INFO: Pod "pod-subpath-test-secret-sxqc" satisfied condition "Succeeded or Failed"
Oct 31 10:54:13.353: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-subpath-test-secret-sxqc container test-container-subpath-secret-sxqc: <nil>
STEP: delete the pod 10/31/23 10:54:13.617
Oct 31 10:54:13.685: INFO: Waiting for pod pod-subpath-test-secret-sxqc to disappear
Oct 31 10:54:13.739: INFO: Pod pod-subpath-test-secret-sxqc no longer exists
STEP: Deleting pod pod-subpath-test-secret-sxqc 10/31/23 10:54:13.739
Oct 31 10:54:13.740: INFO: Deleting pod "pod-subpath-test-secret-sxqc" in namespace "subpath-476"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/node/init/init.go:32
Oct 31 10:54:13.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Subpath
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Subpath
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Subpath
  tear down framework | framework.go:193
STEP: Destroying namespace "subpath-476" for this suite. 10/31/23 10:54:13.848
------------------------------
â€¢ [SLOW TEST] [25.481 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/storage/subpath.go:60

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Subpath
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:53:48.395
    Oct 31 10:53:48.395: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename subpath 10/31/23 10:53:48.396
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:53:48.557
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:53:48.731
    [BeforeEach] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] Atomic writer volumes
      test/e2e/storage/subpath.go:40
    STEP: Setting up data 10/31/23 10:53:48.785
    [It] should support subpaths with secret pod [Conformance]
      test/e2e/storage/subpath.go:60
    STEP: Creating pod pod-subpath-test-secret-sxqc 10/31/23 10:53:49.007
    STEP: Creating a pod to test atomic-volume-subpath 10/31/23 10:53:49.007
    Oct 31 10:53:49.068: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-sxqc" in namespace "subpath-476" to be "Succeeded or Failed"
    Oct 31 10:53:49.246: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Pending", Reason="", readiness=false. Elapsed: 177.403329ms
    Oct 31 10:53:51.262: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 2.194031307s
    Oct 31 10:53:53.256: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 4.18798191s
    Oct 31 10:53:55.254: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 6.186240409s
    Oct 31 10:53:57.254: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 8.185816971s
    Oct 31 10:53:59.256: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 10.188121929s
    Oct 31 10:54:01.255: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 12.187052329s
    Oct 31 10:54:03.257: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 14.188460605s
    Oct 31 10:54:05.297: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 16.229202113s
    Oct 31 10:54:07.255: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 18.186535841s
    Oct 31 10:54:09.256: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=true. Elapsed: 20.187673876s
    Oct 31 10:54:11.257: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Running", Reason="", readiness=false. Elapsed: 22.188619919s
    Oct 31 10:54:13.253: INFO: Pod "pod-subpath-test-secret-sxqc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.185186759s
    STEP: Saw pod success 10/31/23 10:54:13.253
    Oct 31 10:54:13.254: INFO: Pod "pod-subpath-test-secret-sxqc" satisfied condition "Succeeded or Failed"
    Oct 31 10:54:13.353: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod pod-subpath-test-secret-sxqc container test-container-subpath-secret-sxqc: <nil>
    STEP: delete the pod 10/31/23 10:54:13.617
    Oct 31 10:54:13.685: INFO: Waiting for pod pod-subpath-test-secret-sxqc to disappear
    Oct 31 10:54:13.739: INFO: Pod pod-subpath-test-secret-sxqc no longer exists
    STEP: Deleting pod pod-subpath-test-secret-sxqc 10/31/23 10:54:13.739
    Oct 31 10:54:13.740: INFO: Deleting pod "pod-subpath-test-secret-sxqc" in namespace "subpath-476"
    [AfterEach] [sig-storage] Subpath
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:54:13.838: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Subpath
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Subpath
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Subpath
      tear down framework | framework.go:193
    STEP: Destroying namespace "subpath-476" for this suite. 10/31/23 10:54:13.848
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
[BeforeEach] [sig-storage] EmptyDir volumes
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:54:13.878
Oct 31 10:54:13.878: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename emptydir 10/31/23 10:54:13.88
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:14.011
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:14.158
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:31
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117
STEP: Creating a pod to test emptydir 0777 on tmpfs 10/31/23 10:54:14.252
Oct 31 10:54:14.310: INFO: Waiting up to 5m0s for pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9" in namespace "emptydir-8907" to be "Succeeded or Failed"
Oct 31 10:54:14.325: INFO: Pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9": Phase="Pending", Reason="", readiness=false. Elapsed: 15.107264ms
Oct 31 10:54:16.333: INFO: Pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023171275s
Oct 31 10:54:18.347: INFO: Pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03709292s
STEP: Saw pod success 10/31/23 10:54:18.347
Oct 31 10:54:18.347: INFO: Pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9" satisfied condition "Succeeded or Failed"
Oct 31 10:54:18.397: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-52ea86f5-9171-4741-9ca3-f13e04166db9 container test-container: <nil>
STEP: delete the pod 10/31/23 10:54:18.573
Oct 31 10:54:18.597: INFO: Waiting for pod pod-52ea86f5-9171-4741-9ca3-f13e04166db9 to disappear
Oct 31 10:54:18.649: INFO: Pod pod-52ea86f5-9171-4741-9ca3-f13e04166db9 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/node/init/init.go:32
Oct 31 10:54:18.650: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] EmptyDir volumes
  tear down framework | framework.go:193
STEP: Destroying namespace "emptydir-8907" for this suite. 10/31/23 10:54:18.712
------------------------------
â€¢ [4.846 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/common/storage/empty_dir.go:117

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] EmptyDir volumes
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:54:13.878
    Oct 31 10:54:13.878: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename emptydir 10/31/23 10:54:13.88
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:14.011
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:14.158
    [BeforeEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:31
    [It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
      test/e2e/common/storage/empty_dir.go:117
    STEP: Creating a pod to test emptydir 0777 on tmpfs 10/31/23 10:54:14.252
    Oct 31 10:54:14.310: INFO: Waiting up to 5m0s for pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9" in namespace "emptydir-8907" to be "Succeeded or Failed"
    Oct 31 10:54:14.325: INFO: Pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9": Phase="Pending", Reason="", readiness=false. Elapsed: 15.107264ms
    Oct 31 10:54:16.333: INFO: Pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023171275s
    Oct 31 10:54:18.347: INFO: Pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03709292s
    STEP: Saw pod success 10/31/23 10:54:18.347
    Oct 31 10:54:18.347: INFO: Pod "pod-52ea86f5-9171-4741-9ca3-f13e04166db9" satisfied condition "Succeeded or Failed"
    Oct 31 10:54:18.397: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-52ea86f5-9171-4741-9ca3-f13e04166db9 container test-container: <nil>
    STEP: delete the pod 10/31/23 10:54:18.573
    Oct 31 10:54:18.597: INFO: Waiting for pod pod-52ea86f5-9171-4741-9ca3-f13e04166db9 to disappear
    Oct 31 10:54:18.649: INFO: Pod pod-52ea86f5-9171-4741-9ca3-f13e04166db9 no longer exists
    [AfterEach] [sig-storage] EmptyDir volumes
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:54:18.650: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] EmptyDir volumes
      tear down framework | framework.go:193
    STEP: Destroying namespace "emptydir-8907" for this suite. 10/31/23 10:54:18.712
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
[BeforeEach] [sig-storage] Secrets
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:54:18.735
Oct 31 10:54:18.735: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename secrets 10/31/23 10:54:18.736
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:18.901
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:19.079
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:31
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47
STEP: Creating secret with name secret-test-35f55d4f-d4e6-407d-9e9f-08045595d6e6 10/31/23 10:54:19.134
STEP: Creating a pod to test consume secrets 10/31/23 10:54:19.266
Oct 31 10:54:19.309: INFO: Waiting up to 5m0s for pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295" in namespace "secrets-9458" to be "Succeeded or Failed"
Oct 31 10:54:19.320: INFO: Pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295": Phase="Pending", Reason="", readiness=false. Elapsed: 10.878317ms
Oct 31 10:54:21.333: INFO: Pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023488717s
Oct 31 10:54:23.329: INFO: Pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019469422s
STEP: Saw pod success 10/31/23 10:54:23.329
Oct 31 10:54:23.330: INFO: Pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295" satisfied condition "Succeeded or Failed"
Oct 31 10:54:23.379: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295 container secret-volume-test: <nil>
STEP: delete the pod 10/31/23 10:54:23.473
Oct 31 10:54:23.538: INFO: Waiting for pod pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295 to disappear
Oct 31 10:54:23.652: INFO: Pod pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/node/init/init.go:32
Oct 31 10:54:23.653: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Secrets
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Secrets
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Secrets
  tear down framework | framework.go:193
STEP: Destroying namespace "secrets-9458" for this suite. 10/31/23 10:54:23.708
------------------------------
â€¢ [SLOW TEST] [5.026 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/common/storage/secrets_volume.go:47

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Secrets
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:54:18.735
    Oct 31 10:54:18.735: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename secrets 10/31/23 10:54:18.736
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:18.901
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:19.079
    [BeforeEach] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:31
    [It] should be consumable from pods in volume [NodeConformance] [Conformance]
      test/e2e/common/storage/secrets_volume.go:47
    STEP: Creating secret with name secret-test-35f55d4f-d4e6-407d-9e9f-08045595d6e6 10/31/23 10:54:19.134
    STEP: Creating a pod to test consume secrets 10/31/23 10:54:19.266
    Oct 31 10:54:19.309: INFO: Waiting up to 5m0s for pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295" in namespace "secrets-9458" to be "Succeeded or Failed"
    Oct 31 10:54:19.320: INFO: Pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295": Phase="Pending", Reason="", readiness=false. Elapsed: 10.878317ms
    Oct 31 10:54:21.333: INFO: Pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023488717s
    Oct 31 10:54:23.329: INFO: Pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019469422s
    STEP: Saw pod success 10/31/23 10:54:23.329
    Oct 31 10:54:23.330: INFO: Pod "pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295" satisfied condition "Succeeded or Failed"
    Oct 31 10:54:23.379: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz pod pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295 container secret-volume-test: <nil>
    STEP: delete the pod 10/31/23 10:54:23.473
    Oct 31 10:54:23.538: INFO: Waiting for pod pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295 to disappear
    Oct 31 10:54:23.652: INFO: Pod pod-secrets-7275ff90-327d-492d-a7bf-2ecf280e5295 no longer exists
    [AfterEach] [sig-storage] Secrets
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:54:23.653: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Secrets
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Secrets
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Secrets
      tear down framework | framework.go:193
    STEP: Destroying namespace "secrets-9458" for this suite. 10/31/23 10:54:23.708
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
[BeforeEach] [sig-instrumentation] Events API
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:54:23.768
Oct 31 10:54:23.768: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename events 10/31/23 10:54:23.769
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:23.948
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:24.13
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207
STEP: Create set of events 10/31/23 10:54:24.201
STEP: get a list of Events with a label in the current namespace 10/31/23 10:54:24.386
STEP: delete a list of events 10/31/23 10:54:24.436
Oct 31 10:54:24.436: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity 10/31/23 10:54:24.501
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/node/init/init.go:32
Oct 31 10:54:24.594: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-instrumentation] Events API
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-instrumentation] Events API
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-instrumentation] Events API
  tear down framework | framework.go:193
STEP: Destroying namespace "events-2847" for this suite. 10/31/23 10:54:24.65
------------------------------
â€¢ [0.934 seconds]
[sig-instrumentation] Events API
test/e2e/instrumentation/common/framework.go:23
  should delete a collection of events [Conformance]
  test/e2e/instrumentation/events.go:207

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-instrumentation] Events API
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:54:23.768
    Oct 31 10:54:23.768: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename events 10/31/23 10:54:23.769
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:23.948
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:24.13
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-instrumentation] Events API
      test/e2e/instrumentation/events.go:84
    [It] should delete a collection of events [Conformance]
      test/e2e/instrumentation/events.go:207
    STEP: Create set of events 10/31/23 10:54:24.201
    STEP: get a list of Events with a label in the current namespace 10/31/23 10:54:24.386
    STEP: delete a list of events 10/31/23 10:54:24.436
    Oct 31 10:54:24.436: INFO: requesting DeleteCollection of events
    STEP: check that the list of events matches the requested quantity 10/31/23 10:54:24.501
    [AfterEach] [sig-instrumentation] Events API
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:54:24.594: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-instrumentation] Events API
      tear down framework | framework.go:193
    STEP: Destroying namespace "events-2847" for this suite. 10/31/23 10:54:24.65
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:54:24.704
Oct 31 10:54:24.704: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 10:54:24.706
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:24.912
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:25.008
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 10:54:25.192
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:54:25.55
STEP: Deploying the webhook pod 10/31/23 10:54:25.599
STEP: Wait for the deployment to be ready 10/31/23 10:54:25.701
Oct 31 10:54:25.839: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 54, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 54, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 54, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 54, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 10:54:27.846
STEP: Verifying the service has paired with the endpoint 10/31/23 10:54:27.904
Oct 31 10:54:28.905: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221
Oct 31 10:54:28.970: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Registering the custom resource webhook via the AdmissionRegistration API 10/31/23 10:54:34.108
STEP: Creating a custom resource that should be denied by the webhook 10/31/23 10:54:34.401
STEP: Creating a custom resource whose deletion would be denied by the webhook 10/31/23 10:54:36.581
STEP: Updating the custom resource with disallowed data should be denied 10/31/23 10:54:36.734
STEP: Deleting the custom resource should be denied 10/31/23 10:54:36.917
STEP: Remove the offending key and value from the custom resource data 10/31/23 10:54:37.061
STEP: Deleting the updated custom resource should be successful 10/31/23 10:54:37.245
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:54:37.590: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-5797" for this suite. 10/31/23 10:54:37.899
STEP: Destroying namespace "webhook-5797-markers" for this suite. 10/31/23 10:54:37.998
------------------------------
â€¢ [SLOW TEST] [13.346 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/apimachinery/webhook.go:221

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:54:24.704
    Oct 31 10:54:24.704: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 10:54:24.706
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:24.912
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:25.008
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 10:54:25.192
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:54:25.55
    STEP: Deploying the webhook pod 10/31/23 10:54:25.599
    STEP: Wait for the deployment to be ready 10/31/23 10:54:25.701
    Oct 31 10:54:25.839: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 54, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 54, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 54, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 54, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 10:54:27.846
    STEP: Verifying the service has paired with the endpoint 10/31/23 10:54:27.904
    Oct 31 10:54:28.905: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should be able to deny custom resource creation, update and deletion [Conformance]
      test/e2e/apimachinery/webhook.go:221
    Oct 31 10:54:28.970: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Registering the custom resource webhook via the AdmissionRegistration API 10/31/23 10:54:34.108
    STEP: Creating a custom resource that should be denied by the webhook 10/31/23 10:54:34.401
    STEP: Creating a custom resource whose deletion would be denied by the webhook 10/31/23 10:54:36.581
    STEP: Updating the custom resource with disallowed data should be denied 10/31/23 10:54:36.734
    STEP: Deleting the custom resource should be denied 10/31/23 10:54:36.917
    STEP: Remove the offending key and value from the custom resource data 10/31/23 10:54:37.061
    STEP: Deleting the updated custom resource should be successful 10/31/23 10:54:37.245
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:54:37.590: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-5797" for this suite. 10/31/23 10:54:37.899
    STEP: Destroying namespace "webhook-5797-markers" for this suite. 10/31/23 10:54:37.998
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial]
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:54:38.052
Oct 31 10:54:38.052: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename controllerrevisions 10/31/23 10:54:38.053
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:38.243
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:38.393
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:93
[It] should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124
STEP: Creating DaemonSet "e2e-ltn5p-daemon-set" 10/31/23 10:54:38.675
STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:54:38.718
Oct 31 10:54:38.811: INFO: Number of nodes with available pods controlled by daemonset e2e-ltn5p-daemon-set: 0
Oct 31 10:54:38.811: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:54:39.850: INFO: Number of nodes with available pods controlled by daemonset e2e-ltn5p-daemon-set: 1
Oct 31 10:54:39.850: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
Oct 31 10:54:40.946: INFO: Number of nodes with available pods controlled by daemonset e2e-ltn5p-daemon-set: 3
Oct 31 10:54:40.946: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-ltn5p-daemon-set
STEP: Confirm DaemonSet "e2e-ltn5p-daemon-set" successfully created with "daemonset-name=e2e-ltn5p-daemon-set" label 10/31/23 10:54:41.009
STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-ltn5p-daemon-set" 10/31/23 10:54:41.126
Oct 31 10:54:41.175: INFO: Located ControllerRevision: "e2e-ltn5p-daemon-set-797c98696"
STEP: Patching ControllerRevision "e2e-ltn5p-daemon-set-797c98696" 10/31/23 10:54:41.225
Oct 31 10:54:41.290: INFO: e2e-ltn5p-daemon-set-797c98696 has been patched
STEP: Create a new ControllerRevision 10/31/23 10:54:41.29
Oct 31 10:54:41.303: INFO: Created ControllerRevision: e2e-ltn5p-daemon-set-58fbbf7dfd
STEP: Confirm that there are two ControllerRevisions 10/31/23 10:54:41.303
Oct 31 10:54:41.303: INFO: Requesting list of ControllerRevisions to confirm quantity
Oct 31 10:54:41.357: INFO: Found 2 ControllerRevisions
STEP: Deleting ControllerRevision "e2e-ltn5p-daemon-set-797c98696" 10/31/23 10:54:41.357
STEP: Confirm that there is only one ControllerRevision 10/31/23 10:54:41.445
Oct 31 10:54:41.446: INFO: Requesting list of ControllerRevisions to confirm quantity
Oct 31 10:54:41.494: INFO: Found 1 ControllerRevisions
STEP: Updating ControllerRevision "e2e-ltn5p-daemon-set-58fbbf7dfd" 10/31/23 10:54:41.542
Oct 31 10:54:41.606: INFO: e2e-ltn5p-daemon-set-58fbbf7dfd has been updated
STEP: Generate another ControllerRevision by patching the Daemonset 10/31/23 10:54:41.606
W1031 10:54:41.664529      18 warnings.go:70] unknown field "updateStrategy"
STEP: Confirm that there are two ControllerRevisions 10/31/23 10:54:41.664
Oct 31 10:54:41.665: INFO: Requesting list of ControllerRevisions to confirm quantity
Oct 31 10:54:41.729: INFO: Found 2 ControllerRevisions
STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-ltn5p-daemon-set-58fbbf7dfd=updated" 10/31/23 10:54:41.729
STEP: Confirm that there is only one ControllerRevision 10/31/23 10:54:41.793
Oct 31 10:54:41.794: INFO: Requesting list of ControllerRevisions to confirm quantity
Oct 31 10:54:41.942: INFO: Found 1 ControllerRevisions
Oct 31 10:54:41.949: INFO: ControllerRevision "e2e-ltn5p-daemon-set-5b644868c9" has revision 3
[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/apps/controller_revision.go:58
STEP: Deleting DaemonSet "e2e-ltn5p-daemon-set" 10/31/23 10:54:41.998
STEP: deleting DaemonSet.extensions e2e-ltn5p-daemon-set in namespace controllerrevisions-5093, will wait for the garbage collector to delete the pods 10/31/23 10:54:41.998
Oct 31 10:54:42.124: INFO: Deleting DaemonSet.extensions e2e-ltn5p-daemon-set took: 23.730998ms
Oct 31 10:54:42.224: INFO: Terminating DaemonSet.extensions e2e-ltn5p-daemon-set pods took: 100.868739ms
Oct 31 10:54:43.673: INFO: Number of nodes with available pods controlled by daemonset e2e-ltn5p-daemon-set: 0
Oct 31 10:54:43.674: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-ltn5p-daemon-set
Oct 31 10:54:43.762: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46437"},"items":null}

Oct 31 10:54:43.869: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46439"},"items":null}

[AfterEach] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:54:44.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
  tear down framework | framework.go:193
STEP: Destroying namespace "controllerrevisions-5093" for this suite. 10/31/23 10:54:44.091
------------------------------
â€¢ [SLOW TEST] [6.052 seconds]
[sig-apps] ControllerRevision [Serial]
test/e2e/apps/framework.go:23
  should manage the lifecycle of a ControllerRevision [Conformance]
  test/e2e/apps/controller_revision.go:124

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:54:38.052
    Oct 31 10:54:38.052: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename controllerrevisions 10/31/23 10:54:38.053
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:38.243
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:38.393
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:93
    [It] should manage the lifecycle of a ControllerRevision [Conformance]
      test/e2e/apps/controller_revision.go:124
    STEP: Creating DaemonSet "e2e-ltn5p-daemon-set" 10/31/23 10:54:38.675
    STEP: Check that daemon pods launch on every node of the cluster. 10/31/23 10:54:38.718
    Oct 31 10:54:38.811: INFO: Number of nodes with available pods controlled by daemonset e2e-ltn5p-daemon-set: 0
    Oct 31 10:54:38.811: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:54:39.850: INFO: Number of nodes with available pods controlled by daemonset e2e-ltn5p-daemon-set: 1
    Oct 31 10:54:39.850: INFO: Node pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz is running 0 daemon pod, expected 1
    Oct 31 10:54:40.946: INFO: Number of nodes with available pods controlled by daemonset e2e-ltn5p-daemon-set: 3
    Oct 31 10:54:40.946: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-ltn5p-daemon-set
    STEP: Confirm DaemonSet "e2e-ltn5p-daemon-set" successfully created with "daemonset-name=e2e-ltn5p-daemon-set" label 10/31/23 10:54:41.009
    STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-ltn5p-daemon-set" 10/31/23 10:54:41.126
    Oct 31 10:54:41.175: INFO: Located ControllerRevision: "e2e-ltn5p-daemon-set-797c98696"
    STEP: Patching ControllerRevision "e2e-ltn5p-daemon-set-797c98696" 10/31/23 10:54:41.225
    Oct 31 10:54:41.290: INFO: e2e-ltn5p-daemon-set-797c98696 has been patched
    STEP: Create a new ControllerRevision 10/31/23 10:54:41.29
    Oct 31 10:54:41.303: INFO: Created ControllerRevision: e2e-ltn5p-daemon-set-58fbbf7dfd
    STEP: Confirm that there are two ControllerRevisions 10/31/23 10:54:41.303
    Oct 31 10:54:41.303: INFO: Requesting list of ControllerRevisions to confirm quantity
    Oct 31 10:54:41.357: INFO: Found 2 ControllerRevisions
    STEP: Deleting ControllerRevision "e2e-ltn5p-daemon-set-797c98696" 10/31/23 10:54:41.357
    STEP: Confirm that there is only one ControllerRevision 10/31/23 10:54:41.445
    Oct 31 10:54:41.446: INFO: Requesting list of ControllerRevisions to confirm quantity
    Oct 31 10:54:41.494: INFO: Found 1 ControllerRevisions
    STEP: Updating ControllerRevision "e2e-ltn5p-daemon-set-58fbbf7dfd" 10/31/23 10:54:41.542
    Oct 31 10:54:41.606: INFO: e2e-ltn5p-daemon-set-58fbbf7dfd has been updated
    STEP: Generate another ControllerRevision by patching the Daemonset 10/31/23 10:54:41.606
    W1031 10:54:41.664529      18 warnings.go:70] unknown field "updateStrategy"
    STEP: Confirm that there are two ControllerRevisions 10/31/23 10:54:41.664
    Oct 31 10:54:41.665: INFO: Requesting list of ControllerRevisions to confirm quantity
    Oct 31 10:54:41.729: INFO: Found 2 ControllerRevisions
    STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-ltn5p-daemon-set-58fbbf7dfd=updated" 10/31/23 10:54:41.729
    STEP: Confirm that there is only one ControllerRevision 10/31/23 10:54:41.793
    Oct 31 10:54:41.794: INFO: Requesting list of ControllerRevisions to confirm quantity
    Oct 31 10:54:41.942: INFO: Found 1 ControllerRevisions
    Oct 31 10:54:41.949: INFO: ControllerRevision "e2e-ltn5p-daemon-set-5b644868c9" has revision 3
    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/apps/controller_revision.go:58
    STEP: Deleting DaemonSet "e2e-ltn5p-daemon-set" 10/31/23 10:54:41.998
    STEP: deleting DaemonSet.extensions e2e-ltn5p-daemon-set in namespace controllerrevisions-5093, will wait for the garbage collector to delete the pods 10/31/23 10:54:41.998
    Oct 31 10:54:42.124: INFO: Deleting DaemonSet.extensions e2e-ltn5p-daemon-set took: 23.730998ms
    Oct 31 10:54:42.224: INFO: Terminating DaemonSet.extensions e2e-ltn5p-daemon-set pods took: 100.868739ms
    Oct 31 10:54:43.673: INFO: Number of nodes with available pods controlled by daemonset e2e-ltn5p-daemon-set: 0
    Oct 31 10:54:43.674: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-ltn5p-daemon-set
    Oct 31 10:54:43.762: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46437"},"items":null}

    Oct 31 10:54:43.869: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46439"},"items":null}

    [AfterEach] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:54:44.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ControllerRevision [Serial]
      tear down framework | framework.go:193
    STEP: Destroying namespace "controllerrevisions-5093" for this suite. 10/31/23 10:54:44.091
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:54:44.108
Oct 31 10:54:44.108: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 10:54:44.11
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:44.306
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:44.361
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226
STEP: creating the pod 10/31/23 10:54:44.499
STEP: setting up watch 10/31/23 10:54:44.499
STEP: submitting the pod to kubernetes 10/31/23 10:54:44.628
STEP: verifying the pod is in kubernetes 10/31/23 10:54:44.685
STEP: verifying pod creation was observed 10/31/23 10:54:44.705
Oct 31 10:54:44.706: INFO: Waiting up to 5m0s for pod "pod-submit-remove-8c3bf0a2-3a3e-4820-a092-3a1d369f1d0c" in namespace "pods-5162" to be "running"
Oct 31 10:54:44.753: INFO: Pod "pod-submit-remove-8c3bf0a2-3a3e-4820-a092-3a1d369f1d0c": Phase="Pending", Reason="", readiness=false. Elapsed: 47.198238ms
Oct 31 10:54:46.761: INFO: Pod "pod-submit-remove-8c3bf0a2-3a3e-4820-a092-3a1d369f1d0c": Phase="Running", Reason="", readiness=true. Elapsed: 2.055324331s
Oct 31 10:54:46.761: INFO: Pod "pod-submit-remove-8c3bf0a2-3a3e-4820-a092-3a1d369f1d0c" satisfied condition "running"
STEP: deleting the pod gracefully 10/31/23 10:54:46.81
STEP: verifying pod deletion was observed 10/31/23 10:54:46.864
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 10:54:49.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-5162" for this suite. 10/31/23 10:54:49.268
------------------------------
â€¢ [SLOW TEST] [5.253 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:226

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:54:44.108
    Oct 31 10:54:44.108: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 10:54:44.11
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:44.306
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:44.361
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should be submitted and removed [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:226
    STEP: creating the pod 10/31/23 10:54:44.499
    STEP: setting up watch 10/31/23 10:54:44.499
    STEP: submitting the pod to kubernetes 10/31/23 10:54:44.628
    STEP: verifying the pod is in kubernetes 10/31/23 10:54:44.685
    STEP: verifying pod creation was observed 10/31/23 10:54:44.705
    Oct 31 10:54:44.706: INFO: Waiting up to 5m0s for pod "pod-submit-remove-8c3bf0a2-3a3e-4820-a092-3a1d369f1d0c" in namespace "pods-5162" to be "running"
    Oct 31 10:54:44.753: INFO: Pod "pod-submit-remove-8c3bf0a2-3a3e-4820-a092-3a1d369f1d0c": Phase="Pending", Reason="", readiness=false. Elapsed: 47.198238ms
    Oct 31 10:54:46.761: INFO: Pod "pod-submit-remove-8c3bf0a2-3a3e-4820-a092-3a1d369f1d0c": Phase="Running", Reason="", readiness=true. Elapsed: 2.055324331s
    Oct 31 10:54:46.761: INFO: Pod "pod-submit-remove-8c3bf0a2-3a3e-4820-a092-3a1d369f1d0c" satisfied condition "running"
    STEP: deleting the pod gracefully 10/31/23 10:54:46.81
    STEP: verifying pod deletion was observed 10/31/23 10:54:46.864
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:54:49.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-5162" for this suite. 10/31/23 10:54:49.268
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
[BeforeEach] [sig-storage] CSIStorageCapacity
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:54:49.362
Oct 31 10:54:49.362: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename csistoragecapacity 10/31/23 10:54:49.364
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:49.669
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:49.799
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:31
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49
STEP: getting /apis 10/31/23 10:54:49.905
STEP: getting /apis/storage.k8s.io 10/31/23 10:54:50.028
STEP: getting /apis/storage.k8s.io/v1 10/31/23 10:54:50.137
STEP: creating 10/31/23 10:54:50.188
STEP: watching 10/31/23 10:54:50.422
Oct 31 10:54:50.422: INFO: starting watch
STEP: getting 10/31/23 10:54:50.569
STEP: listing in namespace 10/31/23 10:54:50.619
STEP: listing across namespaces 10/31/23 10:54:50.711
STEP: patching 10/31/23 10:54:50.766
STEP: updating 10/31/23 10:54:50.824
Oct 31 10:54:50.878: INFO: waiting for watch events with expected annotations in namespace
Oct 31 10:54:50.878: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting 10/31/23 10:54:50.879
STEP: deleting a collection 10/31/23 10:54:51.11
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/node/init/init.go:32
Oct 31 10:54:51.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
  tear down framework | framework.go:193
STEP: Destroying namespace "csistoragecapacity-3045" for this suite. 10/31/23 10:54:51.349
------------------------------
â€¢ [2.044 seconds]
[sig-storage] CSIStorageCapacity
test/e2e/storage/utils/framework.go:23
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/storage/csistoragecapacity.go:49

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] CSIStorageCapacity
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:54:49.362
    Oct 31 10:54:49.362: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename csistoragecapacity 10/31/23 10:54:49.364
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:49.669
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:49.799
    [BeforeEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:31
    [It]  should support CSIStorageCapacities API operations [Conformance]
      test/e2e/storage/csistoragecapacity.go:49
    STEP: getting /apis 10/31/23 10:54:49.905
    STEP: getting /apis/storage.k8s.io 10/31/23 10:54:50.028
    STEP: getting /apis/storage.k8s.io/v1 10/31/23 10:54:50.137
    STEP: creating 10/31/23 10:54:50.188
    STEP: watching 10/31/23 10:54:50.422
    Oct 31 10:54:50.422: INFO: starting watch
    STEP: getting 10/31/23 10:54:50.569
    STEP: listing in namespace 10/31/23 10:54:50.619
    STEP: listing across namespaces 10/31/23 10:54:50.711
    STEP: patching 10/31/23 10:54:50.766
    STEP: updating 10/31/23 10:54:50.824
    Oct 31 10:54:50.878: INFO: waiting for watch events with expected annotations in namespace
    Oct 31 10:54:50.878: INFO: waiting for watch events with expected annotations across namespace
    STEP: deleting 10/31/23 10:54:50.879
    STEP: deleting a collection 10/31/23 10:54:51.11
    [AfterEach] [sig-storage] CSIStorageCapacity
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:54:51.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] CSIStorageCapacity
      tear down framework | framework.go:193
    STEP: Destroying namespace "csistoragecapacity-3045" for this suite. 10/31/23 10:54:51.349
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace
  should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
[BeforeEach] [sig-cli] Kubectl client
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:54:51.412
Oct 31 10:54:51.412: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename kubectl 10/31/23 10:54:51.413
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:51.516
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:51.712
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:274
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1734
[It] should update a single-container pod's image  [Conformance]
  test/e2e/kubectl/kubectl.go:1747
STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 10/31/23 10:54:51.808
Oct 31 10:54:51.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9687 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Oct 31 10:54:51.969: INFO: stderr: ""
Oct 31 10:54:51.969: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running 10/31/23 10:54:51.969
STEP: verifying the pod e2e-test-httpd-pod was created 10/31/23 10:54:57.021
Oct 31 10:54:57.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9687 get pod e2e-test-httpd-pod -o json'
Oct 31 10:54:57.281: INFO: stderr: ""
Oct 31 10:54:57.281: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-10-31T10:54:51Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9687\",\n        \"resourceVersion\": \"46533\",\n        \"uid\": \"c0e7fe6d-4884-4f49-81ca-79925d82b02f\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-mw99k\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-mw99k\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-31T10:54:52Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-31T10:54:53Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-31T10:54:53Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-31T10:54:51Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://8325c2867db082a62a63ade399a6e83e2748cc0f1793d37e0f275422aab51c66\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-10-31T10:54:52Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.20.4.137\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.200.1.119\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.200.1.119\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-10-31T10:54:52Z\"\n    }\n}\n"
STEP: replace the image in the pod 10/31/23 10:54:57.281
Oct 31 10:54:57.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9687 replace -f -'
Oct 31 10:54:58.930: INFO: stderr: ""
Oct 31 10:54:58.930: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 10/31/23 10:54:58.93
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1738
Oct 31 10:54:58.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9687 delete pods e2e-test-httpd-pod'
Oct 31 10:55:01.195: INFO: stderr: ""
Oct 31 10:55:01.195: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/node/init/init.go:32
Oct 31 10:55:01.195: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-cli] Kubectl client
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-cli] Kubectl client
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-cli] Kubectl client
  tear down framework | framework.go:193
STEP: Destroying namespace "kubectl-9687" for this suite. 10/31/23 10:55:01.218
------------------------------
â€¢ [SLOW TEST] [9.823 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1731
    should update a single-container pod's image  [Conformance]
    test/e2e/kubectl/kubectl.go:1747

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-cli] Kubectl client
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:54:51.412
    Oct 31 10:54:51.412: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename kubectl 10/31/23 10:54:51.413
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:54:51.516
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:54:51.712
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-cli] Kubectl client
      test/e2e/kubectl/kubectl.go:274
    [BeforeEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1734
    [It] should update a single-container pod's image  [Conformance]
      test/e2e/kubectl/kubectl.go:1747
    STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 10/31/23 10:54:51.808
    Oct 31 10:54:51.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9687 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
    Oct 31 10:54:51.969: INFO: stderr: ""
    Oct 31 10:54:51.969: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
    STEP: verifying the pod e2e-test-httpd-pod is running 10/31/23 10:54:51.969
    STEP: verifying the pod e2e-test-httpd-pod was created 10/31/23 10:54:57.021
    Oct 31 10:54:57.021: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9687 get pod e2e-test-httpd-pod -o json'
    Oct 31 10:54:57.281: INFO: stderr: ""
    Oct 31 10:54:57.281: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-10-31T10:54:51Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-9687\",\n        \"resourceVersion\": \"46533\",\n        \"uid\": \"c0e7fe6d-4884-4f49-81ca-79925d82b02f\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-mw99k\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"pool-4a0or6em-hvylrntrzm4xjw3t-node-g2jwpkcz\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-mw99k\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-31T10:54:52Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-31T10:54:53Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-31T10:54:53Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-10-31T10:54:51Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://8325c2867db082a62a63ade399a6e83e2748cc0f1793d37e0f275422aab51c66\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-10-31T10:54:52Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.20.4.137\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.200.1.119\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.200.1.119\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-10-31T10:54:52Z\"\n    }\n}\n"
    STEP: replace the image in the pod 10/31/23 10:54:57.281
    Oct 31 10:54:57.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9687 replace -f -'
    Oct 31 10:54:58.930: INFO: stderr: ""
    Oct 31 10:54:58.930: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
    STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 10/31/23 10:54:58.93
    [AfterEach] Kubectl replace
      test/e2e/kubectl/kubectl.go:1738
    Oct 31 10:54:58.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4230266803 --namespace=kubectl-9687 delete pods e2e-test-httpd-pod'
    Oct 31 10:55:01.195: INFO: stderr: ""
    Oct 31 10:55:01.195: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
    [AfterEach] [sig-cli] Kubectl client
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:55:01.195: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-cli] Kubectl client
      tear down framework | framework.go:193
    STEP: Destroying namespace "kubectl-9687" for this suite. 10/31/23 10:55:01.218
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:55:01.256
Oct 31 10:55:01.256: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 10:55:01.257
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:01.378
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:01.528
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 10:55:01.725
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:55:02.482
STEP: Deploying the webhook pod 10/31/23 10:55:02.53
STEP: Wait for the deployment to be ready 10/31/23 10:55:02.602
Oct 31 10:55:02.748: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 10:55:04.769
STEP: Verifying the service has paired with the endpoint 10/31/23 10:55:04.832
Oct 31 10:55:05.832: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 10/31/23 10:55:05.838
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 10/31/23 10:55:07.079
STEP: Creating a dummy validating-webhook-configuration object 10/31/23 10:55:07.208
STEP: Deleting the validating-webhook-configuration, which should be possible to remove 10/31/23 10:55:07.399
STEP: Creating a dummy mutating-webhook-configuration object 10/31/23 10:55:07.487
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 10/31/23 10:55:07.647
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:55:07.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-8989" for this suite. 10/31/23 10:55:08.316
STEP: Destroying namespace "webhook-8989-markers" for this suite. 10/31/23 10:55:08.381
------------------------------
â€¢ [SLOW TEST] [7.180 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/apimachinery/webhook.go:277

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:55:01.256
    Oct 31 10:55:01.256: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 10:55:01.257
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:01.378
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:01.528
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 10:55:01.725
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:55:02.482
    STEP: Deploying the webhook pod 10/31/23 10:55:02.53
    STEP: Wait for the deployment to be ready 10/31/23 10:55:02.602
    Oct 31 10:55:02.748: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 10:55:04.769
    STEP: Verifying the service has paired with the endpoint 10/31/23 10:55:04.832
    Oct 31 10:55:05.832: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
      test/e2e/apimachinery/webhook.go:277
    STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 10/31/23 10:55:05.838
    STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API 10/31/23 10:55:07.079
    STEP: Creating a dummy validating-webhook-configuration object 10/31/23 10:55:07.208
    STEP: Deleting the validating-webhook-configuration, which should be possible to remove 10/31/23 10:55:07.399
    STEP: Creating a dummy mutating-webhook-configuration object 10/31/23 10:55:07.487
    STEP: Deleting the mutating-webhook-configuration, which should be possible to remove 10/31/23 10:55:07.647
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:55:07.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-8989" for this suite. 10/31/23 10:55:08.316
    STEP: Destroying namespace "webhook-8989-markers" for this suite. 10/31/23 10:55:08.381
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
[BeforeEach] [sig-node] Pods
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:55:08.437
Oct 31 10:55:08.437: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename pods 10/31/23 10:55:08.438
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:08.675
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:08.813
[BeforeEach] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:194
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536
Oct 31 10:55:08.915: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: creating the pod 10/31/23 10:55:08.916
STEP: submitting the pod to kubernetes 10/31/23 10:55:08.916
Oct 31 10:55:09.006: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02" in namespace "pods-9917" to be "running and ready"
Oct 31 10:55:09.026: INFO: Pod "pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02": Phase="Pending", Reason="", readiness=false. Elapsed: 19.738157ms
Oct 31 10:55:09.026: INFO: The phase of Pod pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02 is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:55:11.033: INFO: Pod "pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02": Phase="Running", Reason="", readiness=true. Elapsed: 2.026924488s
Oct 31 10:55:11.034: INFO: The phase of Pod pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02 is Running (Ready = true)
Oct 31 10:55:11.034: INFO: Pod "pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02" satisfied condition "running and ready"
[AfterEach] [sig-node] Pods
  test/e2e/framework/node/init/init.go:32
Oct 31 10:55:11.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-node] Pods
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-node] Pods
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-node] Pods
  tear down framework | framework.go:193
STEP: Destroying namespace "pods-9917" for this suite. 10/31/23 10:55:11.491
------------------------------
â€¢ [3.110 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/common/node/pods.go:536

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-node] Pods
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:55:08.437
    Oct 31 10:55:08.437: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename pods 10/31/23 10:55:08.438
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:08.675
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:08.813
    [BeforeEach] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-node] Pods
      test/e2e/common/node/pods.go:194
    [It] should support remote command execution over websockets [NodeConformance] [Conformance]
      test/e2e/common/node/pods.go:536
    Oct 31 10:55:08.915: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: creating the pod 10/31/23 10:55:08.916
    STEP: submitting the pod to kubernetes 10/31/23 10:55:08.916
    Oct 31 10:55:09.006: INFO: Waiting up to 5m0s for pod "pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02" in namespace "pods-9917" to be "running and ready"
    Oct 31 10:55:09.026: INFO: Pod "pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02": Phase="Pending", Reason="", readiness=false. Elapsed: 19.738157ms
    Oct 31 10:55:09.026: INFO: The phase of Pod pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02 is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:55:11.033: INFO: Pod "pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02": Phase="Running", Reason="", readiness=true. Elapsed: 2.026924488s
    Oct 31 10:55:11.034: INFO: The phase of Pod pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02 is Running (Ready = true)
    Oct 31 10:55:11.034: INFO: Pod "pod-exec-websocket-68be57a7-7523-41cf-91cc-d82ad7c7df02" satisfied condition "running and ready"
    [AfterEach] [sig-node] Pods
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:55:11.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-node] Pods
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-node] Pods
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-node] Pods
      tear down framework | framework.go:193
    STEP: Destroying namespace "pods-9917" for this suite. 10/31/23 10:55:11.491
  << End Captured GinkgoWriter Output
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:55:11.548
Oct 31 10:55:11.548: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename webhook 10/31/23 10:55:11.549
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:11.795
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:11.929
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:90
STEP: Setting up server cert 10/31/23 10:55:12.153
STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:55:12.814
STEP: Deploying the webhook pod 10/31/23 10:55:12.867
STEP: Wait for the deployment to be ready 10/31/23 10:55:12.977
Oct 31 10:55:13.150: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:55:15.200: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:55:17.162: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:55:19.158: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:55:21.164: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service 10/31/23 10:55:23.163
STEP: Verifying the service has paired with the endpoint 10/31/23 10:55:23.242
Oct 31 10:55:24.243: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264
STEP: Registering the mutating pod webhook via the AdmissionRegistration API 10/31/23 10:55:24.25
STEP: create a pod that should be updated by the webhook 10/31/23 10:55:25.526
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/node/init/init.go:32
Oct 31 10:55:25.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:105
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  tear down framework | framework.go:193
STEP: Destroying namespace "webhook-9981" for this suite. 10/31/23 10:55:26.052
STEP: Destroying namespace "webhook-9981-markers" for this suite. 10/31/23 10:55:26.117
------------------------------
â€¢ [SLOW TEST] [14.641 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/apimachinery/webhook.go:264

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:55:11.548
    Oct 31 10:55:11.548: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename webhook 10/31/23 10:55:11.549
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:11.795
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:11.929
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:90
    STEP: Setting up server cert 10/31/23 10:55:12.153
    STEP: Create role binding to let webhook read extension-apiserver-authentication 10/31/23 10:55:12.814
    STEP: Deploying the webhook pod 10/31/23 10:55:12.867
    STEP: Wait for the deployment to be ready 10/31/23 10:55:12.977
    Oct 31 10:55:13.150: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:55:15.200: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:55:17.162: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:55:19.158: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:55:21.164: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 13, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-865554f4d9\" is progressing."}}, CollisionCount:(*int32)(nil)}
    STEP: Deploying the webhook service 10/31/23 10:55:23.163
    STEP: Verifying the service has paired with the endpoint 10/31/23 10:55:23.242
    Oct 31 10:55:24.243: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
    [It] should mutate pod and apply defaults after mutation [Conformance]
      test/e2e/apimachinery/webhook.go:264
    STEP: Registering the mutating pod webhook via the AdmissionRegistration API 10/31/23 10:55:24.25
    STEP: create a pod that should be updated by the webhook 10/31/23 10:55:25.526
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:55:25.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/apimachinery/webhook.go:105
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
      tear down framework | framework.go:193
    STEP: Destroying namespace "webhook-9981" for this suite. 10/31/23 10:55:26.052
    STEP: Destroying namespace "webhook-9981-markers" for this suite. 10/31/23 10:55:26.117
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
[BeforeEach] [sig-apps] Deployment
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:55:26.191
Oct 31 10:55:26.191: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename deployment 10/31/23 10:55:26.192
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:26.404
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:26.549
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:31
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113
Oct 31 10:55:26.686: INFO: Creating deployment "test-recreate-deployment"
Oct 31 10:55:26.707: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Oct 31 10:55:26.817: INFO: Waiting deployment "test-recreate-deployment" to complete
Oct 31 10:55:26.893: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-795566c5cb\" is progressing."}}, CollisionCount:(*int32)(nil)}
Oct 31 10:55:28.918: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Oct 31 10:55:28.985: INFO: Updating deployment test-recreate-deployment
Oct 31 10:55:28.986: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Oct 31 10:55:29.546: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-6980  b820d6df-8512-47b7-8366-b1602ff83e4a 46881 2 2023-10-31 10:55:26 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-10-31 10:55:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002efabe8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-10-31 10:55:29 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-10-31 10:55:29 +0000 UTC,LastTransitionTime:2023-10-31 10:55:26 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Oct 31 10:55:29.684: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-6980  0e6a633e-7842-4c02-be7c-46d630b66f5e 46880 1 2023-10-31 10:55:29 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment b820d6df-8512-47b7-8366-b1602ff83e4a 0xc00129b0b0 0xc00129b0b1}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b820d6df-8512-47b7-8366-b1602ff83e4a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00129b288 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Oct 31 10:55:29.684: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Oct 31 10:55:29.685: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-6980  809df5cd-e7e0-4fb1-b487-1345022fef3d 46866 2 2023-10-31 10:55:26 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment b820d6df-8512-47b7-8366-b1602ff83e4a 0xc00129aaa7 0xc00129aaa8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:55:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b820d6df-8512-47b7-8366-b1602ff83e4a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00129aeb8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Oct 31 10:55:29.738: INFO: Pod "test-recreate-deployment-cff6dc657-9j9s9" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-9j9s9 test-recreate-deployment-cff6dc657- deployment-6980  c0819935-9be7-47a9-8126-419cf864af43 46882 0 2023-10-31 10:55:29 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 0e6a633e-7842-4c02-be7c-46d630b66f5e 0xc002efaf60 0xc002efaf61}] [] [{kube-controller-manager Update v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0e6a633e-7842-4c02-be7c-46d630b66f5e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x2hml,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x2hml,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:55:29 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/node/init/init.go:32
Oct 31 10:55:29.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] Deployment
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] Deployment
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] Deployment
  tear down framework | framework.go:193
STEP: Destroying namespace "deployment-6980" for this suite. 10/31/23 10:55:29.798
------------------------------
â€¢ [3.697 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/apps/deployment.go:113

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] Deployment
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:55:26.191
    Oct 31 10:55:26.191: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename deployment 10/31/23 10:55:26.192
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:26.404
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:26.549
    [BeforeEach] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:31
    [BeforeEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:91
    [It] RecreateDeployment should delete old pods and create new ones [Conformance]
      test/e2e/apps/deployment.go:113
    Oct 31 10:55:26.686: INFO: Creating deployment "test-recreate-deployment"
    Oct 31 10:55:26.707: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
    Oct 31 10:55:26.817: INFO: Waiting deployment "test-recreate-deployment" to complete
    Oct 31 10:55:26.893: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.October, 31, 10, 55, 26, 0, time.Local), LastTransitionTime:time.Date(2023, time.October, 31, 10, 55, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-795566c5cb\" is progressing."}}, CollisionCount:(*int32)(nil)}
    Oct 31 10:55:28.918: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
    Oct 31 10:55:28.985: INFO: Updating deployment test-recreate-deployment
    Oct 31 10:55:28.986: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
    [AfterEach] [sig-apps] Deployment
      test/e2e/apps/deployment.go:84
    Oct 31 10:55:29.546: INFO: Deployment "test-recreate-deployment":
    &Deployment{ObjectMeta:{test-recreate-deployment  deployment-6980  b820d6df-8512-47b7-8366-b1602ff83e4a 46881 2 2023-10-31 10:55:26 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] [] [{e2e.test Update apps/v1 2023-10-31 10:55:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002efabe8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2023-10-31 10:55:29 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cff6dc657" is progressing.,LastUpdateTime:2023-10-31 10:55:29 +0000 UTC,LastTransitionTime:2023-10-31 10:55:26 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

    Oct 31 10:55:29.684: INFO: New ReplicaSet "test-recreate-deployment-cff6dc657" of Deployment "test-recreate-deployment":
    &ReplicaSet{ObjectMeta:{test-recreate-deployment-cff6dc657  deployment-6980  0e6a633e-7842-4c02-be7c-46d630b66f5e 46880 1 2023-10-31 10:55:29 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment b820d6df-8512-47b7-8366-b1602ff83e4a 0xc00129b0b0 0xc00129b0b1}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b820d6df-8512-47b7-8366-b1602ff83e4a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cff6dc657,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [] [] []} {[] [] [{httpd registry.k8s.io/e2e-test-images/httpd:2.4.38-4 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00129b288 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 10:55:29.684: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
    Oct 31 10:55:29.685: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-795566c5cb  deployment-6980  809df5cd-e7e0-4fb1-b487-1345022fef3d 46866 2 2023-10-31 10:55:26 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment b820d6df-8512-47b7-8366-b1602ff83e4a 0xc00129aaa7 0xc00129aaa8}] [] [{kube-controller-manager Update apps/v1 2023-10-31 10:55:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b820d6df-8512-47b7-8366-b1602ff83e4a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 795566c5cb,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:795566c5cb] map[] [] [] []} {[] [] [{agnhost registry.k8s.io/e2e-test-images/agnhost:2.43 [] []  [] [] [] {map[] map[] []} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00129aeb8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil <nil> [] []}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
    Oct 31 10:55:29.738: INFO: Pod "test-recreate-deployment-cff6dc657-9j9s9" is not available:
    &Pod{ObjectMeta:{test-recreate-deployment-cff6dc657-9j9s9 test-recreate-deployment-cff6dc657- deployment-6980  c0819935-9be7-47a9-8126-419cf864af43 46882 0 2023-10-31 10:55:29 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cff6dc657] map[] [{apps/v1 ReplicaSet test-recreate-deployment-cff6dc657 0e6a633e-7842-4c02-be7c-46d630b66f5e 0xc002efaf60 0xc002efaf61}] [] [{kube-controller-manager Update v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0e6a633e-7842-4c02-be7c-46d630b66f5e\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2023-10-31 10:55:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x2hml,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x2hml,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2023-10-31 10:55:29 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:10.20.4.182,PodIP:,StartTime:2023-10-31 10:55:29 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:registry.k8s.io/e2e-test-images/httpd:2.4.38-4,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
    [AfterEach] [sig-apps] Deployment
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:55:29.739: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] Deployment
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] Deployment
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] Deployment
      tear down framework | framework.go:193
    STEP: Destroying namespace "deployment-6980" for this suite. 10/31/23 10:55:29.798
  << End Captured GinkgoWriter Output
------------------------------
SSS
------------------------------
[sig-storage] Projected combined
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
[BeforeEach] [sig-storage] Projected combined
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:55:29.893
Oct 31 10:55:29.893: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename projected 10/31/23 10:55:29.894
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:30.104
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:30.277
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:31
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44
STEP: Creating configMap with name configmap-projected-all-test-volume-b8626a10-519b-4630-b1ac-3a362dbcd997 10/31/23 10:55:30.38
STEP: Creating secret with name secret-projected-all-test-volume-f434a5e6-bd37-4cdc-869d-239c6db64a08 10/31/23 10:55:30.477
STEP: Creating a pod to test Check all projections for projected volume plugin 10/31/23 10:55:30.573
Oct 31 10:55:30.662: INFO: Waiting up to 5m0s for pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2" in namespace "projected-8122" to be "Succeeded or Failed"
Oct 31 10:55:30.687: INFO: Pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2": Phase="Pending", Reason="", readiness=false. Elapsed: 24.316915ms
Oct 31 10:55:32.696: INFO: Pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0329617s
Oct 31 10:55:34.697: INFO: Pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034542471s
STEP: Saw pod success 10/31/23 10:55:34.697
Oct 31 10:55:34.697: INFO: Pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2" satisfied condition "Succeeded or Failed"
Oct 31 10:55:34.749: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod projected-volume-56714984-a99b-4835-a877-dd77a81514d2 container projected-all-volume-test: <nil>
STEP: delete the pod 10/31/23 10:55:34.882
Oct 31 10:55:34.955: INFO: Waiting for pod projected-volume-56714984-a99b-4835-a877-dd77a81514d2 to disappear
Oct 31 10:55:35.035: INFO: Pod projected-volume-56714984-a99b-4835-a877-dd77a81514d2 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/node/init/init.go:32
Oct 31 10:55:35.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-storage] Projected combined
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-storage] Projected combined
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-storage] Projected combined
  tear down framework | framework.go:193
STEP: Destroying namespace "projected-8122" for this suite. 10/31/23 10:55:35.071
------------------------------
â€¢ [SLOW TEST] [5.198 seconds]
[sig-storage] Projected combined
test/e2e/common/storage/framework.go:23
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/common/storage/projected_combined.go:44

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-storage] Projected combined
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:55:29.893
    Oct 31 10:55:29.893: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename projected 10/31/23 10:55:29.894
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:30.104
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:30.277
    [BeforeEach] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:31
    [It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
      test/e2e/common/storage/projected_combined.go:44
    STEP: Creating configMap with name configmap-projected-all-test-volume-b8626a10-519b-4630-b1ac-3a362dbcd997 10/31/23 10:55:30.38
    STEP: Creating secret with name secret-projected-all-test-volume-f434a5e6-bd37-4cdc-869d-239c6db64a08 10/31/23 10:55:30.477
    STEP: Creating a pod to test Check all projections for projected volume plugin 10/31/23 10:55:30.573
    Oct 31 10:55:30.662: INFO: Waiting up to 5m0s for pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2" in namespace "projected-8122" to be "Succeeded or Failed"
    Oct 31 10:55:30.687: INFO: Pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2": Phase="Pending", Reason="", readiness=false. Elapsed: 24.316915ms
    Oct 31 10:55:32.696: INFO: Pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0329617s
    Oct 31 10:55:34.697: INFO: Pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034542471s
    STEP: Saw pod success 10/31/23 10:55:34.697
    Oct 31 10:55:34.697: INFO: Pod "projected-volume-56714984-a99b-4835-a877-dd77a81514d2" satisfied condition "Succeeded or Failed"
    Oct 31 10:55:34.749: INFO: Trying to get logs from node pool-4a0or6em-hvylrntrzm4xjw3t-node-oqsiix6n pod projected-volume-56714984-a99b-4835-a877-dd77a81514d2 container projected-all-volume-test: <nil>
    STEP: delete the pod 10/31/23 10:55:34.882
    Oct 31 10:55:34.955: INFO: Waiting for pod projected-volume-56714984-a99b-4835-a877-dd77a81514d2 to disappear
    Oct 31 10:55:35.035: INFO: Pod projected-volume-56714984-a99b-4835-a877-dd77a81514d2 no longer exists
    [AfterEach] [sig-storage] Projected combined
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:55:35.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-storage] Projected combined
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-storage] Projected combined
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-storage] Projected combined
      tear down framework | framework.go:193
    STEP: Destroying namespace "projected-8122" for this suite. 10/31/23 10:55:35.071
  << End Captured GinkgoWriter Output
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
[BeforeEach] [sig-apps] ReplicaSet
  set up framework | framework.go:178
STEP: Creating a kubernetes client 10/31/23 10:55:35.103
Oct 31 10:55:35.103: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
STEP: Building a namespace api object, basename replicaset 10/31/23 10:55:35.105
STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:35.336
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:35.463
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:31
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131
STEP: Given a Pod with a 'name' label pod-adoption-release is created 10/31/23 10:55:35.492
Oct 31 10:55:35.555: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-1870" to be "running and ready"
Oct 31 10:55:35.613: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 57.845769ms
Oct 31 10:55:35.613: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Oct 31 10:55:37.623: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.067526992s
Oct 31 10:55:37.623: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
Oct 31 10:55:37.623: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
STEP: When a replicaset with a matching selector is created 10/31/23 10:55:37.675
STEP: Then the orphan pod is adopted 10/31/23 10:55:37.751
STEP: When the matched label of one of its pods change 10/31/23 10:55:37.772
Oct 31 10:55:37.820: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released 10/31/23 10:55:37.841
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/node/init/init.go:32
Oct 31 10:55:37.879: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  test/e2e/framework/metrics/init/init.go:33
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  dump namespaces | framework.go:196
[DeferCleanup (Each)] [sig-apps] ReplicaSet
  tear down framework | framework.go:193
STEP: Destroying namespace "replicaset-1870" for this suite. 10/31/23 10:55:37.9
------------------------------
â€¢ [2.839 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/apps/replica_set.go:131

  Begin Captured GinkgoWriter Output >>
    [BeforeEach] [sig-apps] ReplicaSet
      set up framework | framework.go:178
    STEP: Creating a kubernetes client 10/31/23 10:55:35.103
    Oct 31 10:55:35.103: INFO: >>> kubeConfig: /tmp/kubeconfig-4230266803
    STEP: Building a namespace api object, basename replicaset 10/31/23 10:55:35.105
    STEP: Waiting for a default service account to be provisioned in namespace 10/31/23 10:55:35.336
    STEP: Waiting for kube-root-ca.crt to be provisioned in namespace 10/31/23 10:55:35.463
    [BeforeEach] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:31
    [It] should adopt matching pods on creation and release no longer matching pods [Conformance]
      test/e2e/apps/replica_set.go:131
    STEP: Given a Pod with a 'name' label pod-adoption-release is created 10/31/23 10:55:35.492
    Oct 31 10:55:35.555: INFO: Waiting up to 5m0s for pod "pod-adoption-release" in namespace "replicaset-1870" to be "running and ready"
    Oct 31 10:55:35.613: INFO: Pod "pod-adoption-release": Phase="Pending", Reason="", readiness=false. Elapsed: 57.845769ms
    Oct 31 10:55:35.613: INFO: The phase of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
    Oct 31 10:55:37.623: INFO: Pod "pod-adoption-release": Phase="Running", Reason="", readiness=true. Elapsed: 2.067526992s
    Oct 31 10:55:37.623: INFO: The phase of Pod pod-adoption-release is Running (Ready = true)
    Oct 31 10:55:37.623: INFO: Pod "pod-adoption-release" satisfied condition "running and ready"
    STEP: When a replicaset with a matching selector is created 10/31/23 10:55:37.675
    STEP: Then the orphan pod is adopted 10/31/23 10:55:37.751
    STEP: When the matched label of one of its pods change 10/31/23 10:55:37.772
    Oct 31 10:55:37.820: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
    STEP: Then the pod is released 10/31/23 10:55:37.841
    [AfterEach] [sig-apps] ReplicaSet
      test/e2e/framework/node/init/init.go:32
    Oct 31 10:55:37.879: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      test/e2e/framework/metrics/init/init.go:33
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      dump namespaces | framework.go:196
    [DeferCleanup (Each)] [sig-apps] ReplicaSet
      tear down framework | framework.go:193
    STEP: Destroying namespace "replicaset-1870" for this suite. 10/31/23 10:55:37.9
  << End Captured GinkgoWriter Output
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
[SynchronizedAfterSuite] TOP-LEVEL
  test/e2e/e2e.go:88
Oct 31 10:55:37.953: INFO: Running AfterSuite actions on node 1
Oct 31 10:55:37.953: INFO: Skipping dumping logs from cluster
------------------------------
[SynchronizedAfterSuite] PASSED [0.003 seconds]
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88

  Begin Captured GinkgoWriter Output >>
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    [SynchronizedAfterSuite] TOP-LEVEL
      test/e2e/e2e.go:88
    Oct 31 10:55:37.953: INFO: Running AfterSuite actions on node 1
    Oct 31 10:55:37.953: INFO: Skipping dumping logs from cluster
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153
[ReportAfterSuite] TOP-LEVEL
  test/e2e/e2e_test.go:153
------------------------------
[ReportAfterSuite] PASSED [0.000 seconds]
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:153

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/e2e_test.go:153
  << End Captured GinkgoWriter Output
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529
[ReportAfterSuite] TOP-LEVEL
  test/e2e/framework/test_context.go:529
------------------------------
[ReportAfterSuite] PASSED [0.108 seconds]
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:529

  Begin Captured GinkgoWriter Output >>
    [ReportAfterSuite] TOP-LEVEL
      test/e2e/framework/test_context.go:529
  << End Captured GinkgoWriter Output
------------------------------

Ran 368 of 7069 Specs in 6931.458 seconds
SUCCESS! -- 368 Passed | 0 Failed | 0 Pending | 6701 Skipped
PASS

Ginkgo ran 1 suite in 1h55m31.901505702s
Test Suite Passed
[38;5;228mYou're using deprecated Ginkgo functionality:[0m
[38;5;228m=============================================[0m
  [38;5;11m--noColor is deprecated, use --no-color instead[0m
  [1mLearn more at:[0m [38;5;14m[4mhttps://onsi.github.io/ginkgo/MIGRATING_TO_V2#changed-command-line-flags[0m

[38;5;243mTo silence deprecations that can be silenced set the following environment variable:[0m
  [38;5;243mACK_GINKGO_DEPRECATIONS=2.4.0[0m

